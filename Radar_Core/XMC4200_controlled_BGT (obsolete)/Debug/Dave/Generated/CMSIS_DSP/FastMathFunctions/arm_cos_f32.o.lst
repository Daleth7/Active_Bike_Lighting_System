   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cos_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_fmul
  19              	 .global __aeabi_fadd
  20              	 .global __aeabi_f2iz
  21              	 .global __aeabi_fcmplt
  22              	 .global __aeabi_i2f
  23              	 .global __aeabi_fsub
  24              	 .global __aeabi_f2uiz
  25              	 .global __aeabi_ui2f
  26              	 .section .text.arm_cos_f32,"ax",%progbits
  27              	 .align 2
  28              	 .global arm_cos_f32
  29              	 .thumb
  30              	 .thumb_func
  32              	arm_cos_f32:
  33              	.LFB139:
  34              	 .file 1 "../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * Title:		arm_cos_f32.c    
   9:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * Description:	Fast cosine calculation for floating-point values.   
  11:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * POSSIBILITY OF SUCH DAMAGE.    
  39:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** #include "CMSIS_DSP/arm_common_tables.h"
  43:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @ingroup groupFastMath    
  45:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  46:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @defgroup cos Cosine    
  49:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    
  50:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Computes the trigonometric cosine function using a combination of table lookup   
  51:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * and cubic interpolation.  There are separate functions for   
  52:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * Q15, Q31, and floating-point data types.   
  53:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * The input to the floating-point version is in radians while the   
  54:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * fixed-point Q15 and Q31 have a scaled input with the range   
  55:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * [0 +0.9999] mapping to [0 2*pi).  The fixed-point range is chosen so that a
  56:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * value of 2*pi wraps around to 0.
  57:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *   
  58:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * The implementation is based on table lookup using 256 values together with cubic interpolation. 
  59:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * The steps used are:   
  60:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# Calculation of the nearest integer table index   
  61:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# Fetch the four table values a, b, c, and d     
  62:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# Compute the fractional portion (fract) of the table index.   
  63:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# Calculation of wa, wb, wc, wd    
  64:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *  -# The final result equals <code>a*wa + b*wb + c*wc + d*wd</code>   
  65:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *   
  66:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * where   
  67:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * <pre>    
  68:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    a=Table[index-1];    
  69:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    b=Table[index+0];    
  70:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    c=Table[index+1];    
  71:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    d=Table[index+2];    
  72:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * </pre>   
  73:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * and   
  74:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * <pre>    
  75:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    wa=-(1/6)*fract.^3 + (1/2)*fract.^2 - (1/3)*fract;    
  76:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    wb=(1/2)*fract.^3 - fract.^2 - (1/2)*fract + 1;    
  77:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    wc=-(1/2)*fract.^3+(1/2)*fract.^2+fract;    
  78:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  *    wd=(1/6)*fract.^3 - (1/6)*fract;    
  79:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * </pre>    
  80:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  81:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  82:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  /**    
  83:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @addtogroup cos    
  84:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @{    
  85:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  86:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  87:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** /**   
  88:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @brief  Fast approximation to the trigonometric cosine function for floating-point data.   
  89:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @param[in] x input value in radians.   
  90:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  * @return cos(x).   
  91:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****  */
  92:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
  93:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** float32_t arm_cos_f32(
  94:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t x)
  95:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** {
  35              	 .loc 1 95 0
  36              	 .cfi_startproc
  37              	 
  38              	 
  39 0000 90B5     	 push {r4,r7,lr}
  40              	.LCFI0:
  41              	 .cfi_def_cfa_offset 12
  42              	 .cfi_offset 4,-12
  43              	 .cfi_offset 7,-8
  44              	 .cfi_offset 14,-4
  45 0002 8BB0     	 sub sp,sp,#44
  46              	.LCFI1:
  47              	 .cfi_def_cfa_offset 56
  48 0004 00AF     	 add r7,sp,#0
  49              	.LCFI2:
  50              	 .cfi_def_cfa_register 7
  51 0006 7860     	 str r0,[r7,#4]
  96:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t cosVal, fract, in;                   /* Temporary variables for input, output */
  97:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   uint16_t index;                                /* Index variable */
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t a, b;                                /* Two nearest output values */
  99:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   int32_t n;
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   float32_t findex;
 101:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 102:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* input x is in radians */
 103:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Scale the input to [0 1] range from [0 2*PI] , divide input by 2*pi, add 0.25 (pi/2) to read s
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   in = x * 0.159154943092f + 0.25f;
  52              	 .loc 1 104 0
  53 0008 7868     	 ldr r0,[r7,#4]
  54 000a 3349     	 ldr r1,.L6
  55 000c FFF7FEFF 	 bl __aeabi_fmul
  56 0010 0346     	 mov r3,r0
  57 0012 1846     	 mov r0,r3
  58 0014 4FF07A51 	 mov r1,#1048576000
  59 0018 FFF7FEFF 	 bl __aeabi_fadd
  60 001c 0346     	 mov r3,r0
  61 001e 3B62     	 str r3,[r7,#32]
 105:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Calculation of floor value of input */
 107:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   n = (int32_t) in;
  62              	 .loc 1 107 0
  63 0020 386A     	 ldr r0,[r7,#32]
  64 0022 FFF7FEFF 	 bl __aeabi_f2iz
  65 0026 0346     	 mov r3,r0
  66 0028 7B62     	 str r3,[r7,#36]
 108:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 109:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Make negative values towards -infinity */
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   if(in < 0.0f)
  67              	 .loc 1 110 0
  68 002a 386A     	 ldr r0,[r7,#32]
  69 002c 4FF00001 	 mov r1,#0
  70 0030 FFF7FEFF 	 bl __aeabi_fcmplt
  71 0034 0346     	 mov r3,r0
  72 0036 002B     	 cmp r3,#0
  73 0038 02D0     	 beq .L2
 111:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   {
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****     n--;
  74              	 .loc 1 112 0
  75 003a 7B6A     	 ldr r3,[r7,#36]
  76 003c 013B     	 subs r3,r3,#1
  77 003e 7B62     	 str r3,[r7,#36]
  78              	.L2:
 113:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   }
 114:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 115:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Map input value to [0 1] */
 116:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   in = in - (float32_t) n;
  79              	 .loc 1 116 0
  80 0040 786A     	 ldr r0,[r7,#36]
  81 0042 FFF7FEFF 	 bl __aeabi_i2f
  82 0046 0346     	 mov r3,r0
  83 0048 386A     	 ldr r0,[r7,#32]
  84 004a 1946     	 mov r1,r3
  85 004c FFF7FEFF 	 bl __aeabi_fsub
  86 0050 0346     	 mov r3,r0
  87 0052 3B62     	 str r3,[r7,#32]
 117:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 118:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Calculation of index of the table */
 119:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   findex = (float32_t) FAST_MATH_TABLE_SIZE * in;
  88              	 .loc 1 119 0
  89 0054 386A     	 ldr r0,[r7,#32]
  90 0056 4FF08841 	 mov r1,#1140850688
  91 005a FFF7FEFF 	 bl __aeabi_fmul
  92 005e 0346     	 mov r3,r0
  93 0060 FB61     	 str r3,[r7,#28]
 120:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   index = ((uint16_t)findex) & 0x1ff;
  94              	 .loc 1 120 0
  95 0062 F869     	 ldr r0,[r7,#28]
  96 0064 FFF7FEFF 	 bl __aeabi_f2uiz
  97 0068 0346     	 mov r3,r0
  98 006a 9BB2     	 uxth r3,r3
  99 006c C3F30803 	 ubfx r3,r3,#0,#9
 100 0070 7B83     	 strh r3,[r7,#26]
 121:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 122:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* fractional value calculation */
 123:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   fract = findex - (float32_t) index;
 101              	 .loc 1 123 0
 102 0072 7B8B     	 ldrh r3,[r7,#26]
 103 0074 1846     	 mov r0,r3
 104 0076 FFF7FEFF 	 bl __aeabi_ui2f
 105 007a 0346     	 mov r3,r0
 106 007c F869     	 ldr r0,[r7,#28]
 107 007e 1946     	 mov r1,r3
 108 0080 FFF7FEFF 	 bl __aeabi_fsub
 109 0084 0346     	 mov r3,r0
 110 0086 7B61     	 str r3,[r7,#20]
 124:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 125:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Read two nearest values of input value from the cos table */
 126:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   a = sinTable_f32[index];
 111              	 .loc 1 126 0
 112 0088 7B8B     	 ldrh r3,[r7,#26]
 113 008a 144A     	 ldr r2,.L6+4
 114 008c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 115 0090 3B61     	 str r3,[r7,#16]
 127:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   b = sinTable_f32[index+1];
 116              	 .loc 1 127 0
 117 0092 7B8B     	 ldrh r3,[r7,#26]
 118 0094 0133     	 adds r3,r3,#1
 119 0096 114A     	 ldr r2,.L6+4
 120 0098 52F82330 	 ldr r3,[r2,r3,lsl#2]
 121 009c FB60     	 str r3,[r7,#12]
 128:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 129:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Linear interpolation process */
 130:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   cosVal = (1.0f-fract)*a + fract*b;
 122              	 .loc 1 130 0
 123 009e 4FF07E50 	 mov r0,#1065353216
 124 00a2 7969     	 ldr r1,[r7,#20]
 125 00a4 FFF7FEFF 	 bl __aeabi_fsub
 126 00a8 0346     	 mov r3,r0
 127 00aa 1846     	 mov r0,r3
 128 00ac 3969     	 ldr r1,[r7,#16]
 129 00ae FFF7FEFF 	 bl __aeabi_fmul
 130 00b2 0346     	 mov r3,r0
 131 00b4 1C46     	 mov r4,r3
 132 00b6 7869     	 ldr r0,[r7,#20]
 133 00b8 F968     	 ldr r1,[r7,#12]
 134 00ba FFF7FEFF 	 bl __aeabi_fmul
 135 00be 0346     	 mov r3,r0
 136 00c0 2046     	 mov r0,r4
 137 00c2 1946     	 mov r1,r3
 138 00c4 FFF7FEFF 	 bl __aeabi_fadd
 139 00c8 0346     	 mov r3,r0
 140 00ca BB60     	 str r3,[r7,#8]
 131:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** 
 132:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   /* Return the output value */
 133:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c ****   return (cosVal);
 141              	 .loc 1 133 0
 142 00cc BB68     	 ldr r3,[r7,#8]
 134:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_cos_f32.c **** }
 143              	 .loc 1 134 0
 144 00ce 1846     	 mov r0,r3
 145 00d0 2C37     	 adds r7,r7,#44
 146              	.LCFI3:
 147              	 .cfi_def_cfa_offset 12
 148 00d2 BD46     	 mov sp,r7
 149              	.LCFI4:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 00d4 90BD     	 pop {r4,r7,pc}
 153              	.L7:
 154 00d6 00BF     	 .align 2
 155              	.L6:
 156 00d8 83F9223E 	 .word 1042479491
 157 00dc 00000000 	 .word sinTable_f32
 158              	 .cfi_endproc
 159              	.LFE139:
 161              	 .text
 162              	.Letext0:
 163              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 164              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 165              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
 166              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_common_tables.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cos_f32.c
    {standard input}:27     .text.arm_cos_f32:00000000 $t
    {standard input}:32     .text.arm_cos_f32:00000000 arm_cos_f32
    {standard input}:156    .text.arm_cos_f32:000000d8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_fadd
__aeabi_f2iz
__aeabi_fcmplt
__aeabi_i2f
__aeabi_fsub
__aeabi_f2uiz
__aeabi_ui2f
sinTable_f32
