   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_sin_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_fmul
  19              	 .global __aeabi_f2iz
  20              	 .global __aeabi_fcmplt
  21              	 .global __aeabi_i2f
  22              	 .global __aeabi_fsub
  23              	 .global __aeabi_f2uiz
  24              	 .global __aeabi_ui2f
  25              	 .global __aeabi_fadd
  26              	 .section .text.arm_sin_f32,"ax",%progbits
  27              	 .align 2
  28              	 .global arm_sin_f32
  29              	 .thumb
  30              	 .thumb_func
  32              	arm_sin_f32:
  33              	.LFB139:
  34              	 .file 1 "../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * Title:		arm_sin_f32.c    
   9:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * Description:	Fast sine calculation for floating-point values.   
  11:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * POSSIBILITY OF SUCH DAMAGE. 
  39:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** #include "CMSIS_DSP/arm_common_tables.h"
  43:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  44:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**    
  45:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @ingroup groupFastMath    
  46:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  47:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  48:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**    
  49:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @defgroup sin Sine    
  50:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    
  51:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Computes the trigonometric sine function using a combination of table lookup   
  52:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * and cubic interpolation.  There are separate functions for   
  53:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * Q15, Q31, and floating-point data types.   
  54:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * The input to the floating-point version is in radians while the   
  55:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * fixed-point Q15 and Q31 have a scaled input with the range   
  56:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * [0 +0.9999] mapping to [0 2*pi).  The fixed-point range is chosen so that a
  57:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * value of 2*pi wraps around to 0.
  58:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *   
  59:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * The implementation is based on table lookup using 256 values together with cubic interpolation. 
  60:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * The steps used are:   
  61:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# Calculation of the nearest integer table index   
  62:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# Fetch the four table values a, b, c, and d     
  63:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# Compute the fractional portion (fract) of the table index.   
  64:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# Calculation of wa, wb, wc, wd    
  65:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *  -# The final result equals <code>a*wa + b*wb + c*wc + d*wd</code>   
  66:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *   
  67:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * where   
  68:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * <pre>    
  69:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    a=Table[index-1];    
  70:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    b=Table[index+0];    
  71:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    c=Table[index+1];    
  72:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    d=Table[index+2];    
  73:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * </pre>   
  74:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * and   
  75:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * <pre>    
  76:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    wa=-(1/6)*fract.^3 + (1/2)*fract.^2 - (1/3)*fract;    
  77:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    wb=(1/2)*fract.^3 - fract.^2 - (1/2)*fract + 1;    
  78:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    wc=-(1/2)*fract.^3+(1/2)*fract.^2+fract;    
  79:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  *    wd=(1/6)*fract.^3 - (1/6)*fract;    
  80:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * </pre>    
  81:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  82:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  83:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**    
  84:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @addtogroup sin    
  85:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @{    
  86:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  87:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  88:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** /**   
  89:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @brief  Fast approximation to the trigonometric sine function for floating-point data.   
  90:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @param[in] x input value in radians.   
  91:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  * @return  sin(x).   
  92:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****  */
  93:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
  94:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** float32_t arm_sin_f32(
  95:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t x)
  96:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** {
  35              	 .loc 1 96 0
  36              	 .cfi_startproc
  37              	 
  38              	 
  39 0000 90B5     	 push {r4,r7,lr}
  40              	.LCFI0:
  41              	 .cfi_def_cfa_offset 12
  42              	 .cfi_offset 4,-12
  43              	 .cfi_offset 7,-8
  44              	 .cfi_offset 14,-4
  45 0002 8BB0     	 sub sp,sp,#44
  46              	.LCFI1:
  47              	 .cfi_def_cfa_offset 56
  48 0004 00AF     	 add r7,sp,#0
  49              	.LCFI2:
  50              	 .cfi_def_cfa_register 7
  51 0006 7860     	 str r0,[r7,#4]
  97:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t sinVal, fract, in;                           /* Temporary variables for input, output *
  98:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   uint16_t index;                                        /* Index variable */
  99:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t a, b;                                        /* Two nearest output values */
 100:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   int32_t n;
 101:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   float32_t findex;
 102:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 103:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* input x is in radians */
 104:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Scale the input to [0 1] range from [0 2*PI] , divide input by 2*pi */
 105:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   in = x * 0.159154943092f;
  52              	 .loc 1 105 0
  53 0008 7868     	 ldr r0,[r7,#4]
  54 000a 3049     	 ldr r1,.L6
  55 000c FFF7FEFF 	 bl __aeabi_fmul
  56 0010 0346     	 mov r3,r0
  57 0012 3B62     	 str r3,[r7,#32]
 106:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 107:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Calculation of floor value of input */
 108:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   n = (int32_t) in;
  58              	 .loc 1 108 0
  59 0014 386A     	 ldr r0,[r7,#32]
  60 0016 FFF7FEFF 	 bl __aeabi_f2iz
  61 001a 0346     	 mov r3,r0
  62 001c 7B62     	 str r3,[r7,#36]
 109:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 110:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Make negative values towards -infinity */
 111:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   if(x < 0.0f)
  63              	 .loc 1 111 0
  64 001e 7868     	 ldr r0,[r7,#4]
  65 0020 4FF00001 	 mov r1,#0
  66 0024 FFF7FEFF 	 bl __aeabi_fcmplt
  67 0028 0346     	 mov r3,r0
  68 002a 002B     	 cmp r3,#0
  69 002c 02D0     	 beq .L2
 112:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   {
 113:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****     n--;
  70              	 .loc 1 113 0
  71 002e 7B6A     	 ldr r3,[r7,#36]
  72 0030 013B     	 subs r3,r3,#1
  73 0032 7B62     	 str r3,[r7,#36]
  74              	.L2:
 114:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   }
 115:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 116:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Map input value to [0 1] */
 117:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   in = in - (float32_t) n;
  75              	 .loc 1 117 0
  76 0034 786A     	 ldr r0,[r7,#36]
  77 0036 FFF7FEFF 	 bl __aeabi_i2f
  78 003a 0346     	 mov r3,r0
  79 003c 386A     	 ldr r0,[r7,#32]
  80 003e 1946     	 mov r1,r3
  81 0040 FFF7FEFF 	 bl __aeabi_fsub
  82 0044 0346     	 mov r3,r0
  83 0046 3B62     	 str r3,[r7,#32]
 118:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Calculation of index of the table */
 120:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   findex = (float32_t) FAST_MATH_TABLE_SIZE * in;
  84              	 .loc 1 120 0
  85 0048 386A     	 ldr r0,[r7,#32]
  86 004a 4FF08841 	 mov r1,#1140850688
  87 004e FFF7FEFF 	 bl __aeabi_fmul
  88 0052 0346     	 mov r3,r0
  89 0054 FB61     	 str r3,[r7,#28]
 121:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   index = ((uint16_t)findex) & 0x1ff;
  90              	 .loc 1 121 0
  91 0056 F869     	 ldr r0,[r7,#28]
  92 0058 FFF7FEFF 	 bl __aeabi_f2uiz
  93 005c 0346     	 mov r3,r0
  94 005e 9BB2     	 uxth r3,r3
  95 0060 C3F30803 	 ubfx r3,r3,#0,#9
  96 0064 7B83     	 strh r3,[r7,#26]
 122:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* fractional value calculation */
 124:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   fract = findex - (float32_t) index;
  97              	 .loc 1 124 0
  98 0066 7B8B     	 ldrh r3,[r7,#26]
  99 0068 1846     	 mov r0,r3
 100 006a FFF7FEFF 	 bl __aeabi_ui2f
 101 006e 0346     	 mov r3,r0
 102 0070 F869     	 ldr r0,[r7,#28]
 103 0072 1946     	 mov r1,r3
 104 0074 FFF7FEFF 	 bl __aeabi_fsub
 105 0078 0346     	 mov r3,r0
 106 007a 7B61     	 str r3,[r7,#20]
 125:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 126:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Read two nearest values of input value from the sin table */
 127:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   a = sinTable_f32[index];
 107              	 .loc 1 127 0
 108 007c 7B8B     	 ldrh r3,[r7,#26]
 109 007e 144A     	 ldr r2,.L6+4
 110 0080 52F82330 	 ldr r3,[r2,r3,lsl#2]
 111 0084 3B61     	 str r3,[r7,#16]
 128:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   b = sinTable_f32[index+1];
 112              	 .loc 1 128 0
 113 0086 7B8B     	 ldrh r3,[r7,#26]
 114 0088 0133     	 adds r3,r3,#1
 115 008a 114A     	 ldr r2,.L6+4
 116 008c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 117 0090 FB60     	 str r3,[r7,#12]
 129:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 130:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Linear interpolation process */
 131:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   sinVal = (1.0f-fract)*a + fract*b;
 118              	 .loc 1 131 0
 119 0092 4FF07E50 	 mov r0,#1065353216
 120 0096 7969     	 ldr r1,[r7,#20]
 121 0098 FFF7FEFF 	 bl __aeabi_fsub
 122 009c 0346     	 mov r3,r0
 123 009e 1846     	 mov r0,r3
 124 00a0 3969     	 ldr r1,[r7,#16]
 125 00a2 FFF7FEFF 	 bl __aeabi_fmul
 126 00a6 0346     	 mov r3,r0
 127 00a8 1C46     	 mov r4,r3
 128 00aa 7869     	 ldr r0,[r7,#20]
 129 00ac F968     	 ldr r1,[r7,#12]
 130 00ae FFF7FEFF 	 bl __aeabi_fmul
 131 00b2 0346     	 mov r3,r0
 132 00b4 2046     	 mov r0,r4
 133 00b6 1946     	 mov r1,r3
 134 00b8 FFF7FEFF 	 bl __aeabi_fadd
 135 00bc 0346     	 mov r3,r0
 136 00be BB60     	 str r3,[r7,#8]
 132:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** 
 133:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   /* Return the output value */
 134:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c ****   return (sinVal);
 137              	 .loc 1 134 0
 138 00c0 BB68     	 ldr r3,[r7,#8]
 135:../Dave/Generated/CMSIS_DSP/FastMathFunctions/arm_sin_f32.c **** }
 139              	 .loc 1 135 0
 140 00c2 1846     	 mov r0,r3
 141 00c4 2C37     	 adds r7,r7,#44
 142              	.LCFI3:
 143              	 .cfi_def_cfa_offset 12
 144 00c6 BD46     	 mov sp,r7
 145              	.LCFI4:
 146              	 .cfi_def_cfa_register 13
 147              	 
 148 00c8 90BD     	 pop {r4,r7,pc}
 149              	.L7:
 150 00ca 00BF     	 .align 2
 151              	.L6:
 152 00cc 83F9223E 	 .word 1042479491
 153 00d0 00000000 	 .word sinTable_f32
 154              	 .cfi_endproc
 155              	.LFE139:
 157              	 .text
 158              	.Letext0:
 159              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 160              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 161              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
 162              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_common_tables.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_sin_f32.c
    {standard input}:27     .text.arm_sin_f32:00000000 $t
    {standard input}:32     .text.arm_sin_f32:00000000 arm_sin_f32
    {standard input}:152    .text.arm_sin_f32:000000cc $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_f2iz
__aeabi_fcmplt
__aeabi_i2f
__aeabi_fsub
__aeabi_f2uiz
__aeabi_ui2f
__aeabi_fadd
sinTable_f32
