   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_biquad_cascade_df1_32x64_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.mult32x64,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	mult32x64:
  24              	.LFB110:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Date:        12. March 2014
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Revision: 	V1.4.4
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Project: 	    CMSIS DSP Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Title:	    arm_math.h
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Description:	Public header file for CMSIS DSP Library
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * modification, are permitted provided that the following conditions
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * are met:
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     the documentation and/or other materials provided with the
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     distribution.
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     may be used to endorse or promote products derived from this
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     software without specific prior written permission.
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Examples
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * --------
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 4.60.
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvproj
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvproj project in MDK-ARM, selectin
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * real values.
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * the type
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * below:
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     {
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data array.
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define ARM_MATH_CM0_FAMILY
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #elif defined (ARM_MATH_CM0PLUS)
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "core_cm0plus.h"
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifdef	__cplusplus
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** extern "C"
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** {
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31 			(0x100)
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15 			0x5
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK 			0x0000003F
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define PI					3.14159265358979f
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SIZE  256
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31	   0x400000
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15	   0x80
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING			0xB60B61
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #elif defined  (__ICCARM__)
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #else
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #endif
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined __CC_ARM
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t __packed
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED __attribute__((unused))
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __ICCARM__
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t __packed
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __GNUC__
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED __attribute__((unused))
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __CSMC__			/* Cosmic */
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #error Unknown compiler
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)  (*(__SIMD32_TYPE **) & (addr))
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)  (*(int64_t **) & (addr))
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    /**
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) |	\
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) |	\
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) |	\
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) |	\
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) |	\
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) |	\
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q15 values.
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q15_t clip_q63_to_q15(
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q7 values.
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q7_t clip_q31_to_q7(
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q31 to Q15 values.
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q15_t clip_q31_to_q15(
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q31_t x)
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q63_t mult32x64(
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q63_t x,
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q31_t y)
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
  26              	 .loc 1 511 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
  31              	.LCFI0:
  32              	 .cfi_def_cfa_offset 28
  33              	 .cfi_offset 4,-28
  34              	 .cfi_offset 5,-24
  35              	 .cfi_offset 6,-20
  36              	 .cfi_offset 7,-16
  37              	 .cfi_offset 8,-12
  38              	 .cfi_offset 9,-8
  39              	 .cfi_offset 14,-4
  40 0004 85B0     	 sub sp,sp,#20
  41              	.LCFI1:
  42              	 .cfi_def_cfa_offset 48
  43 0006 00AF     	 add r7,sp,#0
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 7
  46 0008 C7E90201 	 strd r0,[r7,#8]
  47 000c 7A60     	 str r2,[r7,#4]
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
  48              	 .loc 1 512 0
  49 000e D7E90223 	 ldrd r2,[r7,#8]
  50 0012 4FF0FF30 	 mov r0,#-1
  51 0016 4FF00001 	 mov r1,#0
  52 001a 00EA0200 	 and r0,r0,r2
  53 001e 01EA0301 	 and r1,r1,r3
  54 0022 7B68     	 ldr r3,[r7,#4]
  55 0024 1A46     	 mov r2,r3
  56 0026 4FEAE273 	 asr r3,r2,#31
  57 002a 02FB01FE 	 mul lr,r2,r1
  58 002e 00FB03F6 	 mul r6,r0,r3
  59 0032 7644     	 add r6,r6,lr
  60 0034 A0FB0223 	 umull r2,r3,r0,r2
  61 0038 F118     	 adds r1,r6,r3
  62 003a 0B46     	 mov r3,r1
  63 003c 9846     	 mov r8,r3
  64 003e 4FEAE379 	 asr r9,r3,#31
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****             (((q63_t) (x >> 32) * y)));
  65              	 .loc 1 513 0
  66 0042 D7E90223 	 ldrd r2,[r7,#8]
  67 0046 1C00     	 movs r4,r3
  68 0048 DD17     	 asrs r5,r3,#31
  69 004a 7B68     	 ldr r3,[r7,#4]
  70 004c 1A46     	 mov r2,r3
  71 004e 4FEAE273 	 asr r3,r2,#31
  72 0052 02FB05F0 	 mul r0,r2,r5
  73 0056 04FB03F1 	 mul r1,r4,r3
  74 005a 0144     	 add r1,r1,r0
  75 005c A4FB0223 	 umull r2,r3,r4,r2
  76 0060 1944     	 add r1,r1,r3
  77 0062 0B46     	 mov r3,r1
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
  78              	 .loc 1 512 0
  79 0064 12EB0802 	 adds r2,r2,r8
  80 0068 43EB0903 	 adc r3,r3,r9
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
  81              	 .loc 1 514 0
  82 006c 1046     	 mov r0,r2
  83 006e 1946     	 mov r1,r3
  84 0070 1437     	 adds r7,r7,#20
  85              	.LCFI3:
  86              	 .cfi_def_cfa_offset 28
  87 0072 BD46     	 mov sp,r7
  88              	.LCFI4:
  89              	 .cfi_def_cfa_register 13
  90              	 
  91 0074 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
  92              	 .cfi_endproc
  93              	.LFE110:
  95              	 .section .text.arm_biquad_cas_df1_32x64_q31,"ax",%progbits
  96              	 .align 2
  97              	 .global arm_biquad_cas_df1_32x64_q31
  98              	 .thumb
  99              	 .thumb_func
 101              	arm_biquad_cas_df1_32x64_q31:
 102              	.LFB139:
 103              	 .file 2 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * Title:	    arm_biquad_cascade_df1_32x64_q31.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * Description:	High precision Q31 Biquad cascade filter processing function    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @ingroup groupFilters    
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @defgroup BiquadCascadeDF1_32x64 High Precision Q31 Biquad Cascade Filter    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This function implements a high precision Biquad cascade filter which operates on    
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Q31 data values.  The filter coefficients are in 1.31 format and the state variables    
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * are in 1.63 format.  The double precision state variables reduce quantization noise    
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * in the filter and provide a cleaner output.    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * These filters are particularly useful when implementing filters in which the    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * singularities are close to the unit circle.  This is common for low pass or high    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * pass filters with very low cutoff frequencies.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The function operates on blocks of input and output data    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * and each call to the function processes <code>blockSize</code> samples through    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * the filter. <code>pSrc</code> and <code>pDst</code> points to input and output arrays    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * containing <code>blockSize</code> Q31 values.    
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Algorithm    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Each Biquad stage implements a second order filter using the difference equation:    
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>    
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]    
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>    
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * A Direct Form I algorithm is used with 5 coefficients and 4 state variables per stage.    
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \image html Biquad.gif "Single Biquad filter stage"    
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Coefficients <code>b0, b1, and b2 </code> multiply the input signal <code>x[n]</code> and are re
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Coefficients <code>a1</code> and <code>a2</code> multiply the output signal <code>y[n]</code> an
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Pay careful attention to the sign of the feedback coefficients.    
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Some design tools use the difference equation    
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>    
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     y[n] = b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] - a1 * y[n-1] - a2 * y[n-2]    
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>    
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * In this case the feedback coefficients <code>a1</code> and <code>a2</code> must be negated when 
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Higher order filters are realized as a cascade of second order sections.    
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>numStages</code> refers to the number of second order stages used.    
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * For example, an 8th order filter would be realized with <code>numStages=4</code> second order st
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \image html BiquadCascade.gif "8th order filter using a cascade of Biquad stages"    
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * A 9th order filter would be realized with <code>numStages=5</code> second order stages with the 
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The <code>pState</code> points to state variables array .    
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Each Biquad stage has 4 state variables <code>x[n-1], x[n-2], y[n-1],</code> and <code>y[n-2]</c
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The state variables are arranged in the array as:    
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>    
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     {x[n-1], x[n-2], y[n-1], y[n-2]}    
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>    
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The 4 state variables for stage 1 are first, then the 4 state variables for stage 2, and so on. 
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The state array has a total length of <code>4*numStages</code> values of data in 1.63 format.   
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The state variables are updated after each block of data is processed; the coefficients are unto
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Instance Structure    
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The coefficients and state variables for a filter are stored together in an instance data struct
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * A separate instance structure must be defined for each filter.    
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Coefficient arrays may be shared among several instances while state variable arrays cannot be s
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Init Function    
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * There is also an associated initialization function which performs the following operations:    
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Sets the values of the internal structure fields.    
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Zeros out the values in the state buffer.    
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * To do this manually without calling the init function, assign the follow subfields of the instan
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * numStages, pCoeffs, postShift, pState. Also set all of the values in pState to zero. 
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Use of the initialization function is optional.    
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * However, if the initialization function is used, then the instance structure cannot be placed in
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * To place an instance structure into a const data section, the instance structure must be manuall
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Set the values in the state buffer to zeros before static initialization.    
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * For example, to statically initialize the filter instance structure use    
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>    
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *     arm_biquad_cas_df1_32x64_ins_q31 S1 = {numStages, pState, pCoeffs, postShift};    
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>    
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * where <code>numStages</code> is the number of Biquad stages in the filter; <code>pState</code> i
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>pCoeffs</code> is the address of the coefficient buffer; <code>postShift</code> shift to b
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par Fixed-Point Behavior    
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Care must be taken while using Biquad Cascade 32x64 filter function.    
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Following issues must be considered:    
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Scaling of coefficients    
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Filter gain    
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * - Overflow and saturation    
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Filter coefficients are represented as fractional values and    
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * restricted to lie in the range <code>[-1 +1)</code>.    
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The processing function has an additional scaling parameter <code>postShift</code>    
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * which allows the filter coefficients to exceed the range <code>[+1 -1)</code>.    
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * At the output of the filter's accumulator is a shift register which shifts the result by <code>p
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \image html BiquadPostshift.gif "Fixed-point Biquad with shift by postShift bits after accumulat
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This essentially scales the filter coefficients by <code>2^postShift</code>.    
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * For example, to realize the coefficients    
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>    
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    {1.5, -0.8, 1.2, 1.6, -0.9}    
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>    
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * set the Coefficient array to:    
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <pre>    
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    {0.75, -0.4, 0.6, 0.8, -0.45}    
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * </pre>    
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * and set <code>postShift=1</code>    
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The second thing to keep in mind is the gain through the filter.    
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The frequency response of a Biquad filter is a function of its coefficients.    
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * It is possible for the gain through the filter to exceed 1.0 meaning that the filter increases t
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This means that an input signal with amplitude < 1.0 may result in an output > 1.0 and these are
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * To avoid this behavior the filter needs to be scaled down such that its peak gain < 1.0 or the i
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The third item to consider is the overflow and saturation behavior of the fixed-point Q31 versio
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * This is described in the function specific documentation below.    
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**    
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @addtogroup BiquadCascadeDF1_32x64    
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @{    
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** /**    
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @details    
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[in]  *S points to an instance of the high precision Q31 Biquad cascade filter.    
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[in]  *pSrc points to the block of input data.    
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[out] *pDst points to the block of output data.    
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @param[in]  blockSize number of samples to process.    
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * @return none.    
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The function is implemented using an internal 64-bit accumulator.    
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicatio
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Thus, if the accumulator result overflows it wraps around rather than clip.    
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by 2 bits and lie in
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * After all 5 multiply-accumulates are performed, the 2.62 accumulator is shifted by <code>postShi
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * 1.31 format by discarding the low 32 bits.    
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  *    
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * \par    
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * Two related functions are provided in the CMSIS DSP library.    
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>arm_biquad_cascade_df1_q31()</code> implements a Biquad cascade with 32-bit coefficients a
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  * <code>arm_biquad_cascade_df1_fast_q31()</code> implements a Biquad cascade with 32-bit coefficie
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****  */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** void arm_biquad_cas_df1_32x64_q31(
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t * pSrc,
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t * pDst,
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t blockSize)
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** {
 104              	 .loc 2 192 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108 0000 2DE9B04F 	 push {r4,r5,r7,r8,r9,r10,fp,lr}
 109              	.LCFI5:
 110              	 .cfi_def_cfa_offset 32
 111              	 .cfi_offset 4,-32
 112              	 .cfi_offset 5,-28
 113              	 .cfi_offset 7,-24
 114              	 .cfi_offset 8,-20
 115              	 .cfi_offset 9,-16
 116              	 .cfi_offset 10,-12
 117              	 .cfi_offset 11,-8
 118              	 .cfi_offset 14,-4
 119 0004 AEB0     	 sub sp,sp,#184
 120              	.LCFI6:
 121              	 .cfi_def_cfa_offset 216
 122 0006 00AF     	 add r7,sp,#0
 123              	.LCFI7:
 124              	 .cfi_def_cfa_register 7
 125 0008 F864     	 str r0,[r7,#76]
 126 000a B964     	 str r1,[r7,#72]
 127 000c 7A64     	 str r2,[r7,#68]
 128 000e 3B64     	 str r3,[r7,#64]
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t *pIn = pSrc;                             /*  input pointer initialization  */
 129              	 .loc 2 193 0
 130 0010 BB6C     	 ldr r3,[r7,#72]
 131 0012 C7F8B430 	 str r3,[r7,#180]
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t *pOut = pDst;                            /*  output pointer initialization */
 132              	 .loc 2 194 0
 133 0016 7B6C     	 ldr r3,[r7,#68]
 134 0018 C7F8B030 	 str r3,[r7,#176]
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q63_t *pState = S->pState;                     /*  state pointer initialization  */
 135              	 .loc 2 195 0
 136 001c FB6C     	 ldr r3,[r7,#76]
 137 001e 5B68     	 ldr r3,[r3,#4]
 138 0020 C7F8AC30 	 str r3,[r7,#172]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /*  coeff pointer initialization  */
 139              	 .loc 2 196 0
 140 0024 FB6C     	 ldr r3,[r7,#76]
 141 0026 9B68     	 ldr r3,[r3,#8]
 142 0028 C7F8A830 	 str r3,[r7,#168]
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q63_t acc;                                     /*  accumulator                   */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t Xn1, Xn2;                                /*  Input Filter state variables        */
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q63_t Yn1, Yn2;                                /*  Output Filter state variables        */
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t b0, b1, b2, a1, a2;                      /*  Filter coefficients           */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t Xn;                                      /*  temporary input               */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   int32_t shift = (int32_t) S->postShift + 1;    /*  Shift to be applied to the output */
 143              	 .loc 2 202 0
 144 002c FB6C     	 ldr r3,[r7,#76]
 145 002e 1B7B     	 ldrb r3,[r3,#12]
 146 0030 0133     	 adds r3,r3,#1
 147 0032 C7F88430 	 str r3,[r7,#132]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t sample, stage = S->numStages;         /*  loop counters                     */
 148              	 .loc 2 203 0
 149 0036 FB6C     	 ldr r3,[r7,#76]
 150 0038 1B78     	 ldrb r3,[r3]
 151 003a C7F88830 	 str r3,[r7,#136]
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   q31_t acc_l, acc_h;                            /*  temporary output               */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t uShift = ((uint32_t) S->postShift + 1u);
 152              	 .loc 2 205 0
 153 003e FB6C     	 ldr r3,[r7,#76]
 154 0040 1B7B     	 ldrb r3,[r3,#12]
 155 0042 0133     	 adds r3,r3,#1
 156 0044 C7F88030 	 str r3,[r7,#128]
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   uint32_t lShift = 32u - uShift;                /*  Shift to be applied to the output */
 157              	 .loc 2 206 0
 158 0048 D7F88030 	 ldr r3,[r7,#128]
 159 004c C3F12003 	 rsb r3,r3,#32
 160 0050 FB67     	 str r3,[r7,#124]
 161              	.L8:
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   do
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   {
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the coefficients */
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b0 = *pCoeffs++;
 162              	 .loc 2 216 0
 163 0052 D7F8A820 	 ldr r2,[r7,#168]
 164 0056 131D     	 adds r3,r2,#4
 165 0058 C7F8A830 	 str r3,[r7,#168]
 166 005c 1368     	 ldr r3,[r2]
 167 005e BB67     	 str r3,[r7,#120]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b1 = *pCoeffs++;
 168              	 .loc 2 217 0
 169 0060 D7F8A820 	 ldr r2,[r7,#168]
 170 0064 131D     	 adds r3,r2,#4
 171 0066 C7F8A830 	 str r3,[r7,#168]
 172 006a 1368     	 ldr r3,[r2]
 173 006c 7B67     	 str r3,[r7,#116]
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b2 = *pCoeffs++;
 174              	 .loc 2 218 0
 175 006e D7F8A820 	 ldr r2,[r7,#168]
 176 0072 131D     	 adds r3,r2,#4
 177 0074 C7F8A830 	 str r3,[r7,#168]
 178 0078 1368     	 ldr r3,[r2]
 179 007a 3B67     	 str r3,[r7,#112]
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a1 = *pCoeffs++;
 180              	 .loc 2 219 0
 181 007c D7F8A820 	 ldr r2,[r7,#168]
 182 0080 131D     	 adds r3,r2,#4
 183 0082 C7F8A830 	 str r3,[r7,#168]
 184 0086 1368     	 ldr r3,[r2]
 185 0088 FB66     	 str r3,[r7,#108]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a2 = *pCoeffs++;
 186              	 .loc 2 220 0
 187 008a D7F8A820 	 ldr r2,[r7,#168]
 188 008e 131D     	 adds r3,r2,#4
 189 0090 C7F8A830 	 str r3,[r7,#168]
 190 0094 1368     	 ldr r3,[r2]
 191 0096 BB66     	 str r3,[r7,#104]
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the state values */
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn1 = (q31_t) (pState[0]);
 192              	 .loc 2 223 0
 193 0098 D7F8AC30 	 ldr r3,[r7,#172]
 194 009c D3E90023 	 ldrd r2,[r3]
 195 00a0 1346     	 mov r3,r2
 196 00a2 C7F8A430 	 str r3,[r7,#164]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn2 = (q31_t) (pState[1]);
 197              	 .loc 2 224 0
 198 00a6 D7F8AC30 	 ldr r3,[r7,#172]
 199 00aa 0833     	 adds r3,r3,#8
 200 00ac D3E90023 	 ldrd r2,[r3]
 201 00b0 1346     	 mov r3,r2
 202 00b2 C7F8A030 	 str r3,[r7,#160]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn1 = pState[2];
 203              	 .loc 2 225 0
 204 00b6 D7F8AC30 	 ldr r3,[r7,#172]
 205 00ba D3E90423 	 ldrd r2,[r3,#16]
 206 00be C7E92623 	 strd r2,[r7,#152]
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn2 = pState[3];
 207              	 .loc 2 226 0
 208 00c2 D7F8AC30 	 ldr r3,[r7,#172]
 209 00c6 D3E90623 	 ldrd r2,[r3,#24]
 210 00ca C7E92423 	 strd r2,[r7,#144]
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Apply loop unrolling and compute 4 output values simultaneously. */
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* The variable acc hold output value that is being computed and    
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * stored in the destination buffer    
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]    
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      */
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = blockSize >> 2u;
 211              	 .loc 2 234 0
 212 00ce 3B6C     	 ldr r3,[r7,#64]
 213 00d0 9B08     	 lsrs r3,r3,#2
 214 00d2 C7F88C30 	 str r3,[r7,#140]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* First part of the processing with loop unrolling. Compute 4 outputs at a time.    
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while(sample > 0u)
 215              	 .loc 2 238 0
 216 00d6 79E2     	 b .L4
 217              	.L5:
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 218              	 .loc 2 241 0
 219 00d8 D7F8B420 	 ldr r2,[r7,#180]
 220 00dc 131D     	 adds r3,r2,#4
 221 00de C7F8B430 	 str r3,[r7,#180]
 222 00e2 1368     	 ldr r3,[r2]
 223 00e4 7B66     	 str r3,[r7,#100]
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 224              	 .loc 2 246 0
 225 00e6 7B6E     	 ldr r3,[r7,#100]
 226 00e8 1846     	 mov r0,r3
 227 00ea 4FEAE071 	 asr r1,r0,#31
 228 00ee BB6F     	 ldr r3,[r7,#120]
 229 00f0 1A46     	 mov r2,r3
 230 00f2 4FEAE273 	 asr r3,r2,#31
 231 00f6 02FB01F5 	 mul r5,r2,r1
 232 00fa 00FB03F4 	 mul r4,r0,r3
 233 00fe 2C44     	 add r4,r4,r5
 234 0100 A0FB0223 	 umull r2,r3,r0,r2
 235 0104 E118     	 adds r1,r4,r3
 236 0106 0B46     	 mov r3,r1
 237 0108 C7E91623 	 strd r2,[r7,#88]
 238 010c C7E91623 	 strd r2,[r7,#88]
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 239              	 .loc 2 249 0
 240 0110 D7F8A430 	 ldr r3,[r7,#164]
 241 0114 1846     	 mov r0,r3
 242 0116 4FEAE071 	 asr r1,r0,#31
 243 011a 7B6F     	 ldr r3,[r7,#116]
 244 011c 1A46     	 mov r2,r3
 245 011e 4FEAE273 	 asr r3,r2,#31
 246 0122 02FB01F5 	 mul r5,r2,r1
 247 0126 00FB03F4 	 mul r4,r0,r3
 248 012a 2C44     	 add r4,r4,r5
 249 012c A0FB0201 	 umull r0,r1,r0,r2
 250 0130 6318     	 adds r3,r4,r1
 251 0132 1946     	 mov r1,r3
 252 0134 D7E91623 	 ldrd r2,[r7,#88]
 253 0138 1218     	 adds r2,r2,r0
 254 013a 43EB0103 	 adc r3,r3,r1
 255 013e C7E91623 	 strd r2,[r7,#88]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 256              	 .loc 2 252 0
 257 0142 D7F8A030 	 ldr r3,[r7,#160]
 258 0146 1846     	 mov r0,r3
 259 0148 4FEAE071 	 asr r1,r0,#31
 260 014c 3B6F     	 ldr r3,[r7,#112]
 261 014e 1A46     	 mov r2,r3
 262 0150 4FEAE273 	 asr r3,r2,#31
 263 0154 02FB01F5 	 mul r5,r2,r1
 264 0158 00FB03F4 	 mul r4,r0,r3
 265 015c 2C44     	 add r4,r4,r5
 266 015e A0FB0201 	 umull r0,r1,r0,r2
 267 0162 6318     	 adds r3,r4,r1
 268 0164 1946     	 mov r1,r3
 269 0166 D7E91623 	 ldrd r2,[r7,#88]
 270 016a 1218     	 adds r2,r2,r0
 271 016c 43EB0103 	 adc r3,r3,r1
 272 0170 C7E91623 	 strd r2,[r7,#88]
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 273              	 .loc 2 255 0
 274 0174 D7E92601 	 ldrd r0,[r7,#152]
 275 0178 FA6E     	 ldr r2,[r7,#108]
 276 017a FFF7FEFF 	 bl mult32x64
 277 017e D7E91623 	 ldrd r2,[r7,#88]
 278 0182 1218     	 adds r2,r2,r0
 279 0184 43EB0103 	 adc r3,r3,r1
 280 0188 C7E91623 	 strd r2,[r7,#88]
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 281              	 .loc 2 258 0
 282 018c D7E92401 	 ldrd r0,[r7,#144]
 283 0190 BA6E     	 ldr r2,[r7,#104]
 284 0192 FFF7FEFF 	 bl mult32x64
 285 0196 D7E91623 	 ldrd r2,[r7,#88]
 286 019a 1218     	 adds r2,r2,r0
 287 019c 43EB0103 	 adc r3,r3,r1
 288 01a0 C7E91623 	 strd r2,[r7,#88]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63 , Yn2 variable is reused */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = acc << shift;
 289              	 .loc 2 261 0
 290 01a4 D7E91623 	 ldrd r2,[r7,#88]
 291 01a8 D7F88440 	 ldr r4,[r7,#132]
 292 01ac A4F12001 	 sub r1,r4,#32
 293 01b0 C4F12000 	 rsb r0,r4,#32
 294 01b4 03FA04F5 	 lsl r5,r3,r4
 295 01b8 FD63     	 str r5,[r7,#60]
 296 01ba 02FA01F1 	 lsl r1,r2,r1
 297 01be FD6B     	 ldr r5,[r7,#60]
 298 01c0 0D43     	 orrs r5,r5,r1
 299 01c2 FD63     	 str r5,[r7,#60]
 300 01c4 22FA00F0 	 lsr r0,r2,r0
 301 01c8 F96B     	 ldr r1,[r7,#60]
 302 01ca 0143     	 orrs r1,r1,r0
 303 01cc F963     	 str r1,[r7,#60]
 304 01ce 02FA04F3 	 lsl r3,r2,r4
 305 01d2 BB63     	 str r3,[r7,#56]
 306 01d4 D7E90E23 	 ldrd r2,[r7,#56]
 307 01d8 C7E92423 	 strd r2,[r7,#144]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 308              	 .loc 2 264 0
 309 01dc BB6D     	 ldr r3,[r7,#88]
 310 01de 7B65     	 str r3,[r7,#84]
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 311              	 .loc 2 267 0
 312 01e0 D7E91623 	 ldrd r2,[r7,#88]
 313 01e4 1B00     	 movs r3,r3
 314 01e6 3B62     	 str r3,[r7,#32]
 315 01e8 0023     	 movs r3,#0
 316 01ea 7B62     	 str r3,[r7,#36]
 317 01ec 3B6A     	 ldr r3,[r7,#32]
 318 01ee 3B65     	 str r3,[r7,#80]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 319              	 .loc 2 270 0
 320 01f0 7A6D     	 ldr r2,[r7,#84]
 321 01f2 FB6F     	 ldr r3,[r7,#124]
 322 01f4 22FA03F1 	 lsr r1,r2,r3
 323 01f8 D7F88020 	 ldr r2,[r7,#128]
 324 01fc 3B6D     	 ldr r3,[r7,#80]
 325 01fe 9340     	 lsls r3,r3,r2
 326 0200 0B43     	 orrs r3,r3,r1
 327 0202 3B65     	 str r3,[r7,#80]
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut = acc_h;
 328              	 .loc 2 273 0
 329 0204 D7F8B020 	 ldr r2,[r7,#176]
 330 0208 3B6D     	 ldr r3,[r7,#80]
 331 020a 1360     	 str r3,[r2]
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the second input into Xn2, to reuse the value */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = *pIn++;
 332              	 .loc 2 276 0
 333 020c D7F8B420 	 ldr r2,[r7,#180]
 334 0210 131D     	 adds r3,r2,#4
 335 0212 C7F8B430 	 str r3,[r7,#180]
 336 0216 1368     	 ldr r3,[r2]
 337 0218 C7F8A030 	 str r3,[r7,#160]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b1;
 338              	 .loc 2 281 0
 339 021c 7B6E     	 ldr r3,[r7,#100]
 340 021e 1846     	 mov r0,r3
 341 0220 4FEAE071 	 asr r1,r0,#31
 342 0224 7B6F     	 ldr r3,[r7,#116]
 343 0226 1A46     	 mov r2,r3
 344 0228 4FEAE273 	 asr r3,r2,#31
 345 022c 02FB01F5 	 mul r5,r2,r1
 346 0230 00FB03F4 	 mul r4,r0,r3
 347 0234 2C44     	 add r4,r4,r5
 348 0236 A0FB0223 	 umull r2,r3,r0,r2
 349 023a E118     	 adds r1,r4,r3
 350 023c 0B46     	 mov r3,r1
 351 023e C7E91623 	 strd r2,[r7,#88]
 352 0242 C7E91623 	 strd r2,[r7,#88]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b0;
 353              	 .loc 2 284 0
 354 0246 D7F8A030 	 ldr r3,[r7,#160]
 355 024a 1846     	 mov r0,r3
 356 024c 4FEAE071 	 asr r1,r0,#31
 357 0250 BB6F     	 ldr r3,[r7,#120]
 358 0252 1A46     	 mov r2,r3
 359 0254 4FEAE273 	 asr r3,r2,#31
 360 0258 02FB01F5 	 mul r5,r2,r1
 361 025c 00FB03F4 	 mul r4,r0,r3
 362 0260 2C44     	 add r4,r4,r5
 363 0262 A0FB0201 	 umull r0,r1,r0,r2
 364 0266 6318     	 adds r3,r4,r1
 365 0268 1946     	 mov r1,r3
 366 026a D7E91623 	 ldrd r2,[r7,#88]
 367 026e 1218     	 adds r2,r2,r0
 368 0270 43EB0103 	 adc r3,r3,r1
 369 0274 C7E91623 	 strd r2,[r7,#88]
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b2;
 370              	 .loc 2 287 0
 371 0278 D7F8A430 	 ldr r3,[r7,#164]
 372 027c 1846     	 mov r0,r3
 373 027e 4FEAE071 	 asr r1,r0,#31
 374 0282 3B6F     	 ldr r3,[r7,#112]
 375 0284 1A46     	 mov r2,r3
 376 0286 4FEAE273 	 asr r3,r2,#31
 377 028a 02FB01F5 	 mul r5,r2,r1
 378 028e 00FB03F4 	 mul r4,r0,r3
 379 0292 2C44     	 add r4,r4,r5
 380 0294 A0FB0201 	 umull r0,r1,r0,r2
 381 0298 6318     	 adds r3,r4,r1
 382 029a 1946     	 mov r1,r3
 383 029c D7E91623 	 ldrd r2,[r7,#88]
 384 02a0 1218     	 adds r2,r2,r0
 385 02a2 43EB0103 	 adc r3,r3,r1
 386 02a6 C7E91623 	 strd r2,[r7,#88]
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a1);
 387              	 .loc 2 290 0
 388 02aa D7E92401 	 ldrd r0,[r7,#144]
 389 02ae FA6E     	 ldr r2,[r7,#108]
 390 02b0 FFF7FEFF 	 bl mult32x64
 391 02b4 D7E91623 	 ldrd r2,[r7,#88]
 392 02b8 1218     	 adds r2,r2,r0
 393 02ba 43EB0103 	 adc r3,r3,r1
 394 02be C7E91623 	 strd r2,[r7,#88]
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a2);
 395              	 .loc 2 293 0
 396 02c2 D7E92601 	 ldrd r0,[r7,#152]
 397 02c6 BA6E     	 ldr r2,[r7,#104]
 398 02c8 FFF7FEFF 	 bl mult32x64
 399 02cc D7E91623 	 ldrd r2,[r7,#88]
 400 02d0 1218     	 adds r2,r2,r0
 401 02d2 43EB0103 	 adc r3,r3,r1
 402 02d6 C7E91623 	 strd r2,[r7,#88]
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 403              	 .loc 2 296 0
 404 02da D7E91623 	 ldrd r2,[r7,#88]
 405 02de D7F88440 	 ldr r4,[r7,#132]
 406 02e2 A4F12001 	 sub r1,r4,#32
 407 02e6 C4F12000 	 rsb r0,r4,#32
 408 02ea 03FA04F5 	 lsl r5,r3,r4
 409 02ee 7D63     	 str r5,[r7,#52]
 410 02f0 02FA01F1 	 lsl r1,r2,r1
 411 02f4 7D6B     	 ldr r5,[r7,#52]
 412 02f6 0D43     	 orrs r5,r5,r1
 413 02f8 7D63     	 str r5,[r7,#52]
 414 02fa 22FA00F0 	 lsr r0,r2,r0
 415 02fe 796B     	 ldr r1,[r7,#52]
 416 0300 0143     	 orrs r1,r1,r0
 417 0302 7963     	 str r1,[r7,#52]
 418 0304 02FA04F3 	 lsl r3,r2,r4
 419 0308 3B63     	 str r3,[r7,#48]
 420 030a D7E90C23 	 ldrd r2,[r7,#48]
 421 030e C7E92623 	 strd r2,[r7,#152]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 422              	 .loc 2 299 0
 423 0312 BB6D     	 ldr r3,[r7,#88]
 424 0314 7B65     	 str r3,[r7,#84]
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 425              	 .loc 2 302 0
 426 0316 D7E91623 	 ldrd r2,[r7,#88]
 427 031a 1B00     	 movs r3,r3
 428 031c BB61     	 str r3,[r7,#24]
 429 031e 0023     	 movs r3,#0
 430 0320 FB61     	 str r3,[r7,#28]
 431 0322 BB69     	 ldr r3,[r7,#24]
 432 0324 3B65     	 str r3,[r7,#80]
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 433              	 .loc 2 305 0
 434 0326 7A6D     	 ldr r2,[r7,#84]
 435 0328 FB6F     	 ldr r3,[r7,#124]
 436 032a 22FA03F1 	 lsr r1,r2,r3
 437 032e D7F88020 	 ldr r2,[r7,#128]
 438 0332 3B6D     	 ldr r3,[r7,#80]
 439 0334 9340     	 lsls r3,r3,r2
 440 0336 0B43     	 orrs r3,r3,r1
 441 0338 3B65     	 str r3,[r7,#80]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the third input into Xn1, to reuse the value */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = *pIn++;
 442              	 .loc 2 308 0
 443 033a D7F8B420 	 ldr r2,[r7,#180]
 444 033e 131D     	 adds r3,r2,#4
 445 0340 C7F8B430 	 str r3,[r7,#180]
 446 0344 1368     	 ldr r3,[r2]
 447 0346 C7F8A430 	 str r3,[r7,#164]
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.31 */
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer. */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 1u) = acc_h;
 448              	 .loc 2 312 0
 449 034a D7F8B030 	 ldr r3,[r7,#176]
 450 034e 1A1D     	 adds r2,r3,#4
 451 0350 3B6D     	 ldr r3,[r7,#80]
 452 0352 1360     	 str r3,[r2]
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn1 *b0;
 453              	 .loc 2 317 0
 454 0354 D7F8A430 	 ldr r3,[r7,#164]
 455 0358 1846     	 mov r0,r3
 456 035a 4FEAE071 	 asr r1,r0,#31
 457 035e BB6F     	 ldr r3,[r7,#120]
 458 0360 1A46     	 mov r2,r3
 459 0362 4FEAE273 	 asr r3,r2,#31
 460 0366 02FB01F5 	 mul r5,r2,r1
 461 036a 00FB03F4 	 mul r4,r0,r3
 462 036e 2C44     	 add r4,r4,r5
 463 0370 A0FB0223 	 umull r2,r3,r0,r2
 464 0374 E118     	 adds r1,r4,r3
 465 0376 0B46     	 mov r3,r1
 466 0378 C7E91623 	 strd r2,[r7,#88]
 467 037c C7E91623 	 strd r2,[r7,#88]
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b1;
 468              	 .loc 2 320 0
 469 0380 D7F8A030 	 ldr r3,[r7,#160]
 470 0384 1846     	 mov r0,r3
 471 0386 4FEAE071 	 asr r1,r0,#31
 472 038a 7B6F     	 ldr r3,[r7,#116]
 473 038c 1A46     	 mov r2,r3
 474 038e 4FEAE273 	 asr r3,r2,#31
 475 0392 02FB01F5 	 mul r5,r2,r1
 476 0396 00FB03F4 	 mul r4,r0,r3
 477 039a 2C44     	 add r4,r4,r5
 478 039c A0FB0201 	 umull r0,r1,r0,r2
 479 03a0 6318     	 adds r3,r4,r1
 480 03a2 1946     	 mov r1,r3
 481 03a4 D7E91623 	 ldrd r2,[r7,#88]
 482 03a8 1218     	 adds r2,r2,r0
 483 03aa 43EB0103 	 adc r3,r3,r1
 484 03ae C7E91623 	 strd r2,[r7,#88]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn *b2;
 485              	 .loc 2 323 0
 486 03b2 7B6E     	 ldr r3,[r7,#100]
 487 03b4 1846     	 mov r0,r3
 488 03b6 4FEAE071 	 asr r1,r0,#31
 489 03ba 3B6F     	 ldr r3,[r7,#112]
 490 03bc 1A46     	 mov r2,r3
 491 03be 4FEAE273 	 asr r3,r2,#31
 492 03c2 02FB01F5 	 mul r5,r2,r1
 493 03c6 00FB03F4 	 mul r4,r0,r3
 494 03ca 2C44     	 add r4,r4,r5
 495 03cc A0FB0201 	 umull r0,r1,r0,r2
 496 03d0 6318     	 adds r3,r4,r1
 497 03d2 1946     	 mov r1,r3
 498 03d4 D7E91623 	 ldrd r2,[r7,#88]
 499 03d8 1218     	 adds r2,r2,r0
 500 03da 43EB0103 	 adc r3,r3,r1
 501 03de C7E91623 	 strd r2,[r7,#88]
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 502              	 .loc 2 326 0
 503 03e2 D7E92601 	 ldrd r0,[r7,#152]
 504 03e6 FA6E     	 ldr r2,[r7,#108]
 505 03e8 FFF7FEFF 	 bl mult32x64
 506 03ec D7E91623 	 ldrd r2,[r7,#88]
 507 03f0 1218     	 adds r2,r2,r0
 508 03f2 43EB0103 	 adc r3,r3,r1
 509 03f6 C7E91623 	 strd r2,[r7,#88]
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 510              	 .loc 2 329 0
 511 03fa D7E92401 	 ldrd r0,[r7,#144]
 512 03fe BA6E     	 ldr r2,[r7,#104]
 513 0400 FFF7FEFF 	 bl mult32x64
 514 0404 D7E91623 	 ldrd r2,[r7,#88]
 515 0408 1218     	 adds r2,r2,r0
 516 040a 43EB0103 	 adc r3,r3,r1
 517 040e C7E91623 	 strd r2,[r7,#88]
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn2 variable is reused  */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = acc << shift;
 518              	 .loc 2 332 0
 519 0412 D7E91623 	 ldrd r2,[r7,#88]
 520 0416 D7F88440 	 ldr r4,[r7,#132]
 521 041a A4F12001 	 sub r1,r4,#32
 522 041e C4F12000 	 rsb r0,r4,#32
 523 0422 03FA04F5 	 lsl r5,r3,r4
 524 0426 FD62     	 str r5,[r7,#44]
 525 0428 02FA01F1 	 lsl r1,r2,r1
 526 042c FD6A     	 ldr r5,[r7,#44]
 527 042e 0D43     	 orrs r5,r5,r1
 528 0430 FD62     	 str r5,[r7,#44]
 529 0432 22FA00F0 	 lsr r0,r2,r0
 530 0436 F96A     	 ldr r1,[r7,#44]
 531 0438 0143     	 orrs r1,r1,r0
 532 043a F962     	 str r1,[r7,#44]
 533 043c 02FA04F3 	 lsl r3,r2,r4
 534 0440 BB62     	 str r3,[r7,#40]
 535 0442 D7E90A23 	 ldrd r2,[r7,#40]
 536 0446 C7E92423 	 strd r2,[r7,#144]
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 537              	 .loc 2 335 0
 538 044a BB6D     	 ldr r3,[r7,#88]
 539 044c 7B65     	 str r3,[r7,#84]
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 540              	 .loc 2 338 0
 541 044e D7E91623 	 ldrd r2,[r7,#88]
 542 0452 1B00     	 movs r3,r3
 543 0454 3B61     	 str r3,[r7,#16]
 544 0456 0023     	 movs r3,#0
 545 0458 7B61     	 str r3,[r7,#20]
 546 045a 3B69     	 ldr r3,[r7,#16]
 547 045c 3B65     	 str r3,[r7,#80]
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 548              	 .loc 2 341 0
 549 045e 7A6D     	 ldr r2,[r7,#84]
 550 0460 FB6F     	 ldr r3,[r7,#124]
 551 0462 22FA03F1 	 lsr r1,r2,r3
 552 0466 D7F88020 	 ldr r2,[r7,#128]
 553 046a 3B6D     	 ldr r3,[r7,#80]
 554 046c 9340     	 lsls r3,r3,r2
 555 046e 0B43     	 orrs r3,r3,r1
 556 0470 3B65     	 str r3,[r7,#80]
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 2u) = acc_h;
 557              	 .loc 2 344 0
 558 0472 D7F8B030 	 ldr r3,[r7,#176]
 559 0476 03F10802 	 add r2,r3,#8
 560 047a 3B6D     	 ldr r3,[r7,#80]
 561 047c 1360     	 str r3,[r2]
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the fourth input into Xn, to reuse the value */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 562              	 .loc 2 347 0
 563 047e D7F8B420 	 ldr r2,[r7,#180]
 564 0482 131D     	 adds r3,r2,#4
 565 0484 C7F8B430 	 str r3,[r7,#180]
 566 0488 1368     	 ldr r3,[r2]
 567 048a 7B66     	 str r3,[r7,#100]
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 568              	 .loc 2 351 0
 569 048c 7B6E     	 ldr r3,[r7,#100]
 570 048e 1846     	 mov r0,r3
 571 0490 4FEAE071 	 asr r1,r0,#31
 572 0494 BB6F     	 ldr r3,[r7,#120]
 573 0496 1A46     	 mov r2,r3
 574 0498 4FEAE273 	 asr r3,r2,#31
 575 049c 02FB01F5 	 mul r5,r2,r1
 576 04a0 00FB03F4 	 mul r4,r0,r3
 577 04a4 2C44     	 add r4,r4,r5
 578 04a6 A0FB0223 	 umull r2,r3,r0,r2
 579 04aa E118     	 adds r1,r4,r3
 580 04ac 0B46     	 mov r3,r1
 581 04ae C7E91623 	 strd r2,[r7,#88]
 582 04b2 C7E91623 	 strd r2,[r7,#88]
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 583              	 .loc 2 354 0
 584 04b6 D7F8A430 	 ldr r3,[r7,#164]
 585 04ba 1846     	 mov r0,r3
 586 04bc 4FEAE071 	 asr r1,r0,#31
 587 04c0 7B6F     	 ldr r3,[r7,#116]
 588 04c2 1A46     	 mov r2,r3
 589 04c4 4FEAE273 	 asr r3,r2,#31
 590 04c8 02FB01F5 	 mul r5,r2,r1
 591 04cc 00FB03F4 	 mul r4,r0,r3
 592 04d0 2C44     	 add r4,r4,r5
 593 04d2 A0FB0201 	 umull r0,r1,r0,r2
 594 04d6 6318     	 adds r3,r4,r1
 595 04d8 1946     	 mov r1,r3
 596 04da D7E91623 	 ldrd r2,[r7,#88]
 597 04de 1218     	 adds r2,r2,r0
 598 04e0 43EB0103 	 adc r3,r3,r1
 599 04e4 C7E91623 	 strd r2,[r7,#88]
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 600              	 .loc 2 357 0
 601 04e8 D7F8A030 	 ldr r3,[r7,#160]
 602 04ec 1846     	 mov r0,r3
 603 04ee 4FEAE071 	 asr r1,r0,#31
 604 04f2 3B6F     	 ldr r3,[r7,#112]
 605 04f4 1A46     	 mov r2,r3
 606 04f6 4FEAE273 	 asr r3,r2,#31
 607 04fa 02FB01F5 	 mul r5,r2,r1
 608 04fe 00FB03F4 	 mul r4,r0,r3
 609 0502 2C44     	 add r4,r4,r5
 610 0504 A0FB0201 	 umull r0,r1,r0,r2
 611 0508 6318     	 adds r3,r4,r1
 612 050a 1946     	 mov r1,r3
 613 050c D7E91623 	 ldrd r2,[r7,#88]
 614 0510 1218     	 adds r2,r2,r0
 615 0512 43EB0103 	 adc r3,r3,r1
 616 0516 C7E91623 	 strd r2,[r7,#88]
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a1);
 617              	 .loc 2 360 0
 618 051a D7E92401 	 ldrd r0,[r7,#144]
 619 051e FA6E     	 ldr r2,[r7,#108]
 620 0520 FFF7FEFF 	 bl mult32x64
 621 0524 D7E91623 	 ldrd r2,[r7,#88]
 622 0528 1218     	 adds r2,r2,r0
 623 052a 43EB0103 	 adc r3,r3,r1
 624 052e C7E91623 	 strd r2,[r7,#88]
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a2);
 625              	 .loc 2 363 0
 626 0532 D7E92601 	 ldrd r0,[r7,#152]
 627 0536 BA6E     	 ldr r2,[r7,#104]
 628 0538 FFF7FEFF 	 bl mult32x64
 629 053c D7E91623 	 ldrd r2,[r7,#88]
 630 0540 1218     	 adds r2,r2,r0
 631 0542 43EB0103 	 adc r3,r3,r1
 632 0546 C7E91623 	 strd r2,[r7,#88]
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 633              	 .loc 2 366 0
 634 054a D7E91623 	 ldrd r2,[r7,#88]
 635 054e D7F88440 	 ldr r4,[r7,#132]
 636 0552 A4F12001 	 sub r1,r4,#32
 637 0556 C4F12000 	 rsb r0,r4,#32
 638 055a 03FA04FB 	 lsl fp,r3,r4
 639 055e 02FA01F1 	 lsl r1,r2,r1
 640 0562 4BEA010B 	 orr fp,fp,r1
 641 0566 22FA00F0 	 lsr r0,r2,r0
 642 056a 4BEA000B 	 orr fp,fp,r0
 643 056e 02FA04FA 	 lsl r10,r2,r4
 644 0572 C7E926AB 	 strd r10,[r7,#152]
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 645              	 .loc 2 369 0
 646 0576 BB6D     	 ldr r3,[r7,#88]
 647 0578 7B65     	 str r3,[r7,#84]
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 648              	 .loc 2 372 0
 649 057a D7E91623 	 ldrd r2,[r7,#88]
 650 057e 1B00     	 movs r3,r3
 651 0580 BB60     	 str r3,[r7,#8]
 652 0582 0023     	 movs r3,#0
 653 0584 FB60     	 str r3,[r7,#12]
 654 0586 BB68     	 ldr r3,[r7,#8]
 655 0588 3B65     	 str r3,[r7,#80]
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 656              	 .loc 2 375 0
 657 058a 7A6D     	 ldr r2,[r7,#84]
 658 058c FB6F     	 ldr r3,[r7,#124]
 659 058e 22FA03F1 	 lsr r1,r2,r3
 660 0592 D7F88020 	 ldr r2,[r7,#128]
 661 0596 3B6D     	 ldr r3,[r7,#80]
 662 0598 9340     	 lsls r3,r3,r2
 663 059a 0B43     	 orrs r3,r3,r1
 664 059c 3B65     	 str r3,[r7,#80]
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *(pOut + 3u) = acc_h;
 665              	 .loc 2 378 0
 666 059e D7F8B030 	 ldr r3,[r7,#176]
 667 05a2 03F10C02 	 add r2,r3,#12
 668 05a6 3B6D     	 ldr r3,[r7,#80]
 669 05a8 1360     	 str r3,[r2]
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as:  */
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1    */
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn     */
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1    */
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc    */
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 670              	 .loc 2 386 0
 671 05aa D7F8A430 	 ldr r3,[r7,#164]
 672 05ae C7F8A030 	 str r3,[r7,#160]
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 673              	 .loc 2 387 0
 674 05b2 7B6E     	 ldr r3,[r7,#100]
 675 05b4 C7F8A430 	 str r3,[r7,#164]
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* update output pointer */
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       pOut += 4u;
 676              	 .loc 2 390 0
 677 05b8 D7F8B030 	 ldr r3,[r7,#176]
 678 05bc 1033     	 adds r3,r3,#16
 679 05be C7F8B030 	 str r3,[r7,#176]
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement the loop counter */
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 680              	 .loc 2 393 0
 681 05c2 D7F88C30 	 ldr r3,[r7,#140]
 682 05c6 013B     	 subs r3,r3,#1
 683 05c8 C7F88C30 	 str r3,[r7,#140]
 684              	.L4:
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 685              	 .loc 2 238 0
 686 05cc D7F88C30 	 ldr r3,[r7,#140]
 687 05d0 002B     	 cmp r3,#0
 688 05d2 7FF481AD 	 bne .L5
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      ** No loop unrolling is used. */
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = (blockSize & 0x3u);
 689              	 .loc 2 398 0
 690 05d6 3B6C     	 ldr r3,[r7,#64]
 691 05d8 03F00303 	 and r3,r3,#3
 692 05dc C7F88C30 	 str r3,[r7,#140]
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while(sample > 0u)
 693              	 .loc 2 400 0
 694 05e0 A6E0     	 b .L6
 695              	.L7:
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 696              	 .loc 2 403 0
 697 05e2 D7F8B420 	 ldr r2,[r7,#180]
 698 05e6 131D     	 adds r3,r2,#4
 699 05e8 C7F8B430 	 str r3,[r7,#180]
 700 05ec 1368     	 ldr r3,[r2]
 701 05ee 7B66     	 str r3,[r7,#100]
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 702              	 .loc 2 408 0
 703 05f0 7B6E     	 ldr r3,[r7,#100]
 704 05f2 1846     	 mov r0,r3
 705 05f4 4FEAE071 	 asr r1,r0,#31
 706 05f8 BB6F     	 ldr r3,[r7,#120]
 707 05fa 1A46     	 mov r2,r3
 708 05fc 4FEAE273 	 asr r3,r2,#31
 709 0600 02FB01F5 	 mul r5,r2,r1
 710 0604 00FB03F4 	 mul r4,r0,r3
 711 0608 2C44     	 add r4,r4,r5
 712 060a A0FB0223 	 umull r2,r3,r0,r2
 713 060e E118     	 adds r1,r4,r3
 714 0610 0B46     	 mov r3,r1
 715 0612 C7E91623 	 strd r2,[r7,#88]
 716 0616 C7E91623 	 strd r2,[r7,#88]
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 717              	 .loc 2 410 0
 718 061a D7F8A430 	 ldr r3,[r7,#164]
 719 061e 1846     	 mov r0,r3
 720 0620 4FEAE071 	 asr r1,r0,#31
 721 0624 7B6F     	 ldr r3,[r7,#116]
 722 0626 1A46     	 mov r2,r3
 723 0628 4FEAE273 	 asr r3,r2,#31
 724 062c 02FB01F5 	 mul r5,r2,r1
 725 0630 00FB03F4 	 mul r4,r0,r3
 726 0634 2C44     	 add r4,r4,r5
 727 0636 A0FB0201 	 umull r0,r1,r0,r2
 728 063a 6318     	 adds r3,r4,r1
 729 063c 1946     	 mov r1,r3
 730 063e D7E91623 	 ldrd r2,[r7,#88]
 731 0642 1218     	 adds r2,r2,r0
 732 0644 43EB0103 	 adc r3,r3,r1
 733 0648 C7E91623 	 strd r2,[r7,#88]
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 734              	 .loc 2 412 0
 735 064c D7F8A030 	 ldr r3,[r7,#160]
 736 0650 1846     	 mov r0,r3
 737 0652 4FEAE071 	 asr r1,r0,#31
 738 0656 3B6F     	 ldr r3,[r7,#112]
 739 0658 1A46     	 mov r2,r3
 740 065a 4FEAE273 	 asr r3,r2,#31
 741 065e 02FB01F5 	 mul r5,r2,r1
 742 0662 00FB03F4 	 mul r4,r0,r3
 743 0666 2C44     	 add r4,r4,r5
 744 0668 A0FB0201 	 umull r0,r1,r0,r2
 745 066c 6318     	 adds r3,r4,r1
 746 066e 1946     	 mov r1,r3
 747 0670 D7E91623 	 ldrd r2,[r7,#88]
 748 0674 1218     	 adds r2,r2,r0
 749 0676 43EB0103 	 adc r3,r3,r1
 750 067a C7E91623 	 strd r2,[r7,#88]
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 751              	 .loc 2 414 0
 752 067e D7E92601 	 ldrd r0,[r7,#152]
 753 0682 FA6E     	 ldr r2,[r7,#108]
 754 0684 FFF7FEFF 	 bl mult32x64
 755 0688 D7E91623 	 ldrd r2,[r7,#88]
 756 068c 1218     	 adds r2,r2,r0
 757 068e 43EB0103 	 adc r3,r3,r1
 758 0692 C7E91623 	 strd r2,[r7,#88]
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 759              	 .loc 2 416 0
 760 0696 D7E92401 	 ldrd r0,[r7,#144]
 761 069a BA6E     	 ldr r2,[r7,#104]
 762 069c FFF7FEFF 	 bl mult32x64
 763 06a0 D7E91623 	 ldrd r2,[r7,#88]
 764 06a4 1218     	 adds r2,r2,r0
 765 06a6 43EB0103 	 adc r3,r3,r1
 766 06aa C7E91623 	 strd r2,[r7,#88]
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as:  */
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1    */
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn     */
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1    */
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc    */
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 767              	 .loc 2 424 0
 768 06ae D7F8A430 	 ldr r3,[r7,#164]
 769 06b2 C7F8A030 	 str r3,[r7,#160]
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 770              	 .loc 2 425 0
 771 06b6 7B6E     	 ldr r3,[r7,#100]
 772 06b8 C7F8A430 	 str r3,[r7,#164]
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = Yn1;
 773              	 .loc 2 426 0
 774 06bc D7E92623 	 ldrd r2,[r7,#152]
 775 06c0 C7E92423 	 strd r2,[r7,#144]
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 776              	 .loc 2 428 0
 777 06c4 D7E91623 	 ldrd r2,[r7,#88]
 778 06c8 D7F88440 	 ldr r4,[r7,#132]
 779 06cc A4F12001 	 sub r1,r4,#32
 780 06d0 C4F12000 	 rsb r0,r4,#32
 781 06d4 03FA04F9 	 lsl r9,r3,r4
 782 06d8 02FA01F1 	 lsl r1,r2,r1
 783 06dc 49EA0109 	 orr r9,r9,r1
 784 06e0 22FA00F0 	 lsr r0,r2,r0
 785 06e4 49EA0009 	 orr r9,r9,r0
 786 06e8 02FA04F8 	 lsl r8,r2,r4
 787 06ec C7E92689 	 strd r8,[r7,#152]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 788              	 .loc 2 431 0
 789 06f0 BB6D     	 ldr r3,[r7,#88]
 790 06f2 7B65     	 str r3,[r7,#84]
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 791              	 .loc 2 434 0
 792 06f4 D7E91623 	 ldrd r2,[r7,#88]
 793 06f8 1B00     	 movs r3,r3
 794 06fa 3B60     	 str r3,[r7]
 795 06fc 0023     	 movs r3,#0
 796 06fe 7B60     	 str r3,[r7,#4]
 797 0700 3B68     	 ldr r3,[r7]
 798 0702 3B65     	 str r3,[r7,#80]
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 799              	 .loc 2 437 0
 800 0704 7A6D     	 ldr r2,[r7,#84]
 801 0706 FB6F     	 ldr r3,[r7,#124]
 802 0708 22FA03F1 	 lsr r1,r2,r3
 803 070c D7F88020 	 ldr r2,[r7,#128]
 804 0710 3B6D     	 ldr r3,[r7,#80]
 805 0712 9340     	 lsls r3,r3,r2
 806 0714 0B43     	 orrs r3,r3,r1
 807 0716 3B65     	 str r3,[r7,#80]
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut++ = acc_h;
 808              	 .loc 2 440 0
 809 0718 D7F8B020 	 ldr r2,[r7,#176]
 810 071c 131D     	 adds r3,r2,#4
 811 071e C7F8B030 	 str r3,[r7,#176]
 812 0722 3B6D     	 ldr r3,[r7,#80]
 813 0724 1360     	 str r3,[r2]
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       //Yn1 = acc << shift; 
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** //      *pOut++ = (q31_t) (acc >> (32 - shift)); 
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement the loop counter */
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 814              	 .loc 2 447 0
 815 0726 D7F88C30 	 ldr r3,[r7,#140]
 816 072a 013B     	 subs r3,r3,#1
 817 072c C7F88C30 	 str r3,[r7,#140]
 818              	.L6:
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 819              	 .loc 2 400 0
 820 0730 D7F88C30 	 ldr r3,[r7,#140]
 821 0734 002B     	 cmp r3,#0
 822 0736 7FF454AF 	 bne .L7
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  The first stage output is given as input to the second stage. */
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pIn = pDst;
 823              	 .loc 2 451 0
 824 073a 7B6C     	 ldr r3,[r7,#68]
 825 073c C7F8B430 	 str r3,[r7,#180]
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reset to destination buffer working pointer */
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pOut = pDst;
 826              	 .loc 2 454 0
 827 0740 7B6C     	 ldr r3,[r7,#68]
 828 0742 C7F8B030 	 str r3,[r7,#176]
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  Store the updated state variables back into the pState array */
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  Store the updated state variables back into the pState array */
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn1;
 829              	 .loc 2 458 0
 830 0746 D7F8AC10 	 ldr r1,[r7,#172]
 831 074a 01F10803 	 add r3,r1,#8
 832 074e C7F8AC30 	 str r3,[r7,#172]
 833 0752 D7F8A430 	 ldr r3,[r7,#164]
 834 0756 1A46     	 mov r2,r3
 835 0758 4FEAE273 	 asr r3,r2,#31
 836 075c C1E90023 	 strd r2,[r1]
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn2;
 837              	 .loc 2 459 0
 838 0760 D7F8AC10 	 ldr r1,[r7,#172]
 839 0764 01F10803 	 add r3,r1,#8
 840 0768 C7F8AC30 	 str r3,[r7,#172]
 841 076c D7F8A030 	 ldr r3,[r7,#160]
 842 0770 1A46     	 mov r2,r3
 843 0772 4FEAE273 	 asr r3,r2,#31
 844 0776 C1E90023 	 strd r2,[r1]
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn1;
 845              	 .loc 2 460 0
 846 077a D7F8AC10 	 ldr r1,[r7,#172]
 847 077e 01F10803 	 add r3,r1,#8
 848 0782 C7F8AC30 	 str r3,[r7,#172]
 849 0786 D7E92623 	 ldrd r2,[r7,#152]
 850 078a C1E90023 	 strd r2,[r1]
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn2;
 851              	 .loc 2 461 0
 852 078e D7F8AC10 	 ldr r1,[r7,#172]
 853 0792 01F10803 	 add r3,r1,#8
 854 0796 C7F8AC30 	 str r3,[r7,#172]
 855 079a D7E92423 	 ldrd r2,[r7,#144]
 856 079e C1E90023 	 strd r2,[r1]
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   } while(--stage);
 857              	 .loc 2 463 0
 858 07a2 D7F88830 	 ldr r3,[r7,#136]
 859 07a6 013B     	 subs r3,r3,#1
 860 07a8 C7F88830 	 str r3,[r7,#136]
 861 07ac D7F88830 	 ldr r3,[r7,#136]
 862 07b0 002B     	 cmp r3,#0
 863 07b2 7FF44EAC 	 bne .L8
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #else
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   /* Run the below code for Cortex-M0 */
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   do
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   {
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the coefficients */
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b0 = *pCoeffs++;
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b1 = *pCoeffs++;
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     b2 = *pCoeffs++;
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a1 = *pCoeffs++;
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     a2 = *pCoeffs++;
 477:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 478:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reading the state values */
 479:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn1 = pState[0];
 480:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Xn2 = pState[1];
 481:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn1 = pState[2];
 482:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     Yn2 = pState[3];
 483:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 484:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* The variable acc hold output value that is being computed and        
 485:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * stored in the destination buffer            
 486:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      * acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]            
 487:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****      */
 488:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 489:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     sample = blockSize;
 490:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 491:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     while(sample > 0u)
 492:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     {
 493:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Read the input */
 494:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn = *pIn++;
 495:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 496:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 497:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc =  b0 * x[n] */
 498:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc = (q63_t) Xn *b0;
 499:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b1 * x[n-1] */
 500:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn1 *b1;
 501:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  b[2] * x[n-2] */
 502:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += (q63_t) Xn2 *b2;
 503:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a1 * y[n-1] */
 504:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn1, a1);
 505:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* acc +=  a2 * y[n-2] */
 506:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc += mult32x64(Yn2, a2);
 507:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 508:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Every time after the output is computed state should be updated. */
 509:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The states should be updated as:  */
 510:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn2 = Xn1    */
 511:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Xn1 = Xn     */
 512:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn2 = Yn1    */
 513:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Yn1 = acc    */
 514:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn2 = Xn1;
 515:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Xn1 = Xn;
 516:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn2 = Yn1;
 517:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 518:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* The result is converted to 1.63, Yn1 variable is reused  */
 519:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       Yn1 = acc << shift;
 520:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 521:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc lower part of acc */
 522:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_l = acc & 0xffffffff;
 523:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 524:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Calc upper part of acc */
 525:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 526:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 527:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 528:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       acc_h = (uint32_t) acc_l >> lShift | acc_h << uShift;
 529:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 530:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 531:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       *pOut++ = acc_h;
 532:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 533:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       //Yn1 = acc << shift; 
 534:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 535:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* Store the output in the destination buffer in 1.31 format. */
 536:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       //*pOut++ = (q31_t) (acc >> (32 - shift)); 
 537:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 538:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       /* decrement the loop counter */
 539:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****       sample--;
 540:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     }
 541:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 542:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  The first stage output is given as input to the second stage. */
 543:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pIn = pDst;
 544:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 545:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /* Reset to destination buffer working pointer */
 546:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     pOut = pDst;
 547:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 548:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     /*  Store the updated state variables back into the pState array */
 549:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn1;
 550:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = (q63_t) Xn2;
 551:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn1;
 552:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****     *pState++ = Yn2;
 553:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 554:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c ****   } while(--stage);
 555:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** 
 556:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** #endif /*    #ifndef ARM_MATH_CM0_FAMILY     */
 557:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_32x64_q31.c **** }
 864              	 .loc 2 557 0
 865 07b6 B837     	 adds r7,r7,#184
 866              	.LCFI8:
 867              	 .cfi_def_cfa_offset 32
 868 07b8 BD46     	 mov sp,r7
 869              	.LCFI9:
 870              	 .cfi_def_cfa_register 13
 871              	 
 872 07ba BDE8B08F 	 pop {r4,r5,r7,r8,r9,r10,fp,pc}
 873              	 .cfi_endproc
 874              	.LFE139:
 876 07be 00BF     	 .text
 877              	.Letext0:
 878              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 879              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_biquad_cascade_df1_32x64_q31.c
    {standard input}:19     .text.mult32x64:00000000 $t
    {standard input}:23     .text.mult32x64:00000000 mult32x64
    {standard input}:96     .text.arm_biquad_cas_df1_32x64_q31:00000000 $t
    {standard input}:101    .text.arm_biquad_cas_df1_32x64_q31:00000000 arm_biquad_cas_df1_32x64_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
