   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_biquad_cascade_df1_fast_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_biquad_cascade_df1_fast_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_biquad_cascade_df1_fast_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_biquad_cascade_df1_fast_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * Title:	    arm_biquad_cascade_df1_fast_q31.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * Description:	Processing function for the    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *				Q31 Fast Biquad cascade DirectFormI(DF1) filter.    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *    
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * Target Processor: Cortex-M4/Cortex-M3
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *  
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * Redistribution and use in source and binary forms, with or without 
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * modification, are permitted provided that the following conditions
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * are met:
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *   - Redistributions of source code must retain the above copyright
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *     notice, this list of conditions and the following disclaimer.
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *     notice, this list of conditions and the following disclaimer in
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *     the documentation and/or other materials provided with the 
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *     distribution.
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *     may be used to endorse or promote products derived from this
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *     software without specific prior written permission.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** *
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * POSSIBILITY OF SUCH DAMAGE. 
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** * -------------------------------------------------------------------- */
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** /**    
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @ingroup groupFilters    
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  */
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** /**    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @addtogroup BiquadCascadeDF1    
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @{    
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  */
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** /**    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @details    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  *    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @param[in]  *S        points to an instance of the Q31 Biquad cascade structure.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @param[in]  *pSrc     points to the block of input data.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @param[out] *pDst     points to the block of output data.    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @param[in]  blockSize number of samples to process per call.    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * @return 	   none.    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  *    
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * <b>Scaling and Overflow Behavior:</b>    
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * \par    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * This function is optimized for speed at the expense of fixed-point precision and overflow protec
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * The result of each 1.31 x 1.31 multiplication is truncated to 2.30 format.    
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * These intermediate results are added to a 2.30 accumulator.    
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * Finally, the accumulator is saturated and converted to a 1.31 result.    
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * The fast version has the same overflow behavior as the standard version and provides less precis
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by two bits and lie 
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * arm_biquad_cascade_df1_init_q31() to initialize filter structure.    
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  *    
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * \par    
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * Refer to the function <code>arm_biquad_cascade_df1_q31()</code> for a slower implementation of t
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  * Use the function <code>arm_biquad_cascade_df1_init_q31()</code> to initialize the filter structu
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****  */
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** void arm_biquad_cascade_df1_fast_q31(
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   const arm_biquad_casd_df1_inst_q31 * S,
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t * pSrc,
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t * pDst,
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   uint32_t blockSize)
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** {
  27              	 .loc 1 82 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 EDB0     	 sub sp,sp,#436
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 464
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 C7F86401 	 str r0,[r7,#356]
  49 000c C7F86011 	 str r1,[r7,#352]
  50 0010 C7F85C21 	 str r2,[r7,#348]
  51 0014 C7F85831 	 str r3,[r7,#344]
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t acc = 0;                                 /*  accumulator                   */
  52              	 .loc 1 83 0
  53 0018 0023     	 movs r3,#0
  54 001a C7F88431 	 str r3,[r7,#388]
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t Xn1, Xn2, Yn1, Yn2;                      /*  Filter state variables        */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t b0, b1, b2, a1, a2;                      /*  Filter coefficients           */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t *pIn = pSrc;                             /*  input pointer initialization  */
  55              	 .loc 1 86 0
  56 001e D7F86031 	 ldr r3,[r7,#352]
  57 0022 C7F89C31 	 str r3,[r7,#412]
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t *pOut = pDst;                            /*  output pointer initialization */
  58              	 .loc 1 87 0
  59 0026 D7F85C31 	 ldr r3,[r7,#348]
  60 002a C7F89831 	 str r3,[r7,#408]
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t *pState = S->pState;                     /*  pState pointer initialization */
  61              	 .loc 1 88 0
  62 002e D7F86431 	 ldr r3,[r7,#356]
  63 0032 5B68     	 ldr r3,[r3,#4]
  64 0034 C7F89431 	 str r3,[r7,#404]
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /*  coeff pointer initialization  */
  65              	 .loc 1 89 0
  66 0038 D7F86431 	 ldr r3,[r7,#356]
  67 003c 9B68     	 ldr r3,[r3,#8]
  68 003e C7F89031 	 str r3,[r7,#400]
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   q31_t Xn;                                      /*  temporary input               */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   int32_t shift = (int32_t) S->postShift + 1;    /*  Shift to be applied to the output */
  69              	 .loc 1 91 0
  70 0042 D7F86431 	 ldr r3,[r7,#356]
  71 0046 1B7B     	 ldrb r3,[r3,#12]
  72 0048 0133     	 adds r3,r3,#1
  73 004a C7F88031 	 str r3,[r7,#384]
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   uint32_t sample, stage = S->numStages;         /*  loop counters                     */
  74              	 .loc 1 92 0
  75 004e D7F86431 	 ldr r3,[r7,#356]
  76 0052 1B68     	 ldr r3,[r3]
  77 0054 C7F88831 	 str r3,[r7,#392]
  78              	.L6:
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   do
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   {
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /* Reading the coefficients */
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     b0 = *pCoeffs++;
  79              	 .loc 1 98 0
  80 0058 D7F89021 	 ldr r2,[r7,#400]
  81 005c 131D     	 adds r3,r2,#4
  82 005e C7F89031 	 str r3,[r7,#400]
  83 0062 1368     	 ldr r3,[r2]
  84 0064 C7F87C31 	 str r3,[r7,#380]
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     b1 = *pCoeffs++;
  85              	 .loc 1 99 0
  86 0068 D7F89021 	 ldr r2,[r7,#400]
  87 006c 131D     	 adds r3,r2,#4
  88 006e C7F89031 	 str r3,[r7,#400]
  89 0072 1368     	 ldr r3,[r2]
  90 0074 C7F87831 	 str r3,[r7,#376]
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     b2 = *pCoeffs++;
  91              	 .loc 1 100 0
  92 0078 D7F89021 	 ldr r2,[r7,#400]
  93 007c 131D     	 adds r3,r2,#4
  94 007e C7F89031 	 str r3,[r7,#400]
  95 0082 1368     	 ldr r3,[r2]
  96 0084 C7F87431 	 str r3,[r7,#372]
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     a1 = *pCoeffs++;
  97              	 .loc 1 101 0
  98 0088 D7F89021 	 ldr r2,[r7,#400]
  99 008c 131D     	 adds r3,r2,#4
 100 008e C7F89031 	 str r3,[r7,#400]
 101 0092 1368     	 ldr r3,[r2]
 102 0094 C7F87031 	 str r3,[r7,#368]
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     a2 = *pCoeffs++;
 103              	 .loc 1 102 0
 104 0098 D7F89021 	 ldr r2,[r7,#400]
 105 009c 131D     	 adds r3,r2,#4
 106 009e C7F89031 	 str r3,[r7,#400]
 107 00a2 1368     	 ldr r3,[r2]
 108 00a4 C7F86C31 	 str r3,[r7,#364]
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /* Reading the state values */
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     Xn1 = pState[0];
 109              	 .loc 1 105 0
 110 00a8 D7F89431 	 ldr r3,[r7,#404]
 111 00ac 1B68     	 ldr r3,[r3]
 112 00ae C7F8AC31 	 str r3,[r7,#428]
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     Xn2 = pState[1];
 113              	 .loc 1 106 0
 114 00b2 D7F89431 	 ldr r3,[r7,#404]
 115 00b6 5B68     	 ldr r3,[r3,#4]
 116 00b8 C7F8A831 	 str r3,[r7,#424]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     Yn1 = pState[2];
 117              	 .loc 1 107 0
 118 00bc D7F89431 	 ldr r3,[r7,#404]
 119 00c0 9B68     	 ldr r3,[r3,#8]
 120 00c2 C7F8A431 	 str r3,[r7,#420]
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     Yn2 = pState[3];
 121              	 .loc 1 108 0
 122 00c6 D7F89431 	 ldr r3,[r7,#404]
 123 00ca DB68     	 ldr r3,[r3,#12]
 124 00cc C7F8A031 	 str r3,[r7,#416]
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /* Apply loop unrolling and compute 4 output values simultaneously. */
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /*      The variables acc ... acc3 hold output values that are being computed:       
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****      *       
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]       
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****      */
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     sample = blockSize >> 2u;
 125              	 .loc 1 116 0
 126 00d0 D7F85831 	 ldr r3,[r7,#344]
 127 00d4 9B08     	 lsrs r3,r3,#2
 128 00d6 C7F88C31 	 str r3,[r7,#396]
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.       
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     while(sample > 0u)
 129              	 .loc 1 120 0
 130 00da E7E3     	 b .L2
 131              	.L3:
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     {
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Read the input */
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn = *pIn;
 132              	 .loc 1 123 0
 133 00dc D7F89C31 	 ldr r3,[r7,#412]
 134 00e0 1B68     	 ldr r3,[r3]
 135 00e2 C7F86831 	 str r3,[r7,#360]
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] */
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) (((q63_t) b1 * Xn1) >> 32);
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       mult_32x32_keep32_R(acc, b1, Xn1);
 136              	 .loc 1 128 0
 137 00e6 D7F87831 	 ldr r3,[r7,#376]
 138 00ea 1846     	 mov r0,r3
 139 00ec 4FEAE071 	 asr r1,r0,#31
 140 00f0 D7F8AC31 	 ldr r3,[r7,#428]
 141 00f4 1A46     	 mov r2,r3
 142 00f6 4FEAE273 	 asr r3,r2,#31
 143 00fa 02FB01F5 	 mul r5,r2,r1
 144 00fe 00FB03F4 	 mul r4,r0,r3
 145 0102 2C44     	 add r4,r4,r5
 146 0104 A0FB0223 	 umull r2,r3,r0,r2
 147 0108 E118     	 adds r1,r4,r3
 148 010a 0B46     	 mov r3,r1
 149 010c 12F10042 	 adds r2,r2,#-2147483648
 150 0110 43F10003 	 adc r3,r3,#0
 151 0114 1900     	 movs r1,r3
 152 0116 C7F85011 	 str r1,[r7,#336]
 153 011a DB17     	 asrs r3,r3,#31
 154 011c C7F85431 	 str r3,[r7,#340]
 155 0120 D7F85031 	 ldr r3,[r7,#336]
 156 0124 C7F88431 	 str r3,[r7,#388]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b1 * x[n-1] */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b0 * (Xn))) >> 32);   
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b0, Xn);
 157              	 .loc 1 131 0
 158 0128 D7F88431 	 ldr r3,[r7,#388]
 159 012c 1A46     	 mov r2,r3
 160 012e 4FEAE273 	 asr r3,r2,#31
 161 0132 1300     	 movs r3,r2
 162 0134 C7F84C31 	 str r3,[r7,#332]
 163 0138 0023     	 movs r3,#0
 164 013a C7F84831 	 str r3,[r7,#328]
 165 013e D7F87C31 	 ldr r3,[r7,#380]
 166 0142 1846     	 mov r0,r3
 167 0144 4FEAE071 	 asr r1,r0,#31
 168 0148 D7F86831 	 ldr r3,[r7,#360]
 169 014c 1A46     	 mov r2,r3
 170 014e 4FEAE273 	 asr r3,r2,#31
 171 0152 02FB01F5 	 mul r5,r2,r1
 172 0156 00FB03F4 	 mul r4,r0,r3
 173 015a 2C44     	 add r4,r4,r5
 174 015c A0FB0201 	 umull r0,r1,r0,r2
 175 0160 6318     	 adds r3,r4,r1
 176 0162 1946     	 mov r1,r3
 177 0164 07F5A473 	 add r3,r7,#328
 178 0168 D3E90023 	 ldrd r2,[r3]
 179 016c 1218     	 adds r2,r2,r0
 180 016e 43EB0103 	 adc r3,r3,r1
 181 0172 12F10042 	 adds r2,r2,#-2147483648
 182 0176 43F10003 	 adc r3,r3,#0
 183 017a 1900     	 movs r1,r3
 184 017c C7F84011 	 str r1,[r7,#320]
 185 0180 DB17     	 asrs r3,r3,#31
 186 0182 C7F84431 	 str r3,[r7,#324]
 187 0186 D7F84031 	 ldr r3,[r7,#320]
 188 018a C7F88431 	 str r3,[r7,#388]
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b[2] * x[n-2] */
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b2 * (Xn2))) >> 32);
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b2, Xn2);
 189              	 .loc 1 134 0
 190 018e D7F88431 	 ldr r3,[r7,#388]
 191 0192 1A46     	 mov r2,r3
 192 0194 4FEAE273 	 asr r3,r2,#31
 193 0198 1300     	 movs r3,r2
 194 019a C7F83C31 	 str r3,[r7,#316]
 195 019e 0023     	 movs r3,#0
 196 01a0 C7F83831 	 str r3,[r7,#312]
 197 01a4 D7F87431 	 ldr r3,[r7,#372]
 198 01a8 1846     	 mov r0,r3
 199 01aa 4FEAE071 	 asr r1,r0,#31
 200 01ae D7F8A831 	 ldr r3,[r7,#424]
 201 01b2 1A46     	 mov r2,r3
 202 01b4 4FEAE273 	 asr r3,r2,#31
 203 01b8 02FB01F5 	 mul r5,r2,r1
 204 01bc 00FB03F4 	 mul r4,r0,r3
 205 01c0 2C44     	 add r4,r4,r5
 206 01c2 A0FB0201 	 umull r0,r1,r0,r2
 207 01c6 6318     	 adds r3,r4,r1
 208 01c8 1946     	 mov r1,r3
 209 01ca 07F59C73 	 add r3,r7,#312
 210 01ce D3E90023 	 ldrd r2,[r3]
 211 01d2 1218     	 adds r2,r2,r0
 212 01d4 43EB0103 	 adc r3,r3,r1
 213 01d8 12F10042 	 adds r2,r2,#-2147483648
 214 01dc 43F10003 	 adc r3,r3,#0
 215 01e0 1900     	 movs r1,r3
 216 01e2 C7F83011 	 str r1,[r7,#304]
 217 01e6 DB17     	 asrs r3,r3,#31
 218 01e8 C7F83431 	 str r3,[r7,#308]
 219 01ec D7F83031 	 ldr r3,[r7,#304]
 220 01f0 C7F88431 	 str r3,[r7,#388]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a1 * y[n-1] */
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a1 * (Yn1))) >> 32);
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a1, Yn1);
 221              	 .loc 1 137 0
 222 01f4 D7F88431 	 ldr r3,[r7,#388]
 223 01f8 1A46     	 mov r2,r3
 224 01fa 4FEAE273 	 asr r3,r2,#31
 225 01fe 1300     	 movs r3,r2
 226 0200 C7F82C31 	 str r3,[r7,#300]
 227 0204 0023     	 movs r3,#0
 228 0206 C7F82831 	 str r3,[r7,#296]
 229 020a D7F87031 	 ldr r3,[r7,#368]
 230 020e 1846     	 mov r0,r3
 231 0210 4FEAE071 	 asr r1,r0,#31
 232 0214 D7F8A431 	 ldr r3,[r7,#420]
 233 0218 1A46     	 mov r2,r3
 234 021a 4FEAE273 	 asr r3,r2,#31
 235 021e 02FB01F5 	 mul r5,r2,r1
 236 0222 00FB03F4 	 mul r4,r0,r3
 237 0226 2C44     	 add r4,r4,r5
 238 0228 A0FB0201 	 umull r0,r1,r0,r2
 239 022c 6318     	 adds r3,r4,r1
 240 022e 1946     	 mov r1,r3
 241 0230 07F59473 	 add r3,r7,#296
 242 0234 D3E90023 	 ldrd r2,[r3]
 243 0238 1218     	 adds r2,r2,r0
 244 023a 43EB0103 	 adc r3,r3,r1
 245 023e 12F10042 	 adds r2,r2,#-2147483648
 246 0242 43F10003 	 adc r3,r3,#0
 247 0246 1900     	 movs r1,r3
 248 0248 C7F82011 	 str r1,[r7,#288]
 249 024c DB17     	 asrs r3,r3,#31
 250 024e C7F82431 	 str r3,[r7,#292]
 251 0252 D7F82031 	 ldr r3,[r7,#288]
 252 0256 C7F88431 	 str r3,[r7,#388]
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a2 * y[n-2] */
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a2 * (Yn2))) >> 32);
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a2, Yn2);
 253              	 .loc 1 140 0
 254 025a D7F88431 	 ldr r3,[r7,#388]
 255 025e 1A46     	 mov r2,r3
 256 0260 4FEAE273 	 asr r3,r2,#31
 257 0264 1300     	 movs r3,r2
 258 0266 C7F81C31 	 str r3,[r7,#284]
 259 026a 0023     	 movs r3,#0
 260 026c C7F81831 	 str r3,[r7,#280]
 261 0270 D7F86C31 	 ldr r3,[r7,#364]
 262 0274 1846     	 mov r0,r3
 263 0276 4FEAE071 	 asr r1,r0,#31
 264 027a D7F8A031 	 ldr r3,[r7,#416]
 265 027e 1A46     	 mov r2,r3
 266 0280 4FEAE273 	 asr r3,r2,#31
 267 0284 02FB01F5 	 mul r5,r2,r1
 268 0288 00FB03F4 	 mul r4,r0,r3
 269 028c 2C44     	 add r4,r4,r5
 270 028e A0FB0201 	 umull r0,r1,r0,r2
 271 0292 6318     	 adds r3,r4,r1
 272 0294 1946     	 mov r1,r3
 273 0296 07F58C73 	 add r3,r7,#280
 274 029a D3E90023 	 ldrd r2,[r3]
 275 029e 1218     	 adds r2,r2,r0
 276 02a0 43EB0103 	 adc r3,r3,r1
 277 02a4 12F10042 	 adds r2,r2,#-2147483648
 278 02a8 43F10003 	 adc r3,r3,#0
 279 02ac 1900     	 movs r1,r3
 280 02ae C7F81011 	 str r1,[r7,#272]
 281 02b2 DB17     	 asrs r3,r3,#31
 282 02b4 C7F81431 	 str r3,[r7,#276]
 283 02b8 D7F81031 	 ldr r3,[r7,#272]
 284 02bc C7F88431 	 str r3,[r7,#388]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* The result is converted to 1.31 , Yn2 variable is reused */
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Yn2 = acc << shift;
 285              	 .loc 1 143 0
 286 02c0 D7F88421 	 ldr r2,[r7,#388]
 287 02c4 D7F88031 	 ldr r3,[r7,#384]
 288 02c8 02FA03F3 	 lsl r3,r2,r3
 289 02cc C7F8A031 	 str r3,[r7,#416]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Read the second input */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn2 = *(pIn + 1u);
 290              	 .loc 1 146 0
 291 02d0 D7F89C31 	 ldr r3,[r7,#412]
 292 02d4 5B68     	 ldr r3,[r3,#4]
 293 02d6 C7F8A831 	 str r3,[r7,#424]
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Store the output in the destination buffer. */
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       *pOut = Yn2;
 294              	 .loc 1 149 0
 295 02da D7F89821 	 ldr r2,[r7,#408]
 296 02de D7F8A031 	 ldr r3,[r7,#416]
 297 02e2 1360     	 str r3,[r2]
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] */
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) (((q63_t) b0 * (Xn2)) >> 32);
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       mult_32x32_keep32_R(acc, b0, Xn2);
 298              	 .loc 1 154 0
 299 02e4 D7F87C31 	 ldr r3,[r7,#380]
 300 02e8 1846     	 mov r0,r3
 301 02ea 4FEAE071 	 asr r1,r0,#31
 302 02ee D7F8A831 	 ldr r3,[r7,#424]
 303 02f2 1A46     	 mov r2,r3
 304 02f4 4FEAE273 	 asr r3,r2,#31
 305 02f8 02FB01F5 	 mul r5,r2,r1
 306 02fc 00FB03F4 	 mul r4,r0,r3
 307 0300 2C44     	 add r4,r4,r5
 308 0302 A0FB0223 	 umull r2,r3,r0,r2
 309 0306 E118     	 adds r1,r4,r3
 310 0308 0B46     	 mov r3,r1
 311 030a 12F10042 	 adds r2,r2,#-2147483648
 312 030e 43F10003 	 adc r3,r3,#0
 313 0312 1900     	 movs r1,r3
 314 0314 C7F80811 	 str r1,[r7,#264]
 315 0318 DB17     	 asrs r3,r3,#31
 316 031a C7F80C31 	 str r3,[r7,#268]
 317 031e D7F80831 	 ldr r3,[r7,#264]
 318 0322 C7F88431 	 str r3,[r7,#388]
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b1 * x[n-1] */
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b1 * (Xn))) >> 32);
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b1, Xn);
 319              	 .loc 1 157 0
 320 0326 D7F88431 	 ldr r3,[r7,#388]
 321 032a 1A46     	 mov r2,r3
 322 032c 4FEAE273 	 asr r3,r2,#31
 323 0330 1300     	 movs r3,r2
 324 0332 C7F80431 	 str r3,[r7,#260]
 325 0336 0023     	 movs r3,#0
 326 0338 C7F80031 	 str r3,[r7,#256]
 327 033c D7F87831 	 ldr r3,[r7,#376]
 328 0340 1846     	 mov r0,r3
 329 0342 4FEAE071 	 asr r1,r0,#31
 330 0346 D7F86831 	 ldr r3,[r7,#360]
 331 034a 1A46     	 mov r2,r3
 332 034c 4FEAE273 	 asr r3,r2,#31
 333 0350 02FB01F5 	 mul r5,r2,r1
 334 0354 00FB03F4 	 mul r4,r0,r3
 335 0358 2C44     	 add r4,r4,r5
 336 035a A0FB0201 	 umull r0,r1,r0,r2
 337 035e 6318     	 adds r3,r4,r1
 338 0360 1946     	 mov r1,r3
 339 0362 07F58073 	 add r3,r7,#256
 340 0366 D3E90023 	 ldrd r2,[r3]
 341 036a 1218     	 adds r2,r2,r0
 342 036c 43EB0103 	 adc r3,r3,r1
 343 0370 12F10042 	 adds r2,r2,#-2147483648
 344 0374 43F10003 	 adc r3,r3,#0
 345 0378 1900     	 movs r1,r3
 346 037a C7F8F810 	 str r1,[r7,#248]
 347 037e DB17     	 asrs r3,r3,#31
 348 0380 C7F8FC30 	 str r3,[r7,#252]
 349 0384 D7F8F830 	 ldr r3,[r7,#248]
 350 0388 C7F88431 	 str r3,[r7,#388]
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b[2] * x[n-2] */
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b2 * (Xn1))) >> 32);
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b2, Xn1);
 351              	 .loc 1 160 0
 352 038c D7F88431 	 ldr r3,[r7,#388]
 353 0390 1A46     	 mov r2,r3
 354 0392 4FEAE273 	 asr r3,r2,#31
 355 0396 1300     	 movs r3,r2
 356 0398 C7F8F430 	 str r3,[r7,#244]
 357 039c 0023     	 movs r3,#0
 358 039e C7F8F030 	 str r3,[r7,#240]
 359 03a2 D7F87431 	 ldr r3,[r7,#372]
 360 03a6 1846     	 mov r0,r3
 361 03a8 4FEAE071 	 asr r1,r0,#31
 362 03ac D7F8AC31 	 ldr r3,[r7,#428]
 363 03b0 1A46     	 mov r2,r3
 364 03b2 4FEAE273 	 asr r3,r2,#31
 365 03b6 02FB01F5 	 mul r5,r2,r1
 366 03ba 00FB03F4 	 mul r4,r0,r3
 367 03be 2C44     	 add r4,r4,r5
 368 03c0 A0FB0201 	 umull r0,r1,r0,r2
 369 03c4 6318     	 adds r3,r4,r1
 370 03c6 1946     	 mov r1,r3
 371 03c8 D7E93C23 	 ldrd r2,[r7,#240]
 372 03cc 1218     	 adds r2,r2,r0
 373 03ce 43EB0103 	 adc r3,r3,r1
 374 03d2 12F10042 	 adds r2,r2,#-2147483648
 375 03d6 43F10003 	 adc r3,r3,#0
 376 03da 1900     	 movs r1,r3
 377 03dc C7F8E810 	 str r1,[r7,#232]
 378 03e0 DB17     	 asrs r3,r3,#31
 379 03e2 C7F8EC30 	 str r3,[r7,#236]
 380 03e6 D7F8E830 	 ldr r3,[r7,#232]
 381 03ea C7F88431 	 str r3,[r7,#388]
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a1 * y[n-1] */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a1 * (Yn2))) >> 32);
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a1, Yn2);
 382              	 .loc 1 163 0
 383 03ee D7F88431 	 ldr r3,[r7,#388]
 384 03f2 1A46     	 mov r2,r3
 385 03f4 4FEAE273 	 asr r3,r2,#31
 386 03f8 1300     	 movs r3,r2
 387 03fa C7F8E430 	 str r3,[r7,#228]
 388 03fe 0023     	 movs r3,#0
 389 0400 C7F8E030 	 str r3,[r7,#224]
 390 0404 D7F87031 	 ldr r3,[r7,#368]
 391 0408 1846     	 mov r0,r3
 392 040a 4FEAE071 	 asr r1,r0,#31
 393 040e D7F8A031 	 ldr r3,[r7,#416]
 394 0412 1A46     	 mov r2,r3
 395 0414 4FEAE273 	 asr r3,r2,#31
 396 0418 02FB01F5 	 mul r5,r2,r1
 397 041c 00FB03F4 	 mul r4,r0,r3
 398 0420 2C44     	 add r4,r4,r5
 399 0422 A0FB0201 	 umull r0,r1,r0,r2
 400 0426 6318     	 adds r3,r4,r1
 401 0428 1946     	 mov r1,r3
 402 042a D7E93823 	 ldrd r2,[r7,#224]
 403 042e 1218     	 adds r2,r2,r0
 404 0430 43EB0103 	 adc r3,r3,r1
 405 0434 12F10042 	 adds r2,r2,#-2147483648
 406 0438 43F10003 	 adc r3,r3,#0
 407 043c 1900     	 movs r1,r3
 408 043e C7F8D810 	 str r1,[r7,#216]
 409 0442 DB17     	 asrs r3,r3,#31
 410 0444 C7F8DC30 	 str r3,[r7,#220]
 411 0448 D7F8D830 	 ldr r3,[r7,#216]
 412 044c C7F88431 	 str r3,[r7,#388]
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a2 * y[n-2] */
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a2 * (Yn1))) >> 32);
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a2, Yn1);
 413              	 .loc 1 166 0
 414 0450 D7F88431 	 ldr r3,[r7,#388]
 415 0454 1A46     	 mov r2,r3
 416 0456 4FEAE273 	 asr r3,r2,#31
 417 045a 1300     	 movs r3,r2
 418 045c C7F8D430 	 str r3,[r7,#212]
 419 0460 0023     	 movs r3,#0
 420 0462 C7F8D030 	 str r3,[r7,#208]
 421 0466 D7F86C31 	 ldr r3,[r7,#364]
 422 046a 1846     	 mov r0,r3
 423 046c 4FEAE071 	 asr r1,r0,#31
 424 0470 D7F8A431 	 ldr r3,[r7,#420]
 425 0474 1A46     	 mov r2,r3
 426 0476 4FEAE273 	 asr r3,r2,#31
 427 047a 02FB01F5 	 mul r5,r2,r1
 428 047e 00FB03F4 	 mul r4,r0,r3
 429 0482 2C44     	 add r4,r4,r5
 430 0484 A0FB0201 	 umull r0,r1,r0,r2
 431 0488 6318     	 adds r3,r4,r1
 432 048a 1946     	 mov r1,r3
 433 048c D7E93423 	 ldrd r2,[r7,#208]
 434 0490 1218     	 adds r2,r2,r0
 435 0492 43EB0103 	 adc r3,r3,r1
 436 0496 12F10042 	 adds r2,r2,#-2147483648
 437 049a 43F10003 	 adc r3,r3,#0
 438 049e 1900     	 movs r1,r3
 439 04a0 C7F8C810 	 str r1,[r7,#200]
 440 04a4 DB17     	 asrs r3,r3,#31
 441 04a6 C7F8CC30 	 str r3,[r7,#204]
 442 04aa D7F8C830 	 ldr r3,[r7,#200]
 443 04ae C7F88431 	 str r3,[r7,#388]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* The result is converted to 1.31, Yn1 variable is reused  */
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Yn1 = acc << shift;
 444              	 .loc 1 169 0
 445 04b2 D7F88421 	 ldr r2,[r7,#388]
 446 04b6 D7F88031 	 ldr r3,[r7,#384]
 447 04ba 02FA03F3 	 lsl r3,r2,r3
 448 04be C7F8A431 	 str r3,[r7,#420]
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Read the third input  */
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn1 = *(pIn + 2u);
 449              	 .loc 1 172 0
 450 04c2 D7F89C31 	 ldr r3,[r7,#412]
 451 04c6 9B68     	 ldr r3,[r3,#8]
 452 04c8 C7F8AC31 	 str r3,[r7,#428]
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Store the output in the destination buffer. */
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       *(pOut + 1u) = Yn1;
 453              	 .loc 1 175 0
 454 04cc D7F89831 	 ldr r3,[r7,#408]
 455 04d0 1A1D     	 adds r2,r3,#4
 456 04d2 D7F8A431 	 ldr r3,[r7,#420]
 457 04d6 1360     	 str r3,[r2]
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) (((q63_t) b0 * (Xn1)) >> 32);
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       mult_32x32_keep32_R(acc, b0, Xn1);
 458              	 .loc 1 180 0
 459 04d8 D7F87C31 	 ldr r3,[r7,#380]
 460 04dc 1846     	 mov r0,r3
 461 04de 4FEAE071 	 asr r1,r0,#31
 462 04e2 D7F8AC31 	 ldr r3,[r7,#428]
 463 04e6 1A46     	 mov r2,r3
 464 04e8 4FEAE273 	 asr r3,r2,#31
 465 04ec 02FB01F5 	 mul r5,r2,r1
 466 04f0 00FB03F4 	 mul r4,r0,r3
 467 04f4 2C44     	 add r4,r4,r5
 468 04f6 A0FB0223 	 umull r2,r3,r0,r2
 469 04fa E118     	 adds r1,r4,r3
 470 04fc 0B46     	 mov r3,r1
 471 04fe 12F10042 	 adds r2,r2,#-2147483648
 472 0502 43F10003 	 adc r3,r3,#0
 473 0506 1900     	 movs r1,r3
 474 0508 C7F8C010 	 str r1,[r7,#192]
 475 050c DB17     	 asrs r3,r3,#31
 476 050e C7F8C430 	 str r3,[r7,#196]
 477 0512 D7F8C030 	 ldr r3,[r7,#192]
 478 0516 C7F88431 	 str r3,[r7,#388]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b1 * x[n-1] */
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b1 * (Xn2))) >> 32);
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b1, Xn2);
 479              	 .loc 1 183 0
 480 051a D7F88431 	 ldr r3,[r7,#388]
 481 051e 1A46     	 mov r2,r3
 482 0520 4FEAE273 	 asr r3,r2,#31
 483 0524 1300     	 movs r3,r2
 484 0526 C7F8BC30 	 str r3,[r7,#188]
 485 052a 0023     	 movs r3,#0
 486 052c C7F8B830 	 str r3,[r7,#184]
 487 0530 D7F87831 	 ldr r3,[r7,#376]
 488 0534 1846     	 mov r0,r3
 489 0536 4FEAE071 	 asr r1,r0,#31
 490 053a D7F8A831 	 ldr r3,[r7,#424]
 491 053e 1A46     	 mov r2,r3
 492 0540 4FEAE273 	 asr r3,r2,#31
 493 0544 02FB01F5 	 mul r5,r2,r1
 494 0548 00FB03F4 	 mul r4,r0,r3
 495 054c 2C44     	 add r4,r4,r5
 496 054e A0FB0201 	 umull r0,r1,r0,r2
 497 0552 6318     	 adds r3,r4,r1
 498 0554 1946     	 mov r1,r3
 499 0556 D7E92E23 	 ldrd r2,[r7,#184]
 500 055a 1218     	 adds r2,r2,r0
 501 055c 43EB0103 	 adc r3,r3,r1
 502 0560 12F10042 	 adds r2,r2,#-2147483648
 503 0564 43F10003 	 adc r3,r3,#0
 504 0568 1900     	 movs r1,r3
 505 056a C7F8B010 	 str r1,[r7,#176]
 506 056e DB17     	 asrs r3,r3,#31
 507 0570 C7F8B430 	 str r3,[r7,#180]
 508 0574 D7F8B030 	 ldr r3,[r7,#176]
 509 0578 C7F88431 	 str r3,[r7,#388]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b[2] * x[n-2] */
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b2 * (Xn))) >> 32);
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b2, Xn);
 510              	 .loc 1 186 0
 511 057c D7F88431 	 ldr r3,[r7,#388]
 512 0580 1A46     	 mov r2,r3
 513 0582 4FEAE273 	 asr r3,r2,#31
 514 0586 1300     	 movs r3,r2
 515 0588 C7F8AC30 	 str r3,[r7,#172]
 516 058c 0023     	 movs r3,#0
 517 058e C7F8A830 	 str r3,[r7,#168]
 518 0592 D7F87431 	 ldr r3,[r7,#372]
 519 0596 1846     	 mov r0,r3
 520 0598 4FEAE071 	 asr r1,r0,#31
 521 059c D7F86831 	 ldr r3,[r7,#360]
 522 05a0 1A46     	 mov r2,r3
 523 05a2 4FEAE273 	 asr r3,r2,#31
 524 05a6 02FB01F5 	 mul r5,r2,r1
 525 05aa 00FB03F4 	 mul r4,r0,r3
 526 05ae 2C44     	 add r4,r4,r5
 527 05b0 A0FB0201 	 umull r0,r1,r0,r2
 528 05b4 6318     	 adds r3,r4,r1
 529 05b6 1946     	 mov r1,r3
 530 05b8 D7E92A23 	 ldrd r2,[r7,#168]
 531 05bc 1218     	 adds r2,r2,r0
 532 05be 43EB0103 	 adc r3,r3,r1
 533 05c2 12F10042 	 adds r2,r2,#-2147483648
 534 05c6 43F10003 	 adc r3,r3,#0
 535 05ca 1900     	 movs r1,r3
 536 05cc C7F8A010 	 str r1,[r7,#160]
 537 05d0 DB17     	 asrs r3,r3,#31
 538 05d2 C7F8A430 	 str r3,[r7,#164]
 539 05d6 D7F8A030 	 ldr r3,[r7,#160]
 540 05da C7F88431 	 str r3,[r7,#388]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a1 * y[n-1] */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a1 * (Yn1))) >> 32);
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a1, Yn1);
 541              	 .loc 1 189 0
 542 05de D7F88431 	 ldr r3,[r7,#388]
 543 05e2 1A46     	 mov r2,r3
 544 05e4 4FEAE273 	 asr r3,r2,#31
 545 05e8 1300     	 movs r3,r2
 546 05ea C7F89C30 	 str r3,[r7,#156]
 547 05ee 0023     	 movs r3,#0
 548 05f0 C7F89830 	 str r3,[r7,#152]
 549 05f4 D7F87031 	 ldr r3,[r7,#368]
 550 05f8 1846     	 mov r0,r3
 551 05fa 4FEAE071 	 asr r1,r0,#31
 552 05fe D7F8A431 	 ldr r3,[r7,#420]
 553 0602 1A46     	 mov r2,r3
 554 0604 4FEAE273 	 asr r3,r2,#31
 555 0608 02FB01F5 	 mul r5,r2,r1
 556 060c 00FB03F4 	 mul r4,r0,r3
 557 0610 2C44     	 add r4,r4,r5
 558 0612 A0FB0201 	 umull r0,r1,r0,r2
 559 0616 6318     	 adds r3,r4,r1
 560 0618 1946     	 mov r1,r3
 561 061a D7E92623 	 ldrd r2,[r7,#152]
 562 061e 1218     	 adds r2,r2,r0
 563 0620 43EB0103 	 adc r3,r3,r1
 564 0624 12F10042 	 adds r2,r2,#-2147483648
 565 0628 43F10003 	 adc r3,r3,#0
 566 062c 1900     	 movs r1,r3
 567 062e C7F89010 	 str r1,[r7,#144]
 568 0632 DB17     	 asrs r3,r3,#31
 569 0634 C7F89430 	 str r3,[r7,#148]
 570 0638 D7F89030 	 ldr r3,[r7,#144]
 571 063c C7F88431 	 str r3,[r7,#388]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a2 * y[n-2] */
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a2 * (Yn2))) >> 32);
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a2, Yn2);
 572              	 .loc 1 192 0
 573 0640 D7F88431 	 ldr r3,[r7,#388]
 574 0644 1A46     	 mov r2,r3
 575 0646 4FEAE273 	 asr r3,r2,#31
 576 064a 1300     	 movs r3,r2
 577 064c C7F88C30 	 str r3,[r7,#140]
 578 0650 0023     	 movs r3,#0
 579 0652 C7F88830 	 str r3,[r7,#136]
 580 0656 D7F86C31 	 ldr r3,[r7,#364]
 581 065a 1846     	 mov r0,r3
 582 065c 4FEAE071 	 asr r1,r0,#31
 583 0660 D7F8A031 	 ldr r3,[r7,#416]
 584 0664 1A46     	 mov r2,r3
 585 0666 4FEAE273 	 asr r3,r2,#31
 586 066a 02FB01F5 	 mul r5,r2,r1
 587 066e 00FB03F4 	 mul r4,r0,r3
 588 0672 2C44     	 add r4,r4,r5
 589 0674 A0FB0201 	 umull r0,r1,r0,r2
 590 0678 6318     	 adds r3,r4,r1
 591 067a 1946     	 mov r1,r3
 592 067c D7E92223 	 ldrd r2,[r7,#136]
 593 0680 1218     	 adds r2,r2,r0
 594 0682 43EB0103 	 adc r3,r3,r1
 595 0686 12F10042 	 adds r2,r2,#-2147483648
 596 068a 43F10003 	 adc r3,r3,#0
 597 068e 1900     	 movs r1,r3
 598 0690 C7F88010 	 str r1,[r7,#128]
 599 0694 DB17     	 asrs r3,r3,#31
 600 0696 C7F88430 	 str r3,[r7,#132]
 601 069a D7F88030 	 ldr r3,[r7,#128]
 602 069e C7F88431 	 str r3,[r7,#388]
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* The result is converted to 1.31, Yn2 variable is reused  */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Yn2 = acc << shift;
 603              	 .loc 1 195 0
 604 06a2 D7F88421 	 ldr r2,[r7,#388]
 605 06a6 D7F88031 	 ldr r3,[r7,#384]
 606 06aa 02FA03F3 	 lsl r3,r2,r3
 607 06ae C7F8A031 	 str r3,[r7,#416]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Read the forth input */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn = *(pIn + 3u);
 608              	 .loc 1 198 0
 609 06b2 D7F89C31 	 ldr r3,[r7,#412]
 610 06b6 DB68     	 ldr r3,[r3,#12]
 611 06b8 C7F86831 	 str r3,[r7,#360]
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Store the output in the destination buffer. */
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       *(pOut + 2u) = Yn2;
 612              	 .loc 1 201 0
 613 06bc D7F89831 	 ldr r3,[r7,#408]
 614 06c0 03F10802 	 add r2,r3,#8
 615 06c4 D7F8A031 	 ldr r3,[r7,#416]
 616 06c8 1360     	 str r3,[r2]
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       pIn += 4u;
 617              	 .loc 1 202 0
 618 06ca D7F89C31 	 ldr r3,[r7,#412]
 619 06ce 1033     	 adds r3,r3,#16
 620 06d0 C7F89C31 	 str r3,[r7,#412]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] */
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) (((q63_t) b0 * (Xn)) >> 32);
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       mult_32x32_keep32_R(acc, b0, Xn);
 621              	 .loc 1 207 0
 622 06d4 D7F87C31 	 ldr r3,[r7,#380]
 623 06d8 1846     	 mov r0,r3
 624 06da 4FEAE071 	 asr r1,r0,#31
 625 06de D7F86831 	 ldr r3,[r7,#360]
 626 06e2 1A46     	 mov r2,r3
 627 06e4 4FEAE273 	 asr r3,r2,#31
 628 06e8 02FB01F5 	 mul r5,r2,r1
 629 06ec 00FB03F4 	 mul r4,r0,r3
 630 06f0 2C44     	 add r4,r4,r5
 631 06f2 A0FB0223 	 umull r2,r3,r0,r2
 632 06f6 E118     	 adds r1,r4,r3
 633 06f8 0B46     	 mov r3,r1
 634 06fa 12F10042 	 adds r2,r2,#-2147483648
 635 06fe 43F10003 	 adc r3,r3,#0
 636 0702 1900     	 movs r1,r3
 637 0704 B967     	 str r1,[r7,#120]
 638 0706 DB17     	 asrs r3,r3,#31
 639 0708 FB67     	 str r3,[r7,#124]
 640 070a BB6F     	 ldr r3,[r7,#120]
 641 070c C7F88431 	 str r3,[r7,#388]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b1 * x[n-1] */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b1 * (Xn1))) >> 32);
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b1, Xn1);
 642              	 .loc 1 210 0
 643 0710 D7F88431 	 ldr r3,[r7,#388]
 644 0714 1A46     	 mov r2,r3
 645 0716 4FEAE273 	 asr r3,r2,#31
 646 071a 1300     	 movs r3,r2
 647 071c 7B67     	 str r3,[r7,#116]
 648 071e 0023     	 movs r3,#0
 649 0720 3B67     	 str r3,[r7,#112]
 650 0722 D7F87831 	 ldr r3,[r7,#376]
 651 0726 1846     	 mov r0,r3
 652 0728 4FEAE071 	 asr r1,r0,#31
 653 072c D7F8AC31 	 ldr r3,[r7,#428]
 654 0730 1A46     	 mov r2,r3
 655 0732 4FEAE273 	 asr r3,r2,#31
 656 0736 02FB01F5 	 mul r5,r2,r1
 657 073a 00FB03F4 	 mul r4,r0,r3
 658 073e 2C44     	 add r4,r4,r5
 659 0740 A0FB0201 	 umull r0,r1,r0,r2
 660 0744 6318     	 adds r3,r4,r1
 661 0746 1946     	 mov r1,r3
 662 0748 D7E91C23 	 ldrd r2,[r7,#112]
 663 074c 1218     	 adds r2,r2,r0
 664 074e 43EB0103 	 adc r3,r3,r1
 665 0752 12F10042 	 adds r2,r2,#-2147483648
 666 0756 43F10003 	 adc r3,r3,#0
 667 075a 1900     	 movs r1,r3
 668 075c B966     	 str r1,[r7,#104]
 669 075e DB17     	 asrs r3,r3,#31
 670 0760 FB66     	 str r3,[r7,#108]
 671 0762 BB6E     	 ldr r3,[r7,#104]
 672 0764 C7F88431 	 str r3,[r7,#388]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b[2] * x[n-2] */
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b2 * (Xn2))) >> 32);
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b2, Xn2);
 673              	 .loc 1 213 0
 674 0768 D7F88431 	 ldr r3,[r7,#388]
 675 076c 1A46     	 mov r2,r3
 676 076e 4FEAE273 	 asr r3,r2,#31
 677 0772 1300     	 movs r3,r2
 678 0774 7B66     	 str r3,[r7,#100]
 679 0776 0023     	 movs r3,#0
 680 0778 3B66     	 str r3,[r7,#96]
 681 077a D7F87431 	 ldr r3,[r7,#372]
 682 077e 1846     	 mov r0,r3
 683 0780 4FEAE071 	 asr r1,r0,#31
 684 0784 D7F8A831 	 ldr r3,[r7,#424]
 685 0788 1A46     	 mov r2,r3
 686 078a 4FEAE273 	 asr r3,r2,#31
 687 078e 02FB01F5 	 mul r5,r2,r1
 688 0792 00FB03F4 	 mul r4,r0,r3
 689 0796 2C44     	 add r4,r4,r5
 690 0798 A0FB0201 	 umull r0,r1,r0,r2
 691 079c 6318     	 adds r3,r4,r1
 692 079e 1946     	 mov r1,r3
 693 07a0 D7E91823 	 ldrd r2,[r7,#96]
 694 07a4 1218     	 adds r2,r2,r0
 695 07a6 43EB0103 	 adc r3,r3,r1
 696 07aa 12F10042 	 adds r2,r2,#-2147483648
 697 07ae 43F10003 	 adc r3,r3,#0
 698 07b2 1900     	 movs r1,r3
 699 07b4 B965     	 str r1,[r7,#88]
 700 07b6 DB17     	 asrs r3,r3,#31
 701 07b8 FB65     	 str r3,[r7,#92]
 702 07ba BB6D     	 ldr r3,[r7,#88]
 703 07bc C7F88431 	 str r3,[r7,#388]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a1 * y[n-1] */
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a1 * (Yn2))) >> 32);
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a1, Yn2);
 704              	 .loc 1 216 0
 705 07c0 D7F88431 	 ldr r3,[r7,#388]
 706 07c4 1A46     	 mov r2,r3
 707 07c6 4FEAE273 	 asr r3,r2,#31
 708 07ca 1300     	 movs r3,r2
 709 07cc 7B65     	 str r3,[r7,#84]
 710 07ce 0023     	 movs r3,#0
 711 07d0 3B65     	 str r3,[r7,#80]
 712 07d2 D7F87031 	 ldr r3,[r7,#368]
 713 07d6 1846     	 mov r0,r3
 714 07d8 4FEAE071 	 asr r1,r0,#31
 715 07dc D7F8A031 	 ldr r3,[r7,#416]
 716 07e0 1A46     	 mov r2,r3
 717 07e2 4FEAE273 	 asr r3,r2,#31
 718 07e6 02FB01F5 	 mul r5,r2,r1
 719 07ea 00FB03F4 	 mul r4,r0,r3
 720 07ee 2C44     	 add r4,r4,r5
 721 07f0 A0FB0201 	 umull r0,r1,r0,r2
 722 07f4 6318     	 adds r3,r4,r1
 723 07f6 1946     	 mov r1,r3
 724 07f8 D7E91423 	 ldrd r2,[r7,#80]
 725 07fc 1218     	 adds r2,r2,r0
 726 07fe 43EB0103 	 adc r3,r3,r1
 727 0802 12F10042 	 adds r2,r2,#-2147483648
 728 0806 43F10003 	 adc r3,r3,#0
 729 080a 1900     	 movs r1,r3
 730 080c B964     	 str r1,[r7,#72]
 731 080e DB17     	 asrs r3,r3,#31
 732 0810 FB64     	 str r3,[r7,#76]
 733 0812 BB6C     	 ldr r3,[r7,#72]
 734 0814 C7F88431 	 str r3,[r7,#388]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a2 * y[n-2] */
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a2 * (Yn1))) >> 32);
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a2, Yn1);
 735              	 .loc 1 219 0
 736 0818 D7F88431 	 ldr r3,[r7,#388]
 737 081c 1A46     	 mov r2,r3
 738 081e 4FEAE273 	 asr r3,r2,#31
 739 0822 9346     	 mov fp,r2
 740 0824 4FF0000A 	 mov r10,#0
 741 0828 D7F86C31 	 ldr r3,[r7,#364]
 742 082c 1846     	 mov r0,r3
 743 082e 4FEAE071 	 asr r1,r0,#31
 744 0832 D7F8A431 	 ldr r3,[r7,#420]
 745 0836 1A46     	 mov r2,r3
 746 0838 4FEAE273 	 asr r3,r2,#31
 747 083c 02FB01F5 	 mul r5,r2,r1
 748 0840 00FB03F4 	 mul r4,r0,r3
 749 0844 2C44     	 add r4,r4,r5
 750 0846 A0FB0201 	 umull r0,r1,r0,r2
 751 084a 6318     	 adds r3,r4,r1
 752 084c 1946     	 mov r1,r3
 753 084e 1AEB0002 	 adds r2,r10,r0
 754 0852 4BEB0103 	 adc r3,fp,r1
 755 0856 12F10042 	 adds r2,r2,#-2147483648
 756 085a 43F10003 	 adc r3,r3,#0
 757 085e 9846     	 mov r8,r3
 758 0860 4FEAE379 	 asr r9,r3,#31
 759 0864 4346     	 mov r3,r8
 760 0866 C7F88431 	 str r3,[r7,#388]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Every time after the output is computed state should be updated. */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* The states should be updated as:  */
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Xn2 = Xn1    */
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn2 = Xn1;
 761              	 .loc 1 224 0
 762 086a D7F8AC31 	 ldr r3,[r7,#428]
 763 086e C7F8A831 	 str r3,[r7,#424]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* The result is converted to 1.31, Yn1 variable is reused  */
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Yn1 = acc << shift;
 764              	 .loc 1 227 0
 765 0872 D7F88421 	 ldr r2,[r7,#388]
 766 0876 D7F88031 	 ldr r3,[r7,#384]
 767 087a 02FA03F3 	 lsl r3,r2,r3
 768 087e C7F8A431 	 str r3,[r7,#420]
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Xn1 = Xn     */
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn1 = Xn;
 769              	 .loc 1 230 0
 770 0882 D7F86831 	 ldr r3,[r7,#360]
 771 0886 C7F8AC31 	 str r3,[r7,#428]
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Store the output in the destination buffer. */
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       *(pOut + 3u) = Yn1;
 772              	 .loc 1 233 0
 773 088a D7F89831 	 ldr r3,[r7,#408]
 774 088e 03F10C02 	 add r2,r3,#12
 775 0892 D7F8A431 	 ldr r3,[r7,#420]
 776 0896 1360     	 str r3,[r2]
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       pOut += 4u;
 777              	 .loc 1 234 0
 778 0898 D7F89831 	 ldr r3,[r7,#408]
 779 089c 1033     	 adds r3,r3,#16
 780 089e C7F89831 	 str r3,[r7,#408]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* decrement the loop counter */
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       sample--;
 781              	 .loc 1 237 0
 782 08a2 D7F88C31 	 ldr r3,[r7,#396]
 783 08a6 013B     	 subs r3,r3,#1
 784 08a8 C7F88C31 	 str r3,[r7,#396]
 785              	.L2:
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     {
 786              	 .loc 1 120 0
 787 08ac D7F88C31 	 ldr r3,[r7,#396]
 788 08b0 002B     	 cmp r3,#0
 789 08b2 7FF413AC 	 bne .L3
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     }
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /* If the blockSize is not a multiple of 4, compute any remaining output samples here.       
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****      ** No loop unrolling is used. */
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     sample = (blockSize & 0x3u);
 790              	 .loc 1 242 0
 791 08b6 D7F85831 	 ldr r3,[r7,#344]
 792 08ba 03F00303 	 and r3,r3,#3
 793 08be C7F88C31 	 str r3,[r7,#396]
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****    while(sample > 0u)
 794              	 .loc 1 244 0
 795 08c2 FAE0     	 b .L4
 796              	.L5:
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****    {
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Read the input */
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn = *pIn++;
 797              	 .loc 1 247 0
 798 08c4 D7F89C21 	 ldr r2,[r7,#412]
 799 08c8 131D     	 adds r3,r2,#4
 800 08ca C7F89C31 	 str r3,[r7,#412]
 801 08ce 1368     	 ldr r3,[r2]
 802 08d0 C7F86831 	 str r3,[r7,#360]
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc =  b0 * x[n] */
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) (((q63_t) b0 * (Xn)) >> 32);
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       mult_32x32_keep32_R(acc, b0, Xn);
 803              	 .loc 1 252 0
 804 08d4 D7F87C31 	 ldr r3,[r7,#380]
 805 08d8 1846     	 mov r0,r3
 806 08da 4FEAE071 	 asr r1,r0,#31
 807 08de D7F86831 	 ldr r3,[r7,#360]
 808 08e2 1A46     	 mov r2,r3
 809 08e4 4FEAE273 	 asr r3,r2,#31
 810 08e8 02FB01F5 	 mul r5,r2,r1
 811 08ec 00FB03F4 	 mul r4,r0,r3
 812 08f0 2C44     	 add r4,r4,r5
 813 08f2 A0FB0223 	 umull r2,r3,r0,r2
 814 08f6 E118     	 adds r1,r4,r3
 815 08f8 0B46     	 mov r3,r1
 816 08fa 12F10042 	 adds r2,r2,#-2147483648
 817 08fe 43F10003 	 adc r3,r3,#0
 818 0902 1900     	 movs r1,r3
 819 0904 3964     	 str r1,[r7,#64]
 820 0906 DB17     	 asrs r3,r3,#31
 821 0908 7B64     	 str r3,[r7,#68]
 822 090a 3B6C     	 ldr r3,[r7,#64]
 823 090c C7F88431 	 str r3,[r7,#388]
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b1 * x[n-1] */
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b1 * (Xn1))) >> 32);
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b1, Xn1);
 824              	 .loc 1 255 0
 825 0910 D7F88431 	 ldr r3,[r7,#388]
 826 0914 1A46     	 mov r2,r3
 827 0916 4FEAE273 	 asr r3,r2,#31
 828 091a 1300     	 movs r3,r2
 829 091c FB63     	 str r3,[r7,#60]
 830 091e 0023     	 movs r3,#0
 831 0920 BB63     	 str r3,[r7,#56]
 832 0922 D7F87831 	 ldr r3,[r7,#376]
 833 0926 1846     	 mov r0,r3
 834 0928 4FEAE071 	 asr r1,r0,#31
 835 092c D7F8AC31 	 ldr r3,[r7,#428]
 836 0930 1A46     	 mov r2,r3
 837 0932 4FEAE273 	 asr r3,r2,#31
 838 0936 02FB01F5 	 mul r5,r2,r1
 839 093a 00FB03F4 	 mul r4,r0,r3
 840 093e 2C44     	 add r4,r4,r5
 841 0940 A0FB0201 	 umull r0,r1,r0,r2
 842 0944 6318     	 adds r3,r4,r1
 843 0946 1946     	 mov r1,r3
 844 0948 D7E90E23 	 ldrd r2,[r7,#56]
 845 094c 1218     	 adds r2,r2,r0
 846 094e 43EB0103 	 adc r3,r3,r1
 847 0952 12F10042 	 adds r2,r2,#-2147483648
 848 0956 43F10003 	 adc r3,r3,#0
 849 095a 1900     	 movs r1,r3
 850 095c 3963     	 str r1,[r7,#48]
 851 095e DB17     	 asrs r3,r3,#31
 852 0960 7B63     	 str r3,[r7,#52]
 853 0962 3B6B     	 ldr r3,[r7,#48]
 854 0964 C7F88431 	 str r3,[r7,#388]
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  b[2] * x[n-2] */
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) b2 * (Xn2))) >> 32);
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, b2, Xn2);
 855              	 .loc 1 258 0
 856 0968 D7F88431 	 ldr r3,[r7,#388]
 857 096c 1A46     	 mov r2,r3
 858 096e 4FEAE273 	 asr r3,r2,#31
 859 0972 1300     	 movs r3,r2
 860 0974 FB62     	 str r3,[r7,#44]
 861 0976 0023     	 movs r3,#0
 862 0978 BB62     	 str r3,[r7,#40]
 863 097a D7F87431 	 ldr r3,[r7,#372]
 864 097e 1846     	 mov r0,r3
 865 0980 4FEAE071 	 asr r1,r0,#31
 866 0984 D7F8A831 	 ldr r3,[r7,#424]
 867 0988 1A46     	 mov r2,r3
 868 098a 4FEAE273 	 asr r3,r2,#31
 869 098e 02FB01F5 	 mul r5,r2,r1
 870 0992 00FB03F4 	 mul r4,r0,r3
 871 0996 2C44     	 add r4,r4,r5
 872 0998 A0FB0201 	 umull r0,r1,r0,r2
 873 099c 6318     	 adds r3,r4,r1
 874 099e 1946     	 mov r1,r3
 875 09a0 D7E90A23 	 ldrd r2,[r7,#40]
 876 09a4 1218     	 adds r2,r2,r0
 877 09a6 43EB0103 	 adc r3,r3,r1
 878 09aa 12F10042 	 adds r2,r2,#-2147483648
 879 09ae 43F10003 	 adc r3,r3,#0
 880 09b2 1900     	 movs r1,r3
 881 09b4 3962     	 str r1,[r7,#32]
 882 09b6 DB17     	 asrs r3,r3,#31
 883 09b8 7B62     	 str r3,[r7,#36]
 884 09ba 3B6A     	 ldr r3,[r7,#32]
 885 09bc C7F88431 	 str r3,[r7,#388]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a1 * y[n-1] */
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a1 * (Yn1))) >> 32);
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a1, Yn1);
 886              	 .loc 1 261 0
 887 09c0 D7F88431 	 ldr r3,[r7,#388]
 888 09c4 1A46     	 mov r2,r3
 889 09c6 4FEAE273 	 asr r3,r2,#31
 890 09ca 1300     	 movs r3,r2
 891 09cc FB61     	 str r3,[r7,#28]
 892 09ce 0023     	 movs r3,#0
 893 09d0 BB61     	 str r3,[r7,#24]
 894 09d2 D7F87031 	 ldr r3,[r7,#368]
 895 09d6 1846     	 mov r0,r3
 896 09d8 4FEAE071 	 asr r1,r0,#31
 897 09dc D7F8A431 	 ldr r3,[r7,#420]
 898 09e0 1A46     	 mov r2,r3
 899 09e2 4FEAE273 	 asr r3,r2,#31
 900 09e6 02FB01F5 	 mul r5,r2,r1
 901 09ea 00FB03F4 	 mul r4,r0,r3
 902 09ee 2C44     	 add r4,r4,r5
 903 09f0 A0FB0201 	 umull r0,r1,r0,r2
 904 09f4 6318     	 adds r3,r4,r1
 905 09f6 1946     	 mov r1,r3
 906 09f8 D7E90623 	 ldrd r2,[r7,#24]
 907 09fc 1218     	 adds r2,r2,r0
 908 09fe 43EB0103 	 adc r3,r3,r1
 909 0a02 12F10042 	 adds r2,r2,#-2147483648
 910 0a06 43F10003 	 adc r3,r3,#0
 911 0a0a 1900     	 movs r1,r3
 912 0a0c 3961     	 str r1,[r7,#16]
 913 0a0e DB17     	 asrs r3,r3,#31
 914 0a10 7B61     	 str r3,[r7,#20]
 915 0a12 3B69     	 ldr r3,[r7,#16]
 916 0a14 C7F88431 	 str r3,[r7,#388]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* acc +=  a2 * y[n-2] */
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       //acc = (q31_t) ((((q63_t) acc << 32) + ((q63_t) a2 * (Yn2))) >> 32);
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       multAcc_32x32_keep32_R(acc, a2, Yn2);
 917              	 .loc 1 264 0
 918 0a18 D7F88431 	 ldr r3,[r7,#388]
 919 0a1c 1A46     	 mov r2,r3
 920 0a1e 4FEAE273 	 asr r3,r2,#31
 921 0a22 1300     	 movs r3,r2
 922 0a24 FB60     	 str r3,[r7,#12]
 923 0a26 0023     	 movs r3,#0
 924 0a28 BB60     	 str r3,[r7,#8]
 925 0a2a D7F86C31 	 ldr r3,[r7,#364]
 926 0a2e 1846     	 mov r0,r3
 927 0a30 4FEAE071 	 asr r1,r0,#31
 928 0a34 D7F8A031 	 ldr r3,[r7,#416]
 929 0a38 1A46     	 mov r2,r3
 930 0a3a 4FEAE273 	 asr r3,r2,#31
 931 0a3e 02FB01F5 	 mul r5,r2,r1
 932 0a42 00FB03F4 	 mul r4,r0,r3
 933 0a46 2C44     	 add r4,r4,r5
 934 0a48 A0FB0201 	 umull r0,r1,r0,r2
 935 0a4c 6318     	 adds r3,r4,r1
 936 0a4e 1946     	 mov r1,r3
 937 0a50 D7E90223 	 ldrd r2,[r7,#8]
 938 0a54 1218     	 adds r2,r2,r0
 939 0a56 43EB0103 	 adc r3,r3,r1
 940 0a5a 12F10042 	 adds r2,r2,#-2147483648
 941 0a5e 43F10003 	 adc r3,r3,#0
 942 0a62 1900     	 movs r1,r3
 943 0a64 3960     	 str r1,[r7]
 944 0a66 DB17     	 asrs r3,r3,#31
 945 0a68 7B60     	 str r3,[r7,#4]
 946 0a6a 3B68     	 ldr r3,[r7]
 947 0a6c C7F88431 	 str r3,[r7,#388]
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* The result is converted to 1.31  */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       acc = acc << shift;
 948              	 .loc 1 267 0
 949 0a70 D7F88421 	 ldr r2,[r7,#388]
 950 0a74 D7F88031 	 ldr r3,[r7,#384]
 951 0a78 02FA03F3 	 lsl r3,r2,r3
 952 0a7c C7F88431 	 str r3,[r7,#388]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Every time after the output is computed state should be updated. */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* The states should be updated as:  */
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Xn2 = Xn1    */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Xn1 = Xn     */
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Yn2 = Yn1    */
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Yn1 = acc    */
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn2 = Xn1;
 953              	 .loc 1 275 0
 954 0a80 D7F8AC31 	 ldr r3,[r7,#428]
 955 0a84 C7F8A831 	 str r3,[r7,#424]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Xn1 = Xn;
 956              	 .loc 1 276 0
 957 0a88 D7F86831 	 ldr r3,[r7,#360]
 958 0a8c C7F8AC31 	 str r3,[r7,#428]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Yn2 = Yn1;
 959              	 .loc 1 277 0
 960 0a90 D7F8A431 	 ldr r3,[r7,#420]
 961 0a94 C7F8A031 	 str r3,[r7,#416]
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       Yn1 = acc;
 962              	 .loc 1 278 0
 963 0a98 D7F88431 	 ldr r3,[r7,#388]
 964 0a9c C7F8A431 	 str r3,[r7,#420]
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* Store the output in the destination buffer. */
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       *pOut++ = acc;
 965              	 .loc 1 281 0
 966 0aa0 D7F89821 	 ldr r2,[r7,#408]
 967 0aa4 131D     	 adds r3,r2,#4
 968 0aa6 C7F89831 	 str r3,[r7,#408]
 969 0aaa D7F88431 	 ldr r3,[r7,#388]
 970 0aae 1360     	 str r3,[r2]
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       /* decrement the loop counter */
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****       sample--;
 971              	 .loc 1 284 0
 972 0ab0 D7F88C31 	 ldr r3,[r7,#396]
 973 0ab4 013B     	 subs r3,r3,#1
 974 0ab6 C7F88C31 	 str r3,[r7,#396]
 975              	.L4:
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****    {
 976              	 .loc 1 244 0
 977 0aba D7F88C31 	 ldr r3,[r7,#396]
 978 0abe 002B     	 cmp r3,#0
 979 0ac0 7FF400AF 	 bne .L5
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****    }
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /*  The first stage goes from the input buffer to the output buffer. */
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /*  Subsequent stages occur in-place in the output buffer */
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     pIn = pDst;
 980              	 .loc 1 289 0
 981 0ac4 D7F85C31 	 ldr r3,[r7,#348]
 982 0ac8 C7F89C31 	 str r3,[r7,#412]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /* Reset to destination pointer */
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     pOut = pDst;
 983              	 .loc 1 292 0
 984 0acc D7F85C31 	 ldr r3,[r7,#348]
 985 0ad0 C7F89831 	 str r3,[r7,#408]
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     /*  Store the updated state variables back into the pState array */
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     *pState++ = Xn1;
 986              	 .loc 1 295 0
 987 0ad4 D7F89421 	 ldr r2,[r7,#404]
 988 0ad8 131D     	 adds r3,r2,#4
 989 0ada C7F89431 	 str r3,[r7,#404]
 990 0ade D7F8AC31 	 ldr r3,[r7,#428]
 991 0ae2 1360     	 str r3,[r2]
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     *pState++ = Xn2;
 992              	 .loc 1 296 0
 993 0ae4 D7F89421 	 ldr r2,[r7,#404]
 994 0ae8 131D     	 adds r3,r2,#4
 995 0aea C7F89431 	 str r3,[r7,#404]
 996 0aee D7F8A831 	 ldr r3,[r7,#424]
 997 0af2 1360     	 str r3,[r2]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     *pState++ = Yn1;
 998              	 .loc 1 297 0
 999 0af4 D7F89421 	 ldr r2,[r7,#404]
 1000 0af8 131D     	 adds r3,r2,#4
 1001 0afa C7F89431 	 str r3,[r7,#404]
 1002 0afe D7F8A431 	 ldr r3,[r7,#420]
 1003 0b02 1360     	 str r3,[r2]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****     *pState++ = Yn2;
 1004              	 .loc 1 298 0
 1005 0b04 D7F89421 	 ldr r2,[r7,#404]
 1006 0b08 131D     	 adds r3,r2,#4
 1007 0b0a C7F89431 	 str r3,[r7,#404]
 1008 0b0e D7F8A031 	 ldr r3,[r7,#416]
 1009 0b12 1360     	 str r3,[r2]
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** 
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c ****   } while(--stage);
 1010              	 .loc 1 300 0
 1011 0b14 D7F88831 	 ldr r3,[r7,#392]
 1012 0b18 013B     	 subs r3,r3,#1
 1013 0b1a C7F88831 	 str r3,[r7,#392]
 1014 0b1e D7F88831 	 ldr r3,[r7,#392]
 1015 0b22 002B     	 cmp r3,#0
 1016 0b24 7FF498AA 	 bne .L6
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_fast_q31.c **** }
 1017              	 .loc 1 301 0
 1018 0b28 07F5DA77 	 add r7,r7,#436
 1019              	.LCFI3:
 1020              	 .cfi_def_cfa_offset 28
 1021 0b2c BD46     	 mov sp,r7
 1022              	.LCFI4:
 1023              	 .cfi_def_cfa_register 13
 1024              	 
 1025 0b2e BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 1026              	.LCFI5:
 1027              	 .cfi_restore 11
 1028              	 .cfi_restore 10
 1029              	 .cfi_restore 9
 1030              	 .cfi_restore 8
 1031              	 .cfi_restore 7
 1032              	 .cfi_restore 5
 1033              	 .cfi_restore 4
 1034              	 .cfi_def_cfa_offset 0
 1035 0b32 7047     	 bx lr
 1036              	 .cfi_endproc
 1037              	.LFE139:
 1039              	 .text
 1040              	.Letext0:
 1041              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1042              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1043              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_biquad_cascade_df1_fast_q31.c
    {standard input}:19     .text.arm_biquad_cascade_df1_fast_q31:00000000 $t
    {standard input}:24     .text.arm_biquad_cascade_df1_fast_q31:00000000 arm_biquad_cascade_df1_fast_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
