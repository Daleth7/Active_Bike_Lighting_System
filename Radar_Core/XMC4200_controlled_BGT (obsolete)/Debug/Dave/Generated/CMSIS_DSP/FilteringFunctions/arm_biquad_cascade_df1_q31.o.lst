   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_biquad_cascade_df1_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_biquad_cascade_df1_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_biquad_cascade_df1_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_biquad_cascade_df1_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * Title:	    arm_biquad_cascade_df1_q31.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * Description:	Processing function for the    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *				Q31 Biquad cascade filter    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *    
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *  
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * Redistribution and use in source and binary forms, with or without 
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * modification, are permitted provided that the following conditions
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * are met:
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *   - Redistributions of source code must retain the above copyright
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *     notice, this list of conditions and the following disclaimer.
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *     notice, this list of conditions and the following disclaimer in
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *     the documentation and/or other materials provided with the 
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *     distribution.
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *     may be used to endorse or promote products derived from this
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *     software without specific prior written permission.
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** *
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * POSSIBILITY OF SUCH DAMAGE.     
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** * -------------------------------------------------------------------- */
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** /**    
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @ingroup groupFilters    
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  */
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** /**    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @addtogroup BiquadCascadeDF1    
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @{    
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  */
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** /**    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @brief Processing function for the Q31 Biquad cascade filter.    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @param[in]  *S         points to an instance of the Q31 Biquad cascade structure.    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @param[in]  *pSrc      points to the block of input data.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @param[out] *pDst      points to the block of output data.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @param[in]  blockSize  number of samples to process per call.    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * @return none.    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * <b>Scaling and Overflow Behavior:</b>    
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * \par    
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * The function is implemented using an internal 64-bit accumulator.    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate multiplicatio
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * Thus, if the accumulator result overflows it wraps around rather than clip.    
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by 2 bits and lie in
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * After all 5 multiply-accumulates are performed, the 2.62 accumulator is shifted by <code>postShi
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * 1.31 format by discarding the low 32 bits.    
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  *    
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * \par    
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  * Refer to the function <code>arm_biquad_cascade_df1_fast_q31()</code> for a faster but less preci
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****  */
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** void arm_biquad_cascade_df1_q31(
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   const arm_biquad_casd_df1_inst_q31 * S,
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t * pSrc,
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t * pDst,
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   uint32_t blockSize)
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** {
  27              	 .loc 1 79 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 A1B0     	 sub sp,sp,#132
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 160
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 7862     	 str r0,[r7,#36]
  49 000a 3962     	 str r1,[r7,#32]
  50 000c FA61     	 str r2,[r7,#28]
  51 000e BB61     	 str r3,[r7,#24]
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q63_t acc;                                     /*  accumulator                   */
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   uint32_t uShift = ((uint32_t) S->postShift + 1u);
  52              	 .loc 1 81 0
  53 0010 7B6A     	 ldr r3,[r7,#36]
  54 0012 1B7B     	 ldrb r3,[r3,#12]
  55 0014 0133     	 adds r3,r3,#1
  56 0016 7B65     	 str r3,[r7,#84]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   uint32_t lShift = 32u - uShift;                /*  Shift to be applied to the output */
  57              	 .loc 1 82 0
  58 0018 7B6D     	 ldr r3,[r7,#84]
  59 001a C3F12003 	 rsb r3,r3,#32
  60 001e 3B65     	 str r3,[r7,#80]
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t *pIn = pSrc;                             /*  input pointer initialization  */
  61              	 .loc 1 83 0
  62 0020 3B6A     	 ldr r3,[r7,#32]
  63 0022 FB67     	 str r3,[r7,#124]
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t *pOut = pDst;                            /*  output pointer initialization */
  64              	 .loc 1 84 0
  65 0024 FB69     	 ldr r3,[r7,#28]
  66 0026 BB67     	 str r3,[r7,#120]
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t *pState = S->pState;                     /*  pState pointer initialization */
  67              	 .loc 1 85 0
  68 0028 7B6A     	 ldr r3,[r7,#36]
  69 002a 5B68     	 ldr r3,[r3,#4]
  70 002c 7B67     	 str r3,[r7,#116]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /*  coeff pointer initialization  */
  71              	 .loc 1 86 0
  72 002e 7B6A     	 ldr r3,[r7,#36]
  73 0030 9B68     	 ldr r3,[r3,#8]
  74 0032 3B67     	 str r3,[r7,#112]
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t Xn1, Xn2, Yn1, Yn2;                      /*  Filter state variables        */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t b0, b1, b2, a1, a2;                      /*  Filter coefficients           */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t Xn;                                      /*  temporary input               */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   uint32_t sample, stage = S->numStages;         /*  loop counters                     */
  75              	 .loc 1 90 0
  76 0034 7B6A     	 ldr r3,[r7,#36]
  77 0036 1B68     	 ldr r3,[r3]
  78 0038 BB65     	 str r3,[r7,#88]
  79              	.L7:
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** #ifndef ARM_MATH_CM0_FAMILY_FAMILY
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   q31_t acc_l, acc_h;                            /*  temporary output variables    */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   do
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   {
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* Reading the coefficients */
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     b0 = *pCoeffs++;
  80              	 .loc 1 102 0
  81 003a 3B6F     	 ldr r3,[r7,#112]
  82 003c 1A1D     	 adds r2,r3,#4
  83 003e 3A67     	 str r2,[r7,#112]
  84 0040 1B68     	 ldr r3,[r3]
  85 0042 FB64     	 str r3,[r7,#76]
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     b1 = *pCoeffs++;
  86              	 .loc 1 103 0
  87 0044 3B6F     	 ldr r3,[r7,#112]
  88 0046 1A1D     	 adds r2,r3,#4
  89 0048 3A67     	 str r2,[r7,#112]
  90 004a 1B68     	 ldr r3,[r3]
  91 004c BB64     	 str r3,[r7,#72]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     b2 = *pCoeffs++;
  92              	 .loc 1 104 0
  93 004e 3B6F     	 ldr r3,[r7,#112]
  94 0050 1A1D     	 adds r2,r3,#4
  95 0052 3A67     	 str r2,[r7,#112]
  96 0054 1B68     	 ldr r3,[r3]
  97 0056 7B64     	 str r3,[r7,#68]
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     a1 = *pCoeffs++;
  98              	 .loc 1 105 0
  99 0058 3B6F     	 ldr r3,[r7,#112]
 100 005a 1A1D     	 adds r2,r3,#4
 101 005c 3A67     	 str r2,[r7,#112]
 102 005e 1B68     	 ldr r3,[r3]
 103 0060 3B64     	 str r3,[r7,#64]
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     a2 = *pCoeffs++;
 104              	 .loc 1 106 0
 105 0062 3B6F     	 ldr r3,[r7,#112]
 106 0064 1A1D     	 adds r2,r3,#4
 107 0066 3A67     	 str r2,[r7,#112]
 108 0068 1B68     	 ldr r3,[r3]
 109 006a FB63     	 str r3,[r7,#60]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* Reading the state values */
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Xn1 = pState[0];
 110              	 .loc 1 109 0
 111 006c 7B6F     	 ldr r3,[r7,#116]
 112 006e 1B68     	 ldr r3,[r3]
 113 0070 FB66     	 str r3,[r7,#108]
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Xn2 = pState[1];
 114              	 .loc 1 110 0
 115 0072 7B6F     	 ldr r3,[r7,#116]
 116 0074 5B68     	 ldr r3,[r3,#4]
 117 0076 BB66     	 str r3,[r7,#104]
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Yn1 = pState[2];
 118              	 .loc 1 111 0
 119 0078 7B6F     	 ldr r3,[r7,#116]
 120 007a 9B68     	 ldr r3,[r3,#8]
 121 007c 7B66     	 str r3,[r7,#100]
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Yn2 = pState[3];
 122              	 .loc 1 112 0
 123 007e 7B6F     	 ldr r3,[r7,#116]
 124 0080 DB68     	 ldr r3,[r3,#12]
 125 0082 3B66     	 str r3,[r7,#96]
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* Apply loop unrolling and compute 4 output values simultaneously. */
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*      The variable acc hold output values that are being computed:    
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****      *    
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]    
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****      */
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     sample = blockSize >> 2u;
 126              	 .loc 1 120 0
 127 0084 BB69     	 ldr r3,[r7,#24]
 128 0086 9B08     	 lsrs r3,r3,#2
 129 0088 FB65     	 str r3,[r7,#92]
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     while(sample > 0u)
 130              	 .loc 1 124 0
 131 008a 51E2     	 b .L2
 132              	.L3:
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     {
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Read the input */
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn = *pIn++;
 133              	 .loc 1 127 0
 134 008c FB6F     	 ldr r3,[r7,#124]
 135 008e 1A1D     	 adds r2,r3,#4
 136 0090 FA67     	 str r2,[r7,#124]
 137 0092 1B68     	 ldr r3,[r3]
 138 0094 BB63     	 str r3,[r7,#56]
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] */
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = (q63_t) b0 *Xn;
 139              	 .loc 1 132 0
 140 0096 FB6C     	 ldr r3,[r7,#76]
 141 0098 1A46     	 mov r2,r3
 142 009a 4FEAE273 	 asr r3,r2,#31
 143 009e B96B     	 ldr r1,[r7,#56]
 144 00a0 0846     	 mov r0,r1
 145 00a2 4FEAE071 	 asr r1,r0,#31
 146 00a6 00FB03F5 	 mul r5,r0,r3
 147 00aa 02FB01F4 	 mul r4,r2,r1
 148 00ae 2C44     	 add r4,r4,r5
 149 00b0 A2FB0023 	 umull r2,r3,r2,r0
 150 00b4 E118     	 adds r1,r4,r3
 151 00b6 0B46     	 mov r3,r1
 152 00b8 C7E90C23 	 strd r2,[r7,#48]
 153 00bc C7E90C23 	 strd r2,[r7,#48]
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b1 * x[n-1] */
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b1 *Xn1;
 154              	 .loc 1 134 0
 155 00c0 BB6C     	 ldr r3,[r7,#72]
 156 00c2 1A46     	 mov r2,r3
 157 00c4 4FEAE273 	 asr r3,r2,#31
 158 00c8 F96E     	 ldr r1,[r7,#108]
 159 00ca 0846     	 mov r0,r1
 160 00cc 4FEAE071 	 asr r1,r0,#31
 161 00d0 00FB03F5 	 mul r5,r0,r3
 162 00d4 02FB01F4 	 mul r4,r2,r1
 163 00d8 2C44     	 add r4,r4,r5
 164 00da A2FB0023 	 umull r2,r3,r2,r0
 165 00de E118     	 adds r1,r4,r3
 166 00e0 0B46     	 mov r3,r1
 167 00e2 D7E90C01 	 ldrd r0,[r7,#48]
 168 00e6 1218     	 adds r2,r2,r0
 169 00e8 43EB0103 	 adc r3,r3,r1
 170 00ec C7E90C23 	 strd r2,[r7,#48]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b[2] * x[n-2] */
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b2 *Xn2;
 171              	 .loc 1 136 0
 172 00f0 7B6C     	 ldr r3,[r7,#68]
 173 00f2 1A46     	 mov r2,r3
 174 00f4 4FEAE273 	 asr r3,r2,#31
 175 00f8 B96E     	 ldr r1,[r7,#104]
 176 00fa 0846     	 mov r0,r1
 177 00fc 4FEAE071 	 asr r1,r0,#31
 178 0100 00FB03F5 	 mul r5,r0,r3
 179 0104 02FB01F4 	 mul r4,r2,r1
 180 0108 2C44     	 add r4,r4,r5
 181 010a A2FB0023 	 umull r2,r3,r2,r0
 182 010e E118     	 adds r1,r4,r3
 183 0110 0B46     	 mov r3,r1
 184 0112 D7E90C01 	 ldrd r0,[r7,#48]
 185 0116 1218     	 adds r2,r2,r0
 186 0118 43EB0103 	 adc r3,r3,r1
 187 011c C7E90C23 	 strd r2,[r7,#48]
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a1 * y[n-1] */
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a1 *Yn1;
 188              	 .loc 1 138 0
 189 0120 3B6C     	 ldr r3,[r7,#64]
 190 0122 1A46     	 mov r2,r3
 191 0124 4FEAE273 	 asr r3,r2,#31
 192 0128 796E     	 ldr r1,[r7,#100]
 193 012a 0846     	 mov r0,r1
 194 012c 4FEAE071 	 asr r1,r0,#31
 195 0130 00FB03F5 	 mul r5,r0,r3
 196 0134 02FB01F4 	 mul r4,r2,r1
 197 0138 2C44     	 add r4,r4,r5
 198 013a A2FB0023 	 umull r2,r3,r2,r0
 199 013e E118     	 adds r1,r4,r3
 200 0140 0B46     	 mov r3,r1
 201 0142 D7E90C01 	 ldrd r0,[r7,#48]
 202 0146 1218     	 adds r2,r2,r0
 203 0148 43EB0103 	 adc r3,r3,r1
 204 014c C7E90C23 	 strd r2,[r7,#48]
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a2 * y[n-2] */
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a2 *Yn2;
 205              	 .loc 1 140 0
 206 0150 FB6B     	 ldr r3,[r7,#60]
 207 0152 1A46     	 mov r2,r3
 208 0154 4FEAE273 	 asr r3,r2,#31
 209 0158 396E     	 ldr r1,[r7,#96]
 210 015a 0846     	 mov r0,r1
 211 015c 4FEAE071 	 asr r1,r0,#31
 212 0160 00FB03F5 	 mul r5,r0,r3
 213 0164 02FB01F4 	 mul r4,r2,r1
 214 0168 2C44     	 add r4,r4,r5
 215 016a A2FB0023 	 umull r2,r3,r2,r0
 216 016e E118     	 adds r1,r4,r3
 217 0170 0B46     	 mov r3,r1
 218 0172 D7E90C01 	 ldrd r0,[r7,#48]
 219 0176 1218     	 adds r2,r2,r0
 220 0178 43EB0103 	 adc r3,r3,r1
 221 017c C7E90C23 	 strd r2,[r7,#48]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The result is converted to 1.31 , Yn2 variable is reused */
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc lower part of acc */
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_l = acc & 0xffffffff;
 222              	 .loc 1 145 0
 223 0180 3B6B     	 ldr r3,[r7,#48]
 224 0182 FB62     	 str r3,[r7,#44]
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc upper part of acc */
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 225              	 .loc 1 148 0
 226 0184 D7E90C23 	 ldrd r2,[r7,#48]
 227 0188 9A46     	 mov r10,r3
 228 018a 4FF0000B 	 mov fp,#0
 229 018e 5346     	 mov r3,r10
 230 0190 BB62     	 str r3,[r7,#40]
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn2 = (uint32_t) acc_l >> lShift | acc_h << uShift;
 231              	 .loc 1 151 0
 232 0192 FA6A     	 ldr r2,[r7,#44]
 233 0194 3B6D     	 ldr r3,[r7,#80]
 234 0196 22FA03F3 	 lsr r3,r2,r3
 235 019a 7A6D     	 ldr r2,[r7,#84]
 236 019c B96A     	 ldr r1,[r7,#40]
 237 019e 01FA02F2 	 lsl r2,r1,r2
 238 01a2 1343     	 orrs r3,r3,r2
 239 01a4 3B66     	 str r3,[r7,#96]
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Store the output in the destination buffer. */
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       *pOut++ = Yn2;
 240              	 .loc 1 154 0
 241 01a6 BB6F     	 ldr r3,[r7,#120]
 242 01a8 1A1D     	 adds r2,r3,#4
 243 01aa BA67     	 str r2,[r7,#120]
 244 01ac 3A6E     	 ldr r2,[r7,#96]
 245 01ae 1A60     	 str r2,[r3]
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Read the second input */
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn2 = *pIn++;
 246              	 .loc 1 157 0
 247 01b0 FB6F     	 ldr r3,[r7,#124]
 248 01b2 1A1D     	 adds r2,r3,#4
 249 01b4 FA67     	 str r2,[r7,#124]
 250 01b6 1B68     	 ldr r3,[r3]
 251 01b8 BB66     	 str r3,[r7,#104]
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = (q63_t) b0 *Xn2;
 252              	 .loc 1 162 0
 253 01ba FB6C     	 ldr r3,[r7,#76]
 254 01bc 1A46     	 mov r2,r3
 255 01be 4FEAE273 	 asr r3,r2,#31
 256 01c2 B96E     	 ldr r1,[r7,#104]
 257 01c4 0846     	 mov r0,r1
 258 01c6 4FEAE071 	 asr r1,r0,#31
 259 01ca 00FB03F5 	 mul r5,r0,r3
 260 01ce 02FB01F4 	 mul r4,r2,r1
 261 01d2 2C44     	 add r4,r4,r5
 262 01d4 A2FB0023 	 umull r2,r3,r2,r0
 263 01d8 E118     	 adds r1,r4,r3
 264 01da 0B46     	 mov r3,r1
 265 01dc C7E90C23 	 strd r2,[r7,#48]
 266 01e0 C7E90C23 	 strd r2,[r7,#48]
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b1 * x[n-1] */
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b1 *Xn;
 267              	 .loc 1 164 0
 268 01e4 BB6C     	 ldr r3,[r7,#72]
 269 01e6 1A46     	 mov r2,r3
 270 01e8 4FEAE273 	 asr r3,r2,#31
 271 01ec B96B     	 ldr r1,[r7,#56]
 272 01ee 0846     	 mov r0,r1
 273 01f0 4FEAE071 	 asr r1,r0,#31
 274 01f4 00FB03F5 	 mul r5,r0,r3
 275 01f8 02FB01F4 	 mul r4,r2,r1
 276 01fc 2C44     	 add r4,r4,r5
 277 01fe A2FB0023 	 umull r2,r3,r2,r0
 278 0202 E118     	 adds r1,r4,r3
 279 0204 0B46     	 mov r3,r1
 280 0206 D7E90C01 	 ldrd r0,[r7,#48]
 281 020a 1218     	 adds r2,r2,r0
 282 020c 43EB0103 	 adc r3,r3,r1
 283 0210 C7E90C23 	 strd r2,[r7,#48]
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b[2] * x[n-2] */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b2 *Xn1;
 284              	 .loc 1 166 0
 285 0214 7B6C     	 ldr r3,[r7,#68]
 286 0216 1A46     	 mov r2,r3
 287 0218 4FEAE273 	 asr r3,r2,#31
 288 021c F96E     	 ldr r1,[r7,#108]
 289 021e 0846     	 mov r0,r1
 290 0220 4FEAE071 	 asr r1,r0,#31
 291 0224 00FB03F5 	 mul r5,r0,r3
 292 0228 02FB01F4 	 mul r4,r2,r1
 293 022c 2C44     	 add r4,r4,r5
 294 022e A2FB0023 	 umull r2,r3,r2,r0
 295 0232 E118     	 adds r1,r4,r3
 296 0234 0B46     	 mov r3,r1
 297 0236 D7E90C01 	 ldrd r0,[r7,#48]
 298 023a 1218     	 adds r2,r2,r0
 299 023c 43EB0103 	 adc r3,r3,r1
 300 0240 C7E90C23 	 strd r2,[r7,#48]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a1 * y[n-1] */
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a1 *Yn2;
 301              	 .loc 1 168 0
 302 0244 3B6C     	 ldr r3,[r7,#64]
 303 0246 1A46     	 mov r2,r3
 304 0248 4FEAE273 	 asr r3,r2,#31
 305 024c 396E     	 ldr r1,[r7,#96]
 306 024e 0846     	 mov r0,r1
 307 0250 4FEAE071 	 asr r1,r0,#31
 308 0254 00FB03F5 	 mul r5,r0,r3
 309 0258 02FB01F4 	 mul r4,r2,r1
 310 025c 2C44     	 add r4,r4,r5
 311 025e A2FB0023 	 umull r2,r3,r2,r0
 312 0262 E118     	 adds r1,r4,r3
 313 0264 0B46     	 mov r3,r1
 314 0266 D7E90C01 	 ldrd r0,[r7,#48]
 315 026a 1218     	 adds r2,r2,r0
 316 026c 43EB0103 	 adc r3,r3,r1
 317 0270 C7E90C23 	 strd r2,[r7,#48]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a2 * y[n-2] */
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a2 *Yn1;
 318              	 .loc 1 170 0
 319 0274 FB6B     	 ldr r3,[r7,#60]
 320 0276 1A46     	 mov r2,r3
 321 0278 4FEAE273 	 asr r3,r2,#31
 322 027c 796E     	 ldr r1,[r7,#100]
 323 027e 0846     	 mov r0,r1
 324 0280 4FEAE071 	 asr r1,r0,#31
 325 0284 00FB03F5 	 mul r5,r0,r3
 326 0288 02FB01F4 	 mul r4,r2,r1
 327 028c 2C44     	 add r4,r4,r5
 328 028e A2FB0023 	 umull r2,r3,r2,r0
 329 0292 E118     	 adds r1,r4,r3
 330 0294 0B46     	 mov r3,r1
 331 0296 D7E90C01 	 ldrd r0,[r7,#48]
 332 029a 1218     	 adds r2,r2,r0
 333 029c 43EB0103 	 adc r3,r3,r1
 334 02a0 C7E90C23 	 strd r2,[r7,#48]
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The result is converted to 1.31, Yn1 variable is reused  */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc lower part of acc */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_l = acc & 0xffffffff;
 335              	 .loc 1 176 0
 336 02a4 3B6B     	 ldr r3,[r7,#48]
 337 02a6 FB62     	 str r3,[r7,#44]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc upper part of acc */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 338              	 .loc 1 179 0
 339 02a8 D7E90C23 	 ldrd r2,[r7,#48]
 340 02ac 1B00     	 movs r3,r3
 341 02ae 3B61     	 str r3,[r7,#16]
 342 02b0 0023     	 movs r3,#0
 343 02b2 7B61     	 str r3,[r7,#20]
 344 02b4 3B69     	 ldr r3,[r7,#16]
 345 02b6 BB62     	 str r3,[r7,#40]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn1 = (uint32_t) acc_l >> lShift | acc_h << uShift;
 346              	 .loc 1 183 0
 347 02b8 FA6A     	 ldr r2,[r7,#44]
 348 02ba 3B6D     	 ldr r3,[r7,#80]
 349 02bc 22FA03F3 	 lsr r3,r2,r3
 350 02c0 7A6D     	 ldr r2,[r7,#84]
 351 02c2 B96A     	 ldr r1,[r7,#40]
 352 02c4 01FA02F2 	 lsl r2,r1,r2
 353 02c8 1343     	 orrs r3,r3,r2
 354 02ca 7B66     	 str r3,[r7,#100]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Store the output in the destination buffer. */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       *pOut++ = Yn1;
 355              	 .loc 1 186 0
 356 02cc BB6F     	 ldr r3,[r7,#120]
 357 02ce 1A1D     	 adds r2,r3,#4
 358 02d0 BA67     	 str r2,[r7,#120]
 359 02d2 7A6E     	 ldr r2,[r7,#100]
 360 02d4 1A60     	 str r2,[r3]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Read the third input  */
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn1 = *pIn++;
 361              	 .loc 1 189 0
 362 02d6 FB6F     	 ldr r3,[r7,#124]
 363 02d8 1A1D     	 adds r2,r3,#4
 364 02da FA67     	 str r2,[r7,#124]
 365 02dc 1B68     	 ldr r3,[r3]
 366 02de FB66     	 str r3,[r7,#108]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] */
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = (q63_t) b0 *Xn1;
 367              	 .loc 1 194 0
 368 02e0 FB6C     	 ldr r3,[r7,#76]
 369 02e2 1A46     	 mov r2,r3
 370 02e4 4FEAE273 	 asr r3,r2,#31
 371 02e8 F96E     	 ldr r1,[r7,#108]
 372 02ea 0846     	 mov r0,r1
 373 02ec 4FEAE071 	 asr r1,r0,#31
 374 02f0 00FB03F5 	 mul r5,r0,r3
 375 02f4 02FB01F4 	 mul r4,r2,r1
 376 02f8 2C44     	 add r4,r4,r5
 377 02fa A2FB0023 	 umull r2,r3,r2,r0
 378 02fe E118     	 adds r1,r4,r3
 379 0300 0B46     	 mov r3,r1
 380 0302 C7E90C23 	 strd r2,[r7,#48]
 381 0306 C7E90C23 	 strd r2,[r7,#48]
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b1 * x[n-1] */
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b1 *Xn2;
 382              	 .loc 1 196 0
 383 030a BB6C     	 ldr r3,[r7,#72]
 384 030c 1A46     	 mov r2,r3
 385 030e 4FEAE273 	 asr r3,r2,#31
 386 0312 B96E     	 ldr r1,[r7,#104]
 387 0314 0846     	 mov r0,r1
 388 0316 4FEAE071 	 asr r1,r0,#31
 389 031a 00FB03F5 	 mul r5,r0,r3
 390 031e 02FB01F4 	 mul r4,r2,r1
 391 0322 2C44     	 add r4,r4,r5
 392 0324 A2FB0023 	 umull r2,r3,r2,r0
 393 0328 E118     	 adds r1,r4,r3
 394 032a 0B46     	 mov r3,r1
 395 032c D7E90C01 	 ldrd r0,[r7,#48]
 396 0330 1218     	 adds r2,r2,r0
 397 0332 43EB0103 	 adc r3,r3,r1
 398 0336 C7E90C23 	 strd r2,[r7,#48]
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b[2] * x[n-2] */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b2 *Xn;
 399              	 .loc 1 198 0
 400 033a 7B6C     	 ldr r3,[r7,#68]
 401 033c 1A46     	 mov r2,r3
 402 033e 4FEAE273 	 asr r3,r2,#31
 403 0342 B96B     	 ldr r1,[r7,#56]
 404 0344 0846     	 mov r0,r1
 405 0346 4FEAE071 	 asr r1,r0,#31
 406 034a 00FB03F5 	 mul r5,r0,r3
 407 034e 02FB01F4 	 mul r4,r2,r1
 408 0352 2C44     	 add r4,r4,r5
 409 0354 A2FB0023 	 umull r2,r3,r2,r0
 410 0358 E118     	 adds r1,r4,r3
 411 035a 0B46     	 mov r3,r1
 412 035c D7E90C01 	 ldrd r0,[r7,#48]
 413 0360 1218     	 adds r2,r2,r0
 414 0362 43EB0103 	 adc r3,r3,r1
 415 0366 C7E90C23 	 strd r2,[r7,#48]
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a1 * y[n-1] */
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a1 *Yn1;
 416              	 .loc 1 200 0
 417 036a 3B6C     	 ldr r3,[r7,#64]
 418 036c 1A46     	 mov r2,r3
 419 036e 4FEAE273 	 asr r3,r2,#31
 420 0372 796E     	 ldr r1,[r7,#100]
 421 0374 0846     	 mov r0,r1
 422 0376 4FEAE071 	 asr r1,r0,#31
 423 037a 00FB03F5 	 mul r5,r0,r3
 424 037e 02FB01F4 	 mul r4,r2,r1
 425 0382 2C44     	 add r4,r4,r5
 426 0384 A2FB0023 	 umull r2,r3,r2,r0
 427 0388 E118     	 adds r1,r4,r3
 428 038a 0B46     	 mov r3,r1
 429 038c D7E90C01 	 ldrd r0,[r7,#48]
 430 0390 1218     	 adds r2,r2,r0
 431 0392 43EB0103 	 adc r3,r3,r1
 432 0396 C7E90C23 	 strd r2,[r7,#48]
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a2 * y[n-2] */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a2 *Yn2;
 433              	 .loc 1 202 0
 434 039a FB6B     	 ldr r3,[r7,#60]
 435 039c 1A46     	 mov r2,r3
 436 039e 4FEAE273 	 asr r3,r2,#31
 437 03a2 396E     	 ldr r1,[r7,#96]
 438 03a4 0846     	 mov r0,r1
 439 03a6 4FEAE071 	 asr r1,r0,#31
 440 03aa 00FB03F5 	 mul r5,r0,r3
 441 03ae 02FB01F4 	 mul r4,r2,r1
 442 03b2 2C44     	 add r4,r4,r5
 443 03b4 A2FB0023 	 umull r2,r3,r2,r0
 444 03b8 E118     	 adds r1,r4,r3
 445 03ba 0B46     	 mov r3,r1
 446 03bc D7E90C01 	 ldrd r0,[r7,#48]
 447 03c0 1218     	 adds r2,r2,r0
 448 03c2 43EB0103 	 adc r3,r3,r1
 449 03c6 C7E90C23 	 strd r2,[r7,#48]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The result is converted to 1.31, Yn2 variable is reused  */
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc lower part of acc */
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_l = acc & 0xffffffff;
 450              	 .loc 1 206 0
 451 03ca 3B6B     	 ldr r3,[r7,#48]
 452 03cc FB62     	 str r3,[r7,#44]
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc upper part of acc */
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 453              	 .loc 1 209 0
 454 03ce D7E90C23 	 ldrd r2,[r7,#48]
 455 03d2 1B00     	 movs r3,r3
 456 03d4 BB60     	 str r3,[r7,#8]
 457 03d6 0023     	 movs r3,#0
 458 03d8 FB60     	 str r3,[r7,#12]
 459 03da BB68     	 ldr r3,[r7,#8]
 460 03dc BB62     	 str r3,[r7,#40]
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn2 = (uint32_t) acc_l >> lShift | acc_h << uShift;
 461              	 .loc 1 213 0
 462 03de FA6A     	 ldr r2,[r7,#44]
 463 03e0 3B6D     	 ldr r3,[r7,#80]
 464 03e2 22FA03F3 	 lsr r3,r2,r3
 465 03e6 7A6D     	 ldr r2,[r7,#84]
 466 03e8 B96A     	 ldr r1,[r7,#40]
 467 03ea 01FA02F2 	 lsl r2,r1,r2
 468 03ee 1343     	 orrs r3,r3,r2
 469 03f0 3B66     	 str r3,[r7,#96]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Store the output in the destination buffer. */
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       *pOut++ = Yn2;
 470              	 .loc 1 216 0
 471 03f2 BB6F     	 ldr r3,[r7,#120]
 472 03f4 1A1D     	 adds r2,r3,#4
 473 03f6 BA67     	 str r2,[r7,#120]
 474 03f8 3A6E     	 ldr r2,[r7,#96]
 475 03fa 1A60     	 str r2,[r3]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Read the forth input */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn = *pIn++;
 476              	 .loc 1 219 0
 477 03fc FB6F     	 ldr r3,[r7,#124]
 478 03fe 1A1D     	 adds r2,r3,#4
 479 0400 FA67     	 str r2,[r7,#124]
 480 0402 1B68     	 ldr r3,[r3]
 481 0404 BB63     	 str r3,[r7,#56]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] */
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = (q63_t) b0 *Xn;
 482              	 .loc 1 224 0
 483 0406 FB6C     	 ldr r3,[r7,#76]
 484 0408 1A46     	 mov r2,r3
 485 040a 4FEAE273 	 asr r3,r2,#31
 486 040e B96B     	 ldr r1,[r7,#56]
 487 0410 0846     	 mov r0,r1
 488 0412 4FEAE071 	 asr r1,r0,#31
 489 0416 00FB03F5 	 mul r5,r0,r3
 490 041a 02FB01F4 	 mul r4,r2,r1
 491 041e 2C44     	 add r4,r4,r5
 492 0420 A2FB0023 	 umull r2,r3,r2,r0
 493 0424 E118     	 adds r1,r4,r3
 494 0426 0B46     	 mov r3,r1
 495 0428 C7E90C23 	 strd r2,[r7,#48]
 496 042c C7E90C23 	 strd r2,[r7,#48]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b1 * x[n-1] */
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b1 *Xn1;
 497              	 .loc 1 226 0
 498 0430 BB6C     	 ldr r3,[r7,#72]
 499 0432 1A46     	 mov r2,r3
 500 0434 4FEAE273 	 asr r3,r2,#31
 501 0438 F96E     	 ldr r1,[r7,#108]
 502 043a 0846     	 mov r0,r1
 503 043c 4FEAE071 	 asr r1,r0,#31
 504 0440 00FB03F5 	 mul r5,r0,r3
 505 0444 02FB01F4 	 mul r4,r2,r1
 506 0448 2C44     	 add r4,r4,r5
 507 044a A2FB0023 	 umull r2,r3,r2,r0
 508 044e E118     	 adds r1,r4,r3
 509 0450 0B46     	 mov r3,r1
 510 0452 D7E90C01 	 ldrd r0,[r7,#48]
 511 0456 1218     	 adds r2,r2,r0
 512 0458 43EB0103 	 adc r3,r3,r1
 513 045c C7E90C23 	 strd r2,[r7,#48]
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b[2] * x[n-2] */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b2 *Xn2;
 514              	 .loc 1 228 0
 515 0460 7B6C     	 ldr r3,[r7,#68]
 516 0462 1A46     	 mov r2,r3
 517 0464 4FEAE273 	 asr r3,r2,#31
 518 0468 B96E     	 ldr r1,[r7,#104]
 519 046a 0846     	 mov r0,r1
 520 046c 4FEAE071 	 asr r1,r0,#31
 521 0470 00FB03F5 	 mul r5,r0,r3
 522 0474 02FB01F4 	 mul r4,r2,r1
 523 0478 2C44     	 add r4,r4,r5
 524 047a A2FB0023 	 umull r2,r3,r2,r0
 525 047e E118     	 adds r1,r4,r3
 526 0480 0B46     	 mov r3,r1
 527 0482 D7E90C01 	 ldrd r0,[r7,#48]
 528 0486 1218     	 adds r2,r2,r0
 529 0488 43EB0103 	 adc r3,r3,r1
 530 048c C7E90C23 	 strd r2,[r7,#48]
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a1 * y[n-1] */
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a1 *Yn2;
 531              	 .loc 1 230 0
 532 0490 3B6C     	 ldr r3,[r7,#64]
 533 0492 1A46     	 mov r2,r3
 534 0494 4FEAE273 	 asr r3,r2,#31
 535 0498 396E     	 ldr r1,[r7,#96]
 536 049a 0846     	 mov r0,r1
 537 049c 4FEAE071 	 asr r1,r0,#31
 538 04a0 00FB03F5 	 mul r5,r0,r3
 539 04a4 02FB01F4 	 mul r4,r2,r1
 540 04a8 2C44     	 add r4,r4,r5
 541 04aa A2FB0023 	 umull r2,r3,r2,r0
 542 04ae E118     	 adds r1,r4,r3
 543 04b0 0B46     	 mov r3,r1
 544 04b2 D7E90C01 	 ldrd r0,[r7,#48]
 545 04b6 1218     	 adds r2,r2,r0
 546 04b8 43EB0103 	 adc r3,r3,r1
 547 04bc C7E90C23 	 strd r2,[r7,#48]
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a2 * y[n-2] */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a2 *Yn1;
 548              	 .loc 1 232 0
 549 04c0 FB6B     	 ldr r3,[r7,#60]
 550 04c2 1A46     	 mov r2,r3
 551 04c4 4FEAE273 	 asr r3,r2,#31
 552 04c8 796E     	 ldr r1,[r7,#100]
 553 04ca 0846     	 mov r0,r1
 554 04cc 4FEAE071 	 asr r1,r0,#31
 555 04d0 00FB03F5 	 mul r5,r0,r3
 556 04d4 02FB01F4 	 mul r4,r2,r1
 557 04d8 2C44     	 add r4,r4,r5
 558 04da A2FB0023 	 umull r2,r3,r2,r0
 559 04de E118     	 adds r1,r4,r3
 560 04e0 0B46     	 mov r3,r1
 561 04e2 D7E90C01 	 ldrd r0,[r7,#48]
 562 04e6 1218     	 adds r2,r2,r0
 563 04e8 43EB0103 	 adc r3,r3,r1
 564 04ec C7E90C23 	 strd r2,[r7,#48]
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The result is converted to 1.31, Yn1 variable is reused  */
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc lower part of acc */
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_l = acc & 0xffffffff;
 565              	 .loc 1 236 0
 566 04f0 3B6B     	 ldr r3,[r7,#48]
 567 04f2 FB62     	 str r3,[r7,#44]
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Calc upper part of acc */
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc_h = (acc >> 32) & 0xffffffff;
 568              	 .loc 1 239 0
 569 04f4 D7E90C23 	 ldrd r2,[r7,#48]
 570 04f8 1B00     	 movs r3,r3
 571 04fa 3B60     	 str r3,[r7]
 572 04fc 0023     	 movs r3,#0
 573 04fe 7B60     	 str r3,[r7,#4]
 574 0500 3B68     	 ldr r3,[r7]
 575 0502 BB62     	 str r3,[r7,#40]
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Apply shift for lower part of acc and upper part of acc */
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn1 = (uint32_t) acc_l >> lShift | acc_h << uShift;
 576              	 .loc 1 242 0
 577 0504 FA6A     	 ldr r2,[r7,#44]
 578 0506 3B6D     	 ldr r3,[r7,#80]
 579 0508 22FA03F3 	 lsr r3,r2,r3
 580 050c 7A6D     	 ldr r2,[r7,#84]
 581 050e B96A     	 ldr r1,[r7,#40]
 582 0510 01FA02F2 	 lsl r2,r1,r2
 583 0514 1343     	 orrs r3,r3,r2
 584 0516 7B66     	 str r3,[r7,#100]
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Every time after the output is computed state should be updated. */
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The states should be updated as:  */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Xn2 = Xn1    */
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Xn1 = Xn     */
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Yn2 = Yn1    */
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Yn1 = acc    */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn2 = Xn1;
 585              	 .loc 1 250 0
 586 0518 FB6E     	 ldr r3,[r7,#108]
 587 051a BB66     	 str r3,[r7,#104]
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn1 = Xn;
 588              	 .loc 1 251 0
 589 051c BB6B     	 ldr r3,[r7,#56]
 590 051e FB66     	 str r3,[r7,#108]
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Store the output in the destination buffer. */
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       *pOut++ = Yn1;
 591              	 .loc 1 254 0
 592 0520 BB6F     	 ldr r3,[r7,#120]
 593 0522 1A1D     	 adds r2,r3,#4
 594 0524 BA67     	 str r2,[r7,#120]
 595 0526 7A6E     	 ldr r2,[r7,#100]
 596 0528 1A60     	 str r2,[r3]
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* decrement the loop counter */
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       sample--;
 597              	 .loc 1 257 0
 598 052a FB6D     	 ldr r3,[r7,#92]
 599 052c 013B     	 subs r3,r3,#1
 600 052e FB65     	 str r3,[r7,#92]
 601              	.L2:
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     {
 602              	 .loc 1 124 0
 603 0530 FB6D     	 ldr r3,[r7,#92]
 604 0532 002B     	 cmp r3,#0
 605 0534 7FF4AAAD 	 bne .L3
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     }
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****      ** No loop unrolling is used. */
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     sample = (blockSize & 0x3u);
 606              	 .loc 1 262 0
 607 0538 BB69     	 ldr r3,[r7,#24]
 608 053a 03F00303 	 and r3,r3,#3
 609 053e FB65     	 str r3,[r7,#92]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     while(sample > 0u)
 610              	 .loc 1 264 0
 611 0540 9FE0     	 b .L4
 612              	.L6:
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     {
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Read the input */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn = *pIn++;
 613              	 .loc 1 267 0
 614 0542 FB6F     	 ldr r3,[r7,#124]
 615 0544 1A1D     	 adds r2,r3,#4
 616 0546 FA67     	 str r2,[r7,#124]
 617 0548 1B68     	 ldr r3,[r3]
 618 054a BB63     	 str r3,[r7,#56]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = (q63_t) b0 *Xn;
 619              	 .loc 1 272 0
 620 054c FB6C     	 ldr r3,[r7,#76]
 621 054e 1A46     	 mov r2,r3
 622 0550 4FEAE273 	 asr r3,r2,#31
 623 0554 B96B     	 ldr r1,[r7,#56]
 624 0556 0846     	 mov r0,r1
 625 0558 4FEAE071 	 asr r1,r0,#31
 626 055c 00FB03F5 	 mul r5,r0,r3
 627 0560 02FB01F4 	 mul r4,r2,r1
 628 0564 2C44     	 add r4,r4,r5
 629 0566 A2FB0023 	 umull r2,r3,r2,r0
 630 056a E118     	 adds r1,r4,r3
 631 056c 0B46     	 mov r3,r1
 632 056e C7E90C23 	 strd r2,[r7,#48]
 633 0572 C7E90C23 	 strd r2,[r7,#48]
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b1 * x[n-1] */
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b1 *Xn1;
 634              	 .loc 1 274 0
 635 0576 BB6C     	 ldr r3,[r7,#72]
 636 0578 1A46     	 mov r2,r3
 637 057a 4FEAE273 	 asr r3,r2,#31
 638 057e F96E     	 ldr r1,[r7,#108]
 639 0580 0846     	 mov r0,r1
 640 0582 4FEAE071 	 asr r1,r0,#31
 641 0586 00FB03F5 	 mul r5,r0,r3
 642 058a 02FB01F4 	 mul r4,r2,r1
 643 058e 2C44     	 add r4,r4,r5
 644 0590 A2FB0023 	 umull r2,r3,r2,r0
 645 0594 E118     	 adds r1,r4,r3
 646 0596 0B46     	 mov r3,r1
 647 0598 D7E90C01 	 ldrd r0,[r7,#48]
 648 059c 1218     	 adds r2,r2,r0
 649 059e 43EB0103 	 adc r3,r3,r1
 650 05a2 C7E90C23 	 strd r2,[r7,#48]
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b[2] * x[n-2] */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b2 *Xn2;
 651              	 .loc 1 276 0
 652 05a6 7B6C     	 ldr r3,[r7,#68]
 653 05a8 1A46     	 mov r2,r3
 654 05aa 4FEAE273 	 asr r3,r2,#31
 655 05ae B96E     	 ldr r1,[r7,#104]
 656 05b0 0846     	 mov r0,r1
 657 05b2 4FEAE071 	 asr r1,r0,#31
 658 05b6 00FB03F5 	 mul r5,r0,r3
 659 05ba 02FB01F4 	 mul r4,r2,r1
 660 05be 2C44     	 add r4,r4,r5
 661 05c0 A2FB0023 	 umull r2,r3,r2,r0
 662 05c4 E118     	 adds r1,r4,r3
 663 05c6 0B46     	 mov r3,r1
 664 05c8 D7E90C01 	 ldrd r0,[r7,#48]
 665 05cc 1218     	 adds r2,r2,r0
 666 05ce 43EB0103 	 adc r3,r3,r1
 667 05d2 C7E90C23 	 strd r2,[r7,#48]
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a1 * y[n-1] */
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a1 *Yn1;
 668              	 .loc 1 278 0
 669 05d6 3B6C     	 ldr r3,[r7,#64]
 670 05d8 1A46     	 mov r2,r3
 671 05da 4FEAE273 	 asr r3,r2,#31
 672 05de 796E     	 ldr r1,[r7,#100]
 673 05e0 0846     	 mov r0,r1
 674 05e2 4FEAE071 	 asr r1,r0,#31
 675 05e6 00FB03F5 	 mul r5,r0,r3
 676 05ea 02FB01F4 	 mul r4,r2,r1
 677 05ee 2C44     	 add r4,r4,r5
 678 05f0 A2FB0023 	 umull r2,r3,r2,r0
 679 05f4 E118     	 adds r1,r4,r3
 680 05f6 0B46     	 mov r3,r1
 681 05f8 D7E90C01 	 ldrd r0,[r7,#48]
 682 05fc 1218     	 adds r2,r2,r0
 683 05fe 43EB0103 	 adc r3,r3,r1
 684 0602 C7E90C23 	 strd r2,[r7,#48]
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a2 * y[n-2] */
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a2 *Yn2;
 685              	 .loc 1 280 0
 686 0606 FB6B     	 ldr r3,[r7,#60]
 687 0608 1A46     	 mov r2,r3
 688 060a 4FEAE273 	 asr r3,r2,#31
 689 060e 396E     	 ldr r1,[r7,#96]
 690 0610 0846     	 mov r0,r1
 691 0612 4FEAE071 	 asr r1,r0,#31
 692 0616 00FB03F5 	 mul r5,r0,r3
 693 061a 02FB01F4 	 mul r4,r2,r1
 694 061e 2C44     	 add r4,r4,r5
 695 0620 A2FB0023 	 umull r2,r3,r2,r0
 696 0624 E118     	 adds r1,r4,r3
 697 0626 0B46     	 mov r3,r1
 698 0628 D7E90C01 	 ldrd r0,[r7,#48]
 699 062c 1218     	 adds r2,r2,r0
 700 062e 43EB0103 	 adc r3,r3,r1
 701 0632 C7E90C23 	 strd r2,[r7,#48]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The result is converted to 1.31  */
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = acc >> lShift;
 702              	 .loc 1 283 0
 703 0636 386D     	 ldr r0,[r7,#80]
 704 0638 D7E90C23 	 ldrd r2,[r7,#48]
 705 063c C0F12001 	 rsb r1,r0,#32
 706 0640 B0F12004 	 subs r4,r0,#32
 707 0644 22FA00F8 	 lsr r8,r2,r0
 708 0648 03FA01F1 	 lsl r1,r3,r1
 709 064c 48EA0108 	 orr r8,r8,r1
 710 0650 03D4     	 bmi .L5
 711 0652 43FA04F4 	 asr r4,r3,r4
 712 0656 48EA0408 	 orr r8,r8,r4
 713              	.L5:
 714 065a 43FA00F9 	 asr r9,r3,r0
 715 065e C7E90C89 	 strd r8,[r7,#48]
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Every time after the output is computed state should be updated. */
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The states should be updated as:  */
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Xn2 = Xn1    */
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Xn1 = Xn     */
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Yn2 = Yn1    */
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Yn1 = acc    */
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn2 = Xn1;
 716              	 .loc 1 291 0
 717 0662 FB6E     	 ldr r3,[r7,#108]
 718 0664 BB66     	 str r3,[r7,#104]
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn1 = Xn;
 719              	 .loc 1 292 0
 720 0666 BB6B     	 ldr r3,[r7,#56]
 721 0668 FB66     	 str r3,[r7,#108]
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn2 = Yn1;
 722              	 .loc 1 293 0
 723 066a 7B6E     	 ldr r3,[r7,#100]
 724 066c 3B66     	 str r3,[r7,#96]
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn1 = (q31_t) acc;
 725              	 .loc 1 294 0
 726 066e 3B6B     	 ldr r3,[r7,#48]
 727 0670 7B66     	 str r3,[r7,#100]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Store the output in the destination buffer. */
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       *pOut++ = (q31_t) acc;
 728              	 .loc 1 297 0
 729 0672 BB6F     	 ldr r3,[r7,#120]
 730 0674 1A1D     	 adds r2,r3,#4
 731 0676 BA67     	 str r2,[r7,#120]
 732 0678 3A6B     	 ldr r2,[r7,#48]
 733 067a 1A60     	 str r2,[r3]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* decrement the loop counter */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       sample--;
 734              	 .loc 1 300 0
 735 067c FB6D     	 ldr r3,[r7,#92]
 736 067e 013B     	 subs r3,r3,#1
 737 0680 FB65     	 str r3,[r7,#92]
 738              	.L4:
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     {
 739              	 .loc 1 264 0
 740 0682 FB6D     	 ldr r3,[r7,#92]
 741 0684 002B     	 cmp r3,#0
 742 0686 7FF45CAF 	 bne .L6
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     }
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*  The first stage goes from the input buffer to the output buffer. */
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*  Subsequent stages occur in-place in the output buffer */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     pIn = pDst;
 743              	 .loc 1 305 0
 744 068a FB69     	 ldr r3,[r7,#28]
 745 068c FB67     	 str r3,[r7,#124]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* Reset to destination pointer */
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     pOut = pDst;
 746              	 .loc 1 308 0
 747 068e FB69     	 ldr r3,[r7,#28]
 748 0690 BB67     	 str r3,[r7,#120]
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*  Store the updated state variables back into the pState array */
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Xn1;
 749              	 .loc 1 311 0
 750 0692 7B6F     	 ldr r3,[r7,#116]
 751 0694 1A1D     	 adds r2,r3,#4
 752 0696 7A67     	 str r2,[r7,#116]
 753 0698 FA6E     	 ldr r2,[r7,#108]
 754 069a 1A60     	 str r2,[r3]
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Xn2;
 755              	 .loc 1 312 0
 756 069c 7B6F     	 ldr r3,[r7,#116]
 757 069e 1A1D     	 adds r2,r3,#4
 758 06a0 7A67     	 str r2,[r7,#116]
 759 06a2 BA6E     	 ldr r2,[r7,#104]
 760 06a4 1A60     	 str r2,[r3]
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Yn1;
 761              	 .loc 1 313 0
 762 06a6 7B6F     	 ldr r3,[r7,#116]
 763 06a8 1A1D     	 adds r2,r3,#4
 764 06aa 7A67     	 str r2,[r7,#116]
 765 06ac 7A6E     	 ldr r2,[r7,#100]
 766 06ae 1A60     	 str r2,[r3]
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Yn2;
 767              	 .loc 1 314 0
 768 06b0 7B6F     	 ldr r3,[r7,#116]
 769 06b2 1A1D     	 adds r2,r3,#4
 770 06b4 7A67     	 str r2,[r7,#116]
 771 06b6 3A6E     	 ldr r2,[r7,#96]
 772 06b8 1A60     	 str r2,[r3]
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   } while(--stage);
 773              	 .loc 1 316 0
 774 06ba BB6D     	 ldr r3,[r7,#88]
 775 06bc 013B     	 subs r3,r3,#1
 776 06be BB65     	 str r3,[r7,#88]
 777 06c0 BB6D     	 ldr r3,[r7,#88]
 778 06c2 002B     	 cmp r3,#0
 779 06c4 7FF4B9AC 	 bne .L7
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** #else
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   /* Run the below code for Cortex-M0 */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   do
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   {
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* Reading the coefficients */
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     b0 = *pCoeffs++;
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     b1 = *pCoeffs++;
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     b2 = *pCoeffs++;
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     a1 = *pCoeffs++;
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     a2 = *pCoeffs++;
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* Reading the state values */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Xn1 = pState[0];
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Xn2 = pState[1];
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Yn1 = pState[2];
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     Yn2 = pState[3];
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*      The variables acc holds the output value that is computed:         
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****      *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2]         
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****      */
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     sample = blockSize;
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     while(sample > 0u)
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     {
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Read the input */
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn = *pIn++;
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc =  b0 * x[n] */
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = (q63_t) b0 *Xn;
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b1 * x[n-1] */
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b1 *Xn1;
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  b[2] * x[n-2] */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) b2 *Xn2;
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a1 * y[n-1] */
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a1 *Yn1;
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* acc +=  a2 * y[n-2] */
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc += (q63_t) a2 *Yn2;
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The result is converted to 1.31  */
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       acc = acc >> lShift;
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Every time after the output is computed state should be updated. */
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* The states should be updated as:  */
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Xn2 = Xn1    */
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Xn1 = Xn     */
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Yn2 = Yn1    */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Yn1 = acc    */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn2 = Xn1;
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Xn1 = Xn;
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn2 = Yn1;
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       Yn1 = (q31_t) acc;
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* Store the output in the destination buffer. */
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       *pOut++ = (q31_t) acc;
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       /* decrement the loop counter */
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****       sample--;
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     }
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*  The first stage goes from the input buffer to the output buffer. */
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*  Subsequent stages occur in-place in the output buffer */
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     pIn = pDst;
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /* Reset to destination pointer */
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     pOut = pDst;
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     /*  Store the updated state variables back into the pState array */
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Xn1;
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Xn2;
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Yn1;
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****     *pState++ = Yn2;
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c ****   } while(--stage);
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** 
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** #endif /*  #ifndef ARM_MATH_CM0_FAMILY_FAMILY */
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_biquad_cascade_df1_q31.c **** }
 780              	 .loc 1 398 0
 781 06c8 8437     	 adds r7,r7,#132
 782              	.LCFI3:
 783              	 .cfi_def_cfa_offset 28
 784 06ca BD46     	 mov sp,r7
 785              	.LCFI4:
 786              	 .cfi_def_cfa_register 13
 787              	 
 788 06cc BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 789              	.LCFI5:
 790              	 .cfi_restore 11
 791              	 .cfi_restore 10
 792              	 .cfi_restore 9
 793              	 .cfi_restore 8
 794              	 .cfi_restore 7
 795              	 .cfi_restore 5
 796              	 .cfi_restore 4
 797              	 .cfi_def_cfa_offset 0
 798 06d0 7047     	 bx lr
 799              	 .cfi_endproc
 800              	.LFE139:
 802 06d2 00BF     	 .text
 803              	.Letext0:
 804              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 805              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 806              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_biquad_cascade_df1_q31.c
    {standard input}:19     .text.arm_biquad_cascade_df1_q31:00000000 $t
    {standard input}:24     .text.arm_biquad_cascade_df1_q31:00000000 arm_biquad_cascade_df1_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
