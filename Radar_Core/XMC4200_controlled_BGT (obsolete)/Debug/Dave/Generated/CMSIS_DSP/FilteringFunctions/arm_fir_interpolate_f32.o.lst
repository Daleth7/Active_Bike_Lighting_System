   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_fir_interpolate_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_fmul
  19              	 .global __aeabi_fadd
  20              	 .section .text.arm_fir_interpolate_f32,"ax",%progbits
  21              	 .align 2
  22              	 .global arm_fir_interpolate_f32
  23              	 .thumb
  24              	 .thumb_func
  26              	arm_fir_interpolate_f32:
  27              	.LFB139:
  28              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * Title:	    arm_fir_interpolate_f32.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * Description:	FIR interpolation for floating-point sequences.    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @defgroup FIR_Interpolate Finite Impulse Response (FIR) Interpolator    
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * These functions combine an upsampler (zero stuffer) and an FIR filter.    
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * They are used in multirate systems for increasing the sample rate of a signal without introducin
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Conceptually, the functions are equivalent to the block diagram below:    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \image html FIRInterpolator.gif "Components included in the FIR Interpolator functions"    
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * After upsampling by a factor of <code>L</code>, the signal should be filtered by a lowpass filte
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * cutoff frequency of <code>1/L</code> in order to eliminate high frequency copies of the spectrum
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The user of the function is responsible for providing the filter coefficients.    
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The FIR interpolator functions provided in the CMSIS DSP Library combine the upsampler and FIR f
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The upsampler inserts <code>L-1</code> zeros between each sample.    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Instead of multiplying by these zero values, the FIR filter is designed to skip them.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * This leads to an efficient implementation without any wasted effort.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The functions operate on blocks of input and output data.    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pSrc</code> points to an array of <code>blockSize</code> input values and    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pDst</code> points to an array of <code>blockSize*L</code> output values.    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The library provides separate functions for Q15, Q31, and floating-point data types.    
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Algorithm:    
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The functions use a polyphase filter structure:    
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>    
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    y[n] = b[0] * x[n] + b[L]   * x[n-1] + ... + b[L*(phaseLength-1)] * x[n-phaseLength+1]    
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    y[n+1] = b[1] * x[n] + b[L+1] * x[n-1] + ... + b[L*(phaseLength-1)+1] * x[n-phaseLength+1]   
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    ...    
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    y[n+(L-1)] = b[L-1] * x[n] + b[2*L-1] * x[n-1] + ....+ b[L*(phaseLength-1)+(L-1)] * x[n-phase
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>    
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * This approach is more efficient than straightforward upsample-then-filter algorithms.    
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * With this method the computation is reduced by a factor of <code>1/L</code> when compared to usi
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par    
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pCoeffs</code> points to a coefficient array of size <code>numTaps</code>.    
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>numTaps</code> must be a multiple of the interpolation factor <code>L</code> and this is c
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * initialization functions.    
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Internally, the function divides the FIR filter's impulse response into shorter filters of lengt
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>phaseLength=numTaps/L</code>.    
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Coefficients are stored in time reversed order.    
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par    
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>    
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    {b[numTaps-1], b[numTaps-2], b[N-2], ..., b[1], b[0]}    
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>    
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par    
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pState</code> points to a state array of size <code>blockSize + phaseLength - 1</code>.   
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Samples in the state buffer are stored in the order:    
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par    
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>    
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    {x[n-phaseLength+1], x[n-phaseLength], x[n-phaseLength-1], x[n-phaseLength-2]....x[0], x[1], 
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>    
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The state variables are updated after each block of data is processed, the coefficients are unto
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Instance Structure    
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The coefficients and state variables for a filter are stored together in an instance data struct
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * A separate instance structure must be defined for each filter.    
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Coefficient arrays may be shared among several instances while state variable array should be al
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * There are separate instance structure declarations for each of the 3 supported data types.    
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Initialization Functions    
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * There is also an associated initialization function for each data type.    
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The initialization function performs the following operations:    
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * - Sets the values of the internal structure fields.    
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * - Zeros out the values in the state buffer.    
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * - Checks to make sure that the length of the filter is a multiple of the interpolation factor.  
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * To do this manually without calling the init function, assign the follow subfields of the instan
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * L (interpolation factor), pCoeffs, phaseLength (numTaps / L), pState. Also set all of the values
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par    
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Use of the initialization function is optional.    
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * However, if the initialization function is used, then the instance structure cannot be placed in
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * To place an instance structure into a const data section, the instance structure must be manuall
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * The code below statically initializes each of the 3 different data type filter instance structur
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <pre>    
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * arm_fir_interpolate_instance_f32 S = {L, phaseLength, pCoeffs, pState};    
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * arm_fir_interpolate_instance_q31 S = {L, phaseLength, pCoeffs, pState};    
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * arm_fir_interpolate_instance_q15 S = {L, phaseLength, pCoeffs, pState};    
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * </pre>    
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * where <code>L</code> is the interpolation factor; <code>phaseLength=numTaps/L</code> is the    
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * length of each of the shorter FIR filters used internally,    
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pCoeffs</code> is the address of the coefficient buffer;    
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * <code>pState</code> is the address of the state buffer.    
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Be sure to set the values in the state buffer to zeros when doing static initialization.    
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  *    
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * \par Fixed-Point Behavior    
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Care must be taken when using the fixed-point versions of the FIR interpolate filter functions. 
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * In particular, the overflow and saturation behavior of the accumulator used in each function mus
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * Refer to the function specific documentation below for usage guidelines.    
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /**    
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @addtogroup FIR_Interpolate    
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @{    
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** /**    
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @brief Processing function for the floating-point FIR interpolator.    
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[in] *S        points to an instance of the floating-point FIR interpolator structure.    
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[in] *pSrc     points to the block of input data.    
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[out] *pDst    points to the block of output data.    
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @param[in] blockSize number of input samples to process per call.    
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  * @return none.    
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****  */
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** #ifndef ARM_MATH_CM0_FAMILY
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** void arm_fir_interpolate_f32(
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   const arm_fir_interpolate_instance_f32 * S,
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pSrc,
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t * pDst,
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blockSize)
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** {
  29              	 .loc 1 153 0
  30              	 .cfi_startproc
  31              	 
  32              	 
  33 0000 80B5     	 push {r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 7,-8
  37              	 .cfi_offset 14,-4
  38 0002 9CB0     	 sub sp,sp,#112
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 120
  41 0004 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0006 F860     	 str r0,[r7,#12]
  45 0008 B960     	 str r1,[r7,#8]
  46 000a 7A60     	 str r2,[r7,#4]
  47 000c 3B60     	 str r3,[r7]
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pState = S->pState;                 /* State pointer */
  48              	 .loc 1 154 0
  49 000e FB68     	 ldr r3,[r7,#12]
  50 0010 9B68     	 ldr r3,[r3,#8]
  51 0012 FB66     	 str r3,[r7,#108]
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
  52              	 .loc 1 155 0
  53 0014 FB68     	 ldr r3,[r7,#12]
  54 0016 5B68     	 ldr r3,[r3,#4]
  55 0018 BB62     	 str r3,[r7,#40]
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *pStateCurnt;                        /* Points to the current sample of the state */
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t *ptr1, *ptr2;                        /* Temporary pointers for state and coefficient bu
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t sum0;                                /* Accumulators */
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t x0, c0;                              /* Temporary variables to hold state and coefficie
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t i, blkCnt, j;                         /* Loop counters */
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint16_t phaseLen = S->phaseLength, tapCnt;    /* Length of each polyphase filter component */
  56              	 .loc 1 161 0
  57 001a FB68     	 ldr r3,[r7,#12]
  58 001c 5B88     	 ldrh r3,[r3,#2]
  59 001e FB84     	 strh r3,[r7,#38]
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t acc0, acc1, acc2, acc3;
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t x1, x2, x3;
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   uint32_t blkCntN4;
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   float32_t c1, c2, c3;
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* S->pState buffer contains previous frame (phaseLen - 1) samples */
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* pStateCurnt points to the location where the new input data should be written */
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState + (phaseLen - 1u);
  60              	 .loc 1 169 0
  61 0020 FB68     	 ldr r3,[r7,#12]
  62 0022 9A68     	 ldr r2,[r3,#8]
  63 0024 FB8C     	 ldrh r3,[r7,#38]
  64 0026 03F18043 	 add r3,r3,#1073741824
  65 002a 013B     	 subs r3,r3,#1
  66 002c 9B00     	 lsls r3,r3,#2
  67 002e 1344     	 add r3,r3,r2
  68 0030 BB66     	 str r3,[r7,#104]
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Initialise  blkCnt */
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCnt = blockSize / 4;
  69              	 .loc 1 172 0
  70 0032 3B68     	 ldr r3,[r7]
  71 0034 9B08     	 lsrs r3,r3,#2
  72 0036 3B65     	 str r3,[r7,#80]
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   blkCntN4 = blockSize - (4 * blkCnt);
  73              	 .loc 1 173 0
  74 0038 3B6D     	 ldr r3,[r7,#80]
  75 003a 9B00     	 lsls r3,r3,#2
  76 003c 3A68     	 ldr r2,[r7]
  77 003e D31A     	 subs r3,r2,r3
  78 0040 FB62     	 str r3,[r7,#44]
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Samples loop unrolled by 4 */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while(blkCnt > 0u)
  79              	 .loc 1 176 0
  80 0042 CEE1     	 b .L2
  81              	.L9:
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
  82              	 .loc 1 179 0
  83 0044 BB6E     	 ldr r3,[r7,#104]
  84 0046 1A1D     	 adds r2,r3,#4
  85 0048 BA66     	 str r2,[r7,#104]
  86 004a BA68     	 ldr r2,[r7,#8]
  87 004c 111D     	 adds r1,r2,#4
  88 004e B960     	 str r1,[r7,#8]
  89 0050 1268     	 ldr r2,[r2]
  90 0052 1A60     	 str r2,[r3]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
  91              	 .loc 1 180 0
  92 0054 BB6E     	 ldr r3,[r7,#104]
  93 0056 1A1D     	 adds r2,r3,#4
  94 0058 BA66     	 str r2,[r7,#104]
  95 005a BA68     	 ldr r2,[r7,#8]
  96 005c 111D     	 adds r1,r2,#4
  97 005e B960     	 str r1,[r7,#8]
  98 0060 1268     	 ldr r2,[r2]
  99 0062 1A60     	 str r2,[r3]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
 100              	 .loc 1 181 0
 101 0064 BB6E     	 ldr r3,[r7,#104]
 102 0066 1A1D     	 adds r2,r3,#4
 103 0068 BA66     	 str r2,[r7,#104]
 104 006a BA68     	 ldr r2,[r7,#8]
 105 006c 111D     	 adds r1,r2,#4
 106 006e B960     	 str r1,[r7,#8]
 107 0070 1268     	 ldr r2,[r2]
 108 0072 1A60     	 str r2,[r3]
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
 109              	 .loc 1 182 0
 110 0074 BB6E     	 ldr r3,[r7,#104]
 111 0076 1A1D     	 adds r2,r3,#4
 112 0078 BA66     	 str r2,[r7,#104]
 113 007a BA68     	 ldr r2,[r7,#8]
 114 007c 111D     	 adds r1,r2,#4
 115 007e B960     	 str r1,[r7,#8]
 116 0080 1268     	 ldr r2,[r2]
 117 0082 1A60     	 str r2,[r3]
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1u;
 118              	 .loc 1 185 0
 119 0084 0123     	 movs r3,#1
 120 0086 FB64     	 str r3,[r7,#76]
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = (S->L);
 121              	 .loc 1 188 0
 122 0088 FB68     	 ldr r3,[r7,#12]
 123 008a 1B78     	 ldrb r3,[r3]
 124 008c 7B65     	 str r3,[r7,#84]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     while(i > 0u)
 125              	 .loc 1 190 0
 126 008e 93E1     	 b .L3
 127              	.L8:
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc0 = 0.0f;
 128              	 .loc 1 193 0
 129 0090 4FF00003 	 mov r3,#0
 130 0094 7B64     	 str r3,[r7,#68]
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc1 = 0.0f;
 131              	 .loc 1 194 0
 132 0096 4FF00003 	 mov r3,#0
 133 009a 3B64     	 str r3,[r7,#64]
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc2 = 0.0f;
 134              	 .loc 1 195 0
 135 009c 4FF00003 	 mov r3,#0
 136 00a0 FB63     	 str r3,[r7,#60]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       acc3 = 0.0f;
 137              	 .loc 1 196 0
 138 00a2 4FF00003 	 mov r3,#0
 139 00a6 BB63     	 str r3,[r7,#56]
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 140              	 .loc 1 199 0
 141 00a8 FB6E     	 ldr r3,[r7,#108]
 142 00aa 7B66     	 str r3,[r7,#100]
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 143              	 .loc 1 202 0
 144 00ac FB68     	 ldr r3,[r7,#12]
 145 00ae 1B78     	 ldrb r3,[r3]
 146 00b0 1A46     	 mov r2,r3
 147 00b2 FB6C     	 ldr r3,[r7,#76]
 148 00b4 D31A     	 subs r3,r2,r3
 149 00b6 9B00     	 lsls r3,r3,#2
 150 00b8 BA6A     	 ldr r2,[r7,#40]
 151 00ba 1344     	 add r3,r3,r2
 152 00bc 3B66     	 str r3,[r7,#96]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.        
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2u;
 153              	 .loc 1 206 0
 154 00be FB8C     	 ldrh r3,[r7,#38]
 155 00c0 9B08     	 lsrs r3,r3,#2
 156 00c2 A7F84A30 	 strh r3,[r7,#74]
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       x0 = *(ptr1++);
 157              	 .loc 1 208 0
 158 00c6 7B6E     	 ldr r3,[r7,#100]
 159 00c8 1A1D     	 adds r2,r3,#4
 160 00ca 7A66     	 str r2,[r7,#100]
 161 00cc 1B68     	 ldr r3,[r3]
 162 00ce BB65     	 str r3,[r7,#88]
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       x1 = *(ptr1++);
 163              	 .loc 1 209 0
 164 00d0 7B6E     	 ldr r3,[r7,#100]
 165 00d2 1A1D     	 adds r2,r3,#4
 166 00d4 7A66     	 str r2,[r7,#100]
 167 00d6 1B68     	 ldr r3,[r3]
 168 00d8 7B63     	 str r3,[r7,#52]
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       x2 = *(ptr1++);
 169              	 .loc 1 210 0
 170 00da 7B6E     	 ldr r3,[r7,#100]
 171 00dc 1A1D     	 adds r2,r3,#4
 172 00de 7A66     	 str r2,[r7,#100]
 173 00e0 1B68     	 ldr r3,[r3]
 174 00e2 3B63     	 str r3,[r7,#48]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while(tapCnt > 0u)
 175              	 .loc 1 212 0
 176 00e4 EDE0     	 b .L4
 177              	.L5:
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 178              	 .loc 1 216 0
 179 00e6 7B6E     	 ldr r3,[r7,#100]
 180 00e8 1A1D     	 adds r2,r3,#4
 181 00ea 7A66     	 str r2,[r7,#100]
 182 00ec 1B68     	 ldr r3,[r3]
 183 00ee 3B62     	 str r3,[r7,#32]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 184              	 .loc 1 219 0
 185 00f0 3B6E     	 ldr r3,[r7,#96]
 186 00f2 1B68     	 ldr r3,[r3]
 187 00f4 FB61     	 str r3,[r7,#28]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 188              	 .loc 1 222 0
 189 00f6 B86D     	 ldr r0,[r7,#88]
 190 00f8 F969     	 ldr r1,[r7,#28]
 191 00fa FFF7FEFF 	 bl __aeabi_fmul
 192 00fe 0346     	 mov r3,r0
 193 0100 786C     	 ldr r0,[r7,#68]
 194 0102 1946     	 mov r1,r3
 195 0104 FFF7FEFF 	 bl __aeabi_fadd
 196 0108 0346     	 mov r3,r0
 197 010a 7B64     	 str r3,[r7,#68]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 198              	 .loc 1 223 0
 199 010c 786B     	 ldr r0,[r7,#52]
 200 010e F969     	 ldr r1,[r7,#28]
 201 0110 FFF7FEFF 	 bl __aeabi_fmul
 202 0114 0346     	 mov r3,r0
 203 0116 386C     	 ldr r0,[r7,#64]
 204 0118 1946     	 mov r1,r3
 205 011a FFF7FEFF 	 bl __aeabi_fadd
 206 011e 0346     	 mov r3,r0
 207 0120 3B64     	 str r3,[r7,#64]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 208              	 .loc 1 224 0
 209 0122 386B     	 ldr r0,[r7,#48]
 210 0124 F969     	 ldr r1,[r7,#28]
 211 0126 FFF7FEFF 	 bl __aeabi_fmul
 212 012a 0346     	 mov r3,r0
 213 012c F86B     	 ldr r0,[r7,#60]
 214 012e 1946     	 mov r1,r3
 215 0130 FFF7FEFF 	 bl __aeabi_fadd
 216 0134 0346     	 mov r3,r0
 217 0136 FB63     	 str r3,[r7,#60]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 218              	 .loc 1 225 0
 219 0138 386A     	 ldr r0,[r7,#32]
 220 013a F969     	 ldr r1,[r7,#28]
 221 013c FFF7FEFF 	 bl __aeabi_fmul
 222 0140 0346     	 mov r3,r0
 223 0142 B86B     	 ldr r0,[r7,#56]
 224 0144 1946     	 mov r1,r3
 225 0146 FFF7FEFF 	 bl __aeabi_fadd
 226 014a 0346     	 mov r3,r0
 227 014c BB63     	 str r3,[r7,#56]
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c1 = *(ptr2 + S->L);
 228              	 .loc 1 228 0
 229 014e FB68     	 ldr r3,[r7,#12]
 230 0150 1B78     	 ldrb r3,[r3]
 231 0152 9B00     	 lsls r3,r3,#2
 232 0154 3A6E     	 ldr r2,[r7,#96]
 233 0156 1344     	 add r3,r3,r2
 234 0158 1B68     	 ldr r3,[r3]
 235 015a BB61     	 str r3,[r7,#24]
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 236              	 .loc 1 231 0
 237 015c 7B6E     	 ldr r3,[r7,#100]
 238 015e 1A1D     	 adds r2,r3,#4
 239 0160 7A66     	 str r2,[r7,#100]
 240 0162 1B68     	 ldr r3,[r3]
 241 0164 BB65     	 str r3,[r7,#88]
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x1 * c1;
 242              	 .loc 1 234 0
 243 0166 786B     	 ldr r0,[r7,#52]
 244 0168 B969     	 ldr r1,[r7,#24]
 245 016a FFF7FEFF 	 bl __aeabi_fmul
 246 016e 0346     	 mov r3,r0
 247 0170 786C     	 ldr r0,[r7,#68]
 248 0172 1946     	 mov r1,r3
 249 0174 FFF7FEFF 	 bl __aeabi_fadd
 250 0178 0346     	 mov r3,r0
 251 017a 7B64     	 str r3,[r7,#68]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x2 * c1;
 252              	 .loc 1 235 0
 253 017c 386B     	 ldr r0,[r7,#48]
 254 017e B969     	 ldr r1,[r7,#24]
 255 0180 FFF7FEFF 	 bl __aeabi_fmul
 256 0184 0346     	 mov r3,r0
 257 0186 386C     	 ldr r0,[r7,#64]
 258 0188 1946     	 mov r1,r3
 259 018a FFF7FEFF 	 bl __aeabi_fadd
 260 018e 0346     	 mov r3,r0
 261 0190 3B64     	 str r3,[r7,#64]
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x3 * c1;
 262              	 .loc 1 236 0
 263 0192 386A     	 ldr r0,[r7,#32]
 264 0194 B969     	 ldr r1,[r7,#24]
 265 0196 FFF7FEFF 	 bl __aeabi_fmul
 266 019a 0346     	 mov r3,r0
 267 019c F86B     	 ldr r0,[r7,#60]
 268 019e 1946     	 mov r1,r3
 269 01a0 FFF7FEFF 	 bl __aeabi_fadd
 270 01a4 0346     	 mov r3,r0
 271 01a6 FB63     	 str r3,[r7,#60]
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x0 * c1;
 272              	 .loc 1 237 0
 273 01a8 B86D     	 ldr r0,[r7,#88]
 274 01aa B969     	 ldr r1,[r7,#24]
 275 01ac FFF7FEFF 	 bl __aeabi_fmul
 276 01b0 0346     	 mov r3,r0
 277 01b2 B86B     	 ldr r0,[r7,#56]
 278 01b4 1946     	 mov r1,r3
 279 01b6 FFF7FEFF 	 bl __aeabi_fadd
 280 01ba 0346     	 mov r3,r0
 281 01bc BB63     	 str r3,[r7,#56]
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c2 = *(ptr2 + S->L * 2);
 282              	 .loc 1 240 0
 283 01be FB68     	 ldr r3,[r7,#12]
 284 01c0 1B78     	 ldrb r3,[r3]
 285 01c2 DB00     	 lsls r3,r3,#3
 286 01c4 1A46     	 mov r2,r3
 287 01c6 3B6E     	 ldr r3,[r7,#96]
 288 01c8 1344     	 add r3,r3,r2
 289 01ca 1B68     	 ldr r3,[r3]
 290 01cc 7B61     	 str r3,[r7,#20]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = *(ptr1++);
 291              	 .loc 1 243 0
 292 01ce 7B6E     	 ldr r3,[r7,#100]
 293 01d0 1A1D     	 adds r2,r3,#4
 294 01d2 7A66     	 str r2,[r7,#100]
 295 01d4 1B68     	 ldr r3,[r3]
 296 01d6 7B63     	 str r3,[r7,#52]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x2 * c2;
 297              	 .loc 1 246 0
 298 01d8 386B     	 ldr r0,[r7,#48]
 299 01da 7969     	 ldr r1,[r7,#20]
 300 01dc FFF7FEFF 	 bl __aeabi_fmul
 301 01e0 0346     	 mov r3,r0
 302 01e2 786C     	 ldr r0,[r7,#68]
 303 01e4 1946     	 mov r1,r3
 304 01e6 FFF7FEFF 	 bl __aeabi_fadd
 305 01ea 0346     	 mov r3,r0
 306 01ec 7B64     	 str r3,[r7,#68]
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x3 * c2;
 307              	 .loc 1 247 0
 308 01ee 386A     	 ldr r0,[r7,#32]
 309 01f0 7969     	 ldr r1,[r7,#20]
 310 01f2 FFF7FEFF 	 bl __aeabi_fmul
 311 01f6 0346     	 mov r3,r0
 312 01f8 386C     	 ldr r0,[r7,#64]
 313 01fa 1946     	 mov r1,r3
 314 01fc FFF7FEFF 	 bl __aeabi_fadd
 315 0200 0346     	 mov r3,r0
 316 0202 3B64     	 str r3,[r7,#64]
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x0 * c2;
 317              	 .loc 1 248 0
 318 0204 B86D     	 ldr r0,[r7,#88]
 319 0206 7969     	 ldr r1,[r7,#20]
 320 0208 FFF7FEFF 	 bl __aeabi_fmul
 321 020c 0346     	 mov r3,r0
 322 020e F86B     	 ldr r0,[r7,#60]
 323 0210 1946     	 mov r1,r3
 324 0212 FFF7FEFF 	 bl __aeabi_fadd
 325 0216 0346     	 mov r3,r0
 326 0218 FB63     	 str r3,[r7,#60]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x1 * c2;
 327              	 .loc 1 249 0
 328 021a 786B     	 ldr r0,[r7,#52]
 329 021c 7969     	 ldr r1,[r7,#20]
 330 021e FFF7FEFF 	 bl __aeabi_fmul
 331 0222 0346     	 mov r3,r0
 332 0224 B86B     	 ldr r0,[r7,#56]
 333 0226 1946     	 mov r1,r3
 334 0228 FFF7FEFF 	 bl __aeabi_fadd
 335 022c 0346     	 mov r3,r0
 336 022e BB63     	 str r3,[r7,#56]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c3 = *(ptr2 + S->L * 3);
 337              	 .loc 1 252 0
 338 0230 FB68     	 ldr r3,[r7,#12]
 339 0232 1B78     	 ldrb r3,[r3]
 340 0234 1A46     	 mov r2,r3
 341 0236 1346     	 mov r3,r2
 342 0238 5B00     	 lsls r3,r3,#1
 343 023a 1344     	 add r3,r3,r2
 344 023c 9B00     	 lsls r3,r3,#2
 345 023e 1A46     	 mov r2,r3
 346 0240 3B6E     	 ldr r3,[r7,#96]
 347 0242 1344     	 add r3,r3,r2
 348 0244 1B68     	 ldr r3,[r3]
 349 0246 3B61     	 str r3,[r7,#16]
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = *(ptr1++);
 350              	 .loc 1 255 0
 351 0248 7B6E     	 ldr r3,[r7,#100]
 352 024a 1A1D     	 adds r2,r3,#4
 353 024c 7A66     	 str r2,[r7,#100]
 354 024e 1B68     	 ldr r3,[r3]
 355 0250 3B63     	 str r3,[r7,#48]
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x3 * c3;
 356              	 .loc 1 258 0
 357 0252 386A     	 ldr r0,[r7,#32]
 358 0254 3969     	 ldr r1,[r7,#16]
 359 0256 FFF7FEFF 	 bl __aeabi_fmul
 360 025a 0346     	 mov r3,r0
 361 025c 786C     	 ldr r0,[r7,#68]
 362 025e 1946     	 mov r1,r3
 363 0260 FFF7FEFF 	 bl __aeabi_fadd
 364 0264 0346     	 mov r3,r0
 365 0266 7B64     	 str r3,[r7,#68]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x0 * c3;
 366              	 .loc 1 259 0
 367 0268 B86D     	 ldr r0,[r7,#88]
 368 026a 3969     	 ldr r1,[r7,#16]
 369 026c FFF7FEFF 	 bl __aeabi_fmul
 370 0270 0346     	 mov r3,r0
 371 0272 386C     	 ldr r0,[r7,#64]
 372 0274 1946     	 mov r1,r3
 373 0276 FFF7FEFF 	 bl __aeabi_fadd
 374 027a 0346     	 mov r3,r0
 375 027c 3B64     	 str r3,[r7,#64]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x1 * c3;
 376              	 .loc 1 260 0
 377 027e 786B     	 ldr r0,[r7,#52]
 378 0280 3969     	 ldr r1,[r7,#16]
 379 0282 FFF7FEFF 	 bl __aeabi_fmul
 380 0286 0346     	 mov r3,r0
 381 0288 F86B     	 ldr r0,[r7,#60]
 382 028a 1946     	 mov r1,r3
 383 028c FFF7FEFF 	 bl __aeabi_fadd
 384 0290 0346     	 mov r3,r0
 385 0292 FB63     	 str r3,[r7,#60]
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x2 * c3;
 386              	 .loc 1 261 0
 387 0294 386B     	 ldr r0,[r7,#48]
 388 0296 3969     	 ldr r1,[r7,#16]
 389 0298 FFF7FEFF 	 bl __aeabi_fmul
 390 029c 0346     	 mov r3,r0
 391 029e B86B     	 ldr r0,[r7,#56]
 392 02a0 1946     	 mov r1,r3
 393 02a2 FFF7FEFF 	 bl __aeabi_fadd
 394 02a6 0346     	 mov r3,r0
 395 02a8 BB63     	 str r3,[r7,#56]
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.        
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,        
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += 4 * S->L;
 396              	 .loc 1 267 0
 397 02aa FB68     	 ldr r3,[r7,#12]
 398 02ac 1B78     	 ldrb r3,[r3]
 399 02ae 1B01     	 lsls r3,r3,#4
 400 02b0 1A46     	 mov r2,r3
 401 02b2 3B6E     	 ldr r3,[r7,#96]
 402 02b4 1344     	 add r3,r3,r2
 403 02b6 3B66     	 str r3,[r7,#96]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 404              	 .loc 1 270 0
 405 02b8 B7F84A30 	 ldrh r3,[r7,#74]
 406 02bc 013B     	 subs r3,r3,#1
 407 02be A7F84A30 	 strh r3,[r7,#74]
 408              	.L4:
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 409              	 .loc 1 212 0
 410 02c2 B7F84A30 	 ldrh r3,[r7,#74]
 411 02c6 002B     	 cmp r3,#0
 412 02c8 7FF40DAF 	 bne .L5
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4u;
 413              	 .loc 1 274 0
 414 02cc FB8C     	 ldrh r3,[r7,#38]
 415 02ce 03F00303 	 and r3,r3,#3
 416 02d2 A7F84A30 	 strh r3,[r7,#74]
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while(tapCnt > 0u)
 417              	 .loc 1 276 0
 418 02d6 44E0     	 b .L6
 419              	.L7:
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x3 = *(ptr1++);
 420              	 .loc 1 280 0
 421 02d8 7B6E     	 ldr r3,[r7,#100]
 422 02da 1A1D     	 adds r2,r3,#4
 423 02dc 7A66     	 str r2,[r7,#100]
 424 02de 1B68     	 ldr r3,[r3]
 425 02e0 3B62     	 str r3,[r7,#32]
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 426              	 .loc 1 283 0
 427 02e2 3B6E     	 ldr r3,[r7,#96]
 428 02e4 1B68     	 ldr r3,[r3]
 429 02e6 FB61     	 str r3,[r7,#28]
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc0 += x0 * c0;
 430              	 .loc 1 286 0
 431 02e8 B86D     	 ldr r0,[r7,#88]
 432 02ea F969     	 ldr r1,[r7,#28]
 433 02ec FFF7FEFF 	 bl __aeabi_fmul
 434 02f0 0346     	 mov r3,r0
 435 02f2 786C     	 ldr r0,[r7,#68]
 436 02f4 1946     	 mov r1,r3
 437 02f6 FFF7FEFF 	 bl __aeabi_fadd
 438 02fa 0346     	 mov r3,r0
 439 02fc 7B64     	 str r3,[r7,#68]
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc1 += x1 * c0;
 440              	 .loc 1 287 0
 441 02fe 786B     	 ldr r0,[r7,#52]
 442 0300 F969     	 ldr r1,[r7,#28]
 443 0302 FFF7FEFF 	 bl __aeabi_fmul
 444 0306 0346     	 mov r3,r0
 445 0308 386C     	 ldr r0,[r7,#64]
 446 030a 1946     	 mov r1,r3
 447 030c FFF7FEFF 	 bl __aeabi_fadd
 448 0310 0346     	 mov r3,r0
 449 0312 3B64     	 str r3,[r7,#64]
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc2 += x2 * c0;
 450              	 .loc 1 288 0
 451 0314 386B     	 ldr r0,[r7,#48]
 452 0316 F969     	 ldr r1,[r7,#28]
 453 0318 FFF7FEFF 	 bl __aeabi_fmul
 454 031c 0346     	 mov r3,r0
 455 031e F86B     	 ldr r0,[r7,#60]
 456 0320 1946     	 mov r1,r3
 457 0322 FFF7FEFF 	 bl __aeabi_fadd
 458 0326 0346     	 mov r3,r0
 459 0328 FB63     	 str r3,[r7,#60]
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         acc3 += x3 * c0;
 460              	 .loc 1 289 0
 461 032a 386A     	 ldr r0,[r7,#32]
 462 032c F969     	 ldr r1,[r7,#28]
 463 032e FFF7FEFF 	 bl __aeabi_fmul
 464 0332 0346     	 mov r3,r0
 465 0334 B86B     	 ldr r0,[r7,#56]
 466 0336 1946     	 mov r1,r3
 467 0338 FFF7FEFF 	 bl __aeabi_fadd
 468 033c 0346     	 mov r3,r0
 469 033e BB63     	 str r3,[r7,#56]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 470              	 .loc 1 292 0
 471 0340 FB68     	 ldr r3,[r7,#12]
 472 0342 1B78     	 ldrb r3,[r3]
 473 0344 9B00     	 lsls r3,r3,#2
 474 0346 3A6E     	 ldr r2,[r7,#96]
 475 0348 1344     	 add r3,r3,r2
 476 034a 3B66     	 str r3,[r7,#96]
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* update states for next sample processing */
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = x1;
 477              	 .loc 1 295 0
 478 034c 7B6B     	 ldr r3,[r7,#52]
 479 034e BB65     	 str r3,[r7,#88]
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x1 = x2;
 480              	 .loc 1 296 0
 481 0350 3B6B     	 ldr r3,[r7,#48]
 482 0352 7B63     	 str r3,[r7,#52]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x2 = x3;
 483              	 .loc 1 297 0
 484 0354 3B6A     	 ldr r3,[r7,#32]
 485 0356 3B63     	 str r3,[r7,#48]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 486              	 .loc 1 300 0
 487 0358 B7F84A30 	 ldrh r3,[r7,#74]
 488 035c 013B     	 subs r3,r3,#1
 489 035e A7F84A30 	 strh r3,[r7,#74]
 490              	.L6:
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 491              	 .loc 1 276 0
 492 0362 B7F84A30 	 ldrh r3,[r7,#74]
 493 0366 002B     	 cmp r3,#0
 494 0368 B6D1     	 bne .L7
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst = acc0;
 495              	 .loc 1 304 0
 496 036a 7B68     	 ldr r3,[r7,#4]
 497 036c 7A6C     	 ldr r2,[r7,#68]
 498 036e 1A60     	 str r2,[r3]
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + S->L) = acc1;
 499              	 .loc 1 305 0
 500 0370 FB68     	 ldr r3,[r7,#12]
 501 0372 1B78     	 ldrb r3,[r3]
 502 0374 9B00     	 lsls r3,r3,#2
 503 0376 7A68     	 ldr r2,[r7,#4]
 504 0378 1344     	 add r3,r3,r2
 505 037a 3A6C     	 ldr r2,[r7,#64]
 506 037c 1A60     	 str r2,[r3]
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 2 * S->L) = acc2;
 507              	 .loc 1 306 0
 508 037e FB68     	 ldr r3,[r7,#12]
 509 0380 1B78     	 ldrb r3,[r3]
 510 0382 DB00     	 lsls r3,r3,#3
 511 0384 1A46     	 mov r2,r3
 512 0386 7B68     	 ldr r3,[r7,#4]
 513 0388 1344     	 add r3,r3,r2
 514 038a FA6B     	 ldr r2,[r7,#60]
 515 038c 1A60     	 str r2,[r3]
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *(pDst + 3 * S->L) = acc3;
 516              	 .loc 1 307 0
 517 038e FB68     	 ldr r3,[r7,#12]
 518 0390 1B78     	 ldrb r3,[r3]
 519 0392 1A46     	 mov r2,r3
 520 0394 1346     	 mov r3,r2
 521 0396 5B00     	 lsls r3,r3,#1
 522 0398 1344     	 add r3,r3,r2
 523 039a 9B00     	 lsls r3,r3,#2
 524 039c 1A46     	 mov r2,r3
 525 039e 7B68     	 ldr r3,[r7,#4]
 526 03a0 1344     	 add r3,r3,r2
 527 03a2 BA6B     	 ldr r2,[r7,#56]
 528 03a4 1A60     	 str r2,[r3]
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       pDst++;
 529              	 .loc 1 309 0
 530 03a6 7B68     	 ldr r3,[r7,#4]
 531 03a8 0433     	 adds r3,r3,#4
 532 03aa 7B60     	 str r3,[r7,#4]
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 533              	 .loc 1 312 0
 534 03ac FB6C     	 ldr r3,[r7,#76]
 535 03ae 0133     	 adds r3,r3,#1
 536 03b0 FB64     	 str r3,[r7,#76]
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 537              	 .loc 1 315 0
 538 03b2 7B6D     	 ldr r3,[r7,#84]
 539 03b4 013B     	 subs r3,r3,#1
 540 03b6 7B65     	 str r3,[r7,#84]
 541              	.L3:
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 542              	 .loc 1 190 0
 543 03b8 7B6D     	 ldr r3,[r7,#84]
 544 03ba 002B     	 cmp r3,#0
 545 03bc 7FF468AE 	 bne .L8
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1        
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 4;
 546              	 .loc 1 320 0
 547 03c0 FB6E     	 ldr r3,[r7,#108]
 548 03c2 1033     	 adds r3,r3,#16
 549 03c4 FB66     	 str r3,[r7,#108]
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     pDst += S->L * 3;
 550              	 .loc 1 322 0
 551 03c6 FB68     	 ldr r3,[r7,#12]
 552 03c8 1B78     	 ldrb r3,[r3]
 553 03ca 1A46     	 mov r2,r3
 554 03cc 1346     	 mov r3,r2
 555 03ce 5B00     	 lsls r3,r3,#1
 556 03d0 1344     	 add r3,r3,r2
 557 03d2 9B00     	 lsls r3,r3,#2
 558 03d4 1A46     	 mov r2,r3
 559 03d6 7B68     	 ldr r3,[r7,#4]
 560 03d8 1344     	 add r3,r3,r2
 561 03da 7B60     	 str r3,[r7,#4]
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCnt--;
 562              	 .loc 1 325 0
 563 03dc 3B6D     	 ldr r3,[r7,#80]
 564 03de 013B     	 subs r3,r3,#1
 565 03e0 3B65     	 str r3,[r7,#80]
 566              	.L2:
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 567              	 .loc 1 176 0
 568 03e2 3B6D     	 ldr r3,[r7,#80]
 569 03e4 002B     	 cmp r3,#0
 570 03e6 7FF42DAE 	 bne .L9
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.        
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** No loop unrolling is used. */
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while(blkCntN4 > 0u)
 571              	 .loc 1 331 0
 572 03ea C8E0     	 b .L10
 573              	.L17:
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Copy new input sample into the state buffer */
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pSrc++;
 574              	 .loc 1 334 0
 575 03ec BB6E     	 ldr r3,[r7,#104]
 576 03ee 1A1D     	 adds r2,r3,#4
 577 03f0 BA66     	 str r2,[r7,#104]
 578 03f2 BA68     	 ldr r2,[r7,#8]
 579 03f4 111D     	 adds r1,r2,#4
 580 03f6 B960     	 str r1,[r7,#8]
 581 03f8 1268     	 ldr r2,[r2]
 582 03fa 1A60     	 str r2,[r3]
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Address modifier index of coefficient buffer */
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     j = 1u;
 583              	 .loc 1 337 0
 584 03fc 0123     	 movs r3,#1
 585 03fe FB64     	 str r3,[r7,#76]
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Loop over the Interpolation factor. */
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     i = S->L;
 586              	 .loc 1 340 0
 587 0400 FB68     	 ldr r3,[r7,#12]
 588 0402 1B78     	 ldrb r3,[r3]
 589 0404 7B65     	 str r3,[r7,#84]
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     while(i > 0u)
 590              	 .loc 1 341 0
 591 0406 B0E0     	 b .L11
 592              	.L16:
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Set accumulator to zero */
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       sum0 = 0.0f;
 593              	 .loc 1 344 0
 594 0408 4FF00003 	 mov r3,#0
 595 040c FB65     	 str r3,[r7,#92]
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize state pointer */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr1 = pState;
 596              	 .loc 1 347 0
 597 040e FB6E     	 ldr r3,[r7,#108]
 598 0410 7B66     	 str r3,[r7,#100]
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Initialize coefficient pointer */
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       ptr2 = pCoeffs + (S->L - j);
 599              	 .loc 1 350 0
 600 0412 FB68     	 ldr r3,[r7,#12]
 601 0414 1B78     	 ldrb r3,[r3]
 602 0416 1A46     	 mov r2,r3
 603 0418 FB6C     	 ldr r3,[r7,#76]
 604 041a D31A     	 subs r3,r2,r3
 605 041c 9B00     	 lsls r3,r3,#2
 606 041e BA6A     	 ldr r2,[r7,#40]
 607 0420 1344     	 add r3,r3,r2
 608 0422 3B66     	 str r3,[r7,#96]
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Loop over the polyPhase length. Unroll by a factor of 4.        
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****        ** Repeat until we've computed numTaps-(4*S->L) coefficients. */
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen >> 2u;
 609              	 .loc 1 354 0
 610 0424 FB8C     	 ldrh r3,[r7,#38]
 611 0426 9B08     	 lsrs r3,r3,#2
 612 0428 A7F84A30 	 strh r3,[r7,#74]
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while(tapCnt > 0u)
 613              	 .loc 1 355 0
 614 042c 68E0     	 b .L12
 615              	.L13:
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 616              	 .loc 1 359 0
 617 042e 3B6E     	 ldr r3,[r7,#96]
 618 0430 1B68     	 ldr r3,[r3]
 619 0432 FB61     	 str r3,[r7,#28]
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Upsampling is done by stuffing L-1 zeros between each sample.        
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * So instead of multiplying zeros with coefficients,        
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****          * Increment the coefficient pointer by interpolation factor times. */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 620              	 .loc 1 364 0
 621 0434 FB68     	 ldr r3,[r7,#12]
 622 0436 1B78     	 ldrb r3,[r3]
 623 0438 9B00     	 lsls r3,r3,#2
 624 043a 3A6E     	 ldr r2,[r7,#96]
 625 043c 1344     	 add r3,r3,r2
 626 043e 3B66     	 str r3,[r7,#96]
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 627              	 .loc 1 367 0
 628 0440 7B6E     	 ldr r3,[r7,#100]
 629 0442 1A1D     	 adds r2,r3,#4
 630 0444 7A66     	 str r2,[r7,#100]
 631 0446 1B68     	 ldr r3,[r3]
 632 0448 BB65     	 str r3,[r7,#88]
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 633              	 .loc 1 370 0
 634 044a B86D     	 ldr r0,[r7,#88]
 635 044c F969     	 ldr r1,[r7,#28]
 636 044e FFF7FEFF 	 bl __aeabi_fmul
 637 0452 0346     	 mov r3,r0
 638 0454 F86D     	 ldr r0,[r7,#92]
 639 0456 1946     	 mov r1,r3
 640 0458 FFF7FEFF 	 bl __aeabi_fadd
 641 045c 0346     	 mov r3,r0
 642 045e FB65     	 str r3,[r7,#92]
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 643              	 .loc 1 373 0
 644 0460 3B6E     	 ldr r3,[r7,#96]
 645 0462 1B68     	 ldr r3,[r3]
 646 0464 FB61     	 str r3,[r7,#28]
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 647              	 .loc 1 376 0
 648 0466 FB68     	 ldr r3,[r7,#12]
 649 0468 1B78     	 ldrb r3,[r3]
 650 046a 9B00     	 lsls r3,r3,#2
 651 046c 3A6E     	 ldr r2,[r7,#96]
 652 046e 1344     	 add r3,r3,r2
 653 0470 3B66     	 str r3,[r7,#96]
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 654              	 .loc 1 379 0
 655 0472 7B6E     	 ldr r3,[r7,#100]
 656 0474 1A1D     	 adds r2,r3,#4
 657 0476 7A66     	 str r2,[r7,#100]
 658 0478 1B68     	 ldr r3,[r3]
 659 047a BB65     	 str r3,[r7,#88]
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 660              	 .loc 1 382 0
 661 047c B86D     	 ldr r0,[r7,#88]
 662 047e F969     	 ldr r1,[r7,#28]
 663 0480 FFF7FEFF 	 bl __aeabi_fmul
 664 0484 0346     	 mov r3,r0
 665 0486 F86D     	 ldr r0,[r7,#92]
 666 0488 1946     	 mov r1,r3
 667 048a FFF7FEFF 	 bl __aeabi_fadd
 668 048e 0346     	 mov r3,r0
 669 0490 FB65     	 str r3,[r7,#92]
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 670              	 .loc 1 385 0
 671 0492 3B6E     	 ldr r3,[r7,#96]
 672 0494 1B68     	 ldr r3,[r3]
 673 0496 FB61     	 str r3,[r7,#28]
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 674              	 .loc 1 388 0
 675 0498 FB68     	 ldr r3,[r7,#12]
 676 049a 1B78     	 ldrb r3,[r3]
 677 049c 9B00     	 lsls r3,r3,#2
 678 049e 3A6E     	 ldr r2,[r7,#96]
 679 04a0 1344     	 add r3,r3,r2
 680 04a2 3B66     	 str r3,[r7,#96]
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 681              	 .loc 1 391 0
 682 04a4 7B6E     	 ldr r3,[r7,#100]
 683 04a6 1A1D     	 adds r2,r3,#4
 684 04a8 7A66     	 str r2,[r7,#100]
 685 04aa 1B68     	 ldr r3,[r3]
 686 04ac BB65     	 str r3,[r7,#88]
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 394:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 687              	 .loc 1 394 0
 688 04ae B86D     	 ldr r0,[r7,#88]
 689 04b0 F969     	 ldr r1,[r7,#28]
 690 04b2 FFF7FEFF 	 bl __aeabi_fmul
 691 04b6 0346     	 mov r3,r0
 692 04b8 F86D     	 ldr r0,[r7,#92]
 693 04ba 1946     	 mov r1,r3
 694 04bc FFF7FEFF 	 bl __aeabi_fadd
 695 04c0 0346     	 mov r3,r0
 696 04c2 FB65     	 str r3,[r7,#92]
 395:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 396:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the coefficient */
 397:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         c0 = *(ptr2);
 697              	 .loc 1 397 0
 698 04c4 3B6E     	 ldr r3,[r7,#96]
 699 04c6 1B68     	 ldr r3,[r3]
 700 04c8 FB61     	 str r3,[r7,#28]
 398:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 399:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 400:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 701              	 .loc 1 400 0
 702 04ca FB68     	 ldr r3,[r7,#12]
 703 04cc 1B78     	 ldrb r3,[r3]
 704 04ce 9B00     	 lsls r3,r3,#2
 705 04d0 3A6E     	 ldr r2,[r7,#96]
 706 04d2 1344     	 add r3,r3,r2
 707 04d4 3B66     	 str r3,[r7,#96]
 401:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 402:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Read the input sample */
 403:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         x0 = *(ptr1++);
 708              	 .loc 1 403 0
 709 04d6 7B6E     	 ldr r3,[r7,#100]
 710 04d8 1A1D     	 adds r2,r3,#4
 711 04da 7A66     	 str r2,[r7,#100]
 712 04dc 1B68     	 ldr r3,[r3]
 713 04de BB65     	 str r3,[r7,#88]
 404:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 405:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 406:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += x0 * c0;
 714              	 .loc 1 406 0
 715 04e0 B86D     	 ldr r0,[r7,#88]
 716 04e2 F969     	 ldr r1,[r7,#28]
 717 04e4 FFF7FEFF 	 bl __aeabi_fmul
 718 04e8 0346     	 mov r3,r0
 719 04ea F86D     	 ldr r0,[r7,#92]
 720 04ec 1946     	 mov r1,r3
 721 04ee FFF7FEFF 	 bl __aeabi_fadd
 722 04f2 0346     	 mov r3,r0
 723 04f4 FB65     	 str r3,[r7,#92]
 407:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 408:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 409:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 724              	 .loc 1 409 0
 725 04f6 B7F84A30 	 ldrh r3,[r7,#74]
 726 04fa 013B     	 subs r3,r3,#1
 727 04fc A7F84A30 	 strh r3,[r7,#74]
 728              	.L12:
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 729              	 .loc 1 355 0
 730 0500 B7F84A30 	 ldrh r3,[r7,#74]
 731 0504 002B     	 cmp r3,#0
 732 0506 92D1     	 bne .L13
 410:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 411:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 412:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* If the polyPhase length is not a multiple of 4, compute the remaining filter taps */
 413:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       tapCnt = phaseLen % 0x4u;
 733              	 .loc 1 413 0
 734 0508 FB8C     	 ldrh r3,[r7,#38]
 735 050a 03F00303 	 and r3,r3,#3
 736 050e A7F84A30 	 strh r3,[r7,#74]
 414:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       while(tapCnt > 0u)
 737              	 .loc 1 415 0
 738 0512 1BE0     	 b .L14
 739              	.L15:
 416:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 417:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Perform the multiply-accumulate */
 418:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         sum0 += *(ptr1++) * (*ptr2);
 740              	 .loc 1 418 0
 741 0514 7B6E     	 ldr r3,[r7,#100]
 742 0516 1A1D     	 adds r2,r3,#4
 743 0518 7A66     	 str r2,[r7,#100]
 744 051a 1A68     	 ldr r2,[r3]
 745 051c 3B6E     	 ldr r3,[r7,#96]
 746 051e 1B68     	 ldr r3,[r3]
 747 0520 1046     	 mov r0,r2
 748 0522 1946     	 mov r1,r3
 749 0524 FFF7FEFF 	 bl __aeabi_fmul
 750 0528 0346     	 mov r3,r0
 751 052a F86D     	 ldr r0,[r7,#92]
 752 052c 1946     	 mov r1,r3
 753 052e FFF7FEFF 	 bl __aeabi_fadd
 754 0532 0346     	 mov r3,r0
 755 0534 FB65     	 str r3,[r7,#92]
 419:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 420:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Increment the coefficient pointer by interpolation factor times. */
 421:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         ptr2 += S->L;
 756              	 .loc 1 421 0
 757 0536 FB68     	 ldr r3,[r7,#12]
 758 0538 1B78     	 ldrb r3,[r3]
 759 053a 9B00     	 lsls r3,r3,#2
 760 053c 3A6E     	 ldr r2,[r7,#96]
 761 053e 1344     	 add r3,r3,r2
 762 0540 3B66     	 str r3,[r7,#96]
 422:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 423:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         /* Decrement the loop counter */
 424:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****         tapCnt--;
 763              	 .loc 1 424 0
 764 0542 B7F84A30 	 ldrh r3,[r7,#74]
 765 0546 013B     	 subs r3,r3,#1
 766 0548 A7F84A30 	 strh r3,[r7,#74]
 767              	.L14:
 415:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       {
 768              	 .loc 1 415 0
 769 054c B7F84A30 	 ldrh r3,[r7,#74]
 770 0550 002B     	 cmp r3,#0
 771 0552 DFD1     	 bne .L15
 425:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       }
 426:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 427:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* The result is in the accumulator, store in the destination buffer. */
 428:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       *pDst++ = sum0;
 772              	 .loc 1 428 0
 773 0554 7B68     	 ldr r3,[r7,#4]
 774 0556 1A1D     	 adds r2,r3,#4
 775 0558 7A60     	 str r2,[r7,#4]
 776 055a FA6D     	 ldr r2,[r7,#92]
 777 055c 1A60     	 str r2,[r3]
 429:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 430:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Increment the address modifier index of coefficient buffer */
 431:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       j++;
 778              	 .loc 1 431 0
 779 055e FB6C     	 ldr r3,[r7,#76]
 780 0560 0133     	 adds r3,r3,#1
 781 0562 FB64     	 str r3,[r7,#76]
 432:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 433:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       /* Decrement the loop counter */
 434:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****       i--;
 782              	 .loc 1 434 0
 783 0564 7B6D     	 ldr r3,[r7,#84]
 784 0566 013B     	 subs r3,r3,#1
 785 0568 7B65     	 str r3,[r7,#84]
 786              	.L11:
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     {
 787              	 .loc 1 341 0
 788 056a 7B6D     	 ldr r3,[r7,#84]
 789 056c 002B     	 cmp r3,#0
 790 056e 7FF44BAF 	 bne .L16
 435:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     }
 436:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 437:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Advance the state pointer by 1        
 438:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****      * to process the next group of interpolation factor number samples */
 439:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     pState = pState + 1;
 791              	 .loc 1 439 0
 792 0572 FB6E     	 ldr r3,[r7,#108]
 793 0574 0433     	 adds r3,r3,#4
 794 0576 FB66     	 str r3,[r7,#108]
 440:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 441:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 442:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     blkCntN4--;
 795              	 .loc 1 442 0
 796 0578 FB6A     	 ldr r3,[r7,#44]
 797 057a 013B     	 subs r3,r3,#1
 798 057c FB62     	 str r3,[r7,#44]
 799              	.L10:
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 800              	 .loc 1 331 0
 801 057e FB6A     	 ldr r3,[r7,#44]
 802 0580 002B     	 cmp r3,#0
 803 0582 7FF433AF 	 bne .L17
 443:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 444:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 445:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Processing is complete.        
 446:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** Now copy the last phaseLen - 1 samples to the satrt of the state buffer.        
 447:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****    ** This prepares the state buffer for the next function call. */
 448:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 449:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* Points to the start of the state buffer */
 450:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   pStateCurnt = S->pState;
 804              	 .loc 1 450 0
 805 0586 FB68     	 ldr r3,[r7,#12]
 806 0588 9B68     	 ldr r3,[r3,#8]
 807 058a BB66     	 str r3,[r7,#104]
 451:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 452:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1u) >> 2u;
 808              	 .loc 1 452 0
 809 058c FB8C     	 ldrh r3,[r7,#38]
 810 058e 013B     	 subs r3,r3,#1
 811 0590 9B08     	 lsrs r3,r3,#2
 812 0592 A7F84A30 	 strh r3,[r7,#74]
 453:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 454:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while(tapCnt > 0u)
 813              	 .loc 1 455 0
 814 0596 24E0     	 b .L18
 815              	.L19:
 456:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 457:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 816              	 .loc 1 457 0
 817 0598 BB6E     	 ldr r3,[r7,#104]
 818 059a 1A1D     	 adds r2,r3,#4
 819 059c BA66     	 str r2,[r7,#104]
 820 059e FA6E     	 ldr r2,[r7,#108]
 821 05a0 111D     	 adds r1,r2,#4
 822 05a2 F966     	 str r1,[r7,#108]
 823 05a4 1268     	 ldr r2,[r2]
 824 05a6 1A60     	 str r2,[r3]
 458:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 825              	 .loc 1 458 0
 826 05a8 BB6E     	 ldr r3,[r7,#104]
 827 05aa 1A1D     	 adds r2,r3,#4
 828 05ac BA66     	 str r2,[r7,#104]
 829 05ae FA6E     	 ldr r2,[r7,#108]
 830 05b0 111D     	 adds r1,r2,#4
 831 05b2 F966     	 str r1,[r7,#108]
 832 05b4 1268     	 ldr r2,[r2]
 833 05b6 1A60     	 str r2,[r3]
 459:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 834              	 .loc 1 459 0
 835 05b8 BB6E     	 ldr r3,[r7,#104]
 836 05ba 1A1D     	 adds r2,r3,#4
 837 05bc BA66     	 str r2,[r7,#104]
 838 05be FA6E     	 ldr r2,[r7,#108]
 839 05c0 111D     	 adds r1,r2,#4
 840 05c2 F966     	 str r1,[r7,#108]
 841 05c4 1268     	 ldr r2,[r2]
 842 05c6 1A60     	 str r2,[r3]
 460:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 843              	 .loc 1 460 0
 844 05c8 BB6E     	 ldr r3,[r7,#104]
 845 05ca 1A1D     	 adds r2,r3,#4
 846 05cc BA66     	 str r2,[r7,#104]
 847 05ce FA6E     	 ldr r2,[r7,#108]
 848 05d0 111D     	 adds r1,r2,#4
 849 05d2 F966     	 str r1,[r7,#108]
 850 05d4 1268     	 ldr r2,[r2]
 851 05d6 1A60     	 str r2,[r3]
 461:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 462:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 463:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 852              	 .loc 1 463 0
 853 05d8 B7F84A30 	 ldrh r3,[r7,#74]
 854 05dc 013B     	 subs r3,r3,#1
 855 05de A7F84A30 	 strh r3,[r7,#74]
 856              	.L18:
 455:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 857              	 .loc 1 455 0
 858 05e2 B7F84A30 	 ldrh r3,[r7,#74]
 859 05e6 002B     	 cmp r3,#0
 860 05e8 D6D1     	 bne .L19
 464:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 465:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 466:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   tapCnt = (phaseLen - 1u) % 0x04u;
 861              	 .loc 1 466 0
 862 05ea FB8C     	 ldrh r3,[r7,#38]
 863 05ec 013B     	 subs r3,r3,#1
 864 05ee 9BB2     	 uxth r3,r3
 865 05f0 03F00303 	 and r3,r3,#3
 866 05f4 A7F84A30 	 strh r3,[r7,#74]
 467:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 468:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   /* copy data */
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   while(tapCnt > 0u)
 867              	 .loc 1 469 0
 868 05f8 0CE0     	 b .L20
 869              	.L21:
 470:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 471:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     *pStateCurnt++ = *pState++;
 870              	 .loc 1 471 0
 871 05fa BB6E     	 ldr r3,[r7,#104]
 872 05fc 1A1D     	 adds r2,r3,#4
 873 05fe BA66     	 str r2,[r7,#104]
 874 0600 FA6E     	 ldr r2,[r7,#108]
 875 0602 111D     	 adds r1,r2,#4
 876 0604 F966     	 str r1,[r7,#108]
 877 0606 1268     	 ldr r2,[r2]
 878 0608 1A60     	 str r2,[r3]
 472:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** 
 473:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     /* Decrement the loop counter */
 474:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****     tapCnt--;
 879              	 .loc 1 474 0
 880 060a B7F84A30 	 ldrh r3,[r7,#74]
 881 060e 013B     	 subs r3,r3,#1
 882 0610 A7F84A30 	 strh r3,[r7,#74]
 883              	.L20:
 469:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   {
 884              	 .loc 1 469 0
 885 0614 B7F84A30 	 ldrh r3,[r7,#74]
 886 0618 002B     	 cmp r3,#0
 887 061a EED1     	 bne .L21
 475:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c ****   }
 476:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_interpolate_f32.c **** }
 888              	 .loc 1 476 0
 889 061c 7037     	 adds r7,r7,#112
 890              	.LCFI3:
 891              	 .cfi_def_cfa_offset 8
 892 061e BD46     	 mov sp,r7
 893              	.LCFI4:
 894              	 .cfi_def_cfa_register 13
 895              	 
 896 0620 80BD     	 pop {r7,pc}
 897              	 .cfi_endproc
 898              	.LFE139:
 900 0622 00BF     	 .text
 901              	.Letext0:
 902              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 903              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 904              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_interpolate_f32.c
    {standard input}:21     .text.arm_fir_interpolate_f32:00000000 $t
    {standard input}:26     .text.arm_fir_interpolate_f32:00000000 arm_fir_interpolate_f32
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_fadd
