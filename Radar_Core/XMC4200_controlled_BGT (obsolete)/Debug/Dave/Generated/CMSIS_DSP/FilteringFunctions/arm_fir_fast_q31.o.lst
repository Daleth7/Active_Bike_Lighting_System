   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_fir_fast_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_fir_fast_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_fir_fast_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_fir_fast_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * $Date:        31. July 2014 
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * Title:	    arm_fir_fast_q31.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * Description:	Processing function for the Q31 Fast FIR filter.    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * Target Processor: Cortex-M4/Cortex-M3
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * POSSIBILITY OF SUCH DAMAGE.    
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @ingroup groupFilters    
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @addtogroup FIR    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @param[in] *S points to an instance of the Q31 structure.    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @param[in] *pSrc points to the block of input data.    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @param[out] *pDst points to the block output data.    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @param[in] blockSize number of samples to process per call.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * @return none.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  *    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * <b>Scaling and Overflow Behavior:</b>    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * \par    
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * This function is optimized for speed at the expense of fixed-point precision and overflow protec
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * The result of each 1.31 x 1.31 multiplication is truncated to 2.30 format.    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * These intermediate results are added to a 2.30 accumulator.    
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * Finally, the accumulator is saturated and converted to a 1.31 result.    
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * The fast version has the same overflow behavior as the standard version and provides less precis
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by log2(numTaps) bit
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  *    
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * \par    
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * Refer to the function <code>arm_fir_q31()</code> for a slower implementation of this function wh
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  * Use the function <code>arm_fir_init_q31()</code> to initialize the filter structure.    
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****  */
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** IAR_ONLY_LOW_OPTIMIZATION_ENTER
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** void arm_fir_fast_q31(
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   const arm_fir_instance_q31 * S,
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t * pSrc,
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t * pDst,
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   uint32_t blockSize)
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** {
  27              	 .loc 1 80 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 E7B0     	 sub sp,sp,#412
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 440
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 C7F84C01 	 str r0,[r7,#332]
  49 000c C7F84811 	 str r1,[r7,#328]
  50 0010 C7F84421 	 str r2,[r7,#324]
  51 0014 C7F84031 	 str r3,[r7,#320]
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t *pState = S->pState;                     /* State pointer */
  52              	 .loc 1 81 0
  53 0018 D7F84C31 	 ldr r3,[r7,#332]
  54 001c 5B68     	 ldr r3,[r3,#4]
  55 001e C7F89431 	 str r3,[r7,#404]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
  56              	 .loc 1 82 0
  57 0022 D7F84C31 	 ldr r3,[r7,#332]
  58 0026 9B68     	 ldr r3,[r3,#8]
  59 0028 C7F85C31 	 str r3,[r7,#348]
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t *pStateCurnt;                            /* Points to the current sample of the state */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t x0, x1, x2, x3;                          /* Temporary variables to hold state */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t c0;                                      /* Temporary variable to hold coefficient value */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t *px;                                     /* Temporary pointer for state */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t *pb;                                     /* Temporary pointer for coefficient buffer */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulators */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
  60              	 .loc 1 89 0
  61 002c D7F84C31 	 ldr r3,[r7,#332]
  62 0030 1B88     	 ldrh r3,[r3]
  63 0032 C7F85831 	 str r3,[r7,#344]
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   uint32_t i, tapCnt, blkCnt;                    /* Loop counters */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* pStateCurnt points to the location where the new input data should be written */
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   pStateCurnt = &(S->pState[(numTaps - 1u)]);
  64              	 .loc 1 94 0
  65 0036 D7F84C31 	 ldr r3,[r7,#332]
  66 003a 5A68     	 ldr r2,[r3,#4]
  67 003c D7F85831 	 ldr r3,[r7,#344]
  68 0040 03F18043 	 add r3,r3,#1073741824
  69 0044 013B     	 subs r3,r3,#1
  70 0046 9B00     	 lsls r3,r3,#2
  71 0048 1344     	 add r3,r3,r2
  72 004a C7F89031 	 str r3,[r7,#400]
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* Apply loop unrolling and compute 4 output values simultaneously.    
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    * The variables acc0 ... acc3 hold output values that are being computed:    
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    *    
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc0 =  b[numTaps-1] * x[n-numTaps-1] + b[numTaps-2] * x[n-numTaps-2] + b[numTaps-3] * x[n-
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc1 =  b[numTaps-1] * x[n-numTaps] +   b[numTaps-2] * x[n-numTaps-1] + b[numTaps-3] * x[n-
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc2 =  b[numTaps-1] * x[n-numTaps+1] + b[numTaps-2] * x[n-numTaps] +   b[numTaps-3] * x[n-
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    *    acc3 =  b[numTaps-1] * x[n-numTaps+2] + b[numTaps-2] * x[n-numTaps+1] + b[numTaps-3] * x[n-
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    */
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   blkCnt = blockSize >> 2;
  73              	 .loc 1 104 0
  74 004e D7F84031 	 ldr r3,[r7,#320]
  75 0052 9B08     	 lsrs r3,r3,#2
  76 0054 C7F86031 	 str r3,[r7,#352]
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   while(blkCnt > 0u)
  77              	 .loc 1 108 0
  78 0058 00F0B1BC 	 b .L2
  79              	.L7:
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   {
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Copy four new input samples into the state buffer */
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
  80              	 .loc 1 111 0
  81 005c D7F89011 	 ldr r1,[r7,#400]
  82 0060 0B1D     	 adds r3,r1,#4
  83 0062 C7F89031 	 str r3,[r7,#400]
  84 0066 D7F84821 	 ldr r2,[r7,#328]
  85 006a 131D     	 adds r3,r2,#4
  86 006c C7F84831 	 str r3,[r7,#328]
  87 0070 1368     	 ldr r3,[r2]
  88 0072 0B60     	 str r3,[r1]
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
  89              	 .loc 1 112 0
  90 0074 D7F89011 	 ldr r1,[r7,#400]
  91 0078 0B1D     	 adds r3,r1,#4
  92 007a C7F89031 	 str r3,[r7,#400]
  93 007e D7F84821 	 ldr r2,[r7,#328]
  94 0082 131D     	 adds r3,r2,#4
  95 0084 C7F84831 	 str r3,[r7,#328]
  96 0088 1368     	 ldr r3,[r2]
  97 008a 0B60     	 str r3,[r1]
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
  98              	 .loc 1 113 0
  99 008c D7F89011 	 ldr r1,[r7,#400]
 100 0090 0B1D     	 adds r3,r1,#4
 101 0092 C7F89031 	 str r3,[r7,#400]
 102 0096 D7F84821 	 ldr r2,[r7,#328]
 103 009a 131D     	 adds r3,r2,#4
 104 009c C7F84831 	 str r3,[r7,#328]
 105 00a0 1368     	 ldr r3,[r2]
 106 00a2 0B60     	 str r3,[r1]
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
 107              	 .loc 1 114 0
 108 00a4 D7F89011 	 ldr r1,[r7,#400]
 109 00a8 0B1D     	 adds r3,r1,#4
 110 00aa C7F89031 	 str r3,[r7,#400]
 111 00ae D7F84821 	 ldr r2,[r7,#328]
 112 00b2 131D     	 adds r3,r2,#4
 113 00b4 C7F84831 	 str r3,[r7,#328]
 114 00b8 1368     	 ldr r3,[r2]
 115 00ba 0B60     	 str r3,[r1]
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Set all accumulators to zero */
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     acc0 = 0;
 116              	 .loc 1 117 0
 117 00bc 0023     	 movs r3,#0
 118 00be C7F87831 	 str r3,[r7,#376]
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     acc1 = 0;
 119              	 .loc 1 118 0
 120 00c2 0023     	 movs r3,#0
 121 00c4 C7F87431 	 str r3,[r7,#372]
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     acc2 = 0;
 122              	 .loc 1 119 0
 123 00c8 0023     	 movs r3,#0
 124 00ca C7F87031 	 str r3,[r7,#368]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     acc3 = 0;
 125              	 .loc 1 120 0
 126 00ce 0023     	 movs r3,#0
 127 00d0 C7F86C31 	 str r3,[r7,#364]
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize state pointer */
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     px = pState;
 128              	 .loc 1 123 0
 129 00d4 D7F89431 	 ldr r3,[r7,#404]
 130 00d8 C7F88031 	 str r3,[r7,#384]
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize coefficient pointer */
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     pb = pCoeffs;
 131              	 .loc 1 126 0
 132 00dc D7F85C31 	 ldr r3,[r7,#348]
 133 00e0 C7F87C31 	 str r3,[r7,#380]
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Read the first three samples from the state buffer:    
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****      *  x[n-numTaps], x[n-numTaps-1], x[n-numTaps-2] */
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     x0 = *(px++);
 134              	 .loc 1 130 0
 135 00e4 D7F88021 	 ldr r2,[r7,#384]
 136 00e8 131D     	 adds r3,r2,#4
 137 00ea C7F88031 	 str r3,[r7,#384]
 138 00ee 1368     	 ldr r3,[r2]
 139 00f0 C7F88C31 	 str r3,[r7,#396]
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     x1 = *(px++);
 140              	 .loc 1 131 0
 141 00f4 D7F88021 	 ldr r2,[r7,#384]
 142 00f8 131D     	 adds r3,r2,#4
 143 00fa C7F88031 	 str r3,[r7,#384]
 144 00fe 1368     	 ldr r3,[r2]
 145 0100 C7F88831 	 str r3,[r7,#392]
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     x2 = *(px++);
 146              	 .loc 1 132 0
 147 0104 D7F88021 	 ldr r2,[r7,#384]
 148 0108 131D     	 adds r3,r2,#4
 149 010a C7F88031 	 str r3,[r7,#384]
 150 010e 1368     	 ldr r3,[r2]
 151 0110 C7F88431 	 str r3,[r7,#388]
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     tapCnt = numTaps >> 2;
 152              	 .loc 1 135 0
 153 0114 D7F85831 	 ldr r3,[r7,#344]
 154 0118 9B08     	 lsrs r3,r3,#2
 155 011a C7F86431 	 str r3,[r7,#356]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     i = tapCnt;
 156              	 .loc 1 136 0
 157 011e D7F86431 	 ldr r3,[r7,#356]
 158 0122 C7F86831 	 str r3,[r7,#360]
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     while(i > 0u)
 159              	 .loc 1 138 0
 160 0126 38E3     	 b .L3
 161              	.L4:
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     {
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps] coefficient */
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *pb;
 162              	 .loc 1 141 0
 163 0128 D7F87C31 	 ldr r3,[r7,#380]
 164 012c 1B68     	 ldr r3,[r3]
 165 012e C7F85431 	 str r3,[r7,#340]
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-3] sample */
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x3 = *px;
 166              	 .loc 1 144 0
 167 0132 D7F88031 	 ldr r3,[r7,#384]
 168 0136 1B68     	 ldr r3,[r3]
 169 0138 C7F85031 	 str r3,[r7,#336]
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc0 +=  b[numTaps] * x[n-numTaps] */
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x0, c0);
 170              	 .loc 1 147 0
 171 013c D7F87831 	 ldr r3,[r7,#376]
 172 0140 1A46     	 mov r2,r3
 173 0142 4FEAE273 	 asr r3,r2,#31
 174 0146 1300     	 movs r3,r2
 175 0148 C7F83C31 	 str r3,[r7,#316]
 176 014c 0023     	 movs r3,#0
 177 014e C7F83831 	 str r3,[r7,#312]
 178 0152 D7F88C31 	 ldr r3,[r7,#396]
 179 0156 1846     	 mov r0,r3
 180 0158 4FEAE071 	 asr r1,r0,#31
 181 015c D7F85431 	 ldr r3,[r7,#340]
 182 0160 1A46     	 mov r2,r3
 183 0162 4FEAE273 	 asr r3,r2,#31
 184 0166 02FB01F5 	 mul r5,r2,r1
 185 016a 00FB03F4 	 mul r4,r0,r3
 186 016e 2C44     	 add r4,r4,r5
 187 0170 A0FB0201 	 umull r0,r1,r0,r2
 188 0174 6318     	 adds r3,r4,r1
 189 0176 1946     	 mov r1,r3
 190 0178 07F59C73 	 add r3,r7,#312
 191 017c D3E90023 	 ldrd r2,[r3]
 192 0180 1218     	 adds r2,r2,r0
 193 0182 43EB0103 	 adc r3,r3,r1
 194 0186 12F10042 	 adds r2,r2,#-2147483648
 195 018a 43F10003 	 adc r3,r3,#0
 196 018e 1900     	 movs r1,r3
 197 0190 C7F83011 	 str r1,[r7,#304]
 198 0194 DB17     	 asrs r3,r3,#31
 199 0196 C7F83431 	 str r3,[r7,#308]
 200 019a D7F83031 	 ldr r3,[r7,#304]
 201 019e C7F87831 	 str r3,[r7,#376]
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc1 +=  b[numTaps] * x[n-numTaps-1] */
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x1, c0);
 202              	 .loc 1 150 0
 203 01a2 D7F87431 	 ldr r3,[r7,#372]
 204 01a6 1A46     	 mov r2,r3
 205 01a8 4FEAE273 	 asr r3,r2,#31
 206 01ac 1300     	 movs r3,r2
 207 01ae C7F82C31 	 str r3,[r7,#300]
 208 01b2 0023     	 movs r3,#0
 209 01b4 C7F82831 	 str r3,[r7,#296]
 210 01b8 D7F88831 	 ldr r3,[r7,#392]
 211 01bc 1846     	 mov r0,r3
 212 01be 4FEAE071 	 asr r1,r0,#31
 213 01c2 D7F85431 	 ldr r3,[r7,#340]
 214 01c6 1A46     	 mov r2,r3
 215 01c8 4FEAE273 	 asr r3,r2,#31
 216 01cc 02FB01F5 	 mul r5,r2,r1
 217 01d0 00FB03F4 	 mul r4,r0,r3
 218 01d4 2C44     	 add r4,r4,r5
 219 01d6 A0FB0201 	 umull r0,r1,r0,r2
 220 01da 6318     	 adds r3,r4,r1
 221 01dc 1946     	 mov r1,r3
 222 01de 07F59473 	 add r3,r7,#296
 223 01e2 D3E90023 	 ldrd r2,[r3]
 224 01e6 1218     	 adds r2,r2,r0
 225 01e8 43EB0103 	 adc r3,r3,r1
 226 01ec 12F10042 	 adds r2,r2,#-2147483648
 227 01f0 43F10003 	 adc r3,r3,#0
 228 01f4 1900     	 movs r1,r3
 229 01f6 C7F82011 	 str r1,[r7,#288]
 230 01fa DB17     	 asrs r3,r3,#31
 231 01fc C7F82431 	 str r3,[r7,#292]
 232 0200 D7F82031 	 ldr r3,[r7,#288]
 233 0204 C7F87431 	 str r3,[r7,#372]
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc2 +=  b[numTaps] * x[n-numTaps-2] */
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x2, c0);
 234              	 .loc 1 153 0
 235 0208 D7F87031 	 ldr r3,[r7,#368]
 236 020c 1A46     	 mov r2,r3
 237 020e 4FEAE273 	 asr r3,r2,#31
 238 0212 1300     	 movs r3,r2
 239 0214 C7F81C31 	 str r3,[r7,#284]
 240 0218 0023     	 movs r3,#0
 241 021a C7F81831 	 str r3,[r7,#280]
 242 021e D7F88431 	 ldr r3,[r7,#388]
 243 0222 1846     	 mov r0,r3
 244 0224 4FEAE071 	 asr r1,r0,#31
 245 0228 D7F85431 	 ldr r3,[r7,#340]
 246 022c 1A46     	 mov r2,r3
 247 022e 4FEAE273 	 asr r3,r2,#31
 248 0232 02FB01F5 	 mul r5,r2,r1
 249 0236 00FB03F4 	 mul r4,r0,r3
 250 023a 2C44     	 add r4,r4,r5
 251 023c A0FB0201 	 umull r0,r1,r0,r2
 252 0240 6318     	 adds r3,r4,r1
 253 0242 1946     	 mov r1,r3
 254 0244 07F58C73 	 add r3,r7,#280
 255 0248 D3E90023 	 ldrd r2,[r3]
 256 024c 1218     	 adds r2,r2,r0
 257 024e 43EB0103 	 adc r3,r3,r1
 258 0252 12F10042 	 adds r2,r2,#-2147483648
 259 0256 43F10003 	 adc r3,r3,#0
 260 025a 1900     	 movs r1,r3
 261 025c C7F81011 	 str r1,[r7,#272]
 262 0260 DB17     	 asrs r3,r3,#31
 263 0262 C7F81431 	 str r3,[r7,#276]
 264 0266 D7F81031 	 ldr r3,[r7,#272]
 265 026a C7F87031 	 str r3,[r7,#368]
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* acc3 +=  b[numTaps] * x[n-numTaps-3] */
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x3, c0);
 266              	 .loc 1 156 0
 267 026e D7F86C31 	 ldr r3,[r7,#364]
 268 0272 1A46     	 mov r2,r3
 269 0274 4FEAE273 	 asr r3,r2,#31
 270 0278 1300     	 movs r3,r2
 271 027a C7F80C31 	 str r3,[r7,#268]
 272 027e 0023     	 movs r3,#0
 273 0280 C7F80831 	 str r3,[r7,#264]
 274 0284 D7F85031 	 ldr r3,[r7,#336]
 275 0288 1846     	 mov r0,r3
 276 028a 4FEAE071 	 asr r1,r0,#31
 277 028e D7F85431 	 ldr r3,[r7,#340]
 278 0292 1A46     	 mov r2,r3
 279 0294 4FEAE273 	 asr r3,r2,#31
 280 0298 02FB01F5 	 mul r5,r2,r1
 281 029c 00FB03F4 	 mul r4,r0,r3
 282 02a0 2C44     	 add r4,r4,r5
 283 02a2 A0FB0201 	 umull r0,r1,r0,r2
 284 02a6 6318     	 adds r3,r4,r1
 285 02a8 1946     	 mov r1,r3
 286 02aa 07F58473 	 add r3,r7,#264
 287 02ae D3E90023 	 ldrd r2,[r3]
 288 02b2 1218     	 adds r2,r2,r0
 289 02b4 43EB0103 	 adc r3,r3,r1
 290 02b8 12F10042 	 adds r2,r2,#-2147483648
 291 02bc 43F10003 	 adc r3,r3,#0
 292 02c0 1900     	 movs r1,r3
 293 02c2 C7F80011 	 str r1,[r7,#256]
 294 02c6 DB17     	 asrs r3,r3,#31
 295 02c8 C7F80431 	 str r3,[r7,#260]
 296 02cc D7F80031 	 ldr r3,[r7,#256]
 297 02d0 C7F86C31 	 str r3,[r7,#364]
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps-1] coefficient */
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb + 1u);
 298              	 .loc 1 159 0
 299 02d4 D7F87C31 	 ldr r3,[r7,#380]
 300 02d8 5B68     	 ldr r3,[r3,#4]
 301 02da C7F85431 	 str r3,[r7,#340]
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-4] sample */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x0 = *(px + 1u);
 302              	 .loc 1 162 0
 303 02de D7F88031 	 ldr r3,[r7,#384]
 304 02e2 5B68     	 ldr r3,[r3,#4]
 305 02e4 C7F88C31 	 str r3,[r7,#396]
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */      
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x1, c0);
 306              	 .loc 1 165 0
 307 02e8 D7F87831 	 ldr r3,[r7,#376]
 308 02ec 1A46     	 mov r2,r3
 309 02ee 4FEAE273 	 asr r3,r2,#31
 310 02f2 1300     	 movs r3,r2
 311 02f4 C7F8FC30 	 str r3,[r7,#252]
 312 02f8 0023     	 movs r3,#0
 313 02fa C7F8F830 	 str r3,[r7,#248]
 314 02fe D7F88831 	 ldr r3,[r7,#392]
 315 0302 1846     	 mov r0,r3
 316 0304 4FEAE071 	 asr r1,r0,#31
 317 0308 D7F85431 	 ldr r3,[r7,#340]
 318 030c 1A46     	 mov r2,r3
 319 030e 4FEAE273 	 asr r3,r2,#31
 320 0312 02FB01F5 	 mul r5,r2,r1
 321 0316 00FB03F4 	 mul r4,r0,r3
 322 031a 2C44     	 add r4,r4,r5
 323 031c A0FB0201 	 umull r0,r1,r0,r2
 324 0320 6318     	 adds r3,r4,r1
 325 0322 1946     	 mov r1,r3
 326 0324 D7E93E23 	 ldrd r2,[r7,#248]
 327 0328 1218     	 adds r2,r2,r0
 328 032a 43EB0103 	 adc r3,r3,r1
 329 032e 12F10042 	 adds r2,r2,#-2147483648
 330 0332 43F10003 	 adc r3,r3,#0
 331 0336 1900     	 movs r1,r3
 332 0338 C7F8F010 	 str r1,[r7,#240]
 333 033c DB17     	 asrs r3,r3,#31
 334 033e C7F8F430 	 str r3,[r7,#244]
 335 0342 D7F8F030 	 ldr r3,[r7,#240]
 336 0346 C7F87831 	 str r3,[r7,#376]
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x2, c0);
 337              	 .loc 1 166 0
 338 034a D7F87431 	 ldr r3,[r7,#372]
 339 034e 1A46     	 mov r2,r3
 340 0350 4FEAE273 	 asr r3,r2,#31
 341 0354 1300     	 movs r3,r2
 342 0356 C7F8EC30 	 str r3,[r7,#236]
 343 035a 0023     	 movs r3,#0
 344 035c C7F8E830 	 str r3,[r7,#232]
 345 0360 D7F88431 	 ldr r3,[r7,#388]
 346 0364 1846     	 mov r0,r3
 347 0366 4FEAE071 	 asr r1,r0,#31
 348 036a D7F85431 	 ldr r3,[r7,#340]
 349 036e 1A46     	 mov r2,r3
 350 0370 4FEAE273 	 asr r3,r2,#31
 351 0374 02FB01F5 	 mul r5,r2,r1
 352 0378 00FB03F4 	 mul r4,r0,r3
 353 037c 2C44     	 add r4,r4,r5
 354 037e A0FB0201 	 umull r0,r1,r0,r2
 355 0382 6318     	 adds r3,r4,r1
 356 0384 1946     	 mov r1,r3
 357 0386 D7E93A23 	 ldrd r2,[r7,#232]
 358 038a 1218     	 adds r2,r2,r0
 359 038c 43EB0103 	 adc r3,r3,r1
 360 0390 12F10042 	 adds r2,r2,#-2147483648
 361 0394 43F10003 	 adc r3,r3,#0
 362 0398 1900     	 movs r1,r3
 363 039a C7F8E010 	 str r1,[r7,#224]
 364 039e DB17     	 asrs r3,r3,#31
 365 03a0 C7F8E430 	 str r3,[r7,#228]
 366 03a4 D7F8E030 	 ldr r3,[r7,#224]
 367 03a8 C7F87431 	 str r3,[r7,#372]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x3, c0);
 368              	 .loc 1 167 0
 369 03ac D7F87031 	 ldr r3,[r7,#368]
 370 03b0 1A46     	 mov r2,r3
 371 03b2 4FEAE273 	 asr r3,r2,#31
 372 03b6 1300     	 movs r3,r2
 373 03b8 C7F8DC30 	 str r3,[r7,#220]
 374 03bc 0023     	 movs r3,#0
 375 03be C7F8D830 	 str r3,[r7,#216]
 376 03c2 D7F85031 	 ldr r3,[r7,#336]
 377 03c6 1846     	 mov r0,r3
 378 03c8 4FEAE071 	 asr r1,r0,#31
 379 03cc D7F85431 	 ldr r3,[r7,#340]
 380 03d0 1A46     	 mov r2,r3
 381 03d2 4FEAE273 	 asr r3,r2,#31
 382 03d6 02FB01F5 	 mul r5,r2,r1
 383 03da 00FB03F4 	 mul r4,r0,r3
 384 03de 2C44     	 add r4,r4,r5
 385 03e0 A0FB0201 	 umull r0,r1,r0,r2
 386 03e4 6318     	 adds r3,r4,r1
 387 03e6 1946     	 mov r1,r3
 388 03e8 D7E93623 	 ldrd r2,[r7,#216]
 389 03ec 1218     	 adds r2,r2,r0
 390 03ee 43EB0103 	 adc r3,r3,r1
 391 03f2 12F10042 	 adds r2,r2,#-2147483648
 392 03f6 43F10003 	 adc r3,r3,#0
 393 03fa 1900     	 movs r1,r3
 394 03fc C7F8D010 	 str r1,[r7,#208]
 395 0400 DB17     	 asrs r3,r3,#31
 396 0402 C7F8D430 	 str r3,[r7,#212]
 397 0406 D7F8D030 	 ldr r3,[r7,#208]
 398 040a C7F87031 	 str r3,[r7,#368]
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x0, c0);
 399              	 .loc 1 168 0
 400 040e D7F86C31 	 ldr r3,[r7,#364]
 401 0412 1A46     	 mov r2,r3
 402 0414 4FEAE273 	 asr r3,r2,#31
 403 0418 1300     	 movs r3,r2
 404 041a C7F8CC30 	 str r3,[r7,#204]
 405 041e 0023     	 movs r3,#0
 406 0420 C7F8C830 	 str r3,[r7,#200]
 407 0424 D7F88C31 	 ldr r3,[r7,#396]
 408 0428 1846     	 mov r0,r3
 409 042a 4FEAE071 	 asr r1,r0,#31
 410 042e D7F85431 	 ldr r3,[r7,#340]
 411 0432 1A46     	 mov r2,r3
 412 0434 4FEAE273 	 asr r3,r2,#31
 413 0438 02FB01F5 	 mul r5,r2,r1
 414 043c 00FB03F4 	 mul r4,r0,r3
 415 0440 2C44     	 add r4,r4,r5
 416 0442 A0FB0201 	 umull r0,r1,r0,r2
 417 0446 6318     	 adds r3,r4,r1
 418 0448 1946     	 mov r1,r3
 419 044a D7E93223 	 ldrd r2,[r7,#200]
 420 044e 1218     	 adds r2,r2,r0
 421 0450 43EB0103 	 adc r3,r3,r1
 422 0454 12F10042 	 adds r2,r2,#-2147483648
 423 0458 43F10003 	 adc r3,r3,#0
 424 045c 1900     	 movs r1,r3
 425 045e C7F8C010 	 str r1,[r7,#192]
 426 0462 DB17     	 asrs r3,r3,#31
 427 0464 C7F8C430 	 str r3,[r7,#196]
 428 0468 D7F8C030 	 ldr r3,[r7,#192]
 429 046c C7F86C31 	 str r3,[r7,#364]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps-2] coefficient */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb + 2u);
 430              	 .loc 1 171 0
 431 0470 D7F87C31 	 ldr r3,[r7,#380]
 432 0474 9B68     	 ldr r3,[r3,#8]
 433 0476 C7F85431 	 str r3,[r7,#340]
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-5] sample */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x1 = *(px + 2u);
 434              	 .loc 1 174 0
 435 047a D7F88031 	 ldr r3,[r7,#384]
 436 047e 9B68     	 ldr r3,[r3,#8]
 437 0480 C7F88831 	 str r3,[r7,#392]
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */      
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x2, c0);
 438              	 .loc 1 177 0
 439 0484 D7F87831 	 ldr r3,[r7,#376]
 440 0488 1A46     	 mov r2,r3
 441 048a 4FEAE273 	 asr r3,r2,#31
 442 048e 1300     	 movs r3,r2
 443 0490 C7F8BC30 	 str r3,[r7,#188]
 444 0494 0023     	 movs r3,#0
 445 0496 C7F8B830 	 str r3,[r7,#184]
 446 049a D7F88431 	 ldr r3,[r7,#388]
 447 049e 1846     	 mov r0,r3
 448 04a0 4FEAE071 	 asr r1,r0,#31
 449 04a4 D7F85431 	 ldr r3,[r7,#340]
 450 04a8 1A46     	 mov r2,r3
 451 04aa 4FEAE273 	 asr r3,r2,#31
 452 04ae 02FB01F5 	 mul r5,r2,r1
 453 04b2 00FB03F4 	 mul r4,r0,r3
 454 04b6 2C44     	 add r4,r4,r5
 455 04b8 A0FB0201 	 umull r0,r1,r0,r2
 456 04bc 6318     	 adds r3,r4,r1
 457 04be 1946     	 mov r1,r3
 458 04c0 D7E92E23 	 ldrd r2,[r7,#184]
 459 04c4 1218     	 adds r2,r2,r0
 460 04c6 43EB0103 	 adc r3,r3,r1
 461 04ca 12F10042 	 adds r2,r2,#-2147483648
 462 04ce 43F10003 	 adc r3,r3,#0
 463 04d2 1900     	 movs r1,r3
 464 04d4 C7F8B010 	 str r1,[r7,#176]
 465 04d8 DB17     	 asrs r3,r3,#31
 466 04da C7F8B430 	 str r3,[r7,#180]
 467 04de D7F8B030 	 ldr r3,[r7,#176]
 468 04e2 C7F87831 	 str r3,[r7,#376]
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x3, c0);
 469              	 .loc 1 178 0
 470 04e6 D7F87431 	 ldr r3,[r7,#372]
 471 04ea 1A46     	 mov r2,r3
 472 04ec 4FEAE273 	 asr r3,r2,#31
 473 04f0 1300     	 movs r3,r2
 474 04f2 C7F8AC30 	 str r3,[r7,#172]
 475 04f6 0023     	 movs r3,#0
 476 04f8 C7F8A830 	 str r3,[r7,#168]
 477 04fc D7F85031 	 ldr r3,[r7,#336]
 478 0500 1846     	 mov r0,r3
 479 0502 4FEAE071 	 asr r1,r0,#31
 480 0506 D7F85431 	 ldr r3,[r7,#340]
 481 050a 1A46     	 mov r2,r3
 482 050c 4FEAE273 	 asr r3,r2,#31
 483 0510 02FB01F5 	 mul r5,r2,r1
 484 0514 00FB03F4 	 mul r4,r0,r3
 485 0518 2C44     	 add r4,r4,r5
 486 051a A0FB0201 	 umull r0,r1,r0,r2
 487 051e 6318     	 adds r3,r4,r1
 488 0520 1946     	 mov r1,r3
 489 0522 D7E92A23 	 ldrd r2,[r7,#168]
 490 0526 1218     	 adds r2,r2,r0
 491 0528 43EB0103 	 adc r3,r3,r1
 492 052c 12F10042 	 adds r2,r2,#-2147483648
 493 0530 43F10003 	 adc r3,r3,#0
 494 0534 1900     	 movs r1,r3
 495 0536 C7F8A010 	 str r1,[r7,#160]
 496 053a DB17     	 asrs r3,r3,#31
 497 053c C7F8A430 	 str r3,[r7,#164]
 498 0540 D7F8A030 	 ldr r3,[r7,#160]
 499 0544 C7F87431 	 str r3,[r7,#372]
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x0, c0);
 500              	 .loc 1 179 0
 501 0548 D7F87031 	 ldr r3,[r7,#368]
 502 054c 1A46     	 mov r2,r3
 503 054e 4FEAE273 	 asr r3,r2,#31
 504 0552 1300     	 movs r3,r2
 505 0554 C7F89C30 	 str r3,[r7,#156]
 506 0558 0023     	 movs r3,#0
 507 055a C7F89830 	 str r3,[r7,#152]
 508 055e D7F88C31 	 ldr r3,[r7,#396]
 509 0562 1846     	 mov r0,r3
 510 0564 4FEAE071 	 asr r1,r0,#31
 511 0568 D7F85431 	 ldr r3,[r7,#340]
 512 056c 1A46     	 mov r2,r3
 513 056e 4FEAE273 	 asr r3,r2,#31
 514 0572 02FB01F5 	 mul r5,r2,r1
 515 0576 00FB03F4 	 mul r4,r0,r3
 516 057a 2C44     	 add r4,r4,r5
 517 057c A0FB0201 	 umull r0,r1,r0,r2
 518 0580 6318     	 adds r3,r4,r1
 519 0582 1946     	 mov r1,r3
 520 0584 D7E92623 	 ldrd r2,[r7,#152]
 521 0588 1218     	 adds r2,r2,r0
 522 058a 43EB0103 	 adc r3,r3,r1
 523 058e 12F10042 	 adds r2,r2,#-2147483648
 524 0592 43F10003 	 adc r3,r3,#0
 525 0596 1900     	 movs r1,r3
 526 0598 C7F89010 	 str r1,[r7,#144]
 527 059c DB17     	 asrs r3,r3,#31
 528 059e C7F89430 	 str r3,[r7,#148]
 529 05a2 D7F89030 	 ldr r3,[r7,#144]
 530 05a6 C7F87031 	 str r3,[r7,#368]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x1, c0);
 531              	 .loc 1 180 0
 532 05aa D7F86C31 	 ldr r3,[r7,#364]
 533 05ae 1A46     	 mov r2,r3
 534 05b0 4FEAE273 	 asr r3,r2,#31
 535 05b4 1300     	 movs r3,r2
 536 05b6 C7F88C30 	 str r3,[r7,#140]
 537 05ba 0023     	 movs r3,#0
 538 05bc C7F88830 	 str r3,[r7,#136]
 539 05c0 D7F88831 	 ldr r3,[r7,#392]
 540 05c4 1846     	 mov r0,r3
 541 05c6 4FEAE071 	 asr r1,r0,#31
 542 05ca D7F85431 	 ldr r3,[r7,#340]
 543 05ce 1A46     	 mov r2,r3
 544 05d0 4FEAE273 	 asr r3,r2,#31
 545 05d4 02FB01F5 	 mul r5,r2,r1
 546 05d8 00FB03F4 	 mul r4,r0,r3
 547 05dc 2C44     	 add r4,r4,r5
 548 05de A0FB0201 	 umull r0,r1,r0,r2
 549 05e2 6318     	 adds r3,r4,r1
 550 05e4 1946     	 mov r1,r3
 551 05e6 D7E92223 	 ldrd r2,[r7,#136]
 552 05ea 1218     	 adds r2,r2,r0
 553 05ec 43EB0103 	 adc r3,r3,r1
 554 05f0 12F10042 	 adds r2,r2,#-2147483648
 555 05f4 43F10003 	 adc r3,r3,#0
 556 05f8 1900     	 movs r1,r3
 557 05fa C7F88010 	 str r1,[r7,#128]
 558 05fe DB17     	 asrs r3,r3,#31
 559 0600 C7F88430 	 str r3,[r7,#132]
 560 0604 D7F88030 	 ldr r3,[r7,#128]
 561 0608 C7F86C31 	 str r3,[r7,#364]
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read the b[numTaps-3] coefficients */
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb + 3u);
 562              	 .loc 1 183 0
 563 060c D7F87C31 	 ldr r3,[r7,#380]
 564 0610 DB68     	 ldr r3,[r3,#12]
 565 0612 C7F85431 	 str r3,[r7,#340]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read x[n-numTaps-6] sample */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x2 = *(px + 3u);
 566              	 .loc 1 186 0
 567 0616 D7F88031 	 ldr r3,[r7,#384]
 568 061a DB68     	 ldr r3,[r3,#12]
 569 061c C7F88431 	 str r3,[r7,#388]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */      
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x3, c0);
 570              	 .loc 1 189 0
 571 0620 D7F87831 	 ldr r3,[r7,#376]
 572 0624 1A46     	 mov r2,r3
 573 0626 4FEAE273 	 asr r3,r2,#31
 574 062a 1300     	 movs r3,r2
 575 062c FB67     	 str r3,[r7,#124]
 576 062e 0023     	 movs r3,#0
 577 0630 BB67     	 str r3,[r7,#120]
 578 0632 D7F85031 	 ldr r3,[r7,#336]
 579 0636 1846     	 mov r0,r3
 580 0638 4FEAE071 	 asr r1,r0,#31
 581 063c D7F85431 	 ldr r3,[r7,#340]
 582 0640 1A46     	 mov r2,r3
 583 0642 4FEAE273 	 asr r3,r2,#31
 584 0646 02FB01F5 	 mul r5,r2,r1
 585 064a 00FB03F4 	 mul r4,r0,r3
 586 064e 2C44     	 add r4,r4,r5
 587 0650 A0FB0201 	 umull r0,r1,r0,r2
 588 0654 6318     	 adds r3,r4,r1
 589 0656 1946     	 mov r1,r3
 590 0658 D7E91E23 	 ldrd r2,[r7,#120]
 591 065c 1218     	 adds r2,r2,r0
 592 065e 43EB0103 	 adc r3,r3,r1
 593 0662 12F10042 	 adds r2,r2,#-2147483648
 594 0666 43F10003 	 adc r3,r3,#0
 595 066a 1900     	 movs r1,r3
 596 066c 3967     	 str r1,[r7,#112]
 597 066e DB17     	 asrs r3,r3,#31
 598 0670 7B67     	 str r3,[r7,#116]
 599 0672 3B6F     	 ldr r3,[r7,#112]
 600 0674 C7F87831 	 str r3,[r7,#376]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x0, c0);
 601              	 .loc 1 190 0
 602 0678 D7F87431 	 ldr r3,[r7,#372]
 603 067c 1A46     	 mov r2,r3
 604 067e 4FEAE273 	 asr r3,r2,#31
 605 0682 1300     	 movs r3,r2
 606 0684 FB66     	 str r3,[r7,#108]
 607 0686 0023     	 movs r3,#0
 608 0688 BB66     	 str r3,[r7,#104]
 609 068a D7F88C31 	 ldr r3,[r7,#396]
 610 068e 1846     	 mov r0,r3
 611 0690 4FEAE071 	 asr r1,r0,#31
 612 0694 D7F85431 	 ldr r3,[r7,#340]
 613 0698 1A46     	 mov r2,r3
 614 069a 4FEAE273 	 asr r3,r2,#31
 615 069e 02FB01F5 	 mul r5,r2,r1
 616 06a2 00FB03F4 	 mul r4,r0,r3
 617 06a6 2C44     	 add r4,r4,r5
 618 06a8 A0FB0201 	 umull r0,r1,r0,r2
 619 06ac 6318     	 adds r3,r4,r1
 620 06ae 1946     	 mov r1,r3
 621 06b0 D7E91A23 	 ldrd r2,[r7,#104]
 622 06b4 1218     	 adds r2,r2,r0
 623 06b6 43EB0103 	 adc r3,r3,r1
 624 06ba 12F10042 	 adds r2,r2,#-2147483648
 625 06be 43F10003 	 adc r3,r3,#0
 626 06c2 1900     	 movs r1,r3
 627 06c4 3966     	 str r1,[r7,#96]
 628 06c6 DB17     	 asrs r3,r3,#31
 629 06c8 7B66     	 str r3,[r7,#100]
 630 06ca 3B6E     	 ldr r3,[r7,#96]
 631 06cc C7F87431 	 str r3,[r7,#372]
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x1, c0);
 632              	 .loc 1 191 0
 633 06d0 D7F87031 	 ldr r3,[r7,#368]
 634 06d4 1A46     	 mov r2,r3
 635 06d6 4FEAE273 	 asr r3,r2,#31
 636 06da 1300     	 movs r3,r2
 637 06dc FB65     	 str r3,[r7,#92]
 638 06de 0023     	 movs r3,#0
 639 06e0 BB65     	 str r3,[r7,#88]
 640 06e2 D7F88831 	 ldr r3,[r7,#392]
 641 06e6 1846     	 mov r0,r3
 642 06e8 4FEAE071 	 asr r1,r0,#31
 643 06ec D7F85431 	 ldr r3,[r7,#340]
 644 06f0 1A46     	 mov r2,r3
 645 06f2 4FEAE273 	 asr r3,r2,#31
 646 06f6 02FB01F5 	 mul r5,r2,r1
 647 06fa 00FB03F4 	 mul r4,r0,r3
 648 06fe 2C44     	 add r4,r4,r5
 649 0700 A0FB0201 	 umull r0,r1,r0,r2
 650 0704 6318     	 adds r3,r4,r1
 651 0706 1946     	 mov r1,r3
 652 0708 D7E91623 	 ldrd r2,[r7,#88]
 653 070c 1218     	 adds r2,r2,r0
 654 070e 43EB0103 	 adc r3,r3,r1
 655 0712 12F10042 	 adds r2,r2,#-2147483648
 656 0716 43F10003 	 adc r3,r3,#0
 657 071a 1900     	 movs r1,r3
 658 071c 3965     	 str r1,[r7,#80]
 659 071e DB17     	 asrs r3,r3,#31
 660 0720 7B65     	 str r3,[r7,#84]
 661 0722 3B6D     	 ldr r3,[r7,#80]
 662 0724 C7F87031 	 str r3,[r7,#368]
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x2, c0);
 663              	 .loc 1 192 0
 664 0728 D7F86C31 	 ldr r3,[r7,#364]
 665 072c 1A46     	 mov r2,r3
 666 072e 4FEAE273 	 asr r3,r2,#31
 667 0732 9346     	 mov fp,r2
 668 0734 4FF0000A 	 mov r10,#0
 669 0738 D7F88431 	 ldr r3,[r7,#388]
 670 073c 1846     	 mov r0,r3
 671 073e 4FEAE071 	 asr r1,r0,#31
 672 0742 D7F85431 	 ldr r3,[r7,#340]
 673 0746 1A46     	 mov r2,r3
 674 0748 4FEAE273 	 asr r3,r2,#31
 675 074c 02FB01F5 	 mul r5,r2,r1
 676 0750 00FB03F4 	 mul r4,r0,r3
 677 0754 2C44     	 add r4,r4,r5
 678 0756 A0FB0201 	 umull r0,r1,r0,r2
 679 075a 6318     	 adds r3,r4,r1
 680 075c 1946     	 mov r1,r3
 681 075e 1AEB0002 	 adds r2,r10,r0
 682 0762 4BEB0103 	 adc r3,fp,r1
 683 0766 12F10042 	 adds r2,r2,#-2147483648
 684 076a 43F10003 	 adc r3,r3,#0
 685 076e 1900     	 movs r1,r3
 686 0770 B964     	 str r1,[r7,#72]
 687 0772 DB17     	 asrs r3,r3,#31
 688 0774 FB64     	 str r3,[r7,#76]
 689 0776 BB6C     	 ldr r3,[r7,#72]
 690 0778 C7F86C31 	 str r3,[r7,#364]
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* update coefficient pointer */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       pb += 4u;
 691              	 .loc 1 195 0
 692 077c D7F87C31 	 ldr r3,[r7,#380]
 693 0780 1033     	 adds r3,r3,#16
 694 0782 C7F87C31 	 str r3,[r7,#380]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       px += 4u;
 695              	 .loc 1 196 0
 696 0786 D7F88031 	 ldr r3,[r7,#384]
 697 078a 1033     	 adds r3,r3,#16
 698 078c C7F88031 	 str r3,[r7,#384]
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Decrement the loop counter */
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       i--;
 699              	 .loc 1 199 0
 700 0790 D7F86831 	 ldr r3,[r7,#360]
 701 0794 013B     	 subs r3,r3,#1
 702 0796 C7F86831 	 str r3,[r7,#360]
 703              	.L3:
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     {
 704              	 .loc 1 138 0
 705 079a D7F86831 	 ldr r3,[r7,#360]
 706 079e 002B     	 cmp r3,#0
 707 07a0 7FF4C2AC 	 bne .L4
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     }
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     i = numTaps - (tapCnt * 4u);
 708              	 .loc 1 204 0
 709 07a4 D7F86431 	 ldr r3,[r7,#356]
 710 07a8 9A00     	 lsls r2,r3,#2
 711 07aa D7F85831 	 ldr r3,[r7,#344]
 712 07ae 9B1A     	 subs r3,r3,r2
 713 07b0 C7F86831 	 str r3,[r7,#360]
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     while(i > 0u)
 714              	 .loc 1 205 0
 715 07b4 D0E0     	 b .L5
 716              	.L6:
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     {
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Read coefficients */
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       c0 = *(pb++);
 717              	 .loc 1 208 0
 718 07b6 D7F87C21 	 ldr r2,[r7,#380]
 719 07ba 131D     	 adds r3,r2,#4
 720 07bc C7F87C31 	 str r3,[r7,#380]
 721 07c0 1368     	 ldr r3,[r2]
 722 07c2 C7F85431 	 str r3,[r7,#340]
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Fetch 1 state variable */
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x3 = *(px++);
 723              	 .loc 1 211 0
 724 07c6 D7F88021 	 ldr r2,[r7,#384]
 725 07ca 131D     	 adds r3,r2,#4
 726 07cc C7F88031 	 str r3,[r7,#384]
 727 07d0 1368     	 ldr r3,[r2]
 728 07d2 C7F85031 	 str r3,[r7,#336]
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Perform the multiply-accumulates */      
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, x0, c0);
 729              	 .loc 1 214 0
 730 07d6 D7F87831 	 ldr r3,[r7,#376]
 731 07da 1A46     	 mov r2,r3
 732 07dc 4FEAE273 	 asr r3,r2,#31
 733 07e0 1300     	 movs r3,r2
 734 07e2 7B64     	 str r3,[r7,#68]
 735 07e4 0023     	 movs r3,#0
 736 07e6 3B64     	 str r3,[r7,#64]
 737 07e8 D7F88C31 	 ldr r3,[r7,#396]
 738 07ec 1846     	 mov r0,r3
 739 07ee 4FEAE071 	 asr r1,r0,#31
 740 07f2 D7F85431 	 ldr r3,[r7,#340]
 741 07f6 1A46     	 mov r2,r3
 742 07f8 4FEAE273 	 asr r3,r2,#31
 743 07fc 02FB01F5 	 mul r5,r2,r1
 744 0800 00FB03F4 	 mul r4,r0,r3
 745 0804 2C44     	 add r4,r4,r5
 746 0806 A0FB0201 	 umull r0,r1,r0,r2
 747 080a 6318     	 adds r3,r4,r1
 748 080c 1946     	 mov r1,r3
 749 080e D7E91023 	 ldrd r2,[r7,#64]
 750 0812 1218     	 adds r2,r2,r0
 751 0814 43EB0103 	 adc r3,r3,r1
 752 0818 12F10042 	 adds r2,r2,#-2147483648
 753 081c 43F10003 	 adc r3,r3,#0
 754 0820 1900     	 movs r1,r3
 755 0822 B963     	 str r1,[r7,#56]
 756 0824 DB17     	 asrs r3,r3,#31
 757 0826 FB63     	 str r3,[r7,#60]
 758 0828 BB6B     	 ldr r3,[r7,#56]
 759 082a C7F87831 	 str r3,[r7,#376]
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc1, x1, c0);
 760              	 .loc 1 215 0
 761 082e D7F87431 	 ldr r3,[r7,#372]
 762 0832 1A46     	 mov r2,r3
 763 0834 4FEAE273 	 asr r3,r2,#31
 764 0838 1300     	 movs r3,r2
 765 083a 7B63     	 str r3,[r7,#52]
 766 083c 0023     	 movs r3,#0
 767 083e 3B63     	 str r3,[r7,#48]
 768 0840 D7F88831 	 ldr r3,[r7,#392]
 769 0844 1846     	 mov r0,r3
 770 0846 4FEAE071 	 asr r1,r0,#31
 771 084a D7F85431 	 ldr r3,[r7,#340]
 772 084e 1A46     	 mov r2,r3
 773 0850 4FEAE273 	 asr r3,r2,#31
 774 0854 02FB01F5 	 mul r5,r2,r1
 775 0858 00FB03F4 	 mul r4,r0,r3
 776 085c 2C44     	 add r4,r4,r5
 777 085e A0FB0201 	 umull r0,r1,r0,r2
 778 0862 6318     	 adds r3,r4,r1
 779 0864 1946     	 mov r1,r3
 780 0866 D7E90C23 	 ldrd r2,[r7,#48]
 781 086a 1218     	 adds r2,r2,r0
 782 086c 43EB0103 	 adc r3,r3,r1
 783 0870 12F10042 	 adds r2,r2,#-2147483648
 784 0874 43F10003 	 adc r3,r3,#0
 785 0878 1900     	 movs r1,r3
 786 087a B962     	 str r1,[r7,#40]
 787 087c DB17     	 asrs r3,r3,#31
 788 087e FB62     	 str r3,[r7,#44]
 789 0880 BB6A     	 ldr r3,[r7,#40]
 790 0882 C7F87431 	 str r3,[r7,#372]
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc2, x2, c0);
 791              	 .loc 1 216 0
 792 0886 D7F87031 	 ldr r3,[r7,#368]
 793 088a 1A46     	 mov r2,r3
 794 088c 4FEAE273 	 asr r3,r2,#31
 795 0890 1300     	 movs r3,r2
 796 0892 7B62     	 str r3,[r7,#36]
 797 0894 0023     	 movs r3,#0
 798 0896 3B62     	 str r3,[r7,#32]
 799 0898 D7F88431 	 ldr r3,[r7,#388]
 800 089c 1846     	 mov r0,r3
 801 089e 4FEAE071 	 asr r1,r0,#31
 802 08a2 D7F85431 	 ldr r3,[r7,#340]
 803 08a6 1A46     	 mov r2,r3
 804 08a8 4FEAE273 	 asr r3,r2,#31
 805 08ac 02FB01F5 	 mul r5,r2,r1
 806 08b0 00FB03F4 	 mul r4,r0,r3
 807 08b4 2C44     	 add r4,r4,r5
 808 08b6 A0FB0201 	 umull r0,r1,r0,r2
 809 08ba 6318     	 adds r3,r4,r1
 810 08bc 1946     	 mov r1,r3
 811 08be D7E90823 	 ldrd r2,[r7,#32]
 812 08c2 1218     	 adds r2,r2,r0
 813 08c4 43EB0103 	 adc r3,r3,r1
 814 08c8 12F10042 	 adds r2,r2,#-2147483648
 815 08cc 43F10003 	 adc r3,r3,#0
 816 08d0 1900     	 movs r1,r3
 817 08d2 B961     	 str r1,[r7,#24]
 818 08d4 DB17     	 asrs r3,r3,#31
 819 08d6 FB61     	 str r3,[r7,#28]
 820 08d8 BB69     	 ldr r3,[r7,#24]
 821 08da C7F87031 	 str r3,[r7,#368]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc3, x3, c0);
 822              	 .loc 1 217 0
 823 08de D7F86C31 	 ldr r3,[r7,#364]
 824 08e2 1A46     	 mov r2,r3
 825 08e4 4FEAE273 	 asr r3,r2,#31
 826 08e8 1300     	 movs r3,r2
 827 08ea 7B61     	 str r3,[r7,#20]
 828 08ec 0023     	 movs r3,#0
 829 08ee 3B61     	 str r3,[r7,#16]
 830 08f0 D7F85031 	 ldr r3,[r7,#336]
 831 08f4 1846     	 mov r0,r3
 832 08f6 4FEAE071 	 asr r1,r0,#31
 833 08fa D7F85431 	 ldr r3,[r7,#340]
 834 08fe 1A46     	 mov r2,r3
 835 0900 4FEAE273 	 asr r3,r2,#31
 836 0904 02FB01F5 	 mul r5,r2,r1
 837 0908 00FB03F4 	 mul r4,r0,r3
 838 090c 2C44     	 add r4,r4,r5
 839 090e A0FB0201 	 umull r0,r1,r0,r2
 840 0912 6318     	 adds r3,r4,r1
 841 0914 1946     	 mov r1,r3
 842 0916 D7E90423 	 ldrd r2,[r7,#16]
 843 091a 1218     	 adds r2,r2,r0
 844 091c 43EB0103 	 adc r3,r3,r1
 845 0920 12F10042 	 adds r2,r2,#-2147483648
 846 0924 43F10003 	 adc r3,r3,#0
 847 0928 1900     	 movs r1,r3
 848 092a B960     	 str r1,[r7,#8]
 849 092c DB17     	 asrs r3,r3,#31
 850 092e FB60     	 str r3,[r7,#12]
 851 0930 BB68     	 ldr r3,[r7,#8]
 852 0932 C7F86C31 	 str r3,[r7,#364]
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Reuse the present sample states for next sample */
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x0 = x1;
 853              	 .loc 1 220 0
 854 0936 D7F88831 	 ldr r3,[r7,#392]
 855 093a C7F88C31 	 str r3,[r7,#396]
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x1 = x2;
 856              	 .loc 1 221 0
 857 093e D7F88431 	 ldr r3,[r7,#388]
 858 0942 C7F88831 	 str r3,[r7,#392]
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       x2 = x3;
 859              	 .loc 1 222 0
 860 0946 D7F85031 	 ldr r3,[r7,#336]
 861 094a C7F88431 	 str r3,[r7,#388]
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       /* Decrement the loop counter */
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       i--;
 862              	 .loc 1 225 0
 863 094e D7F86831 	 ldr r3,[r7,#360]
 864 0952 013B     	 subs r3,r3,#1
 865 0954 C7F86831 	 str r3,[r7,#360]
 866              	.L5:
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     {
 867              	 .loc 1 205 0
 868 0958 D7F86831 	 ldr r3,[r7,#360]
 869 095c 002B     	 cmp r3,#0
 870 095e 7FF42AAF 	 bne .L6
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     }
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Advance the state pointer by 4 to process the next group of 4 samples */
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     pState = pState + 4;
 871              	 .loc 1 229 0
 872 0962 D7F89431 	 ldr r3,[r7,#404]
 873 0966 1033     	 adds r3,r3,#16
 874 0968 C7F89431 	 str r3,[r7,#404]
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* The results in the 4 accumulators are in 2.30 format.  Convert to 1.31    
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****      ** Then store the 4 outputs in the destination buffer. */
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc0 << 1);
 875              	 .loc 1 233 0
 876 096c D7F84421 	 ldr r2,[r7,#324]
 877 0970 131D     	 adds r3,r2,#4
 878 0972 C7F84431 	 str r3,[r7,#324]
 879 0976 D7F87831 	 ldr r3,[r7,#376]
 880 097a 5B00     	 lsls r3,r3,#1
 881 097c 1360     	 str r3,[r2]
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc1 << 1);
 882              	 .loc 1 234 0
 883 097e D7F84421 	 ldr r2,[r7,#324]
 884 0982 131D     	 adds r3,r2,#4
 885 0984 C7F84431 	 str r3,[r7,#324]
 886 0988 D7F87431 	 ldr r3,[r7,#372]
 887 098c 5B00     	 lsls r3,r3,#1
 888 098e 1360     	 str r3,[r2]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc2 << 1);
 889              	 .loc 1 235 0
 890 0990 D7F84421 	 ldr r2,[r7,#324]
 891 0994 131D     	 adds r3,r2,#4
 892 0996 C7F84431 	 str r3,[r7,#324]
 893 099a D7F87031 	 ldr r3,[r7,#368]
 894 099e 5B00     	 lsls r3,r3,#1
 895 09a0 1360     	 str r3,[r2]
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc3 << 1);
 896              	 .loc 1 236 0
 897 09a2 D7F84421 	 ldr r2,[r7,#324]
 898 09a6 131D     	 adds r3,r2,#4
 899 09a8 C7F84431 	 str r3,[r7,#324]
 900 09ac D7F86C31 	 ldr r3,[r7,#364]
 901 09b0 5B00     	 lsls r3,r3,#1
 902 09b2 1360     	 str r3,[r2]
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Decrement the samples loop counter */
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     blkCnt--;
 903              	 .loc 1 239 0
 904 09b4 D7F86031 	 ldr r3,[r7,#352]
 905 09b8 013B     	 subs r3,r3,#1
 906 09ba C7F86031 	 str r3,[r7,#352]
 907              	.L2:
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   {
 908              	 .loc 1 108 0
 909 09be D7F86031 	 ldr r3,[r7,#352]
 910 09c2 002B     	 cmp r3,#0
 911 09c4 7FF44AAB 	 bne .L7
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   }
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    ** No loop unrolling is used. */
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   blkCnt = blockSize % 4u;
 912              	 .loc 1 245 0
 913 09c8 D7F84031 	 ldr r3,[r7,#320]
 914 09cc 03F00303 	 and r3,r3,#3
 915 09d0 C7F86031 	 str r3,[r7,#352]
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   while(blkCnt > 0u)
 916              	 .loc 1 247 0
 917 09d4 68E0     	 b .L8
 918              	.L10:
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   {
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Copy one sample at a time into state buffer */
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pSrc++;
 919              	 .loc 1 250 0
 920 09d6 D7F89031 	 ldr r3,[r7,#400]
 921 09da 1A1D     	 adds r2,r3,#4
 922 09dc C7F89021 	 str r2,[r7,#400]
 923 09e0 D7F84821 	 ldr r2,[r7,#328]
 924 09e4 111D     	 adds r1,r2,#4
 925 09e6 C7F84811 	 str r1,[r7,#328]
 926 09ea 1268     	 ldr r2,[r2]
 927 09ec 1A60     	 str r2,[r3]
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Set the accumulator to zero */
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     acc0 = 0;
 928              	 .loc 1 253 0
 929 09ee 0023     	 movs r3,#0
 930 09f0 C7F87831 	 str r3,[r7,#376]
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize state pointer */
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     px = pState;
 931              	 .loc 1 256 0
 932 09f4 D7F89431 	 ldr r3,[r7,#404]
 933 09f8 C7F88031 	 str r3,[r7,#384]
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Initialize Coefficient pointer */
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     pb = (pCoeffs);
 934              	 .loc 1 259 0
 935 09fc D7F85C31 	 ldr r3,[r7,#348]
 936 0a00 C7F87C31 	 str r3,[r7,#380]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     i = numTaps;
 937              	 .loc 1 261 0
 938 0a04 D7F85831 	 ldr r3,[r7,#344]
 939 0a08 C7F86831 	 str r3,[r7,#360]
 940              	.L9:
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Perform the multiply-accumulates */
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     do
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     {
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       multAcc_32x32_keep32_R(acc0, (*px++), (*(pb++)));
 941              	 .loc 1 266 0 discriminator 1
 942 0a0c D7F87831 	 ldr r3,[r7,#376]
 943 0a10 1A46     	 mov r2,r3
 944 0a12 4FEAE273 	 asr r3,r2,#31
 945 0a16 9146     	 mov r9,r2
 946 0a18 4FF00008 	 mov r8,#0
 947 0a1c D7F88031 	 ldr r3,[r7,#384]
 948 0a20 1A1D     	 adds r2,r3,#4
 949 0a22 C7F88021 	 str r2,[r7,#384]
 950 0a26 1B68     	 ldr r3,[r3]
 951 0a28 1846     	 mov r0,r3
 952 0a2a 4FEAE071 	 asr r1,r0,#31
 953 0a2e D7F87C31 	 ldr r3,[r7,#380]
 954 0a32 1A1D     	 adds r2,r3,#4
 955 0a34 C7F87C21 	 str r2,[r7,#380]
 956 0a38 1B68     	 ldr r3,[r3]
 957 0a3a 1A46     	 mov r2,r3
 958 0a3c 4FEAE273 	 asr r3,r2,#31
 959 0a40 02FB01F5 	 mul r5,r2,r1
 960 0a44 00FB03F4 	 mul r4,r0,r3
 961 0a48 2C44     	 add r4,r4,r5
 962 0a4a A0FB0223 	 umull r2,r3,r0,r2
 963 0a4e E118     	 adds r1,r4,r3
 964 0a50 0B46     	 mov r3,r1
 965 0a52 12EB0802 	 adds r2,r2,r8
 966 0a56 43EB0903 	 adc r3,r3,r9
 967 0a5a 12F10042 	 adds r2,r2,#-2147483648
 968 0a5e 43F10003 	 adc r3,r3,#0
 969 0a62 1900     	 movs r1,r3
 970 0a64 3960     	 str r1,[r7]
 971 0a66 DB17     	 asrs r3,r3,#31
 972 0a68 7B60     	 str r3,[r7,#4]
 973 0a6a 3B68     	 ldr r3,[r7]
 974 0a6c C7F87831 	 str r3,[r7,#376]
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****       i--;
 975              	 .loc 1 267 0 discriminator 1
 976 0a70 D7F86831 	 ldr r3,[r7,#360]
 977 0a74 013B     	 subs r3,r3,#1
 978 0a76 C7F86831 	 str r3,[r7,#360]
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     } while(i > 0u);
 979              	 .loc 1 268 0 discriminator 1
 980 0a7a D7F86831 	 ldr r3,[r7,#360]
 981 0a7e 002B     	 cmp r3,#0
 982 0a80 C4D1     	 bne .L9
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* The result is in 2.30 format.  Convert to 1.31    
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****      ** Then store the output in the destination buffer. */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pDst++ = (q31_t) (acc0 << 1);
 983              	 .loc 1 272 0
 984 0a82 D7F84431 	 ldr r3,[r7,#324]
 985 0a86 1A1D     	 adds r2,r3,#4
 986 0a88 C7F84421 	 str r2,[r7,#324]
 987 0a8c D7F87821 	 ldr r2,[r7,#376]
 988 0a90 5200     	 lsls r2,r2,#1
 989 0a92 1A60     	 str r2,[r3]
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Advance state pointer by 1 for the next sample */
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     pState = pState + 1;
 990              	 .loc 1 275 0
 991 0a94 D7F89431 	 ldr r3,[r7,#404]
 992 0a98 0433     	 adds r3,r3,#4
 993 0a9a C7F89431 	 str r3,[r7,#404]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Decrement the samples loop counter */
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     blkCnt--;
 994              	 .loc 1 278 0
 995 0a9e D7F86031 	 ldr r3,[r7,#352]
 996 0aa2 013B     	 subs r3,r3,#1
 997 0aa4 C7F86031 	 str r3,[r7,#352]
 998              	.L8:
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   {
 999              	 .loc 1 247 0
 1000 0aa8 D7F86031 	 ldr r3,[r7,#352]
 1001 0aac 002B     	 cmp r3,#0
 1002 0aae 92D1     	 bne .L10
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   }
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* Processing is complete.    
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    ** Now copy the last numTaps - 1 samples to the start of the state buffer.    
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****    ** This prepares the state buffer for the next function call. */
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* Points to the start of the state buffer */
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   pStateCurnt = S->pState;
 1003              	 .loc 1 286 0
 1004 0ab0 D7F84C31 	 ldr r3,[r7,#332]
 1005 0ab4 5B68     	 ldr r3,[r3,#4]
 1006 0ab6 C7F89031 	 str r3,[r7,#400]
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* Calculate remaining number of copies */
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   tapCnt = (numTaps - 1u);
 1007              	 .loc 1 289 0
 1008 0aba D7F85831 	 ldr r3,[r7,#344]
 1009 0abe 013B     	 subs r3,r3,#1
 1010 0ac0 C7F86431 	 str r3,[r7,#356]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   /* Copy the remaining q31_t data */
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   while(tapCnt > 0u)
 1011              	 .loc 1 292 0
 1012 0ac4 10E0     	 b .L11
 1013              	.L12:
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   {
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     *pStateCurnt++ = *pState++;
 1014              	 .loc 1 294 0
 1015 0ac6 D7F89031 	 ldr r3,[r7,#400]
 1016 0aca 1A1D     	 adds r2,r3,#4
 1017 0acc C7F89021 	 str r2,[r7,#400]
 1018 0ad0 D7F89421 	 ldr r2,[r7,#404]
 1019 0ad4 111D     	 adds r1,r2,#4
 1020 0ad6 C7F89411 	 str r1,[r7,#404]
 1021 0ada 1268     	 ldr r2,[r2]
 1022 0adc 1A60     	 str r2,[r3]
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     /* Decrement the loop counter */
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****     tapCnt--;
 1023              	 .loc 1 297 0
 1024 0ade D7F86431 	 ldr r3,[r7,#356]
 1025 0ae2 013B     	 subs r3,r3,#1
 1026 0ae4 C7F86431 	 str r3,[r7,#356]
 1027              	.L11:
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   {
 1028              	 .loc 1 292 0
 1029 0ae8 D7F86431 	 ldr r3,[r7,#356]
 1030 0aec 002B     	 cmp r3,#0
 1031 0aee EAD1     	 bne .L12
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c ****   }
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_fast_q31.c **** }
 1032              	 .loc 1 301 0
 1033 0af0 07F5CE77 	 add r7,r7,#412
 1034              	.LCFI3:
 1035              	 .cfi_def_cfa_offset 28
 1036 0af4 BD46     	 mov sp,r7
 1037              	.LCFI4:
 1038              	 .cfi_def_cfa_register 13
 1039              	 
 1040 0af6 BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 1041              	.LCFI5:
 1042              	 .cfi_restore 11
 1043              	 .cfi_restore 10
 1044              	 .cfi_restore 9
 1045              	 .cfi_restore 8
 1046              	 .cfi_restore 7
 1047              	 .cfi_restore 5
 1048              	 .cfi_restore 4
 1049              	 .cfi_def_cfa_offset 0
 1050 0afa 7047     	 bx lr
 1051              	 .cfi_endproc
 1052              	.LFE139:
 1054              	 .text
 1055              	.Letext0:
 1056              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1057              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1058              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_fast_q31.c
    {standard input}:19     .text.arm_fir_fast_q31:00000000 $t
    {standard input}:24     .text.arm_fir_fast_q31:00000000 arm_fir_fast_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
