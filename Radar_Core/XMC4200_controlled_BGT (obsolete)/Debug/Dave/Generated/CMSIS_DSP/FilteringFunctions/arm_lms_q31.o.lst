   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_lms_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.clip_q63_to_q31,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	clip_q63_to_q31:
  24              	.LFB106:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Date:        12. March 2014
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Revision: 	V1.4.4
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Project: 	    CMSIS DSP Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Title:	    arm_math.h
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Description:	Public header file for CMSIS DSP Library
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * modification, are permitted provided that the following conditions
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * are met:
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     the documentation and/or other materials provided with the
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     distribution.
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     may be used to endorse or promote products derived from this
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     software without specific prior written permission.
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Examples
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * --------
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 4.60.
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvproj
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvproj project in MDK-ARM, selectin
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * real values.
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * the type
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * below:
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     {
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data array.
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define ARM_MATH_CM0_FAMILY
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #elif defined (ARM_MATH_CM0PLUS)
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "core_cm0plus.h"
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifdef	__cplusplus
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** extern "C"
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** {
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31 			(0x100)
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15 			0x5
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK 			0x0000003F
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define PI					3.14159265358979f
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SIZE  256
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31	   0x400000
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15	   0x80
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING			0xB60B61
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #elif defined  (__ICCARM__)
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #else
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #endif
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined __CC_ARM
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t __packed
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED __attribute__((unused))
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __ICCARM__
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t __packed
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __GNUC__
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED __attribute__((unused))
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __CSMC__			/* Cosmic */
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #error Unknown compiler
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)  (*(__SIMD32_TYPE **) & (addr))
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)  (*(int64_t **) & (addr))
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    /**
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) |	\
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) |	\
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) |	\
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) |	\
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) |	\
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) |	\
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
  26              	 .loc 1 469 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 2DE9B003 	 push {r4,r5,r7,r8,r9}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 20
  34              	 .cfi_offset 4,-20
  35              	 .cfi_offset 5,-16
  36              	 .cfi_offset 7,-12
  37              	 .cfi_offset 8,-8
  38              	 .cfi_offset 9,-4
  39 0004 83B0     	 sub sp,sp,#12
  40              	.LCFI1:
  41              	 .cfi_def_cfa_offset 32
  42 0006 00AF     	 add r7,sp,#0
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 7
  45 0008 C7E90001 	 strd r0,[r7]
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
  46              	 .loc 1 470 0
  47 000c D7E90023 	 ldrd r2,[r7]
  48 0010 9846     	 mov r8,r3
  49 0012 4FEAE379 	 asr r9,r3,#31
  50 0016 4246     	 mov r2,r8
  51 0018 3B68     	 ldr r3,[r7]
  52 001a DB17     	 asrs r3,r3,#31
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
  53              	 .loc 1 471 0
  54 001c 9A42     	 cmp r2,r3
  55 001e 08D0     	 beq .L2
  56              	 .loc 1 471 0 is_stmt 0 discriminator 1
  57 0020 D7E90023 	 ldrd r2,[r7]
  58 0024 DC17     	 asrs r4,r3,#31
  59 0026 DD17     	 asrs r5,r3,#31
  60 0028 2346     	 mov r3,r4
  61 002a 83F00043 	 eor r3,r3,#-2147483648
  62 002e DB43     	 mvns r3,r3
  63 0030 00E0     	 b .L3
  64              	.L2:
  65              	 .loc 1 471 0 discriminator 2
  66 0032 3B68     	 ldr r3,[r7]
  67              	.L3:
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
  68              	 .loc 1 472 0 is_stmt 1
  69 0034 1846     	 mov r0,r3
  70 0036 0C37     	 adds r7,r7,#12
  71              	.LCFI3:
  72              	 .cfi_def_cfa_offset 20
  73 0038 BD46     	 mov sp,r7
  74              	.LCFI4:
  75              	 .cfi_def_cfa_register 13
  76              	 
  77 003a BDE8B003 	 pop {r4,r5,r7,r8,r9}
  78              	.LCFI5:
  79              	 .cfi_restore 9
  80              	 .cfi_restore 8
  81              	 .cfi_restore 7
  82              	 .cfi_restore 5
  83              	 .cfi_restore 4
  84              	 .cfi_def_cfa_offset 0
  85 003e 7047     	 bx lr
  86              	 .cfi_endproc
  87              	.LFE106:
  89              	 .section .text.arm_lms_q31,"ax",%progbits
  90              	 .align 2
  91              	 .global arm_lms_q31
  92              	 .thumb
  93              	 .thumb_func
  95              	arm_lms_q31:
  96              	.LFB139:
  97              	 .file 2 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Title:	    arm_lms_q31.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Description:	Processing function for the Q31 LMS filter.    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** /**    
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @ingroup groupFilters    
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  */
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** /**    
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @addtogroup LMS    
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @{    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  */
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  /**    
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @brief Processing function for Q31 LMS filter.    
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  *S points to an instance of the Q15 LMS filter structure.    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  *pSrc points to the block of input data.    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  *pRef points to the block of reference data.    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[out] *pOut points to the block of output data.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[out] *pErr points to the block of error data.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @param[in]  blockSize number of samples to process.    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * @return     none.    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * \par Scaling and Overflow Behavior:     
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The function is implemented using an internal 64-bit accumulator.     
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * multiplication results but provides only a single guard bit.     
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * Thus, if the accumulator result overflows it wraps around rather than clips.     
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by    
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * log2(numTaps) bits.     
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The reference signal should not be scaled down.     
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * After all multiply-accumulates are performed, the 2.62 accumulator is shifted    
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * and saturated to 1.31 format to yield the final result.     
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * The output signal and error signal are in 1.31 format.     
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  *    
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * \par    
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  * 	In this filter, filter coefficients are updated for each sample and the updation of filter coff
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****  */
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** void arm_lms_q31(
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   const arm_lms_instance_q31 * S,
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pSrc,
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pRef,
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pOut,
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t * pErr,
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t blockSize)
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** {
  98              	 .loc 2 84 0
  99              	 .cfi_startproc
 100              	 
 101              	 
 102 0000 2DE9B04F 	 push {r4,r5,r7,r8,r9,r10,fp,lr}
 103              	.LCFI6:
 104              	 .cfi_def_cfa_offset 32
 105              	 .cfi_offset 4,-32
 106              	 .cfi_offset 5,-28
 107              	 .cfi_offset 7,-24
 108              	 .cfi_offset 8,-20
 109              	 .cfi_offset 9,-16
 110              	 .cfi_offset 10,-12
 111              	 .cfi_offset 11,-8
 112              	 .cfi_offset 14,-4
 113 0004 A0B0     	 sub sp,sp,#128
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 160
 116 0006 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0008 7863     	 str r0,[r7,#52]
 120 000a 3963     	 str r1,[r7,#48]
 121 000c FA62     	 str r2,[r7,#44]
 122 000e BB62     	 str r3,[r7,#40]
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pState = S->pState;                     /* State pointer */
 123              	 .loc 2 85 0
 124 0010 7B6B     	 ldr r3,[r7,#52]
 125 0012 5B68     	 ldr r3,[r3,#4]
 126 0014 FB67     	 str r3,[r7,#124]
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
 127              	 .loc 2 86 0
 128 0016 7B6B     	 ldr r3,[r7,#52]
 129 0018 1B88     	 ldrh r3,[r3]
 130 001a FB65     	 str r3,[r7,#92]
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pCoeffs = S->pCoeffs;                   /* Coefficient pointer */
 131              	 .loc 2 87 0
 132 001c 7B6B     	 ldr r3,[r7,#52]
 133 001e 9B68     	 ldr r3,[r3,#8]
 134 0020 BB65     	 str r3,[r7,#88]
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pStateCurnt;                            /* Points to the current sample of the state */
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t mu = S->mu;                              /* Adaptive factor */
 135              	 .loc 2 89 0
 136 0022 7B6B     	 ldr r3,[r7,#52]
 137 0024 DB68     	 ldr r3,[r3,#12]
 138 0026 7B65     	 str r3,[r7,#84]
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *px;                                     /* Temporary pointer for state */
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t *pb;                                     /* Temporary pointer for coefficient buffer */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t tapCnt, blkCnt;                       /* Loop counters */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q63_t acc;                                     /* Accumulator */
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t e = 0;                                   /* error of data sample */
 139              	 .loc 2 94 0
 140 0028 0023     	 movs r3,#0
 141 002a 3B65     	 str r3,[r7,#80]
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t alpha;                                   /* Intermediate constant for taps update */
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t coef;                                    /* Temporary variable for coef */
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   q31_t acc_l, acc_h;                            /*  temporary input */
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t uShift = ((uint32_t) S->postShift + 1u);
 142              	 .loc 2 98 0
 143 002c 7B6B     	 ldr r3,[r7,#52]
 144 002e 1B69     	 ldr r3,[r3,#16]
 145 0030 0133     	 adds r3,r3,#1
 146 0032 FB64     	 str r3,[r7,#76]
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   uint32_t lShift = 32u - uShift;                /*  Shift to be applied to the output */
 147              	 .loc 2 99 0
 148 0034 FB6C     	 ldr r3,[r7,#76]
 149 0036 C3F12003 	 rsb r3,r3,#32
 150 003a BB64     	 str r3,[r7,#72]
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* S->pState points to buffer which contains previous frame (numTaps - 1) samples */
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* pStateCurnt points to the location where the new input data should be written */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   pStateCurnt = &(S->pState[(numTaps - 1u)]);
 151              	 .loc 2 103 0
 152 003c 7B6B     	 ldr r3,[r7,#52]
 153 003e 5A68     	 ldr r2,[r3,#4]
 154 0040 FB6D     	 ldr r3,[r7,#92]
 155 0042 03F18043 	 add r3,r3,#1073741824
 156 0046 013B     	 subs r3,r3,#1
 157 0048 9B00     	 lsls r3,r3,#2
 158 004a 1344     	 add r3,r3,r2
 159 004c BB67     	 str r3,[r7,#120]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Initializing blkCnt with blockSize */
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   blkCnt = blockSize;
 160              	 .loc 2 106 0
 161 004e D7F8A430 	 ldr r3,[r7,#164]
 162 0052 BB66     	 str r3,[r7,#104]
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(blkCnt > 0u)
 163              	 .loc 2 113 0
 164 0054 12E2     	 b .L6
 165              	.L15:
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Copy the new input sample into the state buffer */
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pSrc++;
 166              	 .loc 2 116 0
 167 0056 B96F     	 ldr r1,[r7,#120]
 168 0058 0B1D     	 adds r3,r1,#4
 169 005a BB67     	 str r3,[r7,#120]
 170 005c 3A6B     	 ldr r2,[r7,#48]
 171 005e 131D     	 adds r3,r2,#4
 172 0060 3B63     	 str r3,[r7,#48]
 173 0062 1368     	 ldr r3,[r2]
 174 0064 0B60     	 str r3,[r1]
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize state pointer */
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState;
 175              	 .loc 2 119 0
 176 0066 FB6F     	 ldr r3,[r7,#124]
 177 0068 7B67     	 str r3,[r7,#116]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize coefficient pointer */
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 178              	 .loc 2 122 0
 179 006a BB6D     	 ldr r3,[r7,#88]
 180 006c 3B67     	 str r3,[r7,#112]
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Set the accumulator to zero */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = 0;
 181              	 .loc 2 125 0
 182 006e 4FF00002 	 mov r2,#0
 183 0072 4FF00003 	 mov r3,#0
 184 0076 C7E91823 	 strd r2,[r7,#96]
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps >> 2;
 185              	 .loc 2 128 0
 186 007a FB6D     	 ldr r3,[r7,#92]
 187 007c 9B08     	 lsrs r3,r3,#2
 188 007e FB66     	 str r3,[r7,#108]
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 189              	 .loc 2 130 0
 190 0080 7AE0     	 b .L7
 191              	.L8:
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N] * x[n-N] */
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 192              	 .loc 2 134 0
 193 0082 7A6F     	 ldr r2,[r7,#116]
 194 0084 131D     	 adds r3,r2,#4
 195 0086 7B67     	 str r3,[r7,#116]
 196 0088 1368     	 ldr r3,[r2]
 197 008a 1C46     	 mov r4,r3
 198 008c 4FEAE475 	 asr r5,r4,#31
 199 0090 3A6F     	 ldr r2,[r7,#112]
 200 0092 131D     	 adds r3,r2,#4
 201 0094 3B67     	 str r3,[r7,#112]
 202 0096 1368     	 ldr r3,[r2]
 203 0098 1A46     	 mov r2,r3
 204 009a 4FEAE273 	 asr r3,r2,#31
 205 009e 02FB05F0 	 mul r0,r2,r5
 206 00a2 04FB03F1 	 mul r1,r4,r3
 207 00a6 0144     	 add r1,r1,r0
 208 00a8 A4FB0245 	 umull r4,r5,r4,r2
 209 00ac 4B19     	 adds r3,r1,r5
 210 00ae 1D46     	 mov r5,r3
 211 00b0 D7E91823 	 ldrd r2,[r7,#96]
 212 00b4 1219     	 adds r2,r2,r4
 213 00b6 43EB0503 	 adc r3,r3,r5
 214 00ba C7E91823 	 strd r2,[r7,#96]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N-1] * x[n-N-1] */
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 215              	 .loc 2 137 0
 216 00be 7A6F     	 ldr r2,[r7,#116]
 217 00c0 131D     	 adds r3,r2,#4
 218 00c2 7B67     	 str r3,[r7,#116]
 219 00c4 1368     	 ldr r3,[r2]
 220 00c6 1C46     	 mov r4,r3
 221 00c8 4FEAE475 	 asr r5,r4,#31
 222 00cc 3A6F     	 ldr r2,[r7,#112]
 223 00ce 131D     	 adds r3,r2,#4
 224 00d0 3B67     	 str r3,[r7,#112]
 225 00d2 1368     	 ldr r3,[r2]
 226 00d4 1A46     	 mov r2,r3
 227 00d6 4FEAE273 	 asr r3,r2,#31
 228 00da 02FB05F0 	 mul r0,r2,r5
 229 00de 04FB03F1 	 mul r1,r4,r3
 230 00e2 0144     	 add r1,r1,r0
 231 00e4 A4FB0245 	 umull r4,r5,r4,r2
 232 00e8 4B19     	 adds r3,r1,r5
 233 00ea 1D46     	 mov r5,r3
 234 00ec D7E91823 	 ldrd r2,[r7,#96]
 235 00f0 1219     	 adds r2,r2,r4
 236 00f2 43EB0503 	 adc r3,r3,r5
 237 00f6 C7E91823 	 strd r2,[r7,#96]
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N-2] * x[n-N-2] */
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 238              	 .loc 2 140 0
 239 00fa 7A6F     	 ldr r2,[r7,#116]
 240 00fc 131D     	 adds r3,r2,#4
 241 00fe 7B67     	 str r3,[r7,#116]
 242 0100 1368     	 ldr r3,[r2]
 243 0102 1C46     	 mov r4,r3
 244 0104 4FEAE475 	 asr r5,r4,#31
 245 0108 3A6F     	 ldr r2,[r7,#112]
 246 010a 131D     	 adds r3,r2,#4
 247 010c 3B67     	 str r3,[r7,#112]
 248 010e 1368     	 ldr r3,[r2]
 249 0110 1A46     	 mov r2,r3
 250 0112 4FEAE273 	 asr r3,r2,#31
 251 0116 02FB05F0 	 mul r0,r2,r5
 252 011a 04FB03F1 	 mul r1,r4,r3
 253 011e 0144     	 add r1,r1,r0
 254 0120 A4FB0245 	 umull r4,r5,r4,r2
 255 0124 4B19     	 adds r3,r1,r5
 256 0126 1D46     	 mov r5,r3
 257 0128 D7E91823 	 ldrd r2,[r7,#96]
 258 012c 1219     	 adds r2,r2,r4
 259 012e 43EB0503 	 adc r3,r3,r5
 260 0132 C7E91823 	 strd r2,[r7,#96]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* acc +=  b[N-3] * x[n-N-3] */
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 261              	 .loc 2 143 0
 262 0136 7A6F     	 ldr r2,[r7,#116]
 263 0138 131D     	 adds r3,r2,#4
 264 013a 7B67     	 str r3,[r7,#116]
 265 013c 1368     	 ldr r3,[r2]
 266 013e 1C46     	 mov r4,r3
 267 0140 4FEAE475 	 asr r5,r4,#31
 268 0144 3A6F     	 ldr r2,[r7,#112]
 269 0146 131D     	 adds r3,r2,#4
 270 0148 3B67     	 str r3,[r7,#112]
 271 014a 1368     	 ldr r3,[r2]
 272 014c 1A46     	 mov r2,r3
 273 014e 4FEAE273 	 asr r3,r2,#31
 274 0152 02FB05F0 	 mul r0,r2,r5
 275 0156 04FB03F1 	 mul r1,r4,r3
 276 015a 0144     	 add r1,r1,r0
 277 015c A4FB0245 	 umull r4,r5,r4,r2
 278 0160 4B19     	 adds r3,r1,r5
 279 0162 1D46     	 mov r5,r3
 280 0164 D7E91823 	 ldrd r2,[r7,#96]
 281 0168 1219     	 adds r2,r2,r4
 282 016a 43EB0503 	 adc r3,r3,r5
 283 016e C7E91823 	 strd r2,[r7,#96]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 284              	 .loc 2 146 0
 285 0172 FB6E     	 ldr r3,[r7,#108]
 286 0174 013B     	 subs r3,r3,#1
 287 0176 FB66     	 str r3,[r7,#108]
 288              	.L7:
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 289              	 .loc 2 130 0
 290 0178 FB6E     	 ldr r3,[r7,#108]
 291 017a 002B     	 cmp r3,#0
 292 017c 81D1     	 bne .L8
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps % 0x4u;
 293              	 .loc 2 150 0
 294 017e FB6D     	 ldr r3,[r7,#92]
 295 0180 03F00303 	 and r3,r3,#3
 296 0184 FB66     	 str r3,[r7,#108]
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 297              	 .loc 2 152 0
 298 0186 20E0     	 b .L9
 299              	.L10:
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 300              	 .loc 2 155 0
 301 0188 7A6F     	 ldr r2,[r7,#116]
 302 018a 131D     	 adds r3,r2,#4
 303 018c 7B67     	 str r3,[r7,#116]
 304 018e 1368     	 ldr r3,[r2]
 305 0190 1C46     	 mov r4,r3
 306 0192 4FEAE475 	 asr r5,r4,#31
 307 0196 3A6F     	 ldr r2,[r7,#112]
 308 0198 131D     	 adds r3,r2,#4
 309 019a 3B67     	 str r3,[r7,#112]
 310 019c 1368     	 ldr r3,[r2]
 311 019e 1A46     	 mov r2,r3
 312 01a0 4FEAE273 	 asr r3,r2,#31
 313 01a4 02FB05F0 	 mul r0,r2,r5
 314 01a8 04FB03F1 	 mul r1,r4,r3
 315 01ac 0144     	 add r1,r1,r0
 316 01ae A4FB0245 	 umull r4,r5,r4,r2
 317 01b2 4B19     	 adds r3,r1,r5
 318 01b4 1D46     	 mov r5,r3
 319 01b6 D7E91823 	 ldrd r2,[r7,#96]
 320 01ba 1219     	 adds r2,r2,r4
 321 01bc 43EB0503 	 adc r3,r3,r5
 322 01c0 C7E91823 	 strd r2,[r7,#96]
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 323              	 .loc 2 158 0
 324 01c4 FB6E     	 ldr r3,[r7,#108]
 325 01c6 013B     	 subs r3,r3,#1
 326 01c8 FB66     	 str r3,[r7,#108]
 327              	.L9:
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 328              	 .loc 2 152 0
 329 01ca FB6E     	 ldr r3,[r7,#108]
 330 01cc 002B     	 cmp r3,#0
 331 01ce DBD1     	 bne .L10
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Converting the result to 1.31 format */
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc lower part of acc */
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_l = acc & 0xffffffff;
 332              	 .loc 2 163 0
 333 01d0 3B6E     	 ldr r3,[r7,#96]
 334 01d2 7B64     	 str r3,[r7,#68]
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc upper part of acc */
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_h = (acc >> 32) & 0xffffffff;
 335              	 .loc 2 166 0
 336 01d4 D7E91823 	 ldrd r2,[r7,#96]
 337 01d8 1B00     	 movs r3,r3
 338 01da 3B62     	 str r3,[r7,#32]
 339 01dc 0023     	 movs r3,#0
 340 01de 7B62     	 str r3,[r7,#36]
 341 01e0 3B6A     	 ldr r3,[r7,#32]
 342 01e2 3B64     	 str r3,[r7,#64]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 343              	 .loc 2 168 0
 344 01e4 7A6C     	 ldr r2,[r7,#68]
 345 01e6 BB6C     	 ldr r3,[r7,#72]
 346 01e8 22FA03F1 	 lsr r1,r2,r3
 347 01ec FA6C     	 ldr r2,[r7,#76]
 348 01ee 3B6C     	 ldr r3,[r7,#64]
 349 01f0 9340     	 lsls r3,r3,r2
 350 01f2 0B43     	 orrs r3,r3,r1
 351 01f4 1A46     	 mov r2,r3
 352 01f6 4FF00003 	 mov r3,#0
 353 01fa C7E91823 	 strd r2,[r7,#96]
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Store the result from accumulator into the destination buffer. */
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pOut++ = (q31_t) acc;
 354              	 .loc 2 171 0
 355 01fe BA6A     	 ldr r2,[r7,#40]
 356 0200 131D     	 adds r3,r2,#4
 357 0202 BB62     	 str r3,[r7,#40]
 358 0204 3B6E     	 ldr r3,[r7,#96]
 359 0206 1360     	 str r3,[r2]
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Compute and store error */
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     e = *pRef++ - (q31_t) acc;
 360              	 .loc 2 174 0
 361 0208 FA6A     	 ldr r2,[r7,#44]
 362 020a 131D     	 adds r3,r2,#4
 363 020c FB62     	 str r3,[r7,#44]
 364 020e 1268     	 ldr r2,[r2]
 365 0210 3B6E     	 ldr r3,[r7,#96]
 366 0212 D31A     	 subs r3,r2,r3
 367 0214 3B65     	 str r3,[r7,#80]
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pErr++ = (q31_t) e;
 368              	 .loc 2 176 0
 369 0216 D7F8A020 	 ldr r2,[r7,#160]
 370 021a 131D     	 adds r3,r2,#4
 371 021c C7F8A030 	 str r3,[r7,#160]
 372 0220 3B6D     	 ldr r3,[r7,#80]
 373 0222 1360     	 str r3,[r2]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Compute alpha i.e. intermediate constant for taps update */
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     alpha = (q31_t) (((q63_t) e * mu) >> 31);
 374              	 .loc 2 179 0
 375 0224 3B6D     	 ldr r3,[r7,#80]
 376 0226 1846     	 mov r0,r3
 377 0228 4FEAE071 	 asr r1,r0,#31
 378 022c 7B6D     	 ldr r3,[r7,#84]
 379 022e 1A46     	 mov r2,r3
 380 0230 4FEAE273 	 asr r3,r2,#31
 381 0234 02FB01F5 	 mul r5,r2,r1
 382 0238 00FB03F4 	 mul r4,r0,r3
 383 023c 2C44     	 add r4,r4,r5
 384 023e A0FB0223 	 umull r2,r3,r0,r2
 385 0242 E118     	 adds r1,r4,r3
 386 0244 0B46     	 mov r3,r1
 387 0246 4FEAD278 	 lsr r8,r2,#31
 388 024a 48EA4308 	 orr r8,r8,r3,lsl#1
 389 024e 4FEAE379 	 asr r9,r3,#31
 390 0252 4346     	 mov r3,r8
 391 0254 FB63     	 str r3,[r7,#60]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize state pointer */
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Advance state pointer by 1 for the next sample */
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState++;
 392              	 .loc 2 183 0
 393 0256 FA6F     	 ldr r2,[r7,#124]
 394 0258 131D     	 adds r3,r2,#4
 395 025a FB67     	 str r3,[r7,#124]
 396 025c 7A67     	 str r2,[r7,#116]
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize coefficient pointer */
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 397              	 .loc 2 186 0
 398 025e BB6D     	 ldr r3,[r7,#88]
 399 0260 3B67     	 str r3,[r7,#112]
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps >> 2;
 400              	 .loc 2 189 0
 401 0262 FB6D     	 ldr r3,[r7,#92]
 402 0264 9B08     	 lsrs r3,r3,#2
 403 0266 FB66     	 str r3,[r7,#108]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Update filter coefficients */
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 404              	 .loc 2 192 0
 405 0268 C5E0     	 b .L11
 406              	.L12:
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* coef is in 2.30 format */
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 407              	 .loc 2 195 0
 408 026a FB6B     	 ldr r3,[r7,#60]
 409 026c 1C46     	 mov r4,r3
 410 026e 4FEAE475 	 asr r5,r4,#31
 411 0272 7A6F     	 ldr r2,[r7,#116]
 412 0274 131D     	 adds r3,r2,#4
 413 0276 7B67     	 str r3,[r7,#116]
 414 0278 1368     	 ldr r3,[r2]
 415 027a 1A46     	 mov r2,r3
 416 027c 4FEAE273 	 asr r3,r2,#31
 417 0280 02FB05F0 	 mul r0,r2,r5
 418 0284 04FB03F1 	 mul r1,r4,r3
 419 0288 0144     	 add r1,r1,r0
 420 028a A4FB0223 	 umull r2,r3,r4,r2
 421 028e 1944     	 add r1,r1,r3
 422 0290 0B46     	 mov r3,r1
 423 0292 9A46     	 mov r10,r3
 424 0294 4FEAE37B 	 asr fp,r3,#31
 425 0298 5346     	 mov r3,r10
 426 029a BB63     	 str r3,[r7,#56]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* get coef in 1.31 format by left shifting */
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 427              	 .loc 2 197 0
 428 029c 3B6F     	 ldr r3,[r7,#112]
 429 029e 1B68     	 ldr r3,[r3]
 430 02a0 1846     	 mov r0,r3
 431 02a2 4FEAE071 	 asr r1,r0,#31
 432 02a6 BB6B     	 ldr r3,[r7,#56]
 433 02a8 5B00     	 lsls r3,r3,#1
 434 02aa 1A46     	 mov r2,r3
 435 02ac 4FEAE273 	 asr r3,r2,#31
 436 02b0 1218     	 adds r2,r2,r0
 437 02b2 43EB0103 	 adc r3,r3,r1
 438 02b6 1046     	 mov r0,r2
 439 02b8 1946     	 mov r1,r3
 440 02ba FFF7FEFF 	 bl clip_q63_to_q31
 441 02be 0246     	 mov r2,r0
 442 02c0 3B6F     	 ldr r3,[r7,#112]
 443 02c2 1A60     	 str r2,[r3]
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* update coefficient buffer to next coefficient */
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 444              	 .loc 2 199 0
 445 02c4 3B6F     	 ldr r3,[r7,#112]
 446 02c6 0433     	 adds r3,r3,#4
 447 02c8 3B67     	 str r3,[r7,#112]
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 448              	 .loc 2 201 0
 449 02ca FB6B     	 ldr r3,[r7,#60]
 450 02cc 1C46     	 mov r4,r3
 451 02ce 4FEAE475 	 asr r5,r4,#31
 452 02d2 7A6F     	 ldr r2,[r7,#116]
 453 02d4 131D     	 adds r3,r2,#4
 454 02d6 7B67     	 str r3,[r7,#116]
 455 02d8 1368     	 ldr r3,[r2]
 456 02da 1A46     	 mov r2,r3
 457 02dc 4FEAE273 	 asr r3,r2,#31
 458 02e0 02FB05F0 	 mul r0,r2,r5
 459 02e4 04FB03F1 	 mul r1,r4,r3
 460 02e8 0144     	 add r1,r1,r0
 461 02ea A4FB0223 	 umull r2,r3,r4,r2
 462 02ee 1944     	 add r1,r1,r3
 463 02f0 0B46     	 mov r3,r1
 464 02f2 1900     	 movs r1,r3
 465 02f4 B961     	 str r1,[r7,#24]
 466 02f6 DB17     	 asrs r3,r3,#31
 467 02f8 FB61     	 str r3,[r7,#28]
 468 02fa BB69     	 ldr r3,[r7,#24]
 469 02fc BB63     	 str r3,[r7,#56]
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 470              	 .loc 2 202 0
 471 02fe 3B6F     	 ldr r3,[r7,#112]
 472 0300 1B68     	 ldr r3,[r3]
 473 0302 1846     	 mov r0,r3
 474 0304 4FEAE071 	 asr r1,r0,#31
 475 0308 BB6B     	 ldr r3,[r7,#56]
 476 030a 5B00     	 lsls r3,r3,#1
 477 030c 1A46     	 mov r2,r3
 478 030e 4FEAE273 	 asr r3,r2,#31
 479 0312 1218     	 adds r2,r2,r0
 480 0314 43EB0103 	 adc r3,r3,r1
 481 0318 1046     	 mov r0,r2
 482 031a 1946     	 mov r1,r3
 483 031c FFF7FEFF 	 bl clip_q63_to_q31
 484 0320 0246     	 mov r2,r0
 485 0322 3B6F     	 ldr r3,[r7,#112]
 486 0324 1A60     	 str r2,[r3]
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 487              	 .loc 2 203 0
 488 0326 3B6F     	 ldr r3,[r7,#112]
 489 0328 0433     	 adds r3,r3,#4
 490 032a 3B67     	 str r3,[r7,#112]
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 491              	 .loc 2 205 0
 492 032c FB6B     	 ldr r3,[r7,#60]
 493 032e 1C46     	 mov r4,r3
 494 0330 4FEAE475 	 asr r5,r4,#31
 495 0334 7A6F     	 ldr r2,[r7,#116]
 496 0336 131D     	 adds r3,r2,#4
 497 0338 7B67     	 str r3,[r7,#116]
 498 033a 1368     	 ldr r3,[r2]
 499 033c 1A46     	 mov r2,r3
 500 033e 4FEAE273 	 asr r3,r2,#31
 501 0342 02FB05F0 	 mul r0,r2,r5
 502 0346 04FB03F1 	 mul r1,r4,r3
 503 034a 0144     	 add r1,r1,r0
 504 034c A4FB0223 	 umull r2,r3,r4,r2
 505 0350 1944     	 add r1,r1,r3
 506 0352 0B46     	 mov r3,r1
 507 0354 1900     	 movs r1,r3
 508 0356 3961     	 str r1,[r7,#16]
 509 0358 DB17     	 asrs r3,r3,#31
 510 035a 7B61     	 str r3,[r7,#20]
 511 035c 3B69     	 ldr r3,[r7,#16]
 512 035e BB63     	 str r3,[r7,#56]
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 513              	 .loc 2 206 0
 514 0360 3B6F     	 ldr r3,[r7,#112]
 515 0362 1B68     	 ldr r3,[r3]
 516 0364 1846     	 mov r0,r3
 517 0366 4FEAE071 	 asr r1,r0,#31
 518 036a BB6B     	 ldr r3,[r7,#56]
 519 036c 5B00     	 lsls r3,r3,#1
 520 036e 1A46     	 mov r2,r3
 521 0370 4FEAE273 	 asr r3,r2,#31
 522 0374 1218     	 adds r2,r2,r0
 523 0376 43EB0103 	 adc r3,r3,r1
 524 037a 1046     	 mov r0,r2
 525 037c 1946     	 mov r1,r3
 526 037e FFF7FEFF 	 bl clip_q63_to_q31
 527 0382 0246     	 mov r2,r0
 528 0384 3B6F     	 ldr r3,[r7,#112]
 529 0386 1A60     	 str r2,[r3]
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 530              	 .loc 2 207 0
 531 0388 3B6F     	 ldr r3,[r7,#112]
 532 038a 0433     	 adds r3,r3,#4
 533 038c 3B67     	 str r3,[r7,#112]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 534              	 .loc 2 209 0
 535 038e FB6B     	 ldr r3,[r7,#60]
 536 0390 1C46     	 mov r4,r3
 537 0392 4FEAE475 	 asr r5,r4,#31
 538 0396 7A6F     	 ldr r2,[r7,#116]
 539 0398 131D     	 adds r3,r2,#4
 540 039a 7B67     	 str r3,[r7,#116]
 541 039c 1368     	 ldr r3,[r2]
 542 039e 1A46     	 mov r2,r3
 543 03a0 4FEAE273 	 asr r3,r2,#31
 544 03a4 02FB05F0 	 mul r0,r2,r5
 545 03a8 04FB03F1 	 mul r1,r4,r3
 546 03ac 0144     	 add r1,r1,r0
 547 03ae A4FB0223 	 umull r2,r3,r4,r2
 548 03b2 1944     	 add r1,r1,r3
 549 03b4 0B46     	 mov r3,r1
 550 03b6 1900     	 movs r1,r3
 551 03b8 B960     	 str r1,[r7,#8]
 552 03ba DB17     	 asrs r3,r3,#31
 553 03bc FB60     	 str r3,[r7,#12]
 554 03be BB68     	 ldr r3,[r7,#8]
 555 03c0 BB63     	 str r3,[r7,#56]
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 556              	 .loc 2 210 0
 557 03c2 3B6F     	 ldr r3,[r7,#112]
 558 03c4 1B68     	 ldr r3,[r3]
 559 03c6 1846     	 mov r0,r3
 560 03c8 4FEAE071 	 asr r1,r0,#31
 561 03cc BB6B     	 ldr r3,[r7,#56]
 562 03ce 5B00     	 lsls r3,r3,#1
 563 03d0 1A46     	 mov r2,r3
 564 03d2 4FEAE273 	 asr r3,r2,#31
 565 03d6 1218     	 adds r2,r2,r0
 566 03d8 43EB0103 	 adc r3,r3,r1
 567 03dc 1046     	 mov r0,r2
 568 03de 1946     	 mov r1,r3
 569 03e0 FFF7FEFF 	 bl clip_q63_to_q31
 570 03e4 0246     	 mov r2,r0
 571 03e6 3B6F     	 ldr r3,[r7,#112]
 572 03e8 1A60     	 str r2,[r3]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 573              	 .loc 2 211 0
 574 03ea 3B6F     	 ldr r3,[r7,#112]
 575 03ec 0433     	 adds r3,r3,#4
 576 03ee 3B67     	 str r3,[r7,#112]
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 577              	 .loc 2 214 0
 578 03f0 FB6E     	 ldr r3,[r7,#108]
 579 03f2 013B     	 subs r3,r3,#1
 580 03f4 FB66     	 str r3,[r7,#108]
 581              	.L11:
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 582              	 .loc 2 192 0
 583 03f6 FB6E     	 ldr r3,[r7,#108]
 584 03f8 002B     	 cmp r3,#0
 585 03fa 7FF436AF 	 bne .L12
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps % 0x4u;
 586              	 .loc 2 218 0
 587 03fe FB6D     	 ldr r3,[r7,#92]
 588 0400 03F00303 	 and r3,r3,#3
 589 0404 FB66     	 str r3,[r7,#108]
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 590              	 .loc 2 220 0
 591 0406 33E0     	 b .L13
 592              	.L14:
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 593              	 .loc 2 223 0
 594 0408 FB6B     	 ldr r3,[r7,#60]
 595 040a 1C46     	 mov r4,r3
 596 040c 4FEAE475 	 asr r5,r4,#31
 597 0410 7A6F     	 ldr r2,[r7,#116]
 598 0412 131D     	 adds r3,r2,#4
 599 0414 7B67     	 str r3,[r7,#116]
 600 0416 1368     	 ldr r3,[r2]
 601 0418 1A46     	 mov r2,r3
 602 041a 4FEAE273 	 asr r3,r2,#31
 603 041e 02FB05F0 	 mul r0,r2,r5
 604 0422 04FB03F1 	 mul r1,r4,r3
 605 0426 0144     	 add r1,r1,r0
 606 0428 A4FB0223 	 umull r2,r3,r4,r2
 607 042c 1944     	 add r1,r1,r3
 608 042e 0B46     	 mov r3,r1
 609 0430 1900     	 movs r1,r3
 610 0432 3960     	 str r1,[r7]
 611 0434 DB17     	 asrs r3,r3,#31
 612 0436 7B60     	 str r3,[r7,#4]
 613 0438 3B68     	 ldr r3,[r7]
 614 043a BB63     	 str r3,[r7,#56]
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 615              	 .loc 2 224 0
 616 043c 3B6F     	 ldr r3,[r7,#112]
 617 043e 1B68     	 ldr r3,[r3]
 618 0440 1846     	 mov r0,r3
 619 0442 4FEAE071 	 asr r1,r0,#31
 620 0446 BB6B     	 ldr r3,[r7,#56]
 621 0448 5B00     	 lsls r3,r3,#1
 622 044a 1A46     	 mov r2,r3
 623 044c 4FEAE273 	 asr r3,r2,#31
 624 0450 1218     	 adds r2,r2,r0
 625 0452 43EB0103 	 adc r3,r3,r1
 626 0456 1046     	 mov r0,r2
 627 0458 1946     	 mov r1,r3
 628 045a FFF7FEFF 	 bl clip_q63_to_q31
 629 045e 0246     	 mov r2,r0
 630 0460 3B6F     	 ldr r3,[r7,#112]
 631 0462 1A60     	 str r2,[r3]
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 632              	 .loc 2 225 0
 633 0464 3B6F     	 ldr r3,[r7,#112]
 634 0466 0433     	 adds r3,r3,#4
 635 0468 3B67     	 str r3,[r7,#112]
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 636              	 .loc 2 228 0
 637 046a FB6E     	 ldr r3,[r7,#108]
 638 046c 013B     	 subs r3,r3,#1
 639 046e FB66     	 str r3,[r7,#108]
 640              	.L13:
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 641              	 .loc 2 220 0
 642 0470 FB6E     	 ldr r3,[r7,#108]
 643 0472 002B     	 cmp r3,#0
 644 0474 C8D1     	 bne .L14
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     blkCnt--;
 645              	 .loc 2 232 0
 646 0476 BB6E     	 ldr r3,[r7,#104]
 647 0478 013B     	 subs r3,r3,#1
 648 047a BB66     	 str r3,[r7,#104]
 649              	.L6:
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 650              	 .loc 2 113 0
 651 047c BB6E     	 ldr r3,[r7,#104]
 652 047e 002B     	 cmp r3,#0
 653 0480 7FF4E9AD 	 bne .L15
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Processing is complete. Now copy the last numTaps - 1 samples to the    
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      satrt of the state buffer. This prepares the state buffer for the    
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      next function call. */
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Points to the start of the pState buffer */
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   pStateCurnt = S->pState;
 654              	 .loc 2 240 0
 655 0484 7B6B     	 ldr r3,[r7,#52]
 656 0486 5B68     	 ldr r3,[r3,#4]
 657 0488 BB67     	 str r3,[r7,#120]
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Loop unrolling for (numTaps - 1u) samples copy */
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   tapCnt = (numTaps - 1u) >> 2u;
 658              	 .loc 2 243 0
 659 048a FB6D     	 ldr r3,[r7,#92]
 660 048c 013B     	 subs r3,r3,#1
 661 048e 9B08     	 lsrs r3,r3,#2
 662 0490 FB66     	 str r3,[r7,#108]
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* copy data */
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(tapCnt > 0u)
 663              	 .loc 2 246 0
 664 0492 22E0     	 b .L16
 665              	.L17:
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 666              	 .loc 2 248 0
 667 0494 BB6F     	 ldr r3,[r7,#120]
 668 0496 1A1D     	 adds r2,r3,#4
 669 0498 BA67     	 str r2,[r7,#120]
 670 049a FA6F     	 ldr r2,[r7,#124]
 671 049c 111D     	 adds r1,r2,#4
 672 049e F967     	 str r1,[r7,#124]
 673 04a0 1268     	 ldr r2,[r2]
 674 04a2 1A60     	 str r2,[r3]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 675              	 .loc 2 249 0
 676 04a4 BB6F     	 ldr r3,[r7,#120]
 677 04a6 1A1D     	 adds r2,r3,#4
 678 04a8 BA67     	 str r2,[r7,#120]
 679 04aa FA6F     	 ldr r2,[r7,#124]
 680 04ac 111D     	 adds r1,r2,#4
 681 04ae F967     	 str r1,[r7,#124]
 682 04b0 1268     	 ldr r2,[r2]
 683 04b2 1A60     	 str r2,[r3]
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 684              	 .loc 2 250 0
 685 04b4 BB6F     	 ldr r3,[r7,#120]
 686 04b6 1A1D     	 adds r2,r3,#4
 687 04b8 BA67     	 str r2,[r7,#120]
 688 04ba FA6F     	 ldr r2,[r7,#124]
 689 04bc 111D     	 adds r1,r2,#4
 690 04be F967     	 str r1,[r7,#124]
 691 04c0 1268     	 ldr r2,[r2]
 692 04c2 1A60     	 str r2,[r3]
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 693              	 .loc 2 251 0
 694 04c4 BB6F     	 ldr r3,[r7,#120]
 695 04c6 1A1D     	 adds r2,r3,#4
 696 04c8 BA67     	 str r2,[r7,#120]
 697 04ca FA6F     	 ldr r2,[r7,#124]
 698 04cc 111D     	 adds r1,r2,#4
 699 04ce F967     	 str r1,[r7,#124]
 700 04d0 1268     	 ldr r2,[r2]
 701 04d2 1A60     	 str r2,[r3]
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt--;
 702              	 .loc 2 254 0
 703 04d4 FB6E     	 ldr r3,[r7,#108]
 704 04d6 013B     	 subs r3,r3,#1
 705 04d8 FB66     	 str r3,[r7,#108]
 706              	.L16:
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 707              	 .loc 2 246 0
 708 04da FB6E     	 ldr r3,[r7,#108]
 709 04dc 002B     	 cmp r3,#0
 710 04de D9D1     	 bne .L17
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Calculate remaining number of copies */
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   tapCnt = (numTaps - 1u) % 0x4u;
 711              	 .loc 2 258 0
 712 04e0 FB6D     	 ldr r3,[r7,#92]
 713 04e2 013B     	 subs r3,r3,#1
 714 04e4 03F00303 	 and r3,r3,#3
 715 04e8 FB66     	 str r3,[r7,#108]
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Copy the remaining q31_t data */
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(tapCnt > 0u)
 716              	 .loc 2 261 0
 717 04ea 0AE0     	 b .L18
 718              	.L19:
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 719              	 .loc 2 263 0
 720 04ec BB6F     	 ldr r3,[r7,#120]
 721 04ee 1A1D     	 adds r2,r3,#4
 722 04f0 BA67     	 str r2,[r7,#120]
 723 04f2 FA6F     	 ldr r2,[r7,#124]
 724 04f4 111D     	 adds r1,r2,#4
 725 04f6 F967     	 str r1,[r7,#124]
 726 04f8 1268     	 ldr r2,[r2]
 727 04fa 1A60     	 str r2,[r3]
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt--;
 728              	 .loc 2 266 0
 729 04fc FB6E     	 ldr r3,[r7,#108]
 730 04fe 013B     	 subs r3,r3,#1
 731 0500 FB66     	 str r3,[r7,#108]
 732              	.L18:
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 733              	 .loc 2 261 0
 734 0502 FB6E     	 ldr r3,[r7,#108]
 735 0504 002B     	 cmp r3,#0
 736 0506 F1D1     	 bne .L19
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #else
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Run the below code for Cortex-M0 */
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(blkCnt > 0u)
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Copy the new input sample into the state buffer */
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pSrc++;
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pState pointer */
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState;
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pCoeffs pointer */
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Set the accumulator to zero */
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = 0;
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop over numTaps number of values */
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps;
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       acc += ((q63_t) (*px++)) * (*pb++);
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Converting the result to 1.31 format */
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Store the result from accumulator into the destination buffer. */
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc lower part of acc */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_l = acc & 0xffffffff;
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Calc upper part of acc */
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc_h = (acc >> 32) & 0xffffffff;
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     acc = (uint32_t) acc_l >> lShift | acc_h << uShift;
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pOut++ = (q31_t) acc;
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Compute and store error */
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     e = *pRef++ - (q31_t) acc;
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pErr++ = (q31_t) e;
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Weighting factor for the LMS version */
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     alpha = (q31_t) (((q63_t) e * mu) >> 31);
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pState pointer */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Advance state pointer by 1 for the next sample */
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     px = pState++;
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Initialize pCoeffs pointer */
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     pb = pCoeffs;
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Loop over numTaps number of values */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt = numTaps;
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     while(tapCnt > 0u)
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     {
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Perform the multiply-accumulate */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       coef = (q31_t) (((q63_t) alpha * (*px++)) >> (32));
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       *pb = clip_q63_to_q31((q63_t) * pb + (coef << 1u));
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       pb++;
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       /* Decrement the loop counter */
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****       tapCnt--;
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     }
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     blkCnt--;
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Processing is complete. Now copy the last numTaps - 1 samples to the     
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      start of the state buffer. This prepares the state buffer for the   
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****      next function call. */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Points to the start of the pState buffer */
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   pStateCurnt = S->pState;
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /*  Copy (numTaps - 1u) samples  */
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   tapCnt = (numTaps - 1u);
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   /* Copy the data */
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   while(tapCnt > 0u)
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   {
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     *pStateCurnt++ = *pState++;
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     /* Decrement the loop counter */
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****     tapCnt--;
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c ****   }
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** #endif /*   #ifndef ARM_MATH_CM0_FAMILY */
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_lms_q31.c **** }
 737              	 .loc 2 365 0
 738 0508 8037     	 adds r7,r7,#128
 739              	.LCFI9:
 740              	 .cfi_def_cfa_offset 32
 741 050a BD46     	 mov sp,r7
 742              	.LCFI10:
 743              	 .cfi_def_cfa_register 13
 744              	 
 745 050c BDE8B08F 	 pop {r4,r5,r7,r8,r9,r10,fp,pc}
 746              	 .cfi_endproc
 747              	.LFE139:
 749              	 .text
 750              	.Letext0:
 751              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 752              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_lms_q31.c
    {standard input}:19     .text.clip_q63_to_q31:00000000 $t
    {standard input}:23     .text.clip_q63_to_q31:00000000 clip_q63_to_q31
    {standard input}:90     .text.arm_lms_q31:00000000 $t
    {standard input}:95     .text.arm_lms_q31:00000000 arm_lms_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
