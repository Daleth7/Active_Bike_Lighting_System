   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_fir_q7.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_fir_q7,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_fir_q7
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_fir_q7:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c"
   1:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *    
   4:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *    
   7:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * Title:        arm_fir_q7.c    
   9:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *    
  10:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * Description:  Q7 FIR filter processing function.    
  11:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *    
  12:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *  
  14:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** *
  27:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  41:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  43:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @ingroup groupFilters    
  45:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  */
  46:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  47:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @addtogroup FIR    
  49:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  */
  51:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  52:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @param[in]   *S points to an instance of the Q7 FIR filter structure.    
  54:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @param[in]   *pSrc points to the block of input data.    
  55:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @param[out]  *pDst points to the block of output data.    
  56:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @param[in]   blockSize number of samples to process per call.    
  57:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * @return 	none.    
  58:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  *    
  59:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * <b>Scaling and Overflow Behavior:</b>    
  60:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * \par    
  61:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * The function is implemented using a 32-bit internal accumulator.    
  62:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * Both coefficients and state variables are represented in 1.7 format and multiplications yield a 
  63:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * The 2.14 intermediate results are accumulated in a 32-bit accumulator in 18.14 format.    
  64:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * There is no risk of internal overflow with this approach and the full precision of intermediate 
  65:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * The accumulator is converted to 18.7 format by discarding the low 7 bits.    
  66:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  * Finally, the result is truncated to 1.7 format.    
  67:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****  */
  68:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  69:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** void arm_fir_q7(
  70:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   const arm_fir_instance_q7 * S,
  71:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t * pSrc,
  72:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t * pDst,
  73:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   uint32_t blockSize)
  74:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** {
  27              	 .loc 1 74 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 9FB0     	 sub sp,sp,#124
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 128
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 B960     	 str r1,[r7,#8]
  44 000a 7A60     	 str r2,[r7,#4]
  45 000c 3B60     	 str r3,[r7]
  75:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  76:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** #ifndef ARM_MATH_CM0_FAMILY
  77:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  78:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  79:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  80:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *pState = S->pState;                      /* State pointer */
  46              	 .loc 1 80 0
  47 000e FB68     	 ldr r3,[r7,#12]
  48 0010 5B68     	 ldr r3,[r3,#4]
  49 0012 7B67     	 str r3,[r7,#116]
  81:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *pCoeffs = S->pCoeffs;                    /* Coefficient pointer */
  50              	 .loc 1 81 0
  51 0014 FB68     	 ldr r3,[r7,#12]
  52 0016 9B68     	 ldr r3,[r3,#8]
  53 0018 7B64     	 str r3,[r7,#68]
  82:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *pStateCurnt;                             /* Points to the current sample of the state */
  83:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t x0, x1, x2, x3;                           /* Temporary variables to hold state */
  84:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t c0;                                       /* Temporary variable to hold coefficient value */
  85:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *px;                                      /* Temporary pointer for state */
  86:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *pb;                                      /* Temporary pointer for coefficient buffer */
  87:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q31_t acc0, acc1, acc2, acc3;                  /* Accumulators */
  88:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
  54              	 .loc 1 88 0
  55 001a FB68     	 ldr r3,[r7,#12]
  56 001c 1B88     	 ldrh r3,[r3]
  57 001e 3B64     	 str r3,[r7,#64]
  89:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   uint32_t i, tapCnt, blkCnt;                    /* Loop counters */
  90:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  91:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* S->pState points to state array which contains previous frame (numTaps - 1) samples */
  92:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* pStateCurnt points to the location where the new input data should be written */
  93:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   pStateCurnt = &(S->pState[(numTaps - 1u)]);
  58              	 .loc 1 93 0
  59 0020 FB68     	 ldr r3,[r7,#12]
  60 0022 5A68     	 ldr r2,[r3,#4]
  61 0024 3B6C     	 ldr r3,[r7,#64]
  62 0026 013B     	 subs r3,r3,#1
  63 0028 1344     	 add r3,r3,r2
  64 002a 3B67     	 str r3,[r7,#112]
  94:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
  95:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Apply loop unrolling and compute 4 output values simultaneously.    
  96:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    * The variables acc0 ... acc3 hold output values that are being computed:    
  97:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    *    
  98:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    *    acc0 =  b[numTaps-1] * x[n-numTaps-1] + b[numTaps-2] * x[n-numTaps-2] + b[numTaps-3] * x[n-
  99:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    *    acc1 =  b[numTaps-1] * x[n-numTaps] +   b[numTaps-2] * x[n-numTaps-1] + b[numTaps-3] * x[n-
 100:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    *    acc2 =  b[numTaps-1] * x[n-numTaps+1] + b[numTaps-2] * x[n-numTaps] +   b[numTaps-3] * x[n-
 101:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    *    acc3 =  b[numTaps-1] * x[n-numTaps+2] + b[numTaps-2] * x[n-numTaps+1] + b[numTaps-3] * x[n-
 102:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    */
 103:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   blkCnt = blockSize >> 2;
  65              	 .loc 1 103 0
  66 002c 3B68     	 ldr r3,[r7]
  67 002e 9B08     	 lsrs r3,r3,#2
  68 0030 BB64     	 str r3,[r7,#72]
 104:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 105:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 106:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   while(blkCnt > 0u)
  69              	 .loc 1 107 0
  70 0032 8AE1     	 b .L2
  71              	.L7:
 108:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 109:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Copy four new input samples into the state buffer */
 110:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pSrc++;
  72              	 .loc 1 110 0
  73 0034 3B6F     	 ldr r3,[r7,#112]
  74 0036 5A1C     	 adds r2,r3,#1
  75 0038 3A67     	 str r2,[r7,#112]
  76 003a BA68     	 ldr r2,[r7,#8]
  77 003c 511C     	 adds r1,r2,#1
  78 003e B960     	 str r1,[r7,#8]
  79 0040 1278     	 ldrb r2,[r2]
  80 0042 1A70     	 strb r2,[r3]
 111:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pSrc++;
  81              	 .loc 1 111 0
  82 0044 3B6F     	 ldr r3,[r7,#112]
  83 0046 5A1C     	 adds r2,r3,#1
  84 0048 3A67     	 str r2,[r7,#112]
  85 004a BA68     	 ldr r2,[r7,#8]
  86 004c 511C     	 adds r1,r2,#1
  87 004e B960     	 str r1,[r7,#8]
  88 0050 1278     	 ldrb r2,[r2]
  89 0052 1A70     	 strb r2,[r3]
 112:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pSrc++;
  90              	 .loc 1 112 0
  91 0054 3B6F     	 ldr r3,[r7,#112]
  92 0056 5A1C     	 adds r2,r3,#1
  93 0058 3A67     	 str r2,[r7,#112]
  94 005a BA68     	 ldr r2,[r7,#8]
  95 005c 511C     	 adds r1,r2,#1
  96 005e B960     	 str r1,[r7,#8]
  97 0060 1278     	 ldrb r2,[r2]
  98 0062 1A70     	 strb r2,[r3]
 113:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pSrc++;
  99              	 .loc 1 113 0
 100 0064 3B6F     	 ldr r3,[r7,#112]
 101 0066 5A1C     	 adds r2,r3,#1
 102 0068 3A67     	 str r2,[r7,#112]
 103 006a BA68     	 ldr r2,[r7,#8]
 104 006c 511C     	 adds r1,r2,#1
 105 006e B960     	 str r1,[r7,#8]
 106 0070 1278     	 ldrb r2,[r2]
 107 0072 1A70     	 strb r2,[r3]
 114:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 115:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Set all accumulators to zero */
 116:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc0 = 0;
 108              	 .loc 1 116 0
 109 0074 0023     	 movs r3,#0
 110 0076 3B66     	 str r3,[r7,#96]
 117:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc1 = 0;
 111              	 .loc 1 117 0
 112 0078 0023     	 movs r3,#0
 113 007a FB65     	 str r3,[r7,#92]
 118:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc2 = 0;
 114              	 .loc 1 118 0
 115 007c 0023     	 movs r3,#0
 116 007e BB65     	 str r3,[r7,#88]
 119:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc3 = 0;
 117              	 .loc 1 119 0
 118 0080 0023     	 movs r3,#0
 119 0082 7B65     	 str r3,[r7,#84]
 120:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 121:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Initialize state pointer */
 122:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     px = pState;
 120              	 .loc 1 122 0
 121 0084 7B6F     	 ldr r3,[r7,#116]
 122 0086 BB66     	 str r3,[r7,#104]
 123:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 124:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Initialize coefficient pointer */
 125:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     pb = pCoeffs;
 123              	 .loc 1 125 0
 124 0088 7B6C     	 ldr r3,[r7,#68]
 125 008a 7B66     	 str r3,[r7,#100]
 126:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 127:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Read the first three samples from the state buffer:    
 128:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****      *  x[n-numTaps], x[n-numTaps-1], x[n-numTaps-2] */
 129:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     x0 = *(px++);
 126              	 .loc 1 129 0
 127 008c BB6E     	 ldr r3,[r7,#104]
 128 008e 5A1C     	 adds r2,r3,#1
 129 0090 BA66     	 str r2,[r7,#104]
 130 0092 1B78     	 ldrb r3,[r3]
 131 0094 87F86F30 	 strb r3,[r7,#111]
 130:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     x1 = *(px++);
 132              	 .loc 1 130 0
 133 0098 BB6E     	 ldr r3,[r7,#104]
 134 009a 5A1C     	 adds r2,r3,#1
 135 009c BA66     	 str r2,[r7,#104]
 136 009e 1B78     	 ldrb r3,[r3]
 137 00a0 87F86E30 	 strb r3,[r7,#110]
 131:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     x2 = *(px++);
 138              	 .loc 1 131 0
 139 00a4 BB6E     	 ldr r3,[r7,#104]
 140 00a6 5A1C     	 adds r2,r3,#1
 141 00a8 BA66     	 str r2,[r7,#104]
 142 00aa 1B78     	 ldrb r3,[r3]
 143 00ac 87F86D30 	 strb r3,[r7,#109]
 132:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 133:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Loop unrolling.  Process 4 taps at a time. */
 134:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     tapCnt = numTaps >> 2;
 144              	 .loc 1 134 0
 145 00b0 3B6C     	 ldr r3,[r7,#64]
 146 00b2 9B08     	 lsrs r3,r3,#2
 147 00b4 FB64     	 str r3,[r7,#76]
 135:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     i = tapCnt;
 148              	 .loc 1 135 0
 149 00b6 FB6C     	 ldr r3,[r7,#76]
 150 00b8 3B65     	 str r3,[r7,#80]
 136:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     while(i > 0u)
 151              	 .loc 1 137 0
 152 00ba B8E0     	 b .L3
 153              	.L4:
 138:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     {
 139:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read the b[numTaps] coefficient */
 140:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       c0 = *pb;
 154              	 .loc 1 140 0
 155 00bc 7B6E     	 ldr r3,[r7,#100]
 156 00be 1B78     	 ldrb r3,[r3]
 157 00c0 87F83F30 	 strb r3,[r7,#63]
 141:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 142:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read x[n-numTaps-3] sample */
 143:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x3 = *px;
 158              	 .loc 1 143 0
 159 00c4 BB6E     	 ldr r3,[r7,#104]
 160 00c6 1B78     	 ldrb r3,[r3]
 161 00c8 87F83E30 	 strb r3,[r7,#62]
 144:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       
 145:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* acc0 +=  b[numTaps] * x[n-numTaps] */
 146:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc0 += ((q15_t) x0 * c0);
 162              	 .loc 1 146 0
 163 00cc 97F96F30 	 ldrsb r3,[r7,#111]
 164 00d0 97F93F20 	 ldrsb r2,[r7,#63]
 165 00d4 02FB03F3 	 mul r3,r2,r3
 166 00d8 3A6E     	 ldr r2,[r7,#96]
 167 00da 1344     	 add r3,r3,r2
 168 00dc 3B66     	 str r3,[r7,#96]
 147:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 148:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* acc1 +=  b[numTaps] * x[n-numTaps-1] */
 149:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc1 += ((q15_t) x1 * c0);
 169              	 .loc 1 149 0
 170 00de 97F96E30 	 ldrsb r3,[r7,#110]
 171 00e2 97F93F20 	 ldrsb r2,[r7,#63]
 172 00e6 02FB03F3 	 mul r3,r2,r3
 173 00ea FA6D     	 ldr r2,[r7,#92]
 174 00ec 1344     	 add r3,r3,r2
 175 00ee FB65     	 str r3,[r7,#92]
 150:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 151:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* acc2 +=  b[numTaps] * x[n-numTaps-2] */
 152:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc2 += ((q15_t) x2 * c0);
 176              	 .loc 1 152 0
 177 00f0 97F96D30 	 ldrsb r3,[r7,#109]
 178 00f4 97F93F20 	 ldrsb r2,[r7,#63]
 179 00f8 02FB03F3 	 mul r3,r2,r3
 180 00fc BA6D     	 ldr r2,[r7,#88]
 181 00fe 1344     	 add r3,r3,r2
 182 0100 BB65     	 str r3,[r7,#88]
 153:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 154:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* acc3 +=  b[numTaps] * x[n-numTaps-3] */
 155:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc3 += ((q15_t) x3 * c0);
 183              	 .loc 1 155 0
 184 0102 97F93E30 	 ldrsb r3,[r7,#62]
 185 0106 97F93F20 	 ldrsb r2,[r7,#63]
 186 010a 02FB03F3 	 mul r3,r2,r3
 187 010e 7A6D     	 ldr r2,[r7,#84]
 188 0110 1344     	 add r3,r3,r2
 189 0112 7B65     	 str r3,[r7,#84]
 156:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 157:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read the b[numTaps-1] coefficient */
 158:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       c0 = *(pb + 1u);
 190              	 .loc 1 158 0
 191 0114 7B6E     	 ldr r3,[r7,#100]
 192 0116 5B78     	 ldrb r3,[r3,#1]
 193 0118 87F83F30 	 strb r3,[r7,#63]
 159:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 160:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read x[n-numTaps-4] sample */
 161:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x0 = *(px + 1u);
 194              	 .loc 1 161 0
 195 011c BB6E     	 ldr r3,[r7,#104]
 196 011e 5B78     	 ldrb r3,[r3,#1]
 197 0120 87F86F30 	 strb r3,[r7,#111]
 162:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 163:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Perform the multiply-accumulates */
 164:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc0 += ((q15_t) x1 * c0);
 198              	 .loc 1 164 0
 199 0124 97F96E30 	 ldrsb r3,[r7,#110]
 200 0128 97F93F20 	 ldrsb r2,[r7,#63]
 201 012c 02FB03F3 	 mul r3,r2,r3
 202 0130 3A6E     	 ldr r2,[r7,#96]
 203 0132 1344     	 add r3,r3,r2
 204 0134 3B66     	 str r3,[r7,#96]
 165:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc1 += ((q15_t) x2 * c0);
 205              	 .loc 1 165 0
 206 0136 97F96D30 	 ldrsb r3,[r7,#109]
 207 013a 97F93F20 	 ldrsb r2,[r7,#63]
 208 013e 02FB03F3 	 mul r3,r2,r3
 209 0142 FA6D     	 ldr r2,[r7,#92]
 210 0144 1344     	 add r3,r3,r2
 211 0146 FB65     	 str r3,[r7,#92]
 166:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc2 += ((q15_t) x3 * c0);
 212              	 .loc 1 166 0
 213 0148 97F93E30 	 ldrsb r3,[r7,#62]
 214 014c 97F93F20 	 ldrsb r2,[r7,#63]
 215 0150 02FB03F3 	 mul r3,r2,r3
 216 0154 BA6D     	 ldr r2,[r7,#88]
 217 0156 1344     	 add r3,r3,r2
 218 0158 BB65     	 str r3,[r7,#88]
 167:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc3 += ((q15_t) x0 * c0);
 219              	 .loc 1 167 0
 220 015a 97F96F30 	 ldrsb r3,[r7,#111]
 221 015e 97F93F20 	 ldrsb r2,[r7,#63]
 222 0162 02FB03F3 	 mul r3,r2,r3
 223 0166 7A6D     	 ldr r2,[r7,#84]
 224 0168 1344     	 add r3,r3,r2
 225 016a 7B65     	 str r3,[r7,#84]
 168:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 169:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read the b[numTaps-2] coefficient */
 170:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       c0 = *(pb + 2u);
 226              	 .loc 1 170 0
 227 016c 7B6E     	 ldr r3,[r7,#100]
 228 016e 9B78     	 ldrb r3,[r3,#2]
 229 0170 87F83F30 	 strb r3,[r7,#63]
 171:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 172:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read x[n-numTaps-5] sample */
 173:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x1 = *(px + 2u);
 230              	 .loc 1 173 0
 231 0174 BB6E     	 ldr r3,[r7,#104]
 232 0176 9B78     	 ldrb r3,[r3,#2]
 233 0178 87F86E30 	 strb r3,[r7,#110]
 174:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 175:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Perform the multiply-accumulates */
 176:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc0 += ((q15_t) x2 * c0);
 234              	 .loc 1 176 0
 235 017c 97F96D30 	 ldrsb r3,[r7,#109]
 236 0180 97F93F20 	 ldrsb r2,[r7,#63]
 237 0184 02FB03F3 	 mul r3,r2,r3
 238 0188 3A6E     	 ldr r2,[r7,#96]
 239 018a 1344     	 add r3,r3,r2
 240 018c 3B66     	 str r3,[r7,#96]
 177:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc1 += ((q15_t) x3 * c0);
 241              	 .loc 1 177 0
 242 018e 97F93E30 	 ldrsb r3,[r7,#62]
 243 0192 97F93F20 	 ldrsb r2,[r7,#63]
 244 0196 02FB03F3 	 mul r3,r2,r3
 245 019a FA6D     	 ldr r2,[r7,#92]
 246 019c 1344     	 add r3,r3,r2
 247 019e FB65     	 str r3,[r7,#92]
 178:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc2 += ((q15_t) x0 * c0);
 248              	 .loc 1 178 0
 249 01a0 97F96F30 	 ldrsb r3,[r7,#111]
 250 01a4 97F93F20 	 ldrsb r2,[r7,#63]
 251 01a8 02FB03F3 	 mul r3,r2,r3
 252 01ac BA6D     	 ldr r2,[r7,#88]
 253 01ae 1344     	 add r3,r3,r2
 254 01b0 BB65     	 str r3,[r7,#88]
 179:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc3 += ((q15_t) x1 * c0);
 255              	 .loc 1 179 0
 256 01b2 97F96E30 	 ldrsb r3,[r7,#110]
 257 01b6 97F93F20 	 ldrsb r2,[r7,#63]
 258 01ba 02FB03F3 	 mul r3,r2,r3
 259 01be 7A6D     	 ldr r2,[r7,#84]
 260 01c0 1344     	 add r3,r3,r2
 261 01c2 7B65     	 str r3,[r7,#84]
 180:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 181:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read the b[numTaps-3] coefficients */
 182:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       c0 = *(pb + 3u);
 262              	 .loc 1 182 0
 263 01c4 7B6E     	 ldr r3,[r7,#100]
 264 01c6 DB78     	 ldrb r3,[r3,#3]
 265 01c8 87F83F30 	 strb r3,[r7,#63]
 183:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 184:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read x[n-numTaps-6] sample */
 185:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x2 = *(px + 3u);
 266              	 .loc 1 185 0
 267 01cc BB6E     	 ldr r3,[r7,#104]
 268 01ce DB78     	 ldrb r3,[r3,#3]
 269 01d0 87F86D30 	 strb r3,[r7,#109]
 186:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       
 187:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Perform the multiply-accumulates */
 188:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc0 += ((q15_t) x3 * c0);
 270              	 .loc 1 188 0
 271 01d4 97F93E30 	 ldrsb r3,[r7,#62]
 272 01d8 97F93F20 	 ldrsb r2,[r7,#63]
 273 01dc 02FB03F3 	 mul r3,r2,r3
 274 01e0 3A6E     	 ldr r2,[r7,#96]
 275 01e2 1344     	 add r3,r3,r2
 276 01e4 3B66     	 str r3,[r7,#96]
 189:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc1 += ((q15_t) x0 * c0);
 277              	 .loc 1 189 0
 278 01e6 97F96F30 	 ldrsb r3,[r7,#111]
 279 01ea 97F93F20 	 ldrsb r2,[r7,#63]
 280 01ee 02FB03F3 	 mul r3,r2,r3
 281 01f2 FA6D     	 ldr r2,[r7,#92]
 282 01f4 1344     	 add r3,r3,r2
 283 01f6 FB65     	 str r3,[r7,#92]
 190:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc2 += ((q15_t) x1 * c0);
 284              	 .loc 1 190 0
 285 01f8 97F96E30 	 ldrsb r3,[r7,#110]
 286 01fc 97F93F20 	 ldrsb r2,[r7,#63]
 287 0200 02FB03F3 	 mul r3,r2,r3
 288 0204 BA6D     	 ldr r2,[r7,#88]
 289 0206 1344     	 add r3,r3,r2
 290 0208 BB65     	 str r3,[r7,#88]
 191:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc3 += ((q15_t) x2 * c0);
 291              	 .loc 1 191 0
 292 020a 97F96D30 	 ldrsb r3,[r7,#109]
 293 020e 97F93F20 	 ldrsb r2,[r7,#63]
 294 0212 02FB03F3 	 mul r3,r2,r3
 295 0216 7A6D     	 ldr r2,[r7,#84]
 296 0218 1344     	 add r3,r3,r2
 297 021a 7B65     	 str r3,[r7,#84]
 192:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 193:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* update coefficient pointer */
 194:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       pb += 4u;
 298              	 .loc 1 194 0
 299 021c 7B6E     	 ldr r3,[r7,#100]
 300 021e 0433     	 adds r3,r3,#4
 301 0220 7B66     	 str r3,[r7,#100]
 195:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       px += 4u;
 302              	 .loc 1 195 0
 303 0222 BB6E     	 ldr r3,[r7,#104]
 304 0224 0433     	 adds r3,r3,#4
 305 0226 BB66     	 str r3,[r7,#104]
 196:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       
 197:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Decrement the loop counter */
 198:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       i--;
 306              	 .loc 1 198 0
 307 0228 3B6D     	 ldr r3,[r7,#80]
 308 022a 013B     	 subs r3,r3,#1
 309 022c 3B65     	 str r3,[r7,#80]
 310              	.L3:
 137:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     {
 311              	 .loc 1 137 0
 312 022e 3B6D     	 ldr r3,[r7,#80]
 313 0230 002B     	 cmp r3,#0
 314 0232 7FF443AF 	 bne .L4
 199:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     }
 200:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 201:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* If the filter length is not a multiple of 4, compute the remaining filter taps */
 202:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 203:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     i = numTaps - (tapCnt * 4u);
 315              	 .loc 1 203 0
 316 0236 FB6C     	 ldr r3,[r7,#76]
 317 0238 9B00     	 lsls r3,r3,#2
 318 023a 3A6C     	 ldr r2,[r7,#64]
 319 023c D31A     	 subs r3,r2,r3
 320 023e 3B65     	 str r3,[r7,#80]
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     while(i > 0u)
 321              	 .loc 1 204 0
 322 0240 3EE0     	 b .L5
 323              	.L6:
 205:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     {
 206:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Read coefficients */
 207:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       c0 = *(pb++);
 324              	 .loc 1 207 0
 325 0242 7B6E     	 ldr r3,[r7,#100]
 326 0244 5A1C     	 adds r2,r3,#1
 327 0246 7A66     	 str r2,[r7,#100]
 328 0248 1B78     	 ldrb r3,[r3]
 329 024a 87F83F30 	 strb r3,[r7,#63]
 208:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 209:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Fetch 1 state variable */
 210:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x3 = *(px++);
 330              	 .loc 1 210 0
 331 024e BB6E     	 ldr r3,[r7,#104]
 332 0250 5A1C     	 adds r2,r3,#1
 333 0252 BA66     	 str r2,[r7,#104]
 334 0254 1B78     	 ldrb r3,[r3]
 335 0256 87F83E30 	 strb r3,[r7,#62]
 211:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 212:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Perform the multiply-accumulates */
 213:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc0 += ((q15_t) x0 * c0);
 336              	 .loc 1 213 0
 337 025a 97F96F30 	 ldrsb r3,[r7,#111]
 338 025e 97F93F20 	 ldrsb r2,[r7,#63]
 339 0262 02FB03F3 	 mul r3,r2,r3
 340 0266 3A6E     	 ldr r2,[r7,#96]
 341 0268 1344     	 add r3,r3,r2
 342 026a 3B66     	 str r3,[r7,#96]
 214:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc1 += ((q15_t) x1 * c0);
 343              	 .loc 1 214 0
 344 026c 97F96E30 	 ldrsb r3,[r7,#110]
 345 0270 97F93F20 	 ldrsb r2,[r7,#63]
 346 0274 02FB03F3 	 mul r3,r2,r3
 347 0278 FA6D     	 ldr r2,[r7,#92]
 348 027a 1344     	 add r3,r3,r2
 349 027c FB65     	 str r3,[r7,#92]
 215:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc2 += ((q15_t) x2 * c0);
 350              	 .loc 1 215 0
 351 027e 97F96D30 	 ldrsb r3,[r7,#109]
 352 0282 97F93F20 	 ldrsb r2,[r7,#63]
 353 0286 02FB03F3 	 mul r3,r2,r3
 354 028a BA6D     	 ldr r2,[r7,#88]
 355 028c 1344     	 add r3,r3,r2
 356 028e BB65     	 str r3,[r7,#88]
 216:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc3 += ((q15_t) x3 * c0);
 357              	 .loc 1 216 0
 358 0290 97F93E30 	 ldrsb r3,[r7,#62]
 359 0294 97F93F20 	 ldrsb r2,[r7,#63]
 360 0298 02FB03F3 	 mul r3,r2,r3
 361 029c 7A6D     	 ldr r2,[r7,#84]
 362 029e 1344     	 add r3,r3,r2
 363 02a0 7B65     	 str r3,[r7,#84]
 217:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 218:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Reuse the present sample states for next sample */
 219:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x0 = x1;
 364              	 .loc 1 219 0
 365 02a2 97F86E30 	 ldrb r3,[r7,#110]
 366 02a6 87F86F30 	 strb r3,[r7,#111]
 220:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x1 = x2;
 367              	 .loc 1 220 0
 368 02aa 97F86D30 	 ldrb r3,[r7,#109]
 369 02ae 87F86E30 	 strb r3,[r7,#110]
 221:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       x2 = x3;
 370              	 .loc 1 221 0
 371 02b2 97F83E30 	 ldrb r3,[r7,#62]
 372 02b6 87F86D30 	 strb r3,[r7,#109]
 222:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 223:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* Decrement the loop counter */
 224:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       i--;
 373              	 .loc 1 224 0
 374 02ba 3B6D     	 ldr r3,[r7,#80]
 375 02bc 013B     	 subs r3,r3,#1
 376 02be 3B65     	 str r3,[r7,#80]
 377              	.L5:
 204:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     {
 378              	 .loc 1 204 0
 379 02c0 3B6D     	 ldr r3,[r7,#80]
 380 02c2 002B     	 cmp r3,#0
 381 02c4 BDD1     	 bne .L6
 225:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     }
 226:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 227:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Advance the state pointer by 4 to process the next group of 4 samples */
 228:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     pState = pState + 4;
 382              	 .loc 1 228 0
 383 02c6 7B6F     	 ldr r3,[r7,#116]
 384 02c8 0433     	 adds r3,r3,#4
 385 02ca 7B67     	 str r3,[r7,#116]
 386              	.LBB2:
 229:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 230:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* The results in the 4 accumulators are in 2.62 format.  Convert to 1.31    
 231:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****      ** Then store the 4 outputs in the destination buffer. */
 232:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc0 = __SSAT((acc0 >> 7u), 8);
 387              	 .loc 1 232 0
 388 02cc 3B6E     	 ldr r3,[r7,#96]
 389 02ce DB11     	 asrs r3,r3,#7
 390 02d0 BB63     	 str r3,[r7,#56]
 391 02d2 BB6B     	 ldr r3,[r7,#56]
 392              	
 393 02d4 03F30703 	 ssat r3,#8,r3
 394              	
 395              	 .thumb
 396 02d8 7B63     	 str r3,[r7,#52]
 397 02da 7B6B     	 ldr r3,[r7,#52]
 398              	.LBE2:
 399 02dc 3B66     	 str r3,[r7,#96]
 233:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pDst++ = acc0;
 400              	 .loc 1 233 0
 401 02de 7B68     	 ldr r3,[r7,#4]
 402 02e0 5A1C     	 adds r2,r3,#1
 403 02e2 7A60     	 str r2,[r7,#4]
 404 02e4 3A6E     	 ldr r2,[r7,#96]
 405 02e6 D2B2     	 uxtb r2,r2
 406 02e8 1A70     	 strb r2,[r3]
 407              	.LBB3:
 234:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc1 = __SSAT((acc1 >> 7u), 8);
 408              	 .loc 1 234 0
 409 02ea FB6D     	 ldr r3,[r7,#92]
 410 02ec DB11     	 asrs r3,r3,#7
 411 02ee 3B63     	 str r3,[r7,#48]
 412 02f0 3B6B     	 ldr r3,[r7,#48]
 413              	
 414 02f2 03F30703 	 ssat r3,#8,r3
 415              	
 416              	 .thumb
 417 02f6 FB62     	 str r3,[r7,#44]
 418 02f8 FB6A     	 ldr r3,[r7,#44]
 419              	.LBE3:
 420 02fa FB65     	 str r3,[r7,#92]
 235:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pDst++ = acc1;
 421              	 .loc 1 235 0
 422 02fc 7B68     	 ldr r3,[r7,#4]
 423 02fe 5A1C     	 adds r2,r3,#1
 424 0300 7A60     	 str r2,[r7,#4]
 425 0302 FA6D     	 ldr r2,[r7,#92]
 426 0304 D2B2     	 uxtb r2,r2
 427 0306 1A70     	 strb r2,[r3]
 428              	.LBB4:
 236:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc2 = __SSAT((acc2 >> 7u), 8);
 429              	 .loc 1 236 0
 430 0308 BB6D     	 ldr r3,[r7,#88]
 431 030a DB11     	 asrs r3,r3,#7
 432 030c BB62     	 str r3,[r7,#40]
 433 030e BB6A     	 ldr r3,[r7,#40]
 434              	
 435 0310 03F30703 	 ssat r3,#8,r3
 436              	
 437              	 .thumb
 438 0314 7B62     	 str r3,[r7,#36]
 439 0316 7B6A     	 ldr r3,[r7,#36]
 440              	.LBE4:
 441 0318 BB65     	 str r3,[r7,#88]
 237:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pDst++ = acc2;
 442              	 .loc 1 237 0
 443 031a 7B68     	 ldr r3,[r7,#4]
 444 031c 5A1C     	 adds r2,r3,#1
 445 031e 7A60     	 str r2,[r7,#4]
 446 0320 BA6D     	 ldr r2,[r7,#88]
 447 0322 D2B2     	 uxtb r2,r2
 448 0324 1A70     	 strb r2,[r3]
 449              	.LBB5:
 238:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc3 = __SSAT((acc3 >> 7u), 8);
 450              	 .loc 1 238 0
 451 0326 7B6D     	 ldr r3,[r7,#84]
 452 0328 DB11     	 asrs r3,r3,#7
 453 032a 3B62     	 str r3,[r7,#32]
 454 032c 3B6A     	 ldr r3,[r7,#32]
 455              	
 456 032e 03F30703 	 ssat r3,#8,r3
 457              	
 458              	 .thumb
 459 0332 FB61     	 str r3,[r7,#28]
 460 0334 FB69     	 ldr r3,[r7,#28]
 461              	.LBE5:
 462 0336 7B65     	 str r3,[r7,#84]
 239:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pDst++ = acc3;
 463              	 .loc 1 239 0
 464 0338 7B68     	 ldr r3,[r7,#4]
 465 033a 5A1C     	 adds r2,r3,#1
 466 033c 7A60     	 str r2,[r7,#4]
 467 033e 7A6D     	 ldr r2,[r7,#84]
 468 0340 D2B2     	 uxtb r2,r2
 469 0342 1A70     	 strb r2,[r3]
 240:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 241:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Decrement the samples loop counter */
 242:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     blkCnt--;
 470              	 .loc 1 242 0
 471 0344 BB6C     	 ldr r3,[r7,#72]
 472 0346 013B     	 subs r3,r3,#1
 473 0348 BB64     	 str r3,[r7,#72]
 474              	.L2:
 107:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 475              	 .loc 1 107 0
 476 034a BB6C     	 ldr r3,[r7,#72]
 477 034c 002B     	 cmp r3,#0
 478 034e 7FF471AE 	 bne .L7
 243:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   }
 244:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 245:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 246:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 247:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    ** No loop unrolling is used. */
 248:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   blkCnt = blockSize % 4u;
 479              	 .loc 1 248 0
 480 0352 3B68     	 ldr r3,[r7]
 481 0354 03F00303 	 and r3,r3,#3
 482 0358 BB64     	 str r3,[r7,#72]
 249:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   while(blkCnt > 0u)
 483              	 .loc 1 250 0
 484 035a 37E0     	 b .L8
 485              	.L10:
 251:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 252:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Copy one sample at a time into state buffer */
 253:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pSrc++;
 486              	 .loc 1 253 0
 487 035c 3B6F     	 ldr r3,[r7,#112]
 488 035e 5A1C     	 adds r2,r3,#1
 489 0360 3A67     	 str r2,[r7,#112]
 490 0362 BA68     	 ldr r2,[r7,#8]
 491 0364 511C     	 adds r1,r2,#1
 492 0366 B960     	 str r1,[r7,#8]
 493 0368 1278     	 ldrb r2,[r2]
 494 036a 1A70     	 strb r2,[r3]
 254:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 255:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Set the accumulator to zero */
 256:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc0 = 0;
 495              	 .loc 1 256 0
 496 036c 0023     	 movs r3,#0
 497 036e 3B66     	 str r3,[r7,#96]
 257:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 258:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Initialize state pointer */
 259:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     px = pState;
 498              	 .loc 1 259 0
 499 0370 7B6F     	 ldr r3,[r7,#116]
 500 0372 BB66     	 str r3,[r7,#104]
 260:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 261:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Initialize Coefficient pointer */
 262:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     pb = (pCoeffs);
 501              	 .loc 1 262 0
 502 0374 7B6C     	 ldr r3,[r7,#68]
 503 0376 7B66     	 str r3,[r7,#100]
 263:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 264:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     i = numTaps;
 504              	 .loc 1 264 0
 505 0378 3B6C     	 ldr r3,[r7,#64]
 506 037a 3B65     	 str r3,[r7,#80]
 507              	.L9:
 265:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 266:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Perform the multiply-accumulates */
 267:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     do
 268:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     {
 269:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc0 += (q15_t) * (px++) * (*(pb++));
 508              	 .loc 1 269 0 discriminator 1
 509 037c BB6E     	 ldr r3,[r7,#104]
 510 037e 5A1C     	 adds r2,r3,#1
 511 0380 BA66     	 str r2,[r7,#104]
 512 0382 1B78     	 ldrb r3,[r3]
 513 0384 5AB2     	 sxtb r2,r3
 514 0386 7B6E     	 ldr r3,[r7,#100]
 515 0388 591C     	 adds r1,r3,#1
 516 038a 7966     	 str r1,[r7,#100]
 517 038c 1B78     	 ldrb r3,[r3]
 518 038e 5BB2     	 sxtb r3,r3
 519 0390 03FB02F3 	 mul r3,r3,r2
 520 0394 3A6E     	 ldr r2,[r7,#96]
 521 0396 1344     	 add r3,r3,r2
 522 0398 3B66     	 str r3,[r7,#96]
 270:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       i--;
 523              	 .loc 1 270 0 discriminator 1
 524 039a 3B6D     	 ldr r3,[r7,#80]
 525 039c 013B     	 subs r3,r3,#1
 526 039e 3B65     	 str r3,[r7,#80]
 271:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     } while(i > 0u);
 527              	 .loc 1 271 0 discriminator 1
 528 03a0 3B6D     	 ldr r3,[r7,#80]
 529 03a2 002B     	 cmp r3,#0
 530 03a4 EAD1     	 bne .L9
 272:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 273:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* The result is in 2.14 format.  Convert to 1.7    
 274:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****      ** Then store the output in the destination buffer. */
 275:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pDst++ = __SSAT((acc0 >> 7u), 8);
 531              	 .loc 1 275 0
 532 03a6 7B68     	 ldr r3,[r7,#4]
 533 03a8 5A1C     	 adds r2,r3,#1
 534 03aa 7A60     	 str r2,[r7,#4]
 535              	.LBB6:
 536 03ac 3A6E     	 ldr r2,[r7,#96]
 537 03ae D211     	 asrs r2,r2,#7
 538 03b0 BA61     	 str r2,[r7,#24]
 539 03b2 BA69     	 ldr r2,[r7,#24]
 540              	
 541 03b4 02F30702 	 ssat r2,#8,r2
 542              	
 543              	 .thumb
 544 03b8 7A61     	 str r2,[r7,#20]
 545 03ba 7A69     	 ldr r2,[r7,#20]
 546              	.LBE6:
 547 03bc D2B2     	 uxtb r2,r2
 548 03be 1A70     	 strb r2,[r3]
 276:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 277:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Advance state pointer by 1 for the next sample */
 278:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     pState = pState + 1;
 549              	 .loc 1 278 0
 550 03c0 7B6F     	 ldr r3,[r7,#116]
 551 03c2 0133     	 adds r3,r3,#1
 552 03c4 7B67     	 str r3,[r7,#116]
 279:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 280:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Decrement the samples loop counter */
 281:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     blkCnt--;
 553              	 .loc 1 281 0
 554 03c6 BB6C     	 ldr r3,[r7,#72]
 555 03c8 013B     	 subs r3,r3,#1
 556 03ca BB64     	 str r3,[r7,#72]
 557              	.L8:
 250:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 558              	 .loc 1 250 0
 559 03cc BB6C     	 ldr r3,[r7,#72]
 560 03ce 002B     	 cmp r3,#0
 561 03d0 C4D1     	 bne .L10
 282:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   }
 283:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 284:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Processing is complete.    
 285:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    ** Now copy the last numTaps - 1 samples to the satrt of the state buffer.    
 286:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    ** This prepares the state buffer for the next function call. */
 287:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 288:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Points to the start of the state buffer */
 289:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   pStateCurnt = S->pState;
 562              	 .loc 1 289 0
 563 03d2 FB68     	 ldr r3,[r7,#12]
 564 03d4 5B68     	 ldr r3,[r3,#4]
 565 03d6 3B67     	 str r3,[r7,#112]
 290:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 291:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   tapCnt = (numTaps - 1u) >> 2u;
 566              	 .loc 1 291 0
 567 03d8 3B6C     	 ldr r3,[r7,#64]
 568 03da 013B     	 subs r3,r3,#1
 569 03dc 9B08     	 lsrs r3,r3,#2
 570 03de FB64     	 str r3,[r7,#76]
 292:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 293:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* copy data */
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   while(tapCnt > 0u)
 571              	 .loc 1 294 0
 572 03e0 22E0     	 b .L11
 573              	.L12:
 295:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 296:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pState++;
 574              	 .loc 1 296 0
 575 03e2 3B6F     	 ldr r3,[r7,#112]
 576 03e4 5A1C     	 adds r2,r3,#1
 577 03e6 3A67     	 str r2,[r7,#112]
 578 03e8 7A6F     	 ldr r2,[r7,#116]
 579 03ea 511C     	 adds r1,r2,#1
 580 03ec 7967     	 str r1,[r7,#116]
 581 03ee 1278     	 ldrb r2,[r2]
 582 03f0 1A70     	 strb r2,[r3]
 297:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pState++;
 583              	 .loc 1 297 0
 584 03f2 3B6F     	 ldr r3,[r7,#112]
 585 03f4 5A1C     	 adds r2,r3,#1
 586 03f6 3A67     	 str r2,[r7,#112]
 587 03f8 7A6F     	 ldr r2,[r7,#116]
 588 03fa 511C     	 adds r1,r2,#1
 589 03fc 7967     	 str r1,[r7,#116]
 590 03fe 1278     	 ldrb r2,[r2]
 591 0400 1A70     	 strb r2,[r3]
 298:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pState++;
 592              	 .loc 1 298 0
 593 0402 3B6F     	 ldr r3,[r7,#112]
 594 0404 5A1C     	 adds r2,r3,#1
 595 0406 3A67     	 str r2,[r7,#112]
 596 0408 7A6F     	 ldr r2,[r7,#116]
 597 040a 511C     	 adds r1,r2,#1
 598 040c 7967     	 str r1,[r7,#116]
 599 040e 1278     	 ldrb r2,[r2]
 600 0410 1A70     	 strb r2,[r3]
 299:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pState++;
 601              	 .loc 1 299 0
 602 0412 3B6F     	 ldr r3,[r7,#112]
 603 0414 5A1C     	 adds r2,r3,#1
 604 0416 3A67     	 str r2,[r7,#112]
 605 0418 7A6F     	 ldr r2,[r7,#116]
 606 041a 511C     	 adds r1,r2,#1
 607 041c 7967     	 str r1,[r7,#116]
 608 041e 1278     	 ldrb r2,[r2]
 609 0420 1A70     	 strb r2,[r3]
 300:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 301:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Decrement the loop counter */
 302:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     tapCnt--;
 610              	 .loc 1 302 0
 611 0422 FB6C     	 ldr r3,[r7,#76]
 612 0424 013B     	 subs r3,r3,#1
 613 0426 FB64     	 str r3,[r7,#76]
 614              	.L11:
 294:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 615              	 .loc 1 294 0
 616 0428 FB6C     	 ldr r3,[r7,#76]
 617 042a 002B     	 cmp r3,#0
 618 042c D9D1     	 bne .L12
 303:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   }
 304:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 305:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Calculate remaining number of copies */
 306:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   tapCnt = (numTaps - 1u) % 0x4u;
 619              	 .loc 1 306 0
 620 042e 3B6C     	 ldr r3,[r7,#64]
 621 0430 013B     	 subs r3,r3,#1
 622 0432 03F00303 	 and r3,r3,#3
 623 0436 FB64     	 str r3,[r7,#76]
 307:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 308:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Copy the remaining q31_t data */
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   while(tapCnt > 0u)
 624              	 .loc 1 309 0
 625 0438 0AE0     	 b .L13
 626              	.L14:
 310:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 311:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pState++;
 627              	 .loc 1 311 0
 628 043a 3B6F     	 ldr r3,[r7,#112]
 629 043c 5A1C     	 adds r2,r3,#1
 630 043e 3A67     	 str r2,[r7,#112]
 631 0440 7A6F     	 ldr r2,[r7,#116]
 632 0442 511C     	 adds r1,r2,#1
 633 0444 7967     	 str r1,[r7,#116]
 634 0446 1278     	 ldrb r2,[r2]
 635 0448 1A70     	 strb r2,[r3]
 312:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 313:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Decrement the loop counter */
 314:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     tapCnt--;
 636              	 .loc 1 314 0
 637 044a FB6C     	 ldr r3,[r7,#76]
 638 044c 013B     	 subs r3,r3,#1
 639 044e FB64     	 str r3,[r7,#76]
 640              	.L13:
 309:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 641              	 .loc 1 309 0
 642 0450 FB6C     	 ldr r3,[r7,#76]
 643 0452 002B     	 cmp r3,#0
 644 0454 F1D1     	 bne .L14
 315:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   }
 316:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 317:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** #else
 318:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 319:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** /* Run the below code for Cortex-M0 */
 320:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 321:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   uint32_t numTaps = S->numTaps;                 /* Number of taps in the filter */
 322:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   uint32_t i, blkCnt;                            /* Loop counters */
 323:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *pState = S->pState;                      /* State pointer */
 324:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *pCoeffs = S->pCoeffs;                    /* Coefficient pointer */
 325:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *px, *pb;                                 /* Temporary pointers to state and coeff */
 326:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q31_t acc = 0;                                 /* Accumlator */
 327:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   q7_t *pStateCurnt;                             /* Points to the current sample of the state */
 328:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 329:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 330:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* S->pState points to state array which contains previous frame (numTaps - 1) samples */
 331:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* pStateCurnt points to the location where the new input data should be written */
 332:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   pStateCurnt = S->pState + (numTaps - 1u);
 333:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 334:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Initialize blkCnt with blockSize */
 335:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   blkCnt = blockSize;
 336:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 337:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Perform filtering upto BlockSize - BlockSize%4  */
 338:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   while(blkCnt > 0u)
 339:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 340:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Copy one sample at a time into state buffer */
 341:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pSrc++;
 342:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 343:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Set accumulator to zero */
 344:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     acc = 0;
 345:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 346:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Initialize state pointer of type q7 */
 347:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     px = pState;
 348:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 349:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Initialize coeff pointer of type q7 */
 350:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     pb = pCoeffs;
 351:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 352:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 353:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     i = numTaps;
 354:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 355:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     while(i > 0u)
 356:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     {
 357:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       /* acc =  b[numTaps-1] * x[n-numTaps-1] + b[numTaps-2] * x[n-numTaps-2] + b[numTaps-3] * x[n-
 358:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       acc += (q15_t) * px++ * *pb++;
 359:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****       i--;
 360:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     }
 361:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 362:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Store the 1.7 format filter output in destination buffer */
 363:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pDst++ = (q7_t) __SSAT((acc >> 7), 8);
 364:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 365:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Advance the state pointer by 1 to process the next sample */
 366:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     pState = pState + 1;
 367:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 368:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     /* Decrement the loop counter */
 369:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     blkCnt--;
 370:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   }
 371:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 372:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Processing is complete.         
 373:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    ** Now copy the last numTaps - 1 samples to the satrt of the state buffer.       
 374:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****    ** This prepares the state buffer for the next function call. */
 375:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 376:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 377:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Points to the start of the state buffer */
 378:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   pStateCurnt = S->pState;
 379:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 380:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 381:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Copy numTaps number of values */
 382:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   i = (numTaps - 1u);
 383:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 384:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   /* Copy q7_t data */
 385:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   while(i > 0u)
 386:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   {
 387:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     *pStateCurnt++ = *pState++;
 388:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****     i--;
 389:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c ****   }
 390:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 391:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** #endif /*   #ifndef ARM_MATH_CM0_FAMILY */
 392:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** 
 393:../Dave/Generated/CMSIS_DSP/FilteringFunctions/arm_fir_q7.c **** }
 645              	 .loc 1 393 0
 646 0456 7C37     	 adds r7,r7,#124
 647              	.LCFI3:
 648              	 .cfi_def_cfa_offset 4
 649 0458 BD46     	 mov sp,r7
 650              	.LCFI4:
 651              	 .cfi_def_cfa_register 13
 652              	 
 653 045a 5DF8047B 	 ldr r7,[sp],#4
 654              	.LCFI5:
 655              	 .cfi_restore 7
 656              	 .cfi_def_cfa_offset 0
 657 045e 7047     	 bx lr
 658              	 .cfi_endproc
 659              	.LFE139:
 661              	 .text
 662              	.Letext0:
 663              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 664              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 665              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_fir_q7.c
    {standard input}:19     .text.arm_fir_q7:00000000 $t
    {standard input}:24     .text.arm_fir_q7:00000000 arm_fir_q7
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
