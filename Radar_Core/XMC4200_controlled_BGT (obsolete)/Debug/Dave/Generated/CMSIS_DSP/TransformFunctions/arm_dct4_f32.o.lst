   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_dct4_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_fmul
  19              	 .global __aeabi_fsub
  20              	 .section .text.arm_dct4_f32,"ax",%progbits
  21              	 .align 2
  22              	 .global arm_dct4_f32
  23              	 .thumb
  24              	 .thumb_func
  26              	arm_dct4_f32:
  27              	.LFB139:
  28              	 .file 1 "../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c"
   1:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * $Date:        31. July 2014 
   5:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * Title:	    arm_dct4_f32.c    
   9:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * Description:	Processing function of DCT4 & IDCT4 F32.    
  11:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * POSSIBILITY OF SUCH DAMAGE.      
  39:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
  43:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @ingroup groupTransforms    
  45:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  */
  46:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @defgroup DCT4_IDCT4 DCT Type IV Functions    
  49:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Representation of signals by minimum number of values is important for storage and transmission.
  50:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The possibility of large discontinuity between the beginning and end of a period of a signal    
  51:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * in DFT can be avoided by extending the signal so that it is even-symmetric.    
  52:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Discrete Cosine Transform (DCT) is constructed such that its energy is heavily concentrated in t
  53:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * spectrum and is very widely used in signal and image coding applications.    
  54:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The family of DCTs (DCT type- 1,2,3,4) is the outcome of different combinations of homogeneous b
  55:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * DCT has an excellent energy-packing capability, hence has many applications and in data compress
  56:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *    
  57:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * DCT is essentially the Discrete Fourier Transform(DFT) of an even-extended real signal.    
  58:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Reordering of the input data makes the computation of DCT just a problem of    
  59:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * computing the DFT of a real signal with a few additional operations.    
  60:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * This approach provides regular, simple, and very efficient DCT algorithms for practical hardware
  61:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *     
  62:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * DCT type-II can be implemented using Fast fourier transform (FFT) internally, as the transform i
  63:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * DCT4 is implemented using DCT2 as their implementations are similar except with some added pre-p
  64:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * DCT2 implementation can be described in the following steps:    
  65:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * - Re-ordering input    
  66:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * - Calculating Real FFT    
  67:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * - Multiplication of weights and Real FFT output and getting real part from the product.    
  68:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *    
  69:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * This process is explained by the block diagram below:    
  70:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \image html DCT4.gif "Discrete Cosine Transform - type-IV"    
  71:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *    
  72:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \par Algorithm:    
  73:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The N-point type-IV DCT is defined as a real, linear transformation by the formula:    
  74:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \image html DCT4Equation.gif    
  75:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * where <code>k = 0,1,2,.....N-1</code>    
  76:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *\par    
  77:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Its inverse is defined as follows:    
  78:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \image html IDCT4Equation.gif    
  79:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * where <code>n = 0,1,2,.....N-1</code>    
  80:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *\par    
  81:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The DCT4 matrices become involutory (i.e. they are self-inverse) by multiplying with an overall 
  82:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The symmetry of the transform matrix indicates that the fast algorithms for the forward    
  83:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * and inverse transform computation are identical.    
  84:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Note that the implementation of Inverse DCT4 and DCT4 is same, hence same process function can b
  85:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *    
  86:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \par Lengths supported by the transform:    
  87:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *  As DCT4 internally uses Real FFT, it supports all the lengths supported by arm_rfft_f32().    
  88:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The library provides separate functions for Q15, Q31, and floating-point data types.    
  89:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \par Instance Structure    
  90:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The instances for Real FFT and FFT, cosine values table and twiddle factor table are stored in a
  91:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * A separate instance structure must be defined for each transform.    
  92:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * There are separate instance structure declarations for each of the 3 supported data types.    
  93:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *    
  94:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \par Initialization Functions    
  95:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * There is also an associated initialization function for each data type.    
  96:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The initialization function performs the following operations:    
  97:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * - Sets the values of the internal structure fields.    
  98:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * - Initializes Real FFT as its process function is used internally in DCT4, by calling arm_rfft_i
  99:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \par    
 100:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Use of the initialization function is optional.    
 101:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * However, if the initialization function is used, then the instance structure cannot be placed in
 102:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * To place an instance structure into a const data section, the instance structure must be manuall
 103:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Manually initialize the instance structure as follows:    
 104:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * <pre>    
 105:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *arm_dct4_instance_f32 S = {N, Nby2, normalize, pTwiddle, pCosFactor, pRfft, pCfft};    
 106:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *arm_dct4_instance_q31 S = {N, Nby2, normalize, pTwiddle, pCosFactor, pRfft, pCfft};   
 107:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *arm_dct4_instance_q15 S = {N, Nby2, normalize, pTwiddle, pCosFactor, pRfft, pCfft};   
 108:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * </pre>   
 109:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * where \c N is the length of the DCT4; \c Nby2 is half of the length of the DCT4;   
 110:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \c normalize is normalizing factor used and is equal to <code>sqrt(2/N)</code>;    
 111:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \c pTwiddle points to the twiddle factor table;   
 112:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \c pCosFactor points to the cosFactor table;   
 113:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \c pRfft points to the real FFT instance;   
 114:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \c pCfft points to the complex FFT instance;   
 115:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * The CFFT and RFFT structures also needs to be initialized, refer to arm_cfft_radix4_f32()   
 116:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * and arm_rfft_f32() respectively for details regarding static initialization.   
 117:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  *   
 118:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * \par Fixed-Point Behavior    
 119:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Care must be taken when using the fixed-point versions of the DCT4 transform functions.    
 120:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * In particular, the overflow and saturation behavior of the accumulator used in each function mus
 121:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * Refer to the function specific documentation below for usage guidelines.    
 122:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  */
 123:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 124:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  /**    
 125:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @addtogroup DCT4_IDCT4    
 126:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @{    
 127:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  */
 128:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 129:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** /**    
 130:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @brief Processing function for the floating-point DCT4/IDCT4.   
 131:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @param[in]       *S             points to an instance of the floating-point DCT4/IDCT4 structure
 132:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @param[in]       *pState        points to state buffer.   
 133:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @param[in,out]   *pInlineBuffer points to the in-place input and output buffer.   
 134:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  * @return none.   
 135:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****  */
 136:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 137:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** void arm_dct4_f32(
 138:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   const arm_dct4_instance_f32 * S,
 139:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   float32_t * pState,
 140:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   float32_t * pInlineBuffer)
 141:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** {
  29              	 .loc 1 141 0
  30              	 .cfi_startproc
  31              	 
  32              	 
  33 0000 90B5     	 push {r4,r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 12
  36              	 .cfi_offset 4,-12
  37              	 .cfi_offset 7,-8
  38              	 .cfi_offset 14,-4
  39 0002 8DB0     	 sub sp,sp,#52
  40              	.LCFI1:
  41              	 .cfi_def_cfa_offset 64
  42 0004 00AF     	 add r7,sp,#0
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 7
  45 0006 F860     	 str r0,[r7,#12]
  46 0008 B960     	 str r1,[r7,#8]
  47 000a 7A60     	 str r2,[r7,#4]
 142:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   uint32_t i;                                    /* Loop counter */
 143:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   float32_t *weights = S->pTwiddle;              /* Pointer to the Weights table */
  48              	 .loc 1 143 0
  49 000c FB68     	 ldr r3,[r7,#12]
  50 000e 9B68     	 ldr r3,[r3,#8]
  51 0010 BB61     	 str r3,[r7,#24]
 144:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   float32_t *cosFact = S->pCosFactor;            /* Pointer to the cos factors table */
  52              	 .loc 1 144 0
  53 0012 FB68     	 ldr r3,[r7,#12]
  54 0014 DB68     	 ldr r3,[r3,#12]
  55 0016 7B61     	 str r3,[r7,#20]
 145:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   float32_t *pS1, *pS2, *pbuff;                  /* Temporary pointers for input buffer and pState 
 146:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   float32_t in;                                  /* Temporary variable */
 147:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 148:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 149:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* DCT4 computation involves DCT2 (which is calculated using RFFT)    
 150:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * along with some pre-processing and post-processing.    
 151:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * Computational procedure is explained as follows:    
 152:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * (a) Pre-processing involves multiplying input with cos factor,    
 153:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *     r(n) = 2 * u(n) * cos(pi*(2*n+1)/(4*n))    
 154:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *              where,    
 155:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                 r(n) -- output of preprocessing    
 156:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                 u(n) -- input to preprocessing(actual Source buffer)    
 157:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * (b) Calculation of DCT2 using FFT is divided into three steps:    
 158:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                  Step1: Re-ordering of even and odd elements of input.    
 159:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                  Step2: Calculating FFT of the re-ordered input.    
 160:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                  Step3: Taking the real part of the product of FFT output and weights.    
 161:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * (c) Post-processing - DCT4 can be obtained from DCT2 output using the following equation:    
 162:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                   Y4(k) = Y2(k) - Y4(k-1) and Y4(-1) = Y4(0)    
 163:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                        where,    
 164:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *                           Y4 -- DCT4 output,   Y2 -- DCT2 output    
 165:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * (d) Multiplying the output with the normalizing factor sqrt(2/N).    
 166:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    */
 167:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 168:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****         /*-------- Pre-processing ------------*/
 169:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Multiplying input with cos factor i.e. r(n) = 2 * x(n) * cos(pi*(2*n+1)/(4*n)) */
 170:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   arm_scale_f32(pInlineBuffer, 2.0f, pInlineBuffer, S->N);
  56              	 .loc 1 170 0
  57 0018 FB68     	 ldr r3,[r7,#12]
  58 001a 1B88     	 ldrh r3,[r3]
  59 001c 7868     	 ldr r0,[r7,#4]
  60 001e 4FF08041 	 mov r1,#1073741824
  61 0022 7A68     	 ldr r2,[r7,#4]
  62 0024 FFF7FEFF 	 bl arm_scale_f32
 171:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   arm_mult_f32(pInlineBuffer, cosFact, pInlineBuffer, S->N);
  63              	 .loc 1 171 0
  64 0028 FB68     	 ldr r3,[r7,#12]
  65 002a 1B88     	 ldrh r3,[r3]
  66 002c 7868     	 ldr r0,[r7,#4]
  67 002e 7969     	 ldr r1,[r7,#20]
  68 0030 7A68     	 ldr r2,[r7,#4]
  69 0032 FFF7FEFF 	 bl arm_mult_f32
 172:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 173:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* ----------------------------------------------------------------    
 174:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * Step1: Re-ordering of even and odd elements as,    
 175:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *             pState[i] =  pInlineBuffer[2*i] and    
 176:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *             pState[N-i-1] = pInlineBuffer[2*i+1] where i = 0 to N/2    
 177:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    ---------------------------------------------------------------------*/
 178:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 179:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 180:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
  70              	 .loc 1 180 0
  71 0036 BB68     	 ldr r3,[r7,#8]
  72 0038 BB62     	 str r3,[r7,#40]
 181:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 182:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pS2 initialized to pState+N-1, so that it points to the end of the state buffer */
 183:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS2 = pState + (S->N - 1u);
  73              	 .loc 1 183 0
  74 003a FB68     	 ldr r3,[r7,#12]
  75 003c 1B88     	 ldrh r3,[r3]
  76 003e 03F18043 	 add r3,r3,#1073741824
  77 0042 013B     	 subs r3,r3,#1
  78 0044 9B00     	 lsls r3,r3,#2
  79 0046 BA68     	 ldr r2,[r7,#8]
  80 0048 1344     	 add r3,r3,r2
  81 004a 7B62     	 str r3,[r7,#36]
 184:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 185:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer */
 186:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
  82              	 .loc 1 186 0
  83 004c 7B68     	 ldr r3,[r7,#4]
  84 004e 3B62     	 str r3,[r7,#32]
 187:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 188:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** #ifndef ARM_MATH_CM0_FAMILY
 189:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 190:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
 191:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 192:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/2 >> 2 for loop unrolling by 4 */
 193:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = (uint32_t) S->Nby2 >> 2u;
  85              	 .loc 1 193 0
  86 0050 FB68     	 ldr r3,[r7,#12]
  87 0052 5B88     	 ldrh r3,[r3,#2]
  88 0054 9B08     	 lsrs r3,r3,#2
  89 0056 9BB2     	 uxth r3,r3
  90 0058 FB62     	 str r3,[r7,#44]
  91              	.L2:
 194:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 195:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 196:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 197:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 198:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 199:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Re-ordering of even and odd elements */
 200:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* pState[i] =  pInlineBuffer[2*i] */
 201:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
  92              	 .loc 1 201 0 discriminator 1
  93 005a BB6A     	 ldr r3,[r7,#40]
  94 005c 1A1D     	 adds r2,r3,#4
  95 005e BA62     	 str r2,[r7,#40]
  96 0060 3A6A     	 ldr r2,[r7,#32]
  97 0062 111D     	 adds r1,r2,#4
  98 0064 3962     	 str r1,[r7,#32]
  99 0066 1268     	 ldr r2,[r2]
 100 0068 1A60     	 str r2,[r3]
 202:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* pState[N-i-1] = pInlineBuffer[2*i+1] */
 203:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 101              	 .loc 1 203 0 discriminator 1
 102 006a 7B6A     	 ldr r3,[r7,#36]
 103 006c 1A1F     	 subs r2,r3,#4
 104 006e 7A62     	 str r2,[r7,#36]
 105 0070 3A6A     	 ldr r2,[r7,#32]
 106 0072 111D     	 adds r1,r2,#4
 107 0074 3962     	 str r1,[r7,#32]
 108 0076 1268     	 ldr r2,[r2]
 109 0078 1A60     	 str r2,[r3]
 204:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 205:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 110              	 .loc 1 205 0 discriminator 1
 111 007a BB6A     	 ldr r3,[r7,#40]
 112 007c 1A1D     	 adds r2,r3,#4
 113 007e BA62     	 str r2,[r7,#40]
 114 0080 3A6A     	 ldr r2,[r7,#32]
 115 0082 111D     	 adds r1,r2,#4
 116 0084 3962     	 str r1,[r7,#32]
 117 0086 1268     	 ldr r2,[r2]
 118 0088 1A60     	 str r2,[r3]
 206:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 119              	 .loc 1 206 0 discriminator 1
 120 008a 7B6A     	 ldr r3,[r7,#36]
 121 008c 1A1F     	 subs r2,r3,#4
 122 008e 7A62     	 str r2,[r7,#36]
 123 0090 3A6A     	 ldr r2,[r7,#32]
 124 0092 111D     	 adds r1,r2,#4
 125 0094 3962     	 str r1,[r7,#32]
 126 0096 1268     	 ldr r2,[r2]
 127 0098 1A60     	 str r2,[r3]
 207:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 208:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 128              	 .loc 1 208 0 discriminator 1
 129 009a BB6A     	 ldr r3,[r7,#40]
 130 009c 1A1D     	 adds r2,r3,#4
 131 009e BA62     	 str r2,[r7,#40]
 132 00a0 3A6A     	 ldr r2,[r7,#32]
 133 00a2 111D     	 adds r1,r2,#4
 134 00a4 3962     	 str r1,[r7,#32]
 135 00a6 1268     	 ldr r2,[r2]
 136 00a8 1A60     	 str r2,[r3]
 209:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 137              	 .loc 1 209 0 discriminator 1
 138 00aa 7B6A     	 ldr r3,[r7,#36]
 139 00ac 1A1F     	 subs r2,r3,#4
 140 00ae 7A62     	 str r2,[r7,#36]
 141 00b0 3A6A     	 ldr r2,[r7,#32]
 142 00b2 111D     	 adds r1,r2,#4
 143 00b4 3962     	 str r1,[r7,#32]
 144 00b6 1268     	 ldr r2,[r2]
 145 00b8 1A60     	 str r2,[r3]
 210:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 211:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 146              	 .loc 1 211 0 discriminator 1
 147 00ba BB6A     	 ldr r3,[r7,#40]
 148 00bc 1A1D     	 adds r2,r3,#4
 149 00be BA62     	 str r2,[r7,#40]
 150 00c0 3A6A     	 ldr r2,[r7,#32]
 151 00c2 111D     	 adds r1,r2,#4
 152 00c4 3962     	 str r1,[r7,#32]
 153 00c6 1268     	 ldr r2,[r2]
 154 00c8 1A60     	 str r2,[r3]
 212:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 155              	 .loc 1 212 0 discriminator 1
 156 00ca 7B6A     	 ldr r3,[r7,#36]
 157 00cc 1A1F     	 subs r2,r3,#4
 158 00ce 7A62     	 str r2,[r7,#36]
 159 00d0 3A6A     	 ldr r2,[r7,#32]
 160 00d2 111D     	 adds r1,r2,#4
 161 00d4 3962     	 str r1,[r7,#32]
 162 00d6 1268     	 ldr r2,[r2]
 163 00d8 1A60     	 str r2,[r3]
 213:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 214:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 215:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 164              	 .loc 1 215 0 discriminator 1
 165 00da FB6A     	 ldr r3,[r7,#44]
 166 00dc 013B     	 subs r3,r3,#1
 167 00de FB62     	 str r3,[r7,#44]
 216:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 168              	 .loc 1 216 0 discriminator 1
 169 00e0 FB6A     	 ldr r3,[r7,#44]
 170 00e2 002B     	 cmp r3,#0
 171 00e4 B9D1     	 bne .L2
 217:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 218:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer */
 219:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 172              	 .loc 1 219 0
 173 00e6 7B68     	 ldr r3,[r7,#4]
 174 00e8 3B62     	 str r3,[r7,#32]
 220:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 221:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 222:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 175              	 .loc 1 222 0
 176 00ea BB68     	 ldr r3,[r7,#8]
 177 00ec BB62     	 str r3,[r7,#40]
 223:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 224:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/4 instead of N for loop unrolling */
 225:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = (uint32_t) S->N >> 2u;
 178              	 .loc 1 225 0
 179 00ee FB68     	 ldr r3,[r7,#12]
 180 00f0 1B88     	 ldrh r3,[r3]
 181 00f2 9B08     	 lsrs r3,r3,#2
 182 00f4 9BB2     	 uxth r3,r3
 183 00f6 FB62     	 str r3,[r7,#44]
 184              	.L3:
 226:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 227:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Processing with loop unrolling 4 times as N is always multiple of 4.    
 228:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * Compute 4 outputs at a time */
 229:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 230:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 231:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Writing the re-ordered output back to inplace input buffer */
 232:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 185              	 .loc 1 232 0 discriminator 1
 186 00f8 3B6A     	 ldr r3,[r7,#32]
 187 00fa 1A1D     	 adds r2,r3,#4
 188 00fc 3A62     	 str r2,[r7,#32]
 189 00fe BA6A     	 ldr r2,[r7,#40]
 190 0100 111D     	 adds r1,r2,#4
 191 0102 B962     	 str r1,[r7,#40]
 192 0104 1268     	 ldr r2,[r2]
 193 0106 1A60     	 str r2,[r3]
 233:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 194              	 .loc 1 233 0 discriminator 1
 195 0108 3B6A     	 ldr r3,[r7,#32]
 196 010a 1A1D     	 adds r2,r3,#4
 197 010c 3A62     	 str r2,[r7,#32]
 198 010e BA6A     	 ldr r2,[r7,#40]
 199 0110 111D     	 adds r1,r2,#4
 200 0112 B962     	 str r1,[r7,#40]
 201 0114 1268     	 ldr r2,[r2]
 202 0116 1A60     	 str r2,[r3]
 234:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 203              	 .loc 1 234 0 discriminator 1
 204 0118 3B6A     	 ldr r3,[r7,#32]
 205 011a 1A1D     	 adds r2,r3,#4
 206 011c 3A62     	 str r2,[r7,#32]
 207 011e BA6A     	 ldr r2,[r7,#40]
 208 0120 111D     	 adds r1,r2,#4
 209 0122 B962     	 str r1,[r7,#40]
 210 0124 1268     	 ldr r2,[r2]
 211 0126 1A60     	 str r2,[r3]
 235:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 212              	 .loc 1 235 0 discriminator 1
 213 0128 3B6A     	 ldr r3,[r7,#32]
 214 012a 1A1D     	 adds r2,r3,#4
 215 012c 3A62     	 str r2,[r7,#32]
 216 012e BA6A     	 ldr r2,[r7,#40]
 217 0130 111D     	 adds r1,r2,#4
 218 0132 B962     	 str r1,[r7,#40]
 219 0134 1268     	 ldr r2,[r2]
 220 0136 1A60     	 str r2,[r3]
 236:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 237:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 238:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 221              	 .loc 1 238 0 discriminator 1
 222 0138 FB6A     	 ldr r3,[r7,#44]
 223 013a 013B     	 subs r3,r3,#1
 224 013c FB62     	 str r3,[r7,#44]
 239:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 225              	 .loc 1 239 0 discriminator 1
 226 013e FB6A     	 ldr r3,[r7,#44]
 227 0140 002B     	 cmp r3,#0
 228 0142 D9D1     	 bne .L3
 240:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 241:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 242:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* ---------------------------------------------------------    
 243:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *     Step2: Calculate RFFT for N-point input    
 244:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * ---------------------------------------------------------- */
 245:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pInlineBuffer is real input of length N , pState is the complex output of length 2N */
 246:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   arm_rfft_f32(S->pRfft, pInlineBuffer, pState);
 229              	 .loc 1 246 0
 230 0144 FB68     	 ldr r3,[r7,#12]
 231 0146 1B69     	 ldr r3,[r3,#16]
 232 0148 1846     	 mov r0,r3
 233 014a 7968     	 ldr r1,[r7,#4]
 234 014c BA68     	 ldr r2,[r7,#8]
 235 014e FFF7FEFF 	 bl arm_rfft_f32
 247:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 248:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****         /*----------------------------------------------------------------------    
 249:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 	 *  Step3: Multiply the FFT output with the weights.    
 250:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 	 *----------------------------------------------------------------------*/
 251:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   arm_cmplx_mult_cmplx_f32(pState, weights, pState, S->N);
 236              	 .loc 1 251 0
 237 0152 FB68     	 ldr r3,[r7,#12]
 238 0154 1B88     	 ldrh r3,[r3]
 239 0156 B868     	 ldr r0,[r7,#8]
 240 0158 B969     	 ldr r1,[r7,#24]
 241 015a BA68     	 ldr r2,[r7,#8]
 242 015c FFF7FEFF 	 bl arm_cmplx_mult_cmplx_f32
 252:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 253:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* ----------- Post-processing ---------- */
 254:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* DCT-IV can be obtained from DCT-II by the equation,    
 255:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *       Y4(k) = Y2(k) - Y4(k-1) and Y4(-1) = Y4(0)    
 256:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *       Hence, Y4(0) = Y2(0)/2  */
 257:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Getting only real part from the output and Converting to DCT-IV */
 258:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 259:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N >> 2 for loop unrolling by 4 */
 260:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = ((uint32_t) S->N - 1u) >> 2u;
 243              	 .loc 1 260 0
 244 0160 FB68     	 ldr r3,[r7,#12]
 245 0162 1B88     	 ldrh r3,[r3]
 246 0164 013B     	 subs r3,r3,#1
 247 0166 9B08     	 lsrs r3,r3,#2
 248 0168 FB62     	 str r3,[r7,#44]
 261:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 262:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer. */
 263:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 249              	 .loc 1 263 0
 250 016a 7B68     	 ldr r3,[r7,#4]
 251 016c 3B62     	 str r3,[r7,#32]
 264:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 265:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 266:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 252              	 .loc 1 266 0
 253 016e BB68     	 ldr r3,[r7,#8]
 254 0170 BB62     	 str r3,[r7,#40]
 267:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 268:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Calculating Y4(0) from Y2(0) using Y4(0) = Y2(0)/2 */
 269:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   in = *pS1++ * (float32_t) 0.5;
 255              	 .loc 1 269 0
 256 0172 BB6A     	 ldr r3,[r7,#40]
 257 0174 1A1D     	 adds r2,r3,#4
 258 0176 BA62     	 str r2,[r7,#40]
 259 0178 1B68     	 ldr r3,[r3]
 260 017a 1846     	 mov r0,r3
 261 017c 4FF07C51 	 mov r1,#1056964608
 262 0180 FFF7FEFF 	 bl __aeabi_fmul
 263 0184 0346     	 mov r3,r0
 264 0186 FB61     	 str r3,[r7,#28]
 270:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* input buffer acts as inplace, so output values are stored in the input itself. */
 271:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   *pbuff++ = in;
 265              	 .loc 1 271 0
 266 0188 3B6A     	 ldr r3,[r7,#32]
 267 018a 1A1D     	 adds r2,r3,#4
 268 018c 3A62     	 str r2,[r7,#32]
 269 018e FA69     	 ldr r2,[r7,#28]
 270 0190 1A60     	 str r2,[r3]
 272:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 273:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pState pointer is incremented twice as the real values are located alternatively in the array 
 274:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS1++;
 271              	 .loc 1 274 0
 272 0192 BB6A     	 ldr r3,[r7,#40]
 273 0194 0433     	 adds r3,r3,#4
 274 0196 BB62     	 str r3,[r7,#40]
 275              	.L4:
 275:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 276:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 277:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 278:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 279:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 280:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Calculating Y4(1) to Y4(N-1) from Y2 using equation Y4(k) = Y2(k) - Y4(k-1) */
 281:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* pState pointer (pS1) is incremented twice as the real values are located alternatively in th
 282:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 276              	 .loc 1 282 0 discriminator 1
 277 0198 BB6A     	 ldr r3,[r7,#40]
 278 019a 1A1D     	 adds r2,r3,#4
 279 019c BA62     	 str r2,[r7,#40]
 280 019e 1B68     	 ldr r3,[r3]
 281 01a0 1846     	 mov r0,r3
 282 01a2 F969     	 ldr r1,[r7,#28]
 283 01a4 FFF7FEFF 	 bl __aeabi_fsub
 284 01a8 0346     	 mov r3,r0
 285 01aa FB61     	 str r3,[r7,#28]
 283:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 286              	 .loc 1 283 0 discriminator 1
 287 01ac 3B6A     	 ldr r3,[r7,#32]
 288 01ae 1A1D     	 adds r2,r3,#4
 289 01b0 3A62     	 str r2,[r7,#32]
 290 01b2 FA69     	 ldr r2,[r7,#28]
 291 01b4 1A60     	 str r2,[r3]
 284:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* points to the next real value */
 285:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 292              	 .loc 1 285 0 discriminator 1
 293 01b6 BB6A     	 ldr r3,[r7,#40]
 294 01b8 0433     	 adds r3,r3,#4
 295 01ba BB62     	 str r3,[r7,#40]
 286:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 287:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 296              	 .loc 1 287 0 discriminator 1
 297 01bc BB6A     	 ldr r3,[r7,#40]
 298 01be 1A1D     	 adds r2,r3,#4
 299 01c0 BA62     	 str r2,[r7,#40]
 300 01c2 1B68     	 ldr r3,[r3]
 301 01c4 1846     	 mov r0,r3
 302 01c6 F969     	 ldr r1,[r7,#28]
 303 01c8 FFF7FEFF 	 bl __aeabi_fsub
 304 01cc 0346     	 mov r3,r0
 305 01ce FB61     	 str r3,[r7,#28]
 288:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 306              	 .loc 1 288 0 discriminator 1
 307 01d0 3B6A     	 ldr r3,[r7,#32]
 308 01d2 1A1D     	 adds r2,r3,#4
 309 01d4 3A62     	 str r2,[r7,#32]
 310 01d6 FA69     	 ldr r2,[r7,#28]
 311 01d8 1A60     	 str r2,[r3]
 289:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 312              	 .loc 1 289 0 discriminator 1
 313 01da BB6A     	 ldr r3,[r7,#40]
 314 01dc 0433     	 adds r3,r3,#4
 315 01de BB62     	 str r3,[r7,#40]
 290:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 291:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 316              	 .loc 1 291 0 discriminator 1
 317 01e0 BB6A     	 ldr r3,[r7,#40]
 318 01e2 1A1D     	 adds r2,r3,#4
 319 01e4 BA62     	 str r2,[r7,#40]
 320 01e6 1B68     	 ldr r3,[r3]
 321 01e8 1846     	 mov r0,r3
 322 01ea F969     	 ldr r1,[r7,#28]
 323 01ec FFF7FEFF 	 bl __aeabi_fsub
 324 01f0 0346     	 mov r3,r0
 325 01f2 FB61     	 str r3,[r7,#28]
 292:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 326              	 .loc 1 292 0 discriminator 1
 327 01f4 3B6A     	 ldr r3,[r7,#32]
 328 01f6 1A1D     	 adds r2,r3,#4
 329 01f8 3A62     	 str r2,[r7,#32]
 330 01fa FA69     	 ldr r2,[r7,#28]
 331 01fc 1A60     	 str r2,[r3]
 293:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 332              	 .loc 1 293 0 discriminator 1
 333 01fe BB6A     	 ldr r3,[r7,#40]
 334 0200 0433     	 adds r3,r3,#4
 335 0202 BB62     	 str r3,[r7,#40]
 294:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 295:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 336              	 .loc 1 295 0 discriminator 1
 337 0204 BB6A     	 ldr r3,[r7,#40]
 338 0206 1A1D     	 adds r2,r3,#4
 339 0208 BA62     	 str r2,[r7,#40]
 340 020a 1B68     	 ldr r3,[r3]
 341 020c 1846     	 mov r0,r3
 342 020e F969     	 ldr r1,[r7,#28]
 343 0210 FFF7FEFF 	 bl __aeabi_fsub
 344 0214 0346     	 mov r3,r0
 345 0216 FB61     	 str r3,[r7,#28]
 296:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 346              	 .loc 1 296 0 discriminator 1
 347 0218 3B6A     	 ldr r3,[r7,#32]
 348 021a 1A1D     	 adds r2,r3,#4
 349 021c 3A62     	 str r2,[r7,#32]
 350 021e FA69     	 ldr r2,[r7,#28]
 351 0220 1A60     	 str r2,[r3]
 297:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 352              	 .loc 1 297 0 discriminator 1
 353 0222 BB6A     	 ldr r3,[r7,#40]
 354 0224 0433     	 adds r3,r3,#4
 355 0226 BB62     	 str r3,[r7,#40]
 298:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 299:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 300:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 356              	 .loc 1 300 0 discriminator 1
 357 0228 FB6A     	 ldr r3,[r7,#44]
 358 022a 013B     	 subs r3,r3,#1
 359 022c FB62     	 str r3,[r7,#44]
 301:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 360              	 .loc 1 301 0 discriminator 1
 361 022e FB6A     	 ldr r3,[r7,#44]
 362 0230 002B     	 cmp r3,#0
 363 0232 B1D1     	 bne .L4
 302:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 303:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 304:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    ** No loop unrolling is used. */
 305:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = ((uint32_t) S->N - 1u) % 0x4u;
 364              	 .loc 1 305 0
 365 0234 FB68     	 ldr r3,[r7,#12]
 366 0236 1B88     	 ldrh r3,[r3]
 367 0238 013B     	 subs r3,r3,#1
 368 023a 03F00303 	 and r3,r3,#3
 369 023e FB62     	 str r3,[r7,#44]
 306:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 307:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   while(i > 0u)
 370              	 .loc 1 307 0
 371 0240 14E0     	 b .L5
 372              	.L6:
 308:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 309:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Calculating Y4(1) to Y4(N-1) from Y2 using equation Y4(k) = Y2(k) - Y4(k-1) */
 310:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* pState pointer (pS1) is incremented twice as the real values are located alternatively in th
 311:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 373              	 .loc 1 311 0
 374 0242 BB6A     	 ldr r3,[r7,#40]
 375 0244 1A1D     	 adds r2,r3,#4
 376 0246 BA62     	 str r2,[r7,#40]
 377 0248 1B68     	 ldr r3,[r3]
 378 024a 1846     	 mov r0,r3
 379 024c F969     	 ldr r1,[r7,#28]
 380 024e FFF7FEFF 	 bl __aeabi_fsub
 381 0252 0346     	 mov r3,r0
 382 0254 FB61     	 str r3,[r7,#28]
 312:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 383              	 .loc 1 312 0
 384 0256 3B6A     	 ldr r3,[r7,#32]
 385 0258 1A1D     	 adds r2,r3,#4
 386 025a 3A62     	 str r2,[r7,#32]
 387 025c FA69     	 ldr r2,[r7,#28]
 388 025e 1A60     	 str r2,[r3]
 313:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* points to the next real value */
 314:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 389              	 .loc 1 314 0
 390 0260 BB6A     	 ldr r3,[r7,#40]
 391 0262 0433     	 adds r3,r3,#4
 392 0264 BB62     	 str r3,[r7,#40]
 315:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 316:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 317:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 393              	 .loc 1 317 0
 394 0266 FB6A     	 ldr r3,[r7,#44]
 395 0268 013B     	 subs r3,r3,#1
 396 026a FB62     	 str r3,[r7,#44]
 397              	.L5:
 307:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 398              	 .loc 1 307 0
 399 026c FB6A     	 ldr r3,[r7,#44]
 400 026e 002B     	 cmp r3,#0
 401 0270 E7D1     	 bne .L6
 318:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   }
 319:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 320:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 321:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****         /*------------ Normalizing the output by multiplying with the normalizing factor ----------
 322:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 323:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/4 instead of N for loop unrolling */
 324:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = (uint32_t) S->N >> 2u;
 402              	 .loc 1 324 0
 403 0272 FB68     	 ldr r3,[r7,#12]
 404 0274 1B88     	 ldrh r3,[r3]
 405 0276 9B08     	 lsrs r3,r3,#2
 406 0278 9BB2     	 uxth r3,r3
 407 027a FB62     	 str r3,[r7,#44]
 325:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 326:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to the pInlineBuffer(now contains the output values) */
 327:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 408              	 .loc 1 327 0
 409 027c 7B68     	 ldr r3,[r7,#4]
 410 027e 3B62     	 str r3,[r7,#32]
 411              	.L7:
 328:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 329:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Processing with loop unrolling 4 times as N is always multiple of 4.  Compute 4 outputs at a t
 330:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 331:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 332:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Multiplying pInlineBuffer with the normalizing factor sqrt(2/N) */
 333:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 412              	 .loc 1 333 0 discriminator 1
 413 0280 3B6A     	 ldr r3,[r7,#32]
 414 0282 1B68     	 ldr r3,[r3]
 415 0284 FB61     	 str r3,[r7,#28]
 334:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 416              	 .loc 1 334 0 discriminator 1
 417 0286 3C6A     	 ldr r4,[r7,#32]
 418 0288 231D     	 adds r3,r4,#4
 419 028a 3B62     	 str r3,[r7,#32]
 420 028c FB68     	 ldr r3,[r7,#12]
 421 028e 5B68     	 ldr r3,[r3,#4]
 422 0290 1846     	 mov r0,r3
 423 0292 F969     	 ldr r1,[r7,#28]
 424 0294 FFF7FEFF 	 bl __aeabi_fmul
 425 0298 0346     	 mov r3,r0
 426 029a 2360     	 str r3,[r4]
 335:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 336:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 427              	 .loc 1 336 0 discriminator 1
 428 029c 3B6A     	 ldr r3,[r7,#32]
 429 029e 1B68     	 ldr r3,[r3]
 430 02a0 FB61     	 str r3,[r7,#28]
 337:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 431              	 .loc 1 337 0 discriminator 1
 432 02a2 3C6A     	 ldr r4,[r7,#32]
 433 02a4 231D     	 adds r3,r4,#4
 434 02a6 3B62     	 str r3,[r7,#32]
 435 02a8 FB68     	 ldr r3,[r7,#12]
 436 02aa 5B68     	 ldr r3,[r3,#4]
 437 02ac 1846     	 mov r0,r3
 438 02ae F969     	 ldr r1,[r7,#28]
 439 02b0 FFF7FEFF 	 bl __aeabi_fmul
 440 02b4 0346     	 mov r3,r0
 441 02b6 2360     	 str r3,[r4]
 338:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 339:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 442              	 .loc 1 339 0 discriminator 1
 443 02b8 3B6A     	 ldr r3,[r7,#32]
 444 02ba 1B68     	 ldr r3,[r3]
 445 02bc FB61     	 str r3,[r7,#28]
 340:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 446              	 .loc 1 340 0 discriminator 1
 447 02be 3C6A     	 ldr r4,[r7,#32]
 448 02c0 231D     	 adds r3,r4,#4
 449 02c2 3B62     	 str r3,[r7,#32]
 450 02c4 FB68     	 ldr r3,[r7,#12]
 451 02c6 5B68     	 ldr r3,[r3,#4]
 452 02c8 1846     	 mov r0,r3
 453 02ca F969     	 ldr r1,[r7,#28]
 454 02cc FFF7FEFF 	 bl __aeabi_fmul
 455 02d0 0346     	 mov r3,r0
 456 02d2 2360     	 str r3,[r4]
 341:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 342:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 457              	 .loc 1 342 0 discriminator 1
 458 02d4 3B6A     	 ldr r3,[r7,#32]
 459 02d6 1B68     	 ldr r3,[r3]
 460 02d8 FB61     	 str r3,[r7,#28]
 343:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 461              	 .loc 1 343 0 discriminator 1
 462 02da 3C6A     	 ldr r4,[r7,#32]
 463 02dc 231D     	 adds r3,r4,#4
 464 02de 3B62     	 str r3,[r7,#32]
 465 02e0 FB68     	 ldr r3,[r7,#12]
 466 02e2 5B68     	 ldr r3,[r3,#4]
 467 02e4 1846     	 mov r0,r3
 468 02e6 F969     	 ldr r1,[r7,#28]
 469 02e8 FFF7FEFF 	 bl __aeabi_fmul
 470 02ec 0346     	 mov r3,r0
 471 02ee 2360     	 str r3,[r4]
 344:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 345:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 346:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 472              	 .loc 1 346 0 discriminator 1
 473 02f0 FB6A     	 ldr r3,[r7,#44]
 474 02f2 013B     	 subs r3,r3,#1
 475 02f4 FB62     	 str r3,[r7,#44]
 347:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 476              	 .loc 1 347 0 discriminator 1
 477 02f6 FB6A     	 ldr r3,[r7,#44]
 478 02f8 002B     	 cmp r3,#0
 479 02fa C1D1     	 bne .L7
 348:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 349:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 350:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** #else
 351:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 352:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Run the below code for Cortex-M0 */
 353:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 354:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter to N/2 */
 355:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = (uint32_t) S->Nby2;
 356:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 357:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 358:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 359:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Re-ordering of even and odd elements */
 360:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* pState[i] =  pInlineBuffer[2*i] */
 361:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS1++ = *pbuff++;
 362:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* pState[N-i-1] = pInlineBuffer[2*i+1] */
 363:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pS2-- = *pbuff++;
 364:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 365:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 366:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 367:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 368:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 369:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer */
 370:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 371:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 372:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 373:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 374:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 375:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter */
 376:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = (uint32_t) S->N;
 377:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 378:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 379:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 380:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Writing the re-ordered output back to inplace input buffer */
 381:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = *pS1++;
 382:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 383:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 384:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 385:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 386:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 387:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 388:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* ---------------------------------------------------------    
 389:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *     Step2: Calculate RFFT for N-point input    
 390:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    * ---------------------------------------------------------- */
 391:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pInlineBuffer is real input of length N , pState is the complex output of length 2N */
 392:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   arm_rfft_f32(S->pRfft, pInlineBuffer, pState);
 393:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 394:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****         /*----------------------------------------------------------------------    
 395:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 	 *  Step3: Multiply the FFT output with the weights.    
 396:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 	 *----------------------------------------------------------------------*/
 397:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   arm_cmplx_mult_cmplx_f32(pState, weights, pState, S->N);
 398:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 399:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* ----------- Post-processing ---------- */
 400:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* DCT-IV can be obtained from DCT-II by the equation,    
 401:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *       Y4(k) = Y2(k) - Y4(k-1) and Y4(-1) = Y4(0)    
 402:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****    *       Hence, Y4(0) = Y2(0)/2  */
 403:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Getting only real part from the output and Converting to DCT-IV */
 404:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 405:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to input buffer. */
 406:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 407:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 408:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pS1 initialized to pState */
 409:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS1 = pState;
 410:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 411:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Calculating Y4(0) from Y2(0) using Y4(0) = Y2(0)/2 */
 412:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   in = *pS1++ * (float32_t) 0.5;
 413:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* input buffer acts as inplace, so output values are stored in the input itself. */
 414:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   *pbuff++ = in;
 415:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 416:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pState pointer is incremented twice as the real values are located alternatively in the array 
 417:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pS1++;
 418:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 419:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter */
 420:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = ((uint32_t) S->N - 1u);
 421:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 422:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 423:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 424:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Calculating Y4(1) to Y4(N-1) from Y2 using equation Y4(k) = Y2(k) - Y4(k-1) */
 425:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* pState pointer (pS1) is incremented twice as the real values are located alternatively in th
 426:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pS1++ - in;
 427:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in;
 428:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* points to the next real value */
 429:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     pS1++;
 430:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 431:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 432:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 433:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 434:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 435:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 436:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 437:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****         /*------------ Normalizing the output by multiplying with the normalizing factor ----------
 438:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 439:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* Initializing the loop counter */
 440:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   i = (uint32_t) S->N;
 441:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 442:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   /* pbuff initialized to the pInlineBuffer(now contains the output values) */
 443:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   pbuff = pInlineBuffer;
 444:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 445:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   do
 446:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   {
 447:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Multiplying pInlineBuffer with the normalizing factor sqrt(2/N) */
 448:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     in = *pbuff;
 449:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     *pbuff++ = in * S->normalize;
 450:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 451:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     /* Decrement the loop counter */
 452:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****     i--;
 453:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c ****   } while(i > 0u);
 454:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 455:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 456:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** 
 457:../Dave/Generated/CMSIS_DSP/TransformFunctions/arm_dct4_f32.c **** }
 480              	 .loc 1 457 0
 481 02fc 3437     	 adds r7,r7,#52
 482              	.LCFI3:
 483              	 .cfi_def_cfa_offset 12
 484 02fe BD46     	 mov sp,r7
 485              	.LCFI4:
 486              	 .cfi_def_cfa_register 13
 487              	 
 488 0300 90BD     	 pop {r4,r7,pc}
 489              	 .cfi_endproc
 490              	.LFE139:
 492 0302 00BF     	 .text
 493              	.Letext0:
 494              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 495              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 496              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_dct4_f32.c
    {standard input}:21     .text.arm_dct4_f32:00000000 $t
    {standard input}:26     .text.arm_dct4_f32:00000000 arm_dct4_f32
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_fsub
arm_scale_f32
arm_mult_f32
arm_rfft_f32
arm_cmplx_mult_cmplx_f32
