   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_power_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_fmul
  19              	 .global __aeabi_fadd
  20              	 .section .text.arm_power_f32,"ax",%progbits
  21              	 .align 2
  22              	 .global arm_power_f32
  23              	 .thumb
  24              	 .thumb_func
  26              	arm_power_f32:
  27              	.LFB139:
  28              	 .file 1 "../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c"
   1:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * Title:		arm_power_f32.c    
   9:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * Description:	Sum of the squares of the elements of a floating-point vector.    
  11:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * POSSIBILITY OF SUCH DAMAGE.     
  39:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** * ---------------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  43:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @ingroup groupStats    
  45:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  46:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @defgroup power Power    
  49:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *    
  50:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * Calculates the sum of the squares of the elements in the input vector.    
  51:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * The underlying algorithm is used:    
  52:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *    
  53:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * <pre>    
  54:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * 	Result = pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + pSrc[2] * pSrc[2] + ... + pSrc[blockSize-1] * 
  55:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * </pre>    
  56:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *   
  57:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * There are separate functions for floating point, Q31, Q15, and Q7 data types.     
  58:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  59:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  60:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**    
  61:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @addtogroup power    
  62:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @{    
  63:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  64:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  65:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  66:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** /**    
  67:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @brief Sum of the squares of the elements of a floating-point vector.    
  68:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[in]       *pSrc points to the input vector    
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[in]       blockSize length of the input vector    
  70:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @param[out]      *pResult sum of the squares value returned here    
  71:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  * @return none.    
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  *    
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****  */
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  75:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  76:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** void arm_power_f32(
  77:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t * pSrc,
  78:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   uint32_t blockSize,
  79:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t * pResult)
  80:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** {
  29              	 .loc 1 80 0
  30              	 .cfi_startproc
  31              	 
  32              	 
  33 0000 80B5     	 push {r7,lr}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 8
  36              	 .cfi_offset 7,-8
  37              	 .cfi_offset 14,-4
  38 0002 88B0     	 sub sp,sp,#32
  39              	.LCFI1:
  40              	 .cfi_def_cfa_offset 40
  41 0004 00AF     	 add r7,sp,#0
  42              	.LCFI2:
  43              	 .cfi_def_cfa_register 7
  44 0006 F860     	 str r0,[r7,#12]
  45 0008 B960     	 str r1,[r7,#8]
  46 000a 7A60     	 str r2,[r7,#4]
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t sum = 0.0f;                          /* accumulator */
  47              	 .loc 1 81 0
  48 000c 4FF00003 	 mov r3,#0
  49 0010 FB61     	 str r3,[r7,#28]
  82:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   float32_t in;                                  /* Temporary variable to store input value */
  83:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  84:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  85:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #ifndef ARM_MATH_CM0_FAMILY
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  87:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /*loop Unrolling */
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize >> 2u;
  50              	 .loc 1 90 0
  51 0012 BB68     	 ldr r3,[r7,#8]
  52 0014 9B08     	 lsrs r3,r3,#2
  53 0016 BB61     	 str r3,[r7,#24]
  91:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
  92:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   while(blkCnt > 0u)
  54              	 .loc 1 94 0
  55 0018 42E0     	 b .L2
  56              	.L3:
  95:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
  96:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
  97:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Compute Power and then store the result in a temporary variable, sum. */
  98:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  57              	 .loc 1 98 0
  58 001a FB68     	 ldr r3,[r7,#12]
  59 001c 1A1D     	 adds r2,r3,#4
  60 001e FA60     	 str r2,[r7,#12]
  61 0020 1B68     	 ldr r3,[r3]
  62 0022 7B61     	 str r3,[r7,#20]
  99:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  63              	 .loc 1 99 0
  64 0024 7869     	 ldr r0,[r7,#20]
  65 0026 7969     	 ldr r1,[r7,#20]
  66 0028 FFF7FEFF 	 bl __aeabi_fmul
  67 002c 0346     	 mov r3,r0
  68 002e F869     	 ldr r0,[r7,#28]
  69 0030 1946     	 mov r1,r3
  70 0032 FFF7FEFF 	 bl __aeabi_fadd
  71 0036 0346     	 mov r3,r0
  72 0038 FB61     	 str r3,[r7,#28]
 100:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  73              	 .loc 1 100 0
  74 003a FB68     	 ldr r3,[r7,#12]
  75 003c 1A1D     	 adds r2,r3,#4
  76 003e FA60     	 str r2,[r7,#12]
  77 0040 1B68     	 ldr r3,[r3]
  78 0042 7B61     	 str r3,[r7,#20]
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  79              	 .loc 1 101 0
  80 0044 7869     	 ldr r0,[r7,#20]
  81 0046 7969     	 ldr r1,[r7,#20]
  82 0048 FFF7FEFF 	 bl __aeabi_fmul
  83 004c 0346     	 mov r3,r0
  84 004e F869     	 ldr r0,[r7,#28]
  85 0050 1946     	 mov r1,r3
  86 0052 FFF7FEFF 	 bl __aeabi_fadd
  87 0056 0346     	 mov r3,r0
  88 0058 FB61     	 str r3,[r7,#28]
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
  89              	 .loc 1 102 0
  90 005a FB68     	 ldr r3,[r7,#12]
  91 005c 1A1D     	 adds r2,r3,#4
  92 005e FA60     	 str r2,[r7,#12]
  93 0060 1B68     	 ldr r3,[r3]
  94 0062 7B61     	 str r3,[r7,#20]
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
  95              	 .loc 1 103 0
  96 0064 7869     	 ldr r0,[r7,#20]
  97 0066 7969     	 ldr r1,[r7,#20]
  98 0068 FFF7FEFF 	 bl __aeabi_fmul
  99 006c 0346     	 mov r3,r0
 100 006e F869     	 ldr r0,[r7,#28]
 101 0070 1946     	 mov r1,r3
 102 0072 FFF7FEFF 	 bl __aeabi_fadd
 103 0076 0346     	 mov r3,r0
 104 0078 FB61     	 str r3,[r7,#28]
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 105              	 .loc 1 104 0
 106 007a FB68     	 ldr r3,[r7,#12]
 107 007c 1A1D     	 adds r2,r3,#4
 108 007e FA60     	 str r2,[r7,#12]
 109 0080 1B68     	 ldr r3,[r3]
 110 0082 7B61     	 str r3,[r7,#20]
 105:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 111              	 .loc 1 105 0
 112 0084 7869     	 ldr r0,[r7,#20]
 113 0086 7969     	 ldr r1,[r7,#20]
 114 0088 FFF7FEFF 	 bl __aeabi_fmul
 115 008c 0346     	 mov r3,r0
 116 008e F869     	 ldr r0,[r7,#28]
 117 0090 1946     	 mov r1,r3
 118 0092 FFF7FEFF 	 bl __aeabi_fadd
 119 0096 0346     	 mov r3,r0
 120 0098 FB61     	 str r3,[r7,#28]
 106:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 107:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 121              	 .loc 1 108 0
 122 009a BB69     	 ldr r3,[r7,#24]
 123 009c 013B     	 subs r3,r3,#1
 124 009e BB61     	 str r3,[r7,#24]
 125              	.L2:
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
 126              	 .loc 1 94 0
 127 00a0 BB69     	 ldr r3,[r7,#24]
 128 00a2 002B     	 cmp r3,#0
 129 00a4 B9D1     	 bne .L3
 109:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   }
 110:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 111:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****    ** No loop unrolling is used. */
 113:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize % 0x4u;
 130              	 .loc 1 113 0
 131 00a6 BB68     	 ldr r3,[r7,#8]
 132 00a8 03F00303 	 and r3,r3,#3
 133 00ac BB61     	 str r3,[r7,#24]
 114:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 115:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 116:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #else
 117:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 118:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Run the below code for Cortex-M0 */
 119:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 120:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Loop over blockSize number of values */
 121:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   blkCnt = blockSize;
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 123:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 124:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 125:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 126:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   while(blkCnt > 0u)
 134              	 .loc 1 126 0
 135 00ae 12E0     	 b .L4
 136              	.L5:
 127:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
 128:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
 129:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* compute power and then store the result in a temporary variable, sum. */
 130:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     in = *pSrc++;
 137              	 .loc 1 130 0
 138 00b0 FB68     	 ldr r3,[r7,#12]
 139 00b2 1A1D     	 adds r2,r3,#4
 140 00b4 FA60     	 str r2,[r7,#12]
 141 00b6 1B68     	 ldr r3,[r3]
 142 00b8 7B61     	 str r3,[r7,#20]
 131:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     sum += in * in;
 143              	 .loc 1 131 0
 144 00ba 7869     	 ldr r0,[r7,#20]
 145 00bc 7969     	 ldr r1,[r7,#20]
 146 00be FFF7FEFF 	 bl __aeabi_fmul
 147 00c2 0346     	 mov r3,r0
 148 00c4 F869     	 ldr r0,[r7,#28]
 149 00c6 1946     	 mov r1,r3
 150 00c8 FFF7FEFF 	 bl __aeabi_fadd
 151 00cc 0346     	 mov r3,r0
 152 00ce FB61     	 str r3,[r7,#28]
 132:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 133:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     /* Decrement the loop counter */
 134:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****     blkCnt--;
 153              	 .loc 1 134 0
 154 00d0 BB69     	 ldr r3,[r7,#24]
 155 00d2 013B     	 subs r3,r3,#1
 156 00d4 BB61     	 str r3,[r7,#24]
 157              	.L4:
 126:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   {
 158              	 .loc 1 126 0
 159 00d6 BB69     	 ldr r3,[r7,#24]
 160 00d8 002B     	 cmp r3,#0
 161 00da E9D1     	 bne .L5
 135:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   }
 136:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** 
 137:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   /* Store the result to the destination */
 138:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c ****   *pResult = sum;
 162              	 .loc 1 138 0
 163 00dc 7B68     	 ldr r3,[r7,#4]
 164 00de FA69     	 ldr r2,[r7,#28]
 165 00e0 1A60     	 str r2,[r3]
 139:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_f32.c **** }
 166              	 .loc 1 139 0
 167 00e2 2037     	 adds r7,r7,#32
 168              	.LCFI3:
 169              	 .cfi_def_cfa_offset 8
 170 00e4 BD46     	 mov sp,r7
 171              	.LCFI4:
 172              	 .cfi_def_cfa_register 13
 173              	 
 174 00e6 80BD     	 pop {r7,pc}
 175              	 .cfi_endproc
 176              	.LFE139:
 178              	 .text
 179              	.Letext0:
 180              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 181              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 182              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_power_f32.c
    {standard input}:21     .text.arm_power_f32:00000000 $t
    {standard input}:26     .text.arm_power_f32:00000000 arm_power_f32
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_fadd
