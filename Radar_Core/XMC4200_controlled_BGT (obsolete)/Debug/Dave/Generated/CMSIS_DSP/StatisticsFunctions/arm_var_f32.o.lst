   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_var_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_fadd
  19              	 .global __aeabi_fmul
  20              	 .global __aeabi_ui2f
  21              	 .global __aeabi_fsub
  22              	 .global __aeabi_fdiv
  23              	 .section .text.arm_var_f32,"ax",%progbits
  24              	 .align 2
  25              	 .global arm_var_f32
  26              	 .thumb
  27              	 .thumb_func
  29              	arm_var_f32:
  30              	.LFB139:
  31              	 .file 1 "../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c"
   1:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * Title:		arm_var_f32.c    
   9:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * Description:	Variance of the elements of a floating-point vector.    
  11:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** * ---------------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  43:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @ingroup groupStats    
  45:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  46:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @defgroup variance  Variance    
  49:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *    
  50:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * Calculates the variance of the elements in the input vector.    
  51:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * The underlying algorithm is used:    
  52:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *    
  53:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * <pre>    
  54:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * 	Result = (sumOfSquares - sum<sup>2</sup> / blockSize) / (blockSize - 1)   
  55:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *   
  56:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *	   where, sumOfSquares = pSrc[0] * pSrc[0] + pSrc[1] * pSrc[1] + ... + pSrc[blockSize-1] * pSrc[
  57:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *   
  58:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *	                   sum = pSrc[0] + pSrc[1] + pSrc[2] + ... + pSrc[blockSize-1]   
  59:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * </pre>   
  60:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * There are separate functions for floating point, Q31, and Q15 data types.    
  62:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  63:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  64:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**    
  65:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @addtogroup variance    
  66:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @{    
  67:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  68:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  70:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** /**    
  71:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @brief Variance of the elements of a floating-point vector.    
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @param[in]       *pSrc points to the input vector    
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @param[in]       blockSize length of the input vector    
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @param[out]      *pResult variance value returned here    
  75:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  * @return none.    
  76:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  *    
  77:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****  */
  78:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  80:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** void arm_var_f32(
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   float32_t * pSrc,
  82:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   uint32_t blockSize,
  83:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   float32_t * pResult)
  84:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** {
  32              	 .loc 1 84 0
  33              	 .cfi_startproc
  34              	 
  35              	 
  36 0000 B0B5     	 push {r4,r5,r7,lr}
  37              	.LCFI0:
  38              	 .cfi_def_cfa_offset 16
  39              	 .cfi_offset 4,-16
  40              	 .cfi_offset 5,-12
  41              	 .cfi_offset 7,-8
  42              	 .cfi_offset 14,-4
  43 0002 8CB0     	 sub sp,sp,#48
  44              	.LCFI1:
  45              	 .cfi_def_cfa_offset 64
  46 0004 00AF     	 add r7,sp,#0
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 7
  49 0006 F860     	 str r0,[r7,#12]
  50 0008 B960     	 str r1,[r7,#8]
  51 000a 7A60     	 str r2,[r7,#4]
  85:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   float32_t sum = 0.0f;                          /* Temporary result storage */
  52              	 .loc 1 86 0
  53 000c 4FF00003 	 mov r3,#0
  54 0010 FB62     	 str r3,[r7,#44]
  87:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   float32_t sumOfSquares = 0.0f;                 /* Sum of squares */
  55              	 .loc 1 87 0
  56 0012 4FF00003 	 mov r3,#0
  57 0016 BB62     	 str r3,[r7,#40]
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   float32_t in;                                  /* input value */
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   
  91:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** #ifndef ARM_MATH_CM0_FAMILY
  92:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****    
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  95:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   float32_t meanOfSquares, mean, squareOfMean;   /* Temporary variables */
  96:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
  97:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 	if(blockSize == 1)
  58              	 .loc 1 97 0
  59 0018 BB68     	 ldr r3,[r7,#8]
  60 001a 012B     	 cmp r3,#1
  61 001c 04D1     	 bne .L2
  98:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 	{
  99:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 		*pResult = 0;
  62              	 .loc 1 99 0
  63 001e 7B68     	 ldr r3,[r7,#4]
  64 0020 4FF00002 	 mov r2,#0
  65 0024 1A60     	 str r2,[r3]
 100:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 		return;
  66              	 .loc 1 100 0
  67 0026 C3E0     	 b .L1
  68              	.L2:
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 	}
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /*loop Unrolling */
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   blkCnt = blockSize >> 2u;
  69              	 .loc 1 104 0
  70 0028 BB68     	 ldr r3,[r7,#8]
  71 002a 9B08     	 lsrs r3,r3,#2
  72 002c 7B62     	 str r3,[r7,#36]
 105:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 106:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 107:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   while(blkCnt > 0u)
  73              	 .loc 1 108 0
  74 002e 5AE0     	 b .L4
  75              	.L5:
 109:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   {
 110:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1])  */
 111:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Compute Sum of squares of the input samples    
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****      * and then store the result in a temporary variable, sum. */
 113:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     in = *pSrc++;
  76              	 .loc 1 113 0
  77 0030 FB68     	 ldr r3,[r7,#12]
  78 0032 1A1D     	 adds r2,r3,#4
  79 0034 FA60     	 str r2,[r7,#12]
  80 0036 1B68     	 ldr r3,[r3]
  81 0038 3B62     	 str r3,[r7,#32]
 114:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sum += in;
  82              	 .loc 1 114 0
  83 003a F86A     	 ldr r0,[r7,#44]
  84 003c 396A     	 ldr r1,[r7,#32]
  85 003e FFF7FEFF 	 bl __aeabi_fadd
  86 0042 0346     	 mov r3,r0
  87 0044 FB62     	 str r3,[r7,#44]
 115:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sumOfSquares += in * in;
  88              	 .loc 1 115 0
  89 0046 386A     	 ldr r0,[r7,#32]
  90 0048 396A     	 ldr r1,[r7,#32]
  91 004a FFF7FEFF 	 bl __aeabi_fmul
  92 004e 0346     	 mov r3,r0
  93 0050 B86A     	 ldr r0,[r7,#40]
  94 0052 1946     	 mov r1,r3
  95 0054 FFF7FEFF 	 bl __aeabi_fadd
  96 0058 0346     	 mov r3,r0
  97 005a BB62     	 str r3,[r7,#40]
 116:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     in = *pSrc++;
  98              	 .loc 1 116 0
  99 005c FB68     	 ldr r3,[r7,#12]
 100 005e 1A1D     	 adds r2,r3,#4
 101 0060 FA60     	 str r2,[r7,#12]
 102 0062 1B68     	 ldr r3,[r3]
 103 0064 3B62     	 str r3,[r7,#32]
 117:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sum += in;
 104              	 .loc 1 117 0
 105 0066 F86A     	 ldr r0,[r7,#44]
 106 0068 396A     	 ldr r1,[r7,#32]
 107 006a FFF7FEFF 	 bl __aeabi_fadd
 108 006e 0346     	 mov r3,r0
 109 0070 FB62     	 str r3,[r7,#44]
 118:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sumOfSquares += in * in;
 110              	 .loc 1 118 0
 111 0072 386A     	 ldr r0,[r7,#32]
 112 0074 396A     	 ldr r1,[r7,#32]
 113 0076 FFF7FEFF 	 bl __aeabi_fmul
 114 007a 0346     	 mov r3,r0
 115 007c B86A     	 ldr r0,[r7,#40]
 116 007e 1946     	 mov r1,r3
 117 0080 FFF7FEFF 	 bl __aeabi_fadd
 118 0084 0346     	 mov r3,r0
 119 0086 BB62     	 str r3,[r7,#40]
 119:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     in = *pSrc++;
 120              	 .loc 1 119 0
 121 0088 FB68     	 ldr r3,[r7,#12]
 122 008a 1A1D     	 adds r2,r3,#4
 123 008c FA60     	 str r2,[r7,#12]
 124 008e 1B68     	 ldr r3,[r3]
 125 0090 3B62     	 str r3,[r7,#32]
 120:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sum += in;
 126              	 .loc 1 120 0
 127 0092 F86A     	 ldr r0,[r7,#44]
 128 0094 396A     	 ldr r1,[r7,#32]
 129 0096 FFF7FEFF 	 bl __aeabi_fadd
 130 009a 0346     	 mov r3,r0
 131 009c FB62     	 str r3,[r7,#44]
 121:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sumOfSquares += in * in;
 132              	 .loc 1 121 0
 133 009e 386A     	 ldr r0,[r7,#32]
 134 00a0 396A     	 ldr r1,[r7,#32]
 135 00a2 FFF7FEFF 	 bl __aeabi_fmul
 136 00a6 0346     	 mov r3,r0
 137 00a8 B86A     	 ldr r0,[r7,#40]
 138 00aa 1946     	 mov r1,r3
 139 00ac FFF7FEFF 	 bl __aeabi_fadd
 140 00b0 0346     	 mov r3,r0
 141 00b2 BB62     	 str r3,[r7,#40]
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     in = *pSrc++;
 142              	 .loc 1 122 0
 143 00b4 FB68     	 ldr r3,[r7,#12]
 144 00b6 1A1D     	 adds r2,r3,#4
 145 00b8 FA60     	 str r2,[r7,#12]
 146 00ba 1B68     	 ldr r3,[r3]
 147 00bc 3B62     	 str r3,[r7,#32]
 123:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sum += in;
 148              	 .loc 1 123 0
 149 00be F86A     	 ldr r0,[r7,#44]
 150 00c0 396A     	 ldr r1,[r7,#32]
 151 00c2 FFF7FEFF 	 bl __aeabi_fadd
 152 00c6 0346     	 mov r3,r0
 153 00c8 FB62     	 str r3,[r7,#44]
 124:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sumOfSquares += in * in;
 154              	 .loc 1 124 0
 155 00ca 386A     	 ldr r0,[r7,#32]
 156 00cc 396A     	 ldr r1,[r7,#32]
 157 00ce FFF7FEFF 	 bl __aeabi_fmul
 158 00d2 0346     	 mov r3,r0
 159 00d4 B86A     	 ldr r0,[r7,#40]
 160 00d6 1946     	 mov r1,r3
 161 00d8 FFF7FEFF 	 bl __aeabi_fadd
 162 00dc 0346     	 mov r3,r0
 163 00de BB62     	 str r3,[r7,#40]
 125:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 126:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Decrement the loop counter */
 127:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     blkCnt--;
 164              	 .loc 1 127 0
 165 00e0 7B6A     	 ldr r3,[r7,#36]
 166 00e2 013B     	 subs r3,r3,#1
 167 00e4 7B62     	 str r3,[r7,#36]
 168              	.L4:
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   {
 169              	 .loc 1 108 0
 170 00e6 7B6A     	 ldr r3,[r7,#36]
 171 00e8 002B     	 cmp r3,#0
 172 00ea A1D1     	 bne .L5
 128:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   }
 129:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 130:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 131:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****    ** No loop unrolling is used. */
 132:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   blkCnt = blockSize % 0x4u;
 173              	 .loc 1 132 0
 174 00ec BB68     	 ldr r3,[r7,#8]
 175 00ee 03F00303 	 and r3,r3,#3
 176 00f2 7B62     	 str r3,[r7,#36]
 133:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 134:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   while(blkCnt > 0u)
 177              	 .loc 1 134 0
 178 00f4 18E0     	 b .L6
 179              	.L7:
 135:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   {
 136:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1]) */
 137:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Compute Sum of squares of the input samples    
 138:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****      * and then store the result in a temporary variable, sum. */
 139:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     in = *pSrc++;
 180              	 .loc 1 139 0
 181 00f6 FB68     	 ldr r3,[r7,#12]
 182 00f8 1A1D     	 adds r2,r3,#4
 183 00fa FA60     	 str r2,[r7,#12]
 184 00fc 1B68     	 ldr r3,[r3]
 185 00fe 3B62     	 str r3,[r7,#32]
 140:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sum += in;
 186              	 .loc 1 140 0
 187 0100 F86A     	 ldr r0,[r7,#44]
 188 0102 396A     	 ldr r1,[r7,#32]
 189 0104 FFF7FEFF 	 bl __aeabi_fadd
 190 0108 0346     	 mov r3,r0
 191 010a FB62     	 str r3,[r7,#44]
 141:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sumOfSquares += in * in;
 192              	 .loc 1 141 0
 193 010c 386A     	 ldr r0,[r7,#32]
 194 010e 396A     	 ldr r1,[r7,#32]
 195 0110 FFF7FEFF 	 bl __aeabi_fmul
 196 0114 0346     	 mov r3,r0
 197 0116 B86A     	 ldr r0,[r7,#40]
 198 0118 1946     	 mov r1,r3
 199 011a FFF7FEFF 	 bl __aeabi_fadd
 200 011e 0346     	 mov r3,r0
 201 0120 BB62     	 str r3,[r7,#40]
 142:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 143:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Decrement the loop counter */
 144:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     blkCnt--;
 202              	 .loc 1 144 0
 203 0122 7B6A     	 ldr r3,[r7,#36]
 204 0124 013B     	 subs r3,r3,#1
 205 0126 7B62     	 str r3,[r7,#36]
 206              	.L6:
 134:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   {
 207              	 .loc 1 134 0
 208 0128 7B6A     	 ldr r3,[r7,#36]
 209 012a 002B     	 cmp r3,#0
 210 012c E3D1     	 bne .L7
 145:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   }
 146:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 147:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Compute Mean of squares of the input samples    
 148:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****    * and then store the result in a temporary variable, meanOfSquares. */
 149:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   meanOfSquares = sumOfSquares / ((float32_t) blockSize - 1.0f);
 211              	 .loc 1 149 0
 212 012e B868     	 ldr r0,[r7,#8]
 213 0130 FFF7FEFF 	 bl __aeabi_ui2f
 214 0134 0346     	 mov r3,r0
 215 0136 1846     	 mov r0,r3
 216 0138 4FF07E51 	 mov r1,#1065353216
 217 013c FFF7FEFF 	 bl __aeabi_fsub
 218 0140 0346     	 mov r3,r0
 219 0142 B86A     	 ldr r0,[r7,#40]
 220 0144 1946     	 mov r1,r3
 221 0146 FFF7FEFF 	 bl __aeabi_fdiv
 222 014a 0346     	 mov r3,r0
 223 014c FB61     	 str r3,[r7,#28]
 150:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 151:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Compute mean of all input values */
 152:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   mean = sum / (float32_t) blockSize;
 224              	 .loc 1 152 0
 225 014e B868     	 ldr r0,[r7,#8]
 226 0150 FFF7FEFF 	 bl __aeabi_ui2f
 227 0154 0346     	 mov r3,r0
 228 0156 F86A     	 ldr r0,[r7,#44]
 229 0158 1946     	 mov r1,r3
 230 015a FFF7FEFF 	 bl __aeabi_fdiv
 231 015e 0346     	 mov r3,r0
 232 0160 BB61     	 str r3,[r7,#24]
 153:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 154:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Compute square of mean */
 155:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   squareOfMean = (mean * mean) * (((float32_t) blockSize) /
 233              	 .loc 1 155 0
 234 0162 B869     	 ldr r0,[r7,#24]
 235 0164 B969     	 ldr r1,[r7,#24]
 236 0166 FFF7FEFF 	 bl __aeabi_fmul
 237 016a 0346     	 mov r3,r0
 238 016c 1C46     	 mov r4,r3
 239 016e B868     	 ldr r0,[r7,#8]
 240 0170 FFF7FEFF 	 bl __aeabi_ui2f
 241 0174 0546     	 mov r5,r0
 156:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****                                   ((float32_t) blockSize - 1.0f));
 242              	 .loc 1 156 0
 243 0176 B868     	 ldr r0,[r7,#8]
 244 0178 FFF7FEFF 	 bl __aeabi_ui2f
 245 017c 0346     	 mov r3,r0
 246 017e 1846     	 mov r0,r3
 247 0180 4FF07E51 	 mov r1,#1065353216
 248 0184 FFF7FEFF 	 bl __aeabi_fsub
 249 0188 0346     	 mov r3,r0
 155:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****                                   ((float32_t) blockSize - 1.0f));
 250              	 .loc 1 155 0
 251 018a 2846     	 mov r0,r5
 252 018c 1946     	 mov r1,r3
 253 018e FFF7FEFF 	 bl __aeabi_fdiv
 254 0192 0346     	 mov r3,r0
 255 0194 2046     	 mov r0,r4
 256 0196 1946     	 mov r1,r3
 257 0198 FFF7FEFF 	 bl __aeabi_fmul
 258 019c 0346     	 mov r3,r0
 259 019e 7B61     	 str r3,[r7,#20]
 157:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 158:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Compute variance and then store the result to the destination */
 159:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   *pResult = meanOfSquares - squareOfMean;
 260              	 .loc 1 159 0
 261 01a0 F869     	 ldr r0,[r7,#28]
 262 01a2 7969     	 ldr r1,[r7,#20]
 263 01a4 FFF7FEFF 	 bl __aeabi_fsub
 264 01a8 0346     	 mov r3,r0
 265 01aa 1A46     	 mov r2,r3
 266 01ac 7B68     	 ldr r3,[r7,#4]
 267 01ae 1A60     	 str r2,[r3]
 268              	.L1:
 160:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 161:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** #else
 162:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 163:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Run the below code for Cortex-M0 */
 164:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   float32_t squareOfSum;                         /* Square of Sum */
 165:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 166:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 	if(blockSize == 1)
 167:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 	{
 168:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 		*pResult = 0;
 169:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 		return;
 170:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 	}
 171:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 172:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Loop over blockSize number of values */
 173:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   blkCnt = blockSize;
 174:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   while(blkCnt > 0u)
 176:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   {
 177:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1]) */
 178:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Compute Sum of squares of the input samples     
 179:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****      * and then store the result in a temporary variable, sumOfSquares. */
 180:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     in = *pSrc++;
 181:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sumOfSquares += in * in;
 182:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 183:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* C = (A[0] + A[1] + ... + A[blockSize-1]) */
 184:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Compute Sum of the input samples     
 185:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****      * and then store the result in a temporary variable, sum. */
 186:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     sum += in;
 187:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 188:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     /* Decrement the loop counter */
 189:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****     blkCnt--;
 190:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   }
 191:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 192:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Compute the square of sum */
 193:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   squareOfSum = ((sum * sum) / (float32_t) blockSize);
 194:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 195:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   /* Compute the variance */
 196:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c ****   *pResult = ((sumOfSquares - squareOfSum) / (float32_t) (blockSize - 1.0f));
 197:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 198:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 199:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** 
 200:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_var_f32.c **** }
 269              	 .loc 1 200 0
 270 01b0 3037     	 adds r7,r7,#48
 271              	.LCFI3:
 272              	 .cfi_def_cfa_offset 16
 273 01b2 BD46     	 mov sp,r7
 274              	.LCFI4:
 275              	 .cfi_def_cfa_register 13
 276              	 
 277 01b4 B0BD     	 pop {r4,r5,r7,pc}
 278              	 .cfi_endproc
 279              	.LFE139:
 281 01b6 00BF     	 .text
 282              	.Letext0:
 283              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 284              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 285              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_var_f32.c
    {standard input}:24     .text.arm_var_f32:00000000 $t
    {standard input}:29     .text.arm_var_f32:00000000 arm_var_f32
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fadd
__aeabi_fmul
__aeabi_ui2f
__aeabi_fsub
__aeabi_fdiv
