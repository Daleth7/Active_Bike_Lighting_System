   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_power_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_power_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_power_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_power_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c"
   1:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * Title:		arm_power_q31.c    
   9:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * Description:	Sum of the squares of the elements of a Q31 vector.   
  11:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * POSSIBILITY OF SUCH DAMAGE.  
  39:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @ingroup groupStats    
  45:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @addtogroup power    
  49:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @brief Sum of the squares of the elements of a Q31 vector.    
  54:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @param[in]       *pSrc points to the input vector    
  55:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @param[in]       blockSize length of the input vector    
  56:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @param[out]      *pResult sum of the squares value returned here    
  57:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @return none.    
  58:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  *    
  59:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * @details    
  60:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * <b>Scaling and Overflow Behavior:</b>    
  61:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  *    
  62:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * \par    
  63:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * The function is implemented using a 64-bit internal accumulator.    
  64:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * The input is represented in 1.31 format.    
  65:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * Intermediate multiplication yields a 2.62 format, and this    
  66:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * result is truncated to 2.48 format by discarding the lower 14 bits.    
  67:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * The 2.48 result is then added without saturation to a 64-bit accumulator in 16.48 format.    
  68:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * With 15 guard bits in the accumulator, there is no risk of overflow, and the    
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * full precision of the intermediate multiplication is preserved.    
  70:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  * Finally, the return result is in 16.48 format.     
  71:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  *    
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****  */
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** void arm_power_q31(
  75:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   q31_t * pSrc,
  76:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   uint32_t blockSize,
  77:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   q63_t * pResult)
  78:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** {
  27              	 .loc 1 78 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 8FB0     	 sub sp,sp,#60
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 88
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 7862     	 str r0,[r7,#36]
  49 000a 3962     	 str r1,[r7,#32]
  50 000c FA61     	 str r2,[r7,#28]
  79:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   q63_t sum = 0;                                 /* Temporary result storage */
  51              	 .loc 1 79 0
  52 000e 4FF00002 	 mov r2,#0
  53 0012 4FF00003 	 mov r3,#0
  54 0016 C7E90C23 	 strd r2,[r7,#48]
  80:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   q31_t in;
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  82:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  83:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  84:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
  85:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  87:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   /*loop Unrolling */
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   blkCnt = blockSize >> 2u;
  55              	 .loc 1 89 0
  56 001a 3B6A     	 ldr r3,[r7,#32]
  57 001c 9B08     	 lsrs r3,r3,#2
  58 001e FB62     	 str r3,[r7,#44]
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
  91:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  92:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   while(blkCnt > 0u)
  59              	 .loc 1 93 0
  60 0020 A1E0     	 b .L2
  61              	.L3:
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   {
  95:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
  96:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     /* Compute Power then shift intermediate results by 14 bits to maintain 16.48 format and then s
  97:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
  62              	 .loc 1 97 0
  63 0022 7B6A     	 ldr r3,[r7,#36]
  64 0024 1A1D     	 adds r2,r3,#4
  65 0026 7A62     	 str r2,[r7,#36]
  66 0028 1B68     	 ldr r3,[r3]
  67 002a BB62     	 str r3,[r7,#40]
  98:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14u;
  68              	 .loc 1 98 0
  69 002c BB6A     	 ldr r3,[r7,#40]
  70 002e 1A46     	 mov r2,r3
  71 0030 4FEAE273 	 asr r3,r2,#31
  72 0034 B96A     	 ldr r1,[r7,#40]
  73 0036 0846     	 mov r0,r1
  74 0038 4FEAE071 	 asr r1,r0,#31
  75 003c 00FB03F5 	 mul r5,r0,r3
  76 0040 02FB01F4 	 mul r4,r2,r1
  77 0044 2C44     	 add r4,r4,r5
  78 0046 A2FB0023 	 umull r2,r3,r2,r0
  79 004a E118     	 adds r1,r4,r3
  80 004c 0B46     	 mov r3,r1
  81 004e 4FEA923A 	 lsr r10,r2,#14
  82 0052 4AEA834A 	 orr r10,r10,r3,lsl#18
  83 0056 4FEAA33B 	 asr fp,r3,#14
  84 005a D7E90C23 	 ldrd r2,[r7,#48]
  85 005e 12EB0A02 	 adds r2,r2,r10
  86 0062 43EB0B03 	 adc r3,r3,fp
  87 0066 C7E90C23 	 strd r2,[r7,#48]
  99:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 100:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
  88              	 .loc 1 100 0
  89 006a 7B6A     	 ldr r3,[r7,#36]
  90 006c 1A1D     	 adds r2,r3,#4
  91 006e 7A62     	 str r2,[r7,#36]
  92 0070 1B68     	 ldr r3,[r3]
  93 0072 BB62     	 str r3,[r7,#40]
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14u;
  94              	 .loc 1 101 0
  95 0074 BB6A     	 ldr r3,[r7,#40]
  96 0076 1A46     	 mov r2,r3
  97 0078 4FEAE273 	 asr r3,r2,#31
  98 007c B96A     	 ldr r1,[r7,#40]
  99 007e 0846     	 mov r0,r1
 100 0080 4FEAE071 	 asr r1,r0,#31
 101 0084 00FB03F5 	 mul r5,r0,r3
 102 0088 02FB01F4 	 mul r4,r2,r1
 103 008c 2C44     	 add r4,r4,r5
 104 008e A2FB0023 	 umull r2,r3,r2,r0
 105 0092 E118     	 adds r1,r4,r3
 106 0094 0B46     	 mov r3,r1
 107 0096 910B     	 lsrs r1,r2,#14
 108 0098 3961     	 str r1,[r7,#16]
 109 009a 3969     	 ldr r1,[r7,#16]
 110 009c 41EA8341 	 orr r1,r1,r3,lsl#18
 111 00a0 3961     	 str r1,[r7,#16]
 112 00a2 9B13     	 asrs r3,r3,#14
 113 00a4 7B61     	 str r3,[r7,#20]
 114 00a6 D7E90C23 	 ldrd r2,[r7,#48]
 115 00aa D7E90401 	 ldrd r0,[r7,#16]
 116 00ae 8018     	 adds r0,r0,r2
 117 00b0 41EB0301 	 adc r1,r1,r3
 118 00b4 0246     	 mov r2,r0
 119 00b6 0B46     	 mov r3,r1
 120 00b8 C7E90C23 	 strd r2,[r7,#48]
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
 121              	 .loc 1 103 0
 122 00bc 7B6A     	 ldr r3,[r7,#36]
 123 00be 1A1D     	 adds r2,r3,#4
 124 00c0 7A62     	 str r2,[r7,#36]
 125 00c2 1B68     	 ldr r3,[r3]
 126 00c4 BB62     	 str r3,[r7,#40]
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14u;
 127              	 .loc 1 104 0
 128 00c6 BB6A     	 ldr r3,[r7,#40]
 129 00c8 1A46     	 mov r2,r3
 130 00ca 4FEAE273 	 asr r3,r2,#31
 131 00ce B96A     	 ldr r1,[r7,#40]
 132 00d0 0846     	 mov r0,r1
 133 00d2 4FEAE071 	 asr r1,r0,#31
 134 00d6 00FB03F5 	 mul r5,r0,r3
 135 00da 02FB01F4 	 mul r4,r2,r1
 136 00de 2C44     	 add r4,r4,r5
 137 00e0 A2FB0023 	 umull r2,r3,r2,r0
 138 00e4 E118     	 adds r1,r4,r3
 139 00e6 0B46     	 mov r3,r1
 140 00e8 910B     	 lsrs r1,r2,#14
 141 00ea B960     	 str r1,[r7,#8]
 142 00ec B968     	 ldr r1,[r7,#8]
 143 00ee 41EA8341 	 orr r1,r1,r3,lsl#18
 144 00f2 B960     	 str r1,[r7,#8]
 145 00f4 9B13     	 asrs r3,r3,#14
 146 00f6 FB60     	 str r3,[r7,#12]
 147 00f8 D7E90C23 	 ldrd r2,[r7,#48]
 148 00fc D7E90201 	 ldrd r0,[r7,#8]
 149 0100 8018     	 adds r0,r0,r2
 150 0102 41EB0301 	 adc r1,r1,r3
 151 0106 0246     	 mov r2,r0
 152 0108 0B46     	 mov r3,r1
 153 010a C7E90C23 	 strd r2,[r7,#48]
 105:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 106:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
 154              	 .loc 1 106 0
 155 010e 7B6A     	 ldr r3,[r7,#36]
 156 0110 1A1D     	 adds r2,r3,#4
 157 0112 7A62     	 str r2,[r7,#36]
 158 0114 1B68     	 ldr r3,[r3]
 159 0116 BB62     	 str r3,[r7,#40]
 107:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14u;
 160              	 .loc 1 107 0
 161 0118 BB6A     	 ldr r3,[r7,#40]
 162 011a 1A46     	 mov r2,r3
 163 011c 4FEAE273 	 asr r3,r2,#31
 164 0120 B96A     	 ldr r1,[r7,#40]
 165 0122 0846     	 mov r0,r1
 166 0124 4FEAE071 	 asr r1,r0,#31
 167 0128 00FB03F5 	 mul r5,r0,r3
 168 012c 02FB01F4 	 mul r4,r2,r1
 169 0130 2C44     	 add r4,r4,r5
 170 0132 A2FB0023 	 umull r2,r3,r2,r0
 171 0136 E118     	 adds r1,r4,r3
 172 0138 0B46     	 mov r3,r1
 173 013a 910B     	 lsrs r1,r2,#14
 174 013c 3960     	 str r1,[r7]
 175 013e 3968     	 ldr r1,[r7]
 176 0140 41EA8341 	 orr r1,r1,r3,lsl#18
 177 0144 3960     	 str r1,[r7]
 178 0146 9B13     	 asrs r3,r3,#14
 179 0148 7B60     	 str r3,[r7,#4]
 180 014a D7E90C23 	 ldrd r2,[r7,#48]
 181 014e D7E90001 	 ldrd r0,[r7]
 182 0152 8018     	 adds r0,r0,r2
 183 0154 41EB0301 	 adc r1,r1,r3
 184 0158 0246     	 mov r2,r0
 185 015a 0B46     	 mov r3,r1
 186 015c C7E90C23 	 strd r2,[r7,#48]
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     /* Decrement the loop counter */
 110:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     blkCnt--;
 187              	 .loc 1 110 0
 188 0160 FB6A     	 ldr r3,[r7,#44]
 189 0162 013B     	 subs r3,r3,#1
 190 0164 FB62     	 str r3,[r7,#44]
 191              	.L2:
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   {
 192              	 .loc 1 93 0
 193 0166 FB6A     	 ldr r3,[r7,#44]
 194 0168 002B     	 cmp r3,#0
 195 016a 7FF45AAF 	 bne .L3
 111:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   }
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 113:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 114:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****    ** No loop unrolling is used. */
 115:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   blkCnt = blockSize % 0x4u;
 196              	 .loc 1 115 0
 197 016e 3B6A     	 ldr r3,[r7,#32]
 198 0170 03F00303 	 and r3,r3,#3
 199 0174 FB62     	 str r3,[r7,#44]
 116:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** #else
 118:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 119:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   /* Run the below code for Cortex-M0 */
 120:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 121:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   /* Loop over blockSize number of values */
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   blkCnt = blockSize;
 123:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 125:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   while(blkCnt > 0u)
 200              	 .loc 1 126 0
 201 0176 26E0     	 b .L4
 202              	.L5:
 127:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   {
 128:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     /* C = A[0] * A[0] + A[1] * A[1] + A[2] * A[2] + ... + A[blockSize-1] * A[blockSize-1] */
 129:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     /* Compute Power and then store the result in a temporary variable, sum. */
 130:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     in = *pSrc++;
 203              	 .loc 1 130 0
 204 0178 7B6A     	 ldr r3,[r7,#36]
 205 017a 1A1D     	 adds r2,r3,#4
 206 017c 7A62     	 str r2,[r7,#36]
 207 017e 1B68     	 ldr r3,[r3]
 208 0180 BB62     	 str r3,[r7,#40]
 131:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     sum += ((q63_t) in * in) >> 14u;
 209              	 .loc 1 131 0
 210 0182 BB6A     	 ldr r3,[r7,#40]
 211 0184 1846     	 mov r0,r3
 212 0186 4FEAE071 	 asr r1,r0,#31
 213 018a BB6A     	 ldr r3,[r7,#40]
 214 018c 1A46     	 mov r2,r3
 215 018e 4FEAE273 	 asr r3,r2,#31
 216 0192 02FB01F5 	 mul r5,r2,r1
 217 0196 00FB03F4 	 mul r4,r0,r3
 218 019a 2C44     	 add r4,r4,r5
 219 019c A0FB0223 	 umull r2,r3,r0,r2
 220 01a0 E118     	 adds r1,r4,r3
 221 01a2 0B46     	 mov r3,r1
 222 01a4 4FEA9238 	 lsr r8,r2,#14
 223 01a8 48EA8348 	 orr r8,r8,r3,lsl#18
 224 01ac 4FEAA339 	 asr r9,r3,#14
 225 01b0 D7E90C23 	 ldrd r2,[r7,#48]
 226 01b4 12EB0802 	 adds r2,r2,r8
 227 01b8 43EB0903 	 adc r3,r3,r9
 228 01bc C7E90C23 	 strd r2,[r7,#48]
 132:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 133:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     /* Decrement the loop counter */
 134:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****     blkCnt--;
 229              	 .loc 1 134 0
 230 01c0 FB6A     	 ldr r3,[r7,#44]
 231 01c2 013B     	 subs r3,r3,#1
 232 01c4 FB62     	 str r3,[r7,#44]
 233              	.L4:
 126:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   {
 234              	 .loc 1 126 0
 235 01c6 FB6A     	 ldr r3,[r7,#44]
 236 01c8 002B     	 cmp r3,#0
 237 01ca D5D1     	 bne .L5
 135:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   }
 136:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   /* Store the results in 16.48 format  */
 138:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c ****   *pResult = sum;
 238              	 .loc 1 138 0
 239 01cc F969     	 ldr r1,[r7,#28]
 240 01ce D7E90C23 	 ldrd r2,[r7,#48]
 241 01d2 C1E90023 	 strd r2,[r1]
 139:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_power_q31.c **** }
 242              	 .loc 1 139 0
 243 01d6 3C37     	 adds r7,r7,#60
 244              	.LCFI3:
 245              	 .cfi_def_cfa_offset 28
 246 01d8 BD46     	 mov sp,r7
 247              	.LCFI4:
 248              	 .cfi_def_cfa_register 13
 249              	 
 250 01da BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 251              	.LCFI5:
 252              	 .cfi_restore 11
 253              	 .cfi_restore 10
 254              	 .cfi_restore 9
 255              	 .cfi_restore 8
 256              	 .cfi_restore 7
 257              	 .cfi_restore 5
 258              	 .cfi_restore 4
 259              	 .cfi_def_cfa_offset 0
 260 01de 7047     	 bx lr
 261              	 .cfi_endproc
 262              	.LFE139:
 264              	 .text
 265              	.Letext0:
 266              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 267              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 268              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_power_q31.c
    {standard input}:19     .text.arm_power_q31:00000000 $t
    {standard input}:24     .text.arm_power_q31:00000000 arm_power_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
