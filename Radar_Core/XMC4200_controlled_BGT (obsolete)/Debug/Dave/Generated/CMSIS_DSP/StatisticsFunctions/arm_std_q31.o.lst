   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_std_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_ldivmod
  19              	 .section .text.arm_std_q31,"ax",%progbits
  20              	 .align 2
  21              	 .global arm_std_q31
  22              	 .thumb
  23              	 .thumb_func
  25              	arm_std_q31:
  26              	.LFB139:
  27              	 .file 1 "../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c"
   1:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * Title:		arm_std_q31.c    
   9:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * Description:	Standard deviation of an array of Q31 type.    
  11:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * POSSIBILITY OF SUCH DAMAGE.    
  39:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @ingroup groupStats    
  45:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @addtogroup STD    
  49:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  53:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** /**    
  54:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @brief Standard deviation of the elements of a Q31 vector.    
  55:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @param[in]       *pSrc points to the input vector    
  56:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @param[in]       blockSize length of the input vector    
  57:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @param[out]      *pResult standard deviation value returned here    
  58:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @return none.    
  59:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * @details    
  60:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * <b>Scaling and Overflow Behavior:</b>    
  61:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  *    
  62:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  *\par    
  63:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * The function is implemented using an internal 64-bit accumulator.        
  64:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * The input is represented in 1.31 format, which is then downshifted by 8 bits
  65:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * which yields 1.23, and intermediate multiplication yields a 2.46 format.        
  66:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * The accumulator maintains full precision of the intermediate multiplication results,         
  67:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * but provides only a 16 guard bits.        
  68:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * There is no saturation on intermediate additions.        
  69:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * If the accumulator overflows it wraps around and distorts the result.        
  70:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * In order to avoid overflows completely the input signal must be scaled down by         
  71:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * log2(blockSize)-8 bits, as a total of blockSize additions are performed internally.  
  72:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * After division, internal variables should be Q18.46 
  73:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  * Finally, the 18.46 accumulator is right shifted by 15 bits to yield a 1.31 format value. 
  74:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  *    
  75:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****  */
  76:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  78:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** void arm_std_q31(
  79:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   q31_t * pSrc,
  80:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   uint32_t blockSize,
  81:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   q31_t * pResult)
  82:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** {
  28              	 .loc 1 82 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 6,-20
  38              	 .cfi_offset 7,-16
  39              	 .cfi_offset 8,-12
  40              	 .cfi_offset 9,-8
  41              	 .cfi_offset 14,-4
  42 0004 91B0     	 sub sp,sp,#68
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 96
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 F860     	 str r0,[r7,#12]
  49 000a B960     	 str r1,[r7,#8]
  50 000c 7A60     	 str r2,[r7,#4]
  83:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   q63_t sum = 0;                                 /* Accumulator */
  51              	 .loc 1 83 0
  52 000e 4FF00002 	 mov r2,#0
  53 0012 4FF00003 	 mov r3,#0
  54 0016 C7E90E23 	 strd r2,[r7,#56]
  84:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   q63_t meanOfSquares, squareOfMean;             /* square of mean and mean of square */
  85:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   q31_t in;                                      /* input value */
  86:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  87:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   q63_t sumOfSquares = 0;                        /* Accumulator */
  55              	 .loc 1 87 0
  56 001a 4FF00002 	 mov r2,#0
  57 001e 4FF00003 	 mov r3,#0
  58 0022 C7E90A23 	 strd r2,[r7,#40]
  88:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  89:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 	if(blockSize == 1)
  59              	 .loc 1 89 0
  60 0026 BB68     	 ldr r3,[r7,#8]
  61 0028 012B     	 cmp r3,#1
  62 002a 03D1     	 bne .L2
  90:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 	{
  91:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 		*pResult = 0;
  63              	 .loc 1 91 0
  64 002c 7B68     	 ldr r3,[r7,#4]
  65 002e 0022     	 movs r2,#0
  66 0030 1A60     	 str r2,[r3]
  92:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 		return;
  67              	 .loc 1 92 0
  68 0032 20E1     	 b .L1
  69              	.L2:
  93:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 	}
  94:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****    
  95:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
  96:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  97:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  98:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
  99:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /*loop Unrolling */
 100:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   blkCnt = blockSize >> 2u;
  70              	 .loc 1 100 0
  71 0034 BB68     	 ldr r3,[r7,#8]
  72 0036 9B08     	 lsrs r3,r3,#2
  73 0038 7B63     	 str r3,[r7,#52]
 101:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 102:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 103:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   while(blkCnt > 0u)
  74              	 .loc 1 104 0
  75 003a A6E0     	 b .L4
  76              	.L5:
 105:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   {
 106:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1])  */
 107:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* Compute Sum of squares of the input samples    
 108:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****      * and then store the result in a temporary variable, sum. */
 109:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     in = *pSrc++ >> 8;
  77              	 .loc 1 109 0
  78 003c FB68     	 ldr r3,[r7,#12]
  79 003e 1A1D     	 adds r2,r3,#4
  80 0040 FA60     	 str r2,[r7,#12]
  81 0042 1B68     	 ldr r3,[r3]
  82 0044 1B12     	 asrs r3,r3,#8
  83 0046 7B62     	 str r3,[r7,#36]
 110:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sum += in;
  84              	 .loc 1 110 0
  85 0048 7B6A     	 ldr r3,[r7,#36]
  86 004a 1A46     	 mov r2,r3
  87 004c 4FEAE273 	 asr r3,r2,#31
  88 0050 D7E90E01 	 ldrd r0,[r7,#56]
  89 0054 1218     	 adds r2,r2,r0
  90 0056 43EB0103 	 adc r3,r3,r1
  91 005a C7E90E23 	 strd r2,[r7,#56]
 111:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sumOfSquares += ((q63_t) (in) * (in));
  92              	 .loc 1 111 0
  93 005e 7B6A     	 ldr r3,[r7,#36]
  94 0060 1846     	 mov r0,r3
  95 0062 4FEAE071 	 asr r1,r0,#31
  96 0066 7B6A     	 ldr r3,[r7,#36]
  97 0068 1A46     	 mov r2,r3
  98 006a 4FEAE273 	 asr r3,r2,#31
  99 006e 02FB01FE 	 mul lr,r2,r1
 100 0072 00FB03F6 	 mul r6,r0,r3
 101 0076 7644     	 add r6,r6,lr
 102 0078 A0FB0223 	 umull r2,r3,r0,r2
 103 007c F118     	 adds r1,r6,r3
 104 007e 0B46     	 mov r3,r1
 105 0080 D7E90A01 	 ldrd r0,[r7,#40]
 106 0084 1218     	 adds r2,r2,r0
 107 0086 43EB0103 	 adc r3,r3,r1
 108 008a C7E90A23 	 strd r2,[r7,#40]
 112:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     in = *pSrc++ >> 8;
 109              	 .loc 1 112 0
 110 008e FB68     	 ldr r3,[r7,#12]
 111 0090 1A1D     	 adds r2,r3,#4
 112 0092 FA60     	 str r2,[r7,#12]
 113 0094 1B68     	 ldr r3,[r3]
 114 0096 1B12     	 asrs r3,r3,#8
 115 0098 7B62     	 str r3,[r7,#36]
 113:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sum += in;
 116              	 .loc 1 113 0
 117 009a 7B6A     	 ldr r3,[r7,#36]
 118 009c 1A46     	 mov r2,r3
 119 009e 4FEAE273 	 asr r3,r2,#31
 120 00a2 D7E90E01 	 ldrd r0,[r7,#56]
 121 00a6 1218     	 adds r2,r2,r0
 122 00a8 43EB0103 	 adc r3,r3,r1
 123 00ac C7E90E23 	 strd r2,[r7,#56]
 114:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sumOfSquares += ((q63_t) (in) * (in));
 124              	 .loc 1 114 0
 125 00b0 7B6A     	 ldr r3,[r7,#36]
 126 00b2 1846     	 mov r0,r3
 127 00b4 4FEAE071 	 asr r1,r0,#31
 128 00b8 7B6A     	 ldr r3,[r7,#36]
 129 00ba 1A46     	 mov r2,r3
 130 00bc 4FEAE273 	 asr r3,r2,#31
 131 00c0 02FB01FE 	 mul lr,r2,r1
 132 00c4 00FB03F6 	 mul r6,r0,r3
 133 00c8 7644     	 add r6,r6,lr
 134 00ca A0FB0223 	 umull r2,r3,r0,r2
 135 00ce F118     	 adds r1,r6,r3
 136 00d0 0B46     	 mov r3,r1
 137 00d2 D7E90A01 	 ldrd r0,[r7,#40]
 138 00d6 1218     	 adds r2,r2,r0
 139 00d8 43EB0103 	 adc r3,r3,r1
 140 00dc C7E90A23 	 strd r2,[r7,#40]
 115:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     in = *pSrc++ >> 8;
 141              	 .loc 1 115 0
 142 00e0 FB68     	 ldr r3,[r7,#12]
 143 00e2 1A1D     	 adds r2,r3,#4
 144 00e4 FA60     	 str r2,[r7,#12]
 145 00e6 1B68     	 ldr r3,[r3]
 146 00e8 1B12     	 asrs r3,r3,#8
 147 00ea 7B62     	 str r3,[r7,#36]
 116:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sum += in;
 148              	 .loc 1 116 0
 149 00ec 7B6A     	 ldr r3,[r7,#36]
 150 00ee 1A46     	 mov r2,r3
 151 00f0 4FEAE273 	 asr r3,r2,#31
 152 00f4 D7E90E01 	 ldrd r0,[r7,#56]
 153 00f8 1218     	 adds r2,r2,r0
 154 00fa 43EB0103 	 adc r3,r3,r1
 155 00fe C7E90E23 	 strd r2,[r7,#56]
 117:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sumOfSquares += ((q63_t) (in) * (in));
 156              	 .loc 1 117 0
 157 0102 7B6A     	 ldr r3,[r7,#36]
 158 0104 1846     	 mov r0,r3
 159 0106 4FEAE071 	 asr r1,r0,#31
 160 010a 7B6A     	 ldr r3,[r7,#36]
 161 010c 1A46     	 mov r2,r3
 162 010e 4FEAE273 	 asr r3,r2,#31
 163 0112 02FB01FE 	 mul lr,r2,r1
 164 0116 00FB03F6 	 mul r6,r0,r3
 165 011a 7644     	 add r6,r6,lr
 166 011c A0FB0223 	 umull r2,r3,r0,r2
 167 0120 F118     	 adds r1,r6,r3
 168 0122 0B46     	 mov r3,r1
 169 0124 D7E90A01 	 ldrd r0,[r7,#40]
 170 0128 1218     	 adds r2,r2,r0
 171 012a 43EB0103 	 adc r3,r3,r1
 172 012e C7E90A23 	 strd r2,[r7,#40]
 118:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     in = *pSrc++ >> 8;
 173              	 .loc 1 118 0
 174 0132 FB68     	 ldr r3,[r7,#12]
 175 0134 1A1D     	 adds r2,r3,#4
 176 0136 FA60     	 str r2,[r7,#12]
 177 0138 1B68     	 ldr r3,[r3]
 178 013a 1B12     	 asrs r3,r3,#8
 179 013c 7B62     	 str r3,[r7,#36]
 119:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sum += in;
 180              	 .loc 1 119 0
 181 013e 7B6A     	 ldr r3,[r7,#36]
 182 0140 1A46     	 mov r2,r3
 183 0142 4FEAE273 	 asr r3,r2,#31
 184 0146 D7E90E01 	 ldrd r0,[r7,#56]
 185 014a 1218     	 adds r2,r2,r0
 186 014c 43EB0103 	 adc r3,r3,r1
 187 0150 C7E90E23 	 strd r2,[r7,#56]
 120:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sumOfSquares += ((q63_t) (in) * (in));
 188              	 .loc 1 120 0
 189 0154 7B6A     	 ldr r3,[r7,#36]
 190 0156 1846     	 mov r0,r3
 191 0158 4FEAE071 	 asr r1,r0,#31
 192 015c 7B6A     	 ldr r3,[r7,#36]
 193 015e 1A46     	 mov r2,r3
 194 0160 4FEAE273 	 asr r3,r2,#31
 195 0164 02FB01FE 	 mul lr,r2,r1
 196 0168 00FB03F6 	 mul r6,r0,r3
 197 016c 7644     	 add r6,r6,lr
 198 016e A0FB0223 	 umull r2,r3,r0,r2
 199 0172 F118     	 adds r1,r6,r3
 200 0174 0B46     	 mov r3,r1
 201 0176 D7E90A01 	 ldrd r0,[r7,#40]
 202 017a 1218     	 adds r2,r2,r0
 203 017c 43EB0103 	 adc r3,r3,r1
 204 0180 C7E90A23 	 strd r2,[r7,#40]
 121:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 122:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* Decrement the loop counter */
 123:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     blkCnt--;
 205              	 .loc 1 123 0
 206 0184 7B6B     	 ldr r3,[r7,#52]
 207 0186 013B     	 subs r3,r3,#1
 208 0188 7B63     	 str r3,[r7,#52]
 209              	.L4:
 104:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   {
 210              	 .loc 1 104 0
 211 018a 7B6B     	 ldr r3,[r7,#52]
 212 018c 002B     	 cmp r3,#0
 213 018e 7FF455AF 	 bne .L5
 124:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   }
 125:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 127:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****    ** No loop unrolling is used. */
 128:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   blkCnt = blockSize % 0x4u;
 214              	 .loc 1 128 0
 215 0192 BB68     	 ldr r3,[r7,#8]
 216 0194 03F00303 	 and r3,r3,#3
 217 0198 7B63     	 str r3,[r7,#52]
 129:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 130:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   while(blkCnt > 0u)
 218              	 .loc 1 130 0
 219 019a 2BE0     	 b .L6
 220              	.L7:
 131:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   {
 132:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1]) */
 133:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* Compute Sum of squares of the input samples    
 134:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****      * and then store the result in a temporary variable, sum. */
 135:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     in = *pSrc++ >> 8;
 221              	 .loc 1 135 0
 222 019c FB68     	 ldr r3,[r7,#12]
 223 019e 1A1D     	 adds r2,r3,#4
 224 01a0 FA60     	 str r2,[r7,#12]
 225 01a2 1B68     	 ldr r3,[r3]
 226 01a4 1B12     	 asrs r3,r3,#8
 227 01a6 7B62     	 str r3,[r7,#36]
 136:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sum += in;
 228              	 .loc 1 136 0
 229 01a8 7B6A     	 ldr r3,[r7,#36]
 230 01aa 1A46     	 mov r2,r3
 231 01ac 4FEAE273 	 asr r3,r2,#31
 232 01b0 D7E90E01 	 ldrd r0,[r7,#56]
 233 01b4 1218     	 adds r2,r2,r0
 234 01b6 43EB0103 	 adc r3,r3,r1
 235 01ba C7E90E23 	 strd r2,[r7,#56]
 137:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sumOfSquares += ((q63_t) (in) * (in));
 236              	 .loc 1 137 0
 237 01be 7B6A     	 ldr r3,[r7,#36]
 238 01c0 1846     	 mov r0,r3
 239 01c2 4FEAE071 	 asr r1,r0,#31
 240 01c6 7B6A     	 ldr r3,[r7,#36]
 241 01c8 1A46     	 mov r2,r3
 242 01ca 4FEAE273 	 asr r3,r2,#31
 243 01ce 02FB01FE 	 mul lr,r2,r1
 244 01d2 00FB03F6 	 mul r6,r0,r3
 245 01d6 7644     	 add r6,r6,lr
 246 01d8 A0FB0223 	 umull r2,r3,r0,r2
 247 01dc F118     	 adds r1,r6,r3
 248 01de 0B46     	 mov r3,r1
 249 01e0 D7E90A01 	 ldrd r0,[r7,#40]
 250 01e4 1218     	 adds r2,r2,r0
 251 01e6 43EB0103 	 adc r3,r3,r1
 252 01ea C7E90A23 	 strd r2,[r7,#40]
 138:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 139:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* Decrement the loop counter */
 140:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     blkCnt--;
 253              	 .loc 1 140 0
 254 01ee 7B6B     	 ldr r3,[r7,#52]
 255 01f0 013B     	 subs r3,r3,#1
 256 01f2 7B63     	 str r3,[r7,#52]
 257              	.L6:
 130:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   {
 258              	 .loc 1 130 0
 259 01f4 7B6B     	 ldr r3,[r7,#52]
 260 01f6 002B     	 cmp r3,#0
 261 01f8 D0D1     	 bne .L7
 141:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   }
 142:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 143:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* Compute Mean of squares of the input samples    
 144:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****    * and then store the result in a temporary variable, meanOfSquares. */
 145:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   meanOfSquares = sumOfSquares / (q63_t)(blockSize - 1);
 262              	 .loc 1 145 0
 263 01fa BB68     	 ldr r3,[r7,#8]
 264 01fc 013B     	 subs r3,r3,#1
 265 01fe 1A46     	 mov r2,r3
 266 0200 4FF00003 	 mov r3,#0
 267 0204 D7E90A01 	 ldrd r0,[r7,#40]
 268 0208 FFF7FEFF 	 bl __aeabi_ldivmod
 269 020c 0246     	 mov r2,r0
 270 020e 0B46     	 mov r3,r1
 271 0210 C7E90623 	 strd r2,[r7,#24]
 146:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 147:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** #else
 148:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* Run the below code for Cortex-M0 */
 150:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 151:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* Loop over blockSize number of values */
 152:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   blkCnt = blockSize;
 153:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 154:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   while(blkCnt > 0u)
 155:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   {
 156:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* C = (A[0] * A[0] + A[1] * A[1] + ... + A[blockSize-1] * A[blockSize-1]) */
 157:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* Compute Sum of squares of the input samples     
 158:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****      * and then store the result in a temporary variable, sumOfSquares. */
 159:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     in = *pSrc++ >> 8;
 160:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sumOfSquares += ((q63_t) (in) * (in));
 161:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 162:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* C = (A[0] + A[1] + A[2] + ... + A[blockSize-1]) */
 163:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* Compute sum of all input values and then store the result in a temporary variable, sum. */
 164:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     sum += in;
 165:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 166:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     /* Decrement the loop counter */
 167:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****     blkCnt--;
 168:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   }
 169:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* Compute Mean of squares of the input samples     
 171:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****    * and then store the result in a temporary variable, meanOfSquares. */
 172:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   meanOfSquares = sumOfSquares / (q63_t)(blockSize - 1);
 173:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 174:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 175:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 176:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* Compute square of mean */
 177:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   squareOfMean = sum * sum / (q63_t)(blockSize * (blockSize - 1u));
 272              	 .loc 1 177 0
 273 0214 FB6B     	 ldr r3,[r7,#60]
 274 0216 BA6B     	 ldr r2,[r7,#56]
 275 0218 02FB03F2 	 mul r2,r2,r3
 276 021c FB6B     	 ldr r3,[r7,#60]
 277 021e B96B     	 ldr r1,[r7,#56]
 278 0220 01FB03F3 	 mul r3,r1,r3
 279 0224 D118     	 adds r1,r2,r3
 280 0226 BA6B     	 ldr r2,[r7,#56]
 281 0228 BB6B     	 ldr r3,[r7,#56]
 282 022a A2FB0323 	 umull r2,r3,r2,r3
 283 022e 1944     	 add r1,r1,r3
 284 0230 0B46     	 mov r3,r1
 285 0232 B968     	 ldr r1,[r7,#8]
 286 0234 0139     	 subs r1,r1,#1
 287 0236 B868     	 ldr r0,[r7,#8]
 288 0238 00FB01F1 	 mul r1,r0,r1
 289 023c 8846     	 mov r8,r1
 290 023e 4FF00009 	 mov r9,#0
 291 0242 1046     	 mov r0,r2
 292 0244 1946     	 mov r1,r3
 293 0246 4246     	 mov r2,r8
 294 0248 4B46     	 mov r3,r9
 295 024a FFF7FEFF 	 bl __aeabi_ldivmod
 296 024e 0246     	 mov r2,r0
 297 0250 0B46     	 mov r3,r1
 298 0252 C7E90423 	 strd r2,[r7,#16]
 178:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 179:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   /* Compute standard deviation and then store the result to the destination */
 180:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c ****   arm_sqrt_q31((meanOfSquares - squareOfMean) >> 15, pResult);
 299              	 .loc 1 180 0
 300 0256 D7E90601 	 ldrd r0,[r7,#24]
 301 025a D7E90423 	 ldrd r2,[r7,#16]
 302 025e 821A     	 subs r2,r0,r2
 303 0260 61EB0303 	 sbc r3,r1,r3
 304 0264 D40B     	 lsrs r4,r2,#15
 305 0266 44EA4344 	 orr r4,r4,r3,lsl#17
 306 026a DD13     	 asrs r5,r3,#15
 307 026c 2346     	 mov r3,r4
 308 026e 1846     	 mov r0,r3
 309 0270 7968     	 ldr r1,[r7,#4]
 310 0272 FFF7FEFF 	 bl arm_sqrt_q31
 311              	.L1:
 181:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** 
 182:../Dave/Generated/CMSIS_DSP/StatisticsFunctions/arm_std_q31.c **** }
 312              	 .loc 1 182 0
 313 0276 4437     	 adds r7,r7,#68
 314              	.LCFI3:
 315              	 .cfi_def_cfa_offset 28
 316 0278 BD46     	 mov sp,r7
 317              	.LCFI4:
 318              	 .cfi_def_cfa_register 13
 319              	 
 320 027a BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 321              	 .cfi_endproc
 322              	.LFE139:
 324 027e 00BF     	 .text
 325              	.Letext0:
 326              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 327              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 328              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_std_q31.c
    {standard input}:20     .text.arm_std_q31:00000000 $t
    {standard input}:25     .text.arm_std_q31:00000000 arm_std_q31
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_ldivmod
arm_sqrt_q31
