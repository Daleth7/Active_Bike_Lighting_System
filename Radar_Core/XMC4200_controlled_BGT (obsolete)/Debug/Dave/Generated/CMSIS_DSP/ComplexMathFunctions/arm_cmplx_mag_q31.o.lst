   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cmplx_mag_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_cmplx_mag_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_cmplx_mag_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_cmplx_mag_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * Title:		arm_cmplx_mag_q31.c    
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * Description:	Q31 complex magnitude    
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * POSSIBILITY OF SUCH DAMAGE.  
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** * ---------------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /**        
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @ingroup groupCmplxMath        
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /**        
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @addtogroup cmplx_mag        
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @{        
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /**        
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @brief  Q31 complex magnitude        
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @param  *pSrc points to the complex input vector        
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @param  *pDst points to the real output vector        
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @param  numSamples number of complex samples in the input vector        
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @return none.        
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *        
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * <b>Scaling and Overflow Behavior:</b>        
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * \par        
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * The function implements 1.31 by 1.31 multiplications and finally output is converted into 2.30 f
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Input down scaling is not required.        
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  */
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** void arm_cmplx_mag_q31(
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t * pSrc,
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t * pDst,
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   uint32_t numSamples)
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** {
  27              	 .loc 1 69 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 2DE9B04F 	 push {r4,r5,r7,r8,r9,r10,fp,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 32
  34              	 .cfi_offset 4,-32
  35              	 .cfi_offset 5,-28
  36              	 .cfi_offset 7,-24
  37              	 .cfi_offset 8,-20
  38              	 .cfi_offset 9,-16
  39              	 .cfi_offset 10,-12
  40              	 .cfi_offset 11,-8
  41              	 .cfi_offset 14,-4
  42 0004 AAB0     	 sub sp,sp,#168
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 200
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 F864     	 str r0,[r7,#76]
  49 000a B964     	 str r1,[r7,#72]
  50 000c 7A64     	 str r2,[r7,#68]
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t real, imag;                              /* Temporary variables to hold input values */
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t acc0, acc1;                              /* Accumulators */
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t real1, real2, imag1, imag2;              /* Temporary variables to hold input values */
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t out1, out2, out3, out4;                  /* Accumulators */
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q63_t mul1, mul2, mul3, mul4;                  /* Temporary variables */
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /*loop Unrolling */
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   blkCnt = numSamples >> 2u;
  51              	 .loc 1 83 0
  52 000e 7B6C     	 ldr r3,[r7,#68]
  53 0010 9B08     	 lsrs r3,r3,#2
  54 0012 C7F8A430 	 str r3,[r7,#164]
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.        
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   while(blkCnt > 0u)
  55              	 .loc 1 87 0
  56 0016 48E1     	 b .L2
  57              	.L3:
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* read complex input from source buffer */
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real1 = pSrc[0];
  58              	 .loc 1 90 0
  59 0018 FB6C     	 ldr r3,[r7,#76]
  60 001a 1B68     	 ldr r3,[r3]
  61 001c C7F8A030 	 str r3,[r7,#160]
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag1 = pSrc[1];
  62              	 .loc 1 91 0
  63 0020 FB6C     	 ldr r3,[r7,#76]
  64 0022 5B68     	 ldr r3,[r3,#4]
  65 0024 C7F89C30 	 str r3,[r7,#156]
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real2 = pSrc[2];
  66              	 .loc 1 92 0
  67 0028 FB6C     	 ldr r3,[r7,#76]
  68 002a 9B68     	 ldr r3,[r3,#8]
  69 002c C7F89830 	 str r3,[r7,#152]
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag2 = pSrc[3];
  70              	 .loc 1 93 0
  71 0030 FB6C     	 ldr r3,[r7,#76]
  72 0032 DB68     	 ldr r3,[r3,#12]
  73 0034 C7F89430 	 str r3,[r7,#148]
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate power of input values */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul1 = (q63_t) real1 *real1;
  74              	 .loc 1 96 0
  75 0038 D7F8A030 	 ldr r3,[r7,#160]
  76 003c 1846     	 mov r0,r3
  77 003e 4FEAE071 	 asr r1,r0,#31
  78 0042 D7F8A030 	 ldr r3,[r7,#160]
  79 0046 1A46     	 mov r2,r3
  80 0048 4FEAE273 	 asr r3,r2,#31
  81 004c 02FB01F5 	 mul r5,r2,r1
  82 0050 00FB03F4 	 mul r4,r0,r3
  83 0054 2C44     	 add r4,r4,r5
  84 0056 A0FB0223 	 umull r2,r3,r0,r2
  85 005a E118     	 adds r1,r4,r3
  86 005c 0B46     	 mov r3,r1
  87 005e C7E92223 	 strd r2,[r7,#136]
  88 0062 C7E92223 	 strd r2,[r7,#136]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul2 = (q63_t) imag1 *imag1;
  89              	 .loc 1 97 0
  90 0066 D7F89C30 	 ldr r3,[r7,#156]
  91 006a 1846     	 mov r0,r3
  92 006c 4FEAE071 	 asr r1,r0,#31
  93 0070 D7F89C30 	 ldr r3,[r7,#156]
  94 0074 1A46     	 mov r2,r3
  95 0076 4FEAE273 	 asr r3,r2,#31
  96 007a 02FB01F5 	 mul r5,r2,r1
  97 007e 00FB03F4 	 mul r4,r0,r3
  98 0082 2C44     	 add r4,r4,r5
  99 0084 A0FB0223 	 umull r2,r3,r0,r2
 100 0088 E118     	 adds r1,r4,r3
 101 008a 0B46     	 mov r3,r1
 102 008c C7E92023 	 strd r2,[r7,#128]
 103 0090 C7E92023 	 strd r2,[r7,#128]
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul3 = (q63_t) real2 *real2;
 104              	 .loc 1 98 0
 105 0094 D7F89830 	 ldr r3,[r7,#152]
 106 0098 1846     	 mov r0,r3
 107 009a 4FEAE071 	 asr r1,r0,#31
 108 009e D7F89830 	 ldr r3,[r7,#152]
 109 00a2 1A46     	 mov r2,r3
 110 00a4 4FEAE273 	 asr r3,r2,#31
 111 00a8 02FB01F5 	 mul r5,r2,r1
 112 00ac 00FB03F4 	 mul r4,r0,r3
 113 00b0 2C44     	 add r4,r4,r5
 114 00b2 A0FB0223 	 umull r2,r3,r0,r2
 115 00b6 E118     	 adds r1,r4,r3
 116 00b8 0B46     	 mov r3,r1
 117 00ba C7E91E23 	 strd r2,[r7,#120]
 118 00be C7E91E23 	 strd r2,[r7,#120]
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul4 = (q63_t) imag2 *imag2;
 119              	 .loc 1 99 0
 120 00c2 D7F89430 	 ldr r3,[r7,#148]
 121 00c6 1846     	 mov r0,r3
 122 00c8 4FEAE071 	 asr r1,r0,#31
 123 00cc D7F89430 	 ldr r3,[r7,#148]
 124 00d0 1A46     	 mov r2,r3
 125 00d2 4FEAE273 	 asr r3,r2,#31
 126 00d6 02FB01F5 	 mul r5,r2,r1
 127 00da 00FB03F4 	 mul r4,r0,r3
 128 00de 2C44     	 add r4,r4,r5
 129 00e0 A0FB0223 	 umull r2,r3,r0,r2
 130 00e4 E118     	 adds r1,r4,r3
 131 00e6 0B46     	 mov r3,r1
 132 00e8 C7E91C23 	 strd r2,[r7,#112]
 133 00ec C7E91C23 	 strd r2,[r7,#112]
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* get the result to 3.29 format */
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = (q31_t) (mul1 >> 33);
 134              	 .loc 1 102 0
 135 00f0 D7E92223 	 ldrd r2,[r7,#136]
 136 00f4 5910     	 asrs r1,r3,#1
 137 00f6 B963     	 str r1,[r7,#56]
 138 00f8 DB17     	 asrs r3,r3,#31
 139 00fa FB63     	 str r3,[r7,#60]
 140 00fc BB6B     	 ldr r3,[r7,#56]
 141 00fe FB66     	 str r3,[r7,#108]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out2 = (q31_t) (mul2 >> 33);
 142              	 .loc 1 103 0
 143 0100 D7E92023 	 ldrd r2,[r7,#128]
 144 0104 5910     	 asrs r1,r3,#1
 145 0106 3963     	 str r1,[r7,#48]
 146 0108 DB17     	 asrs r3,r3,#31
 147 010a 7B63     	 str r3,[r7,#52]
 148 010c 3B6B     	 ldr r3,[r7,#48]
 149 010e BB66     	 str r3,[r7,#104]
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = (q31_t) (mul3 >> 33);
 150              	 .loc 1 104 0
 151 0110 D7E91E23 	 ldrd r2,[r7,#120]
 152 0114 5910     	 asrs r1,r3,#1
 153 0116 B962     	 str r1,[r7,#40]
 154 0118 DB17     	 asrs r3,r3,#31
 155 011a FB62     	 str r3,[r7,#44]
 156 011c BB6A     	 ldr r3,[r7,#40]
 157 011e 7B66     	 str r3,[r7,#100]
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out4 = (q31_t) (mul4 >> 33);
 158              	 .loc 1 105 0
 159 0120 D7E91C23 	 ldrd r2,[r7,#112]
 160 0124 5910     	 asrs r1,r3,#1
 161 0126 3962     	 str r1,[r7,#32]
 162 0128 DB17     	 asrs r3,r3,#31
 163 012a 7B62     	 str r3,[r7,#36]
 164 012c 3B6A     	 ldr r3,[r7,#32]
 165 012e 3B66     	 str r3,[r7,#96]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* add real and imaginary accumulators */
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = out1 + out2;
 166              	 .loc 1 108 0
 167 0130 FA6E     	 ldr r2,[r7,#108]
 168 0132 BB6E     	 ldr r3,[r7,#104]
 169 0134 1344     	 add r3,r3,r2
 170 0136 FB66     	 str r3,[r7,#108]
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = out3 + out4;
 171              	 .loc 1 109 0
 172 0138 7A6E     	 ldr r2,[r7,#100]
 173 013a 3B6E     	 ldr r3,[r7,#96]
 174 013c 1344     	 add r3,r3,r2
 175 013e 7B66     	 str r3,[r7,#100]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* read complex input from source buffer */
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real1 = pSrc[4];
 176              	 .loc 1 112 0
 177 0140 FB6C     	 ldr r3,[r7,#76]
 178 0142 1B69     	 ldr r3,[r3,#16]
 179 0144 C7F8A030 	 str r3,[r7,#160]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag1 = pSrc[5];
 180              	 .loc 1 113 0
 181 0148 FB6C     	 ldr r3,[r7,#76]
 182 014a 5B69     	 ldr r3,[r3,#20]
 183 014c C7F89C30 	 str r3,[r7,#156]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real2 = pSrc[6];
 184              	 .loc 1 114 0
 185 0150 FB6C     	 ldr r3,[r7,#76]
 186 0152 9B69     	 ldr r3,[r3,#24]
 187 0154 C7F89830 	 str r3,[r7,#152]
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag2 = pSrc[7];
 188              	 .loc 1 115 0
 189 0158 FB6C     	 ldr r3,[r7,#76]
 190 015a DB69     	 ldr r3,[r3,#28]
 191 015c C7F89430 	 str r3,[r7,#148]
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out1, &pDst[0]);
 192              	 .loc 1 118 0
 193 0160 F86E     	 ldr r0,[r7,#108]
 194 0162 B96C     	 ldr r1,[r7,#72]
 195 0164 FFF7FEFF 	 bl arm_sqrt_q31
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate power of input values */
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul1 = (q63_t) real1 *real1;
 196              	 .loc 1 121 0
 197 0168 D7F8A030 	 ldr r3,[r7,#160]
 198 016c 1846     	 mov r0,r3
 199 016e 4FEAE071 	 asr r1,r0,#31
 200 0172 D7F8A030 	 ldr r3,[r7,#160]
 201 0176 1A46     	 mov r2,r3
 202 0178 4FEAE273 	 asr r3,r2,#31
 203 017c 02FB01F5 	 mul r5,r2,r1
 204 0180 00FB03F4 	 mul r4,r0,r3
 205 0184 2C44     	 add r4,r4,r5
 206 0186 A0FB0223 	 umull r2,r3,r0,r2
 207 018a E118     	 adds r1,r4,r3
 208 018c 0B46     	 mov r3,r1
 209 018e C7E92223 	 strd r2,[r7,#136]
 210 0192 C7E92223 	 strd r2,[r7,#136]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out3, &pDst[1]);
 211              	 .loc 1 124 0
 212 0196 BB6C     	 ldr r3,[r7,#72]
 213 0198 0433     	 adds r3,r3,#4
 214 019a 786E     	 ldr r0,[r7,#100]
 215 019c 1946     	 mov r1,r3
 216 019e FFF7FEFF 	 bl arm_sqrt_q31
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate power of input values */
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul2 = (q63_t) imag1 *imag1;
 217              	 .loc 1 127 0
 218 01a2 D7F89C30 	 ldr r3,[r7,#156]
 219 01a6 1846     	 mov r0,r3
 220 01a8 4FEAE071 	 asr r1,r0,#31
 221 01ac D7F89C30 	 ldr r3,[r7,#156]
 222 01b0 1A46     	 mov r2,r3
 223 01b2 4FEAE273 	 asr r3,r2,#31
 224 01b6 02FB01F5 	 mul r5,r2,r1
 225 01ba 00FB03F4 	 mul r4,r0,r3
 226 01be 2C44     	 add r4,r4,r5
 227 01c0 A0FB0223 	 umull r2,r3,r0,r2
 228 01c4 E118     	 adds r1,r4,r3
 229 01c6 0B46     	 mov r3,r1
 230 01c8 C7E92023 	 strd r2,[r7,#128]
 231 01cc C7E92023 	 strd r2,[r7,#128]
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul3 = (q63_t) real2 *real2;
 232              	 .loc 1 128 0
 233 01d0 D7F89830 	 ldr r3,[r7,#152]
 234 01d4 1846     	 mov r0,r3
 235 01d6 4FEAE071 	 asr r1,r0,#31
 236 01da D7F89830 	 ldr r3,[r7,#152]
 237 01de 1A46     	 mov r2,r3
 238 01e0 4FEAE273 	 asr r3,r2,#31
 239 01e4 02FB01F5 	 mul r5,r2,r1
 240 01e8 00FB03F4 	 mul r4,r0,r3
 241 01ec 2C44     	 add r4,r4,r5
 242 01ee A0FB0223 	 umull r2,r3,r0,r2
 243 01f2 E118     	 adds r1,r4,r3
 244 01f4 0B46     	 mov r3,r1
 245 01f6 C7E91E23 	 strd r2,[r7,#120]
 246 01fa C7E91E23 	 strd r2,[r7,#120]
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul4 = (q63_t) imag2 *imag2;
 247              	 .loc 1 129 0
 248 01fe D7F89430 	 ldr r3,[r7,#148]
 249 0202 1846     	 mov r0,r3
 250 0204 4FEAE071 	 asr r1,r0,#31
 251 0208 D7F89430 	 ldr r3,[r7,#148]
 252 020c 1A46     	 mov r2,r3
 253 020e 4FEAE273 	 asr r3,r2,#31
 254 0212 02FB01F5 	 mul r5,r2,r1
 255 0216 00FB03F4 	 mul r4,r0,r3
 256 021a 2C44     	 add r4,r4,r5
 257 021c A0FB0223 	 umull r2,r3,r0,r2
 258 0220 E118     	 adds r1,r4,r3
 259 0222 0B46     	 mov r3,r1
 260 0224 C7E91C23 	 strd r2,[r7,#112]
 261 0228 C7E91C23 	 strd r2,[r7,#112]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* get the result to 3.29 format */
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = (q31_t) (mul1 >> 33);
 262              	 .loc 1 132 0
 263 022c D7E92223 	 ldrd r2,[r7,#136]
 264 0230 5910     	 asrs r1,r3,#1
 265 0232 B961     	 str r1,[r7,#24]
 266 0234 DB17     	 asrs r3,r3,#31
 267 0236 FB61     	 str r3,[r7,#28]
 268 0238 BB69     	 ldr r3,[r7,#24]
 269 023a FB66     	 str r3,[r7,#108]
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out2 = (q31_t) (mul2 >> 33);
 270              	 .loc 1 133 0
 271 023c D7E92023 	 ldrd r2,[r7,#128]
 272 0240 5910     	 asrs r1,r3,#1
 273 0242 3961     	 str r1,[r7,#16]
 274 0244 DB17     	 asrs r3,r3,#31
 275 0246 7B61     	 str r3,[r7,#20]
 276 0248 3B69     	 ldr r3,[r7,#16]
 277 024a BB66     	 str r3,[r7,#104]
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = (q31_t) (mul3 >> 33);
 278              	 .loc 1 134 0
 279 024c D7E91E23 	 ldrd r2,[r7,#120]
 280 0250 5910     	 asrs r1,r3,#1
 281 0252 B960     	 str r1,[r7,#8]
 282 0254 DB17     	 asrs r3,r3,#31
 283 0256 FB60     	 str r3,[r7,#12]
 284 0258 BB68     	 ldr r3,[r7,#8]
 285 025a 7B66     	 str r3,[r7,#100]
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out4 = (q31_t) (mul4 >> 33);
 286              	 .loc 1 135 0
 287 025c D7E91C23 	 ldrd r2,[r7,#112]
 288 0260 5910     	 asrs r1,r3,#1
 289 0262 3960     	 str r1,[r7]
 290 0264 DB17     	 asrs r3,r3,#31
 291 0266 7B60     	 str r3,[r7,#4]
 292 0268 3B68     	 ldr r3,[r7]
 293 026a 3B66     	 str r3,[r7,#96]
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* add real and imaginary accumulators */
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = out1 + out2;
 294              	 .loc 1 138 0
 295 026c FA6E     	 ldr r2,[r7,#108]
 296 026e BB6E     	 ldr r3,[r7,#104]
 297 0270 1344     	 add r3,r3,r2
 298 0272 FB66     	 str r3,[r7,#108]
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = out3 + out4;
 299              	 .loc 1 139 0
 300 0274 7A6E     	 ldr r2,[r7,#100]
 301 0276 3B6E     	 ldr r3,[r7,#96]
 302 0278 1344     	 add r3,r3,r2
 303 027a 7B66     	 str r3,[r7,#100]
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out1, &pDst[2]);
 304              	 .loc 1 142 0
 305 027c BB6C     	 ldr r3,[r7,#72]
 306 027e 0833     	 adds r3,r3,#8
 307 0280 F86E     	 ldr r0,[r7,#108]
 308 0282 1946     	 mov r1,r3
 309 0284 FFF7FEFF 	 bl arm_sqrt_q31
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* increment destination by 8 to process next samples */
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     pSrc += 8u;
 310              	 .loc 1 145 0
 311 0288 FB6C     	 ldr r3,[r7,#76]
 312 028a 2033     	 adds r3,r3,#32
 313 028c FB64     	 str r3,[r7,#76]
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out3, &pDst[3]);
 314              	 .loc 1 148 0
 315 028e BB6C     	 ldr r3,[r7,#72]
 316 0290 0C33     	 adds r3,r3,#12
 317 0292 786E     	 ldr r0,[r7,#100]
 318 0294 1946     	 mov r1,r3
 319 0296 FFF7FEFF 	 bl arm_sqrt_q31
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* increment destination by 4 to process next samples */
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     pDst += 4u;
 320              	 .loc 1 151 0
 321 029a BB6C     	 ldr r3,[r7,#72]
 322 029c 1033     	 adds r3,r3,#16
 323 029e BB64     	 str r3,[r7,#72]
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* Decrement the loop counter */
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     blkCnt--;
 324              	 .loc 1 154 0
 325 02a0 D7F8A430 	 ldr r3,[r7,#164]
 326 02a4 013B     	 subs r3,r3,#1
 327 02a6 C7F8A430 	 str r3,[r7,#164]
 328              	.L2:
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
 329              	 .loc 1 87 0
 330 02aa D7F8A430 	 ldr r3,[r7,#164]
 331 02ae 002B     	 cmp r3,#0
 332 02b0 7FF4B2AE 	 bne .L3
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   }
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.        
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****    ** No loop unrolling is used. */
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   blkCnt = numSamples % 0x4u;
 333              	 .loc 1 159 0
 334 02b4 7B6C     	 ldr r3,[r7,#68]
 335 02b6 03F00303 	 and r3,r3,#3
 336 02ba C7F8A430 	 str r3,[r7,#164]
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #else
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* Run the below code for Cortex-M0 */
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   blkCnt = numSamples;
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   while(blkCnt > 0u)
 337              	 .loc 1 168 0
 338 02be 46E0     	 b .L4
 339              	.L5:
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* C[0] = sqrt(A[0] * A[0] + A[1] * A[1]) */
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real = *pSrc++;
 340              	 .loc 1 171 0
 341 02c0 FB6C     	 ldr r3,[r7,#76]
 342 02c2 1A1D     	 adds r2,r3,#4
 343 02c4 FA64     	 str r2,[r7,#76]
 344 02c6 1B68     	 ldr r3,[r3]
 345 02c8 FB65     	 str r3,[r7,#92]
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag = *pSrc++;
 346              	 .loc 1 172 0
 347 02ca FB6C     	 ldr r3,[r7,#76]
 348 02cc 1A1D     	 adds r2,r3,#4
 349 02ce FA64     	 str r2,[r7,#76]
 350 02d0 1B68     	 ldr r3,[r3]
 351 02d2 BB65     	 str r3,[r7,#88]
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 352              	 .loc 1 173 0
 353 02d4 FB6D     	 ldr r3,[r7,#92]
 354 02d6 1846     	 mov r0,r3
 355 02d8 4FEAE071 	 asr r1,r0,#31
 356 02dc FB6D     	 ldr r3,[r7,#92]
 357 02de 1A46     	 mov r2,r3
 358 02e0 4FEAE273 	 asr r3,r2,#31
 359 02e4 02FB01F5 	 mul r5,r2,r1
 360 02e8 00FB03F4 	 mul r4,r0,r3
 361 02ec 2C44     	 add r4,r4,r5
 362 02ee A0FB0223 	 umull r2,r3,r0,r2
 363 02f2 E118     	 adds r1,r4,r3
 364 02f4 0B46     	 mov r3,r1
 365 02f6 4FEA6308 	 asr r8,r3,#1
 366 02fa 4FEAE379 	 asr r9,r3,#31
 367 02fe 4346     	 mov r3,r8
 368 0300 7B65     	 str r3,[r7,#84]
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 369              	 .loc 1 174 0
 370 0302 BB6D     	 ldr r3,[r7,#88]
 371 0304 1846     	 mov r0,r3
 372 0306 4FEAE071 	 asr r1,r0,#31
 373 030a BB6D     	 ldr r3,[r7,#88]
 374 030c 1A46     	 mov r2,r3
 375 030e 4FEAE273 	 asr r3,r2,#31
 376 0312 02FB01F5 	 mul r5,r2,r1
 377 0316 00FB03F4 	 mul r4,r0,r3
 378 031a 2C44     	 add r4,r4,r5
 379 031c A0FB0223 	 umull r2,r3,r0,r2
 380 0320 E118     	 adds r1,r4,r3
 381 0322 0B46     	 mov r3,r1
 382 0324 4FEA630A 	 asr r10,r3,#1
 383 0328 4FEAE37B 	 asr fp,r3,#31
 384 032c 5346     	 mov r3,r10
 385 032e 3B65     	 str r3,[r7,#80]
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* store the result in 2.30 format in the destination buffer. */
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(acc0 + acc1, pDst++);
 386              	 .loc 1 176 0
 387 0330 7A6D     	 ldr r2,[r7,#84]
 388 0332 3B6D     	 ldr r3,[r7,#80]
 389 0334 D118     	 adds r1,r2,r3
 390 0336 BB6C     	 ldr r3,[r7,#72]
 391 0338 1A1D     	 adds r2,r3,#4
 392 033a BA64     	 str r2,[r7,#72]
 393 033c 0846     	 mov r0,r1
 394 033e 1946     	 mov r1,r3
 395 0340 FFF7FEFF 	 bl arm_sqrt_q31
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* Decrement the loop counter */
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     blkCnt--;
 396              	 .loc 1 179 0
 397 0344 D7F8A430 	 ldr r3,[r7,#164]
 398 0348 013B     	 subs r3,r3,#1
 399 034a C7F8A430 	 str r3,[r7,#164]
 400              	.L4:
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
 401              	 .loc 1 168 0
 402 034e D7F8A430 	 ldr r3,[r7,#164]
 403 0352 002B     	 cmp r3,#0
 404 0354 B4D1     	 bne .L5
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   }
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mag_q31.c **** }
 405              	 .loc 1 181 0
 406 0356 A837     	 adds r7,r7,#168
 407              	.LCFI3:
 408              	 .cfi_def_cfa_offset 32
 409 0358 BD46     	 mov sp,r7
 410              	.LCFI4:
 411              	 .cfi_def_cfa_register 13
 412              	 
 413 035a BDE8B08F 	 pop {r4,r5,r7,r8,r9,r10,fp,pc}
 414              	 .cfi_endproc
 415              	.LFE139:
 417 035e 00BF     	 .text
 418              	.Letext0:
 419              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 420              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 421              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mag_q31.c
    {standard input}:19     .text.arm_cmplx_mag_q31:00000000 $t
    {standard input}:24     .text.arm_cmplx_mag_q31:00000000 arm_cmplx_mag_q31
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
arm_sqrt_q31
