   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cmplx_mult_cmplx_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_cmplx_mult_cmplx_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_cmplx_mult_cmplx_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_cmplx_mult_cmplx_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * Title:	    arm_cmplx_mult_cmplx_q31.c    
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * Description:	Q31 complex-by-complex multiplication    
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * POSSIBILITY OF SUCH DAMAGE. 
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @ingroup groupCmplxMath    
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @addtogroup CmplxByCmplxMult    
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** /**    
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @brief  Q31 complex-by-complex multiplication    
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[in]  *pSrcA points to the first input vector    
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[in]  *pSrcB points to the second input vector    
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[out]  *pDst  points to the output vector    
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @param[in]  numSamples number of complex samples in each vector    
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * @return none.    
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * <b>Scaling and Overflow Behavior:</b>    
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * \par    
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * The function implements 1.31 by 1.31 multiplications and finally output is converted into 3.29 f
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  * Input down scaling is not required.    
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****  */
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** void arm_cmplx_mult_cmplx_q31(
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t * pSrcA,
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t * pSrcB,
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t * pDst,
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   uint32_t numSamples)
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** {
  27              	 .loc 1 72 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 B5B0     	 sub sp,sp,#212
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 240
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 C7F89C00 	 str r0,[r7,#156]
  49 000c C7F89810 	 str r1,[r7,#152]
  50 0010 C7F89420 	 str r2,[r7,#148]
  51 0014 C7F89030 	 str r3,[r7,#144]
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t a, b, c, d;                              /* Temporary variables to store real and imaginary
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   uint32_t blkCnt;                               /* loop counters */
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t mul1, mul2, mul3, mul4;
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   q31_t out1, out2;
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* loop Unrolling */
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples >> 2u;
  52              	 .loc 1 83 0
  53 0018 D7F89030 	 ldr r3,[r7,#144]
  54 001c 9B08     	 lsrs r3,r3,#2
  55 001e C7F8CC30 	 str r3,[r7,#204]
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while(blkCnt > 0u)
  56              	 .loc 1 87 0
  57 0022 F2E2     	 b .L2
  58              	.L3:
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
  59              	 .loc 1 91 0
  60 0024 D7F89C20 	 ldr r2,[r7,#156]
  61 0028 131D     	 adds r3,r2,#4
  62 002a C7F89C30 	 str r3,[r7,#156]
  63 002e 1368     	 ldr r3,[r2]
  64 0030 C7F8C830 	 str r3,[r7,#200]
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
  65              	 .loc 1 92 0
  66 0034 D7F89C20 	 ldr r2,[r7,#156]
  67 0038 131D     	 adds r3,r2,#4
  68 003a C7F89C30 	 str r3,[r7,#156]
  69 003e 1368     	 ldr r3,[r2]
  70 0040 C7F8C430 	 str r3,[r7,#196]
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
  71              	 .loc 1 93 0
  72 0044 D7F89820 	 ldr r2,[r7,#152]
  73 0048 131D     	 adds r3,r2,#4
  74 004a C7F89830 	 str r3,[r7,#152]
  75 004e 1368     	 ldr r3,[r2]
  76 0050 C7F8C030 	 str r3,[r7,#192]
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
  77              	 .loc 1 94 0
  78 0054 D7F89820 	 ldr r2,[r7,#152]
  79 0058 131D     	 adds r3,r2,#4
  80 005a C7F89830 	 str r3,[r7,#152]
  81 005e 1368     	 ldr r3,[r2]
  82 0060 C7F8BC30 	 str r3,[r7,#188]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
  83              	 .loc 1 96 0
  84 0064 D7F8C830 	 ldr r3,[r7,#200]
  85 0068 1846     	 mov r0,r3
  86 006a 4FEAE071 	 asr r1,r0,#31
  87 006e D7F8C030 	 ldr r3,[r7,#192]
  88 0072 1A46     	 mov r2,r3
  89 0074 4FEAE273 	 asr r3,r2,#31
  90 0078 02FB01F5 	 mul r5,r2,r1
  91 007c 00FB03F4 	 mul r4,r0,r3
  92 0080 2C44     	 add r4,r4,r5
  93 0082 A0FB0223 	 umull r2,r3,r0,r2
  94 0086 E118     	 adds r1,r4,r3
  95 0088 0B46     	 mov r3,r1
  96 008a 1900     	 movs r1,r3
  97 008c C7F88810 	 str r1,[r7,#136]
  98 0090 DB17     	 asrs r3,r3,#31
  99 0092 C7F88C30 	 str r3,[r7,#140]
 100 0096 D7F88830 	 ldr r3,[r7,#136]
 101 009a C7F8B830 	 str r3,[r7,#184]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 102              	 .loc 1 97 0
 103 009e D7F8C430 	 ldr r3,[r7,#196]
 104 00a2 1846     	 mov r0,r3
 105 00a4 4FEAE071 	 asr r1,r0,#31
 106 00a8 D7F8BC30 	 ldr r3,[r7,#188]
 107 00ac 1A46     	 mov r2,r3
 108 00ae 4FEAE273 	 asr r3,r2,#31
 109 00b2 02FB01F5 	 mul r5,r2,r1
 110 00b6 00FB03F4 	 mul r4,r0,r3
 111 00ba 2C44     	 add r4,r4,r5
 112 00bc A0FB0223 	 umull r2,r3,r0,r2
 113 00c0 E118     	 adds r1,r4,r3
 114 00c2 0B46     	 mov r3,r1
 115 00c4 1900     	 movs r1,r3
 116 00c6 C7F88010 	 str r1,[r7,#128]
 117 00ca DB17     	 asrs r3,r3,#31
 118 00cc C7F88430 	 str r3,[r7,#132]
 119 00d0 D7F88030 	 ldr r3,[r7,#128]
 120 00d4 C7F8B430 	 str r3,[r7,#180]
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 121              	 .loc 1 98 0
 122 00d8 D7F8C830 	 ldr r3,[r7,#200]
 123 00dc 1846     	 mov r0,r3
 124 00de 4FEAE071 	 asr r1,r0,#31
 125 00e2 D7F8BC30 	 ldr r3,[r7,#188]
 126 00e6 1A46     	 mov r2,r3
 127 00e8 4FEAE273 	 asr r3,r2,#31
 128 00ec 02FB01F5 	 mul r5,r2,r1
 129 00f0 00FB03F4 	 mul r4,r0,r3
 130 00f4 2C44     	 add r4,r4,r5
 131 00f6 A0FB0223 	 umull r2,r3,r0,r2
 132 00fa E118     	 adds r1,r4,r3
 133 00fc 0B46     	 mov r3,r1
 134 00fe 1900     	 movs r1,r3
 135 0100 B967     	 str r1,[r7,#120]
 136 0102 DB17     	 asrs r3,r3,#31
 137 0104 FB67     	 str r3,[r7,#124]
 138 0106 BB6F     	 ldr r3,[r7,#120]
 139 0108 C7F8B030 	 str r3,[r7,#176]
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 140              	 .loc 1 99 0
 141 010c D7F8C430 	 ldr r3,[r7,#196]
 142 0110 1846     	 mov r0,r3
 143 0112 4FEAE071 	 asr r1,r0,#31
 144 0116 D7F8C030 	 ldr r3,[r7,#192]
 145 011a 1A46     	 mov r2,r3
 146 011c 4FEAE273 	 asr r3,r2,#31
 147 0120 02FB01F5 	 mul r5,r2,r1
 148 0124 00FB03F4 	 mul r4,r0,r3
 149 0128 2C44     	 add r4,r4,r5
 150 012a A0FB0223 	 umull r2,r3,r0,r2
 151 012e E118     	 adds r1,r4,r3
 152 0130 0B46     	 mov r3,r1
 153 0132 1900     	 movs r1,r3
 154 0134 3967     	 str r1,[r7,#112]
 155 0136 DB17     	 asrs r3,r3,#31
 156 0138 7B67     	 str r3,[r7,#116]
 157 013a 3B6F     	 ldr r3,[r7,#112]
 158 013c C7F8AC30 	 str r3,[r7,#172]
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 159              	 .loc 1 101 0
 160 0140 D7F8B830 	 ldr r3,[r7,#184]
 161 0144 5B10     	 asrs r3,r3,#1
 162 0146 C7F8B830 	 str r3,[r7,#184]
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 163              	 .loc 1 102 0
 164 014a D7F8B430 	 ldr r3,[r7,#180]
 165 014e 5B10     	 asrs r3,r3,#1
 166 0150 C7F8B430 	 str r3,[r7,#180]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 167              	 .loc 1 103 0
 168 0154 D7F8B030 	 ldr r3,[r7,#176]
 169 0158 5B10     	 asrs r3,r3,#1
 170 015a C7F8B030 	 str r3,[r7,#176]
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 171              	 .loc 1 104 0
 172 015e D7F8AC30 	 ldr r3,[r7,#172]
 173 0162 5B10     	 asrs r3,r3,#1
 174 0164 C7F8AC30 	 str r3,[r7,#172]
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 175              	 .loc 1 106 0
 176 0168 D7F8B820 	 ldr r2,[r7,#184]
 177 016c D7F8B430 	 ldr r3,[r7,#180]
 178 0170 D31A     	 subs r3,r2,r3
 179 0172 C7F8A830 	 str r3,[r7,#168]
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 180              	 .loc 1 107 0
 181 0176 D7F8B020 	 ldr r2,[r7,#176]
 182 017a D7F8AC30 	 ldr r3,[r7,#172]
 183 017e 1344     	 add r3,r3,r2
 184 0180 C7F8A430 	 str r3,[r7,#164]
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 185              	 .loc 1 110 0
 186 0184 D7F89420 	 ldr r2,[r7,#148]
 187 0188 131D     	 adds r3,r2,#4
 188 018a C7F89430 	 str r3,[r7,#148]
 189 018e D7F8A830 	 ldr r3,[r7,#168]
 190 0192 1360     	 str r3,[r2]
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 191              	 .loc 1 112 0
 192 0194 D7F89420 	 ldr r2,[r7,#148]
 193 0198 131D     	 adds r3,r2,#4
 194 019a C7F89430 	 str r3,[r7,#148]
 195 019e D7F8A430 	 ldr r3,[r7,#164]
 196 01a2 1360     	 str r3,[r2]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 197              	 .loc 1 114 0
 198 01a4 D7F89C20 	 ldr r2,[r7,#156]
 199 01a8 131D     	 adds r3,r2,#4
 200 01aa C7F89C30 	 str r3,[r7,#156]
 201 01ae 1368     	 ldr r3,[r2]
 202 01b0 C7F8C830 	 str r3,[r7,#200]
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 203              	 .loc 1 115 0
 204 01b4 D7F89C20 	 ldr r2,[r7,#156]
 205 01b8 131D     	 adds r3,r2,#4
 206 01ba C7F89C30 	 str r3,[r7,#156]
 207 01be 1368     	 ldr r3,[r2]
 208 01c0 C7F8C430 	 str r3,[r7,#196]
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 209              	 .loc 1 116 0
 210 01c4 D7F89820 	 ldr r2,[r7,#152]
 211 01c8 131D     	 adds r3,r2,#4
 212 01ca C7F89830 	 str r3,[r7,#152]
 213 01ce 1368     	 ldr r3,[r2]
 214 01d0 C7F8C030 	 str r3,[r7,#192]
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 215              	 .loc 1 117 0
 216 01d4 D7F89820 	 ldr r2,[r7,#152]
 217 01d8 131D     	 adds r3,r2,#4
 218 01da C7F89830 	 str r3,[r7,#152]
 219 01de 1368     	 ldr r3,[r2]
 220 01e0 C7F8BC30 	 str r3,[r7,#188]
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 221              	 .loc 1 119 0
 222 01e4 D7F8C830 	 ldr r3,[r7,#200]
 223 01e8 1846     	 mov r0,r3
 224 01ea 4FEAE071 	 asr r1,r0,#31
 225 01ee D7F8C030 	 ldr r3,[r7,#192]
 226 01f2 1A46     	 mov r2,r3
 227 01f4 4FEAE273 	 asr r3,r2,#31
 228 01f8 02FB01F5 	 mul r5,r2,r1
 229 01fc 00FB03F4 	 mul r4,r0,r3
 230 0200 2C44     	 add r4,r4,r5
 231 0202 A0FB0223 	 umull r2,r3,r0,r2
 232 0206 E118     	 adds r1,r4,r3
 233 0208 0B46     	 mov r3,r1
 234 020a 1900     	 movs r1,r3
 235 020c B966     	 str r1,[r7,#104]
 236 020e DB17     	 asrs r3,r3,#31
 237 0210 FB66     	 str r3,[r7,#108]
 238 0212 BB6E     	 ldr r3,[r7,#104]
 239 0214 C7F8B830 	 str r3,[r7,#184]
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 240              	 .loc 1 120 0
 241 0218 D7F8C430 	 ldr r3,[r7,#196]
 242 021c 1846     	 mov r0,r3
 243 021e 4FEAE071 	 asr r1,r0,#31
 244 0222 D7F8BC30 	 ldr r3,[r7,#188]
 245 0226 1A46     	 mov r2,r3
 246 0228 4FEAE273 	 asr r3,r2,#31
 247 022c 02FB01F5 	 mul r5,r2,r1
 248 0230 00FB03F4 	 mul r4,r0,r3
 249 0234 2C44     	 add r4,r4,r5
 250 0236 A0FB0223 	 umull r2,r3,r0,r2
 251 023a E118     	 adds r1,r4,r3
 252 023c 0B46     	 mov r3,r1
 253 023e 1900     	 movs r1,r3
 254 0240 3966     	 str r1,[r7,#96]
 255 0242 DB17     	 asrs r3,r3,#31
 256 0244 7B66     	 str r3,[r7,#100]
 257 0246 3B6E     	 ldr r3,[r7,#96]
 258 0248 C7F8B430 	 str r3,[r7,#180]
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 259              	 .loc 1 121 0
 260 024c D7F8C830 	 ldr r3,[r7,#200]
 261 0250 1846     	 mov r0,r3
 262 0252 4FEAE071 	 asr r1,r0,#31
 263 0256 D7F8BC30 	 ldr r3,[r7,#188]
 264 025a 1A46     	 mov r2,r3
 265 025c 4FEAE273 	 asr r3,r2,#31
 266 0260 02FB01F5 	 mul r5,r2,r1
 267 0264 00FB03F4 	 mul r4,r0,r3
 268 0268 2C44     	 add r4,r4,r5
 269 026a A0FB0223 	 umull r2,r3,r0,r2
 270 026e E118     	 adds r1,r4,r3
 271 0270 0B46     	 mov r3,r1
 272 0272 1900     	 movs r1,r3
 273 0274 B965     	 str r1,[r7,#88]
 274 0276 DB17     	 asrs r3,r3,#31
 275 0278 FB65     	 str r3,[r7,#92]
 276 027a BB6D     	 ldr r3,[r7,#88]
 277 027c C7F8B030 	 str r3,[r7,#176]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 278              	 .loc 1 122 0
 279 0280 D7F8C430 	 ldr r3,[r7,#196]
 280 0284 1846     	 mov r0,r3
 281 0286 4FEAE071 	 asr r1,r0,#31
 282 028a D7F8C030 	 ldr r3,[r7,#192]
 283 028e 1A46     	 mov r2,r3
 284 0290 4FEAE273 	 asr r3,r2,#31
 285 0294 02FB01F5 	 mul r5,r2,r1
 286 0298 00FB03F4 	 mul r4,r0,r3
 287 029c 2C44     	 add r4,r4,r5
 288 029e A0FB0223 	 umull r2,r3,r0,r2
 289 02a2 E118     	 adds r1,r4,r3
 290 02a4 0B46     	 mov r3,r1
 291 02a6 1900     	 movs r1,r3
 292 02a8 3965     	 str r1,[r7,#80]
 293 02aa DB17     	 asrs r3,r3,#31
 294 02ac 7B65     	 str r3,[r7,#84]
 295 02ae 3B6D     	 ldr r3,[r7,#80]
 296 02b0 C7F8AC30 	 str r3,[r7,#172]
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 297              	 .loc 1 124 0
 298 02b4 D7F8B830 	 ldr r3,[r7,#184]
 299 02b8 5B10     	 asrs r3,r3,#1
 300 02ba C7F8B830 	 str r3,[r7,#184]
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 301              	 .loc 1 125 0
 302 02be D7F8B430 	 ldr r3,[r7,#180]
 303 02c2 5B10     	 asrs r3,r3,#1
 304 02c4 C7F8B430 	 str r3,[r7,#180]
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 305              	 .loc 1 126 0
 306 02c8 D7F8B030 	 ldr r3,[r7,#176]
 307 02cc 5B10     	 asrs r3,r3,#1
 308 02ce C7F8B030 	 str r3,[r7,#176]
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 309              	 .loc 1 127 0
 310 02d2 D7F8AC30 	 ldr r3,[r7,#172]
 311 02d6 5B10     	 asrs r3,r3,#1
 312 02d8 C7F8AC30 	 str r3,[r7,#172]
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 313              	 .loc 1 129 0
 314 02dc D7F8B820 	 ldr r2,[r7,#184]
 315 02e0 D7F8B430 	 ldr r3,[r7,#180]
 316 02e4 D31A     	 subs r3,r2,r3
 317 02e6 C7F8A830 	 str r3,[r7,#168]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 318              	 .loc 1 130 0
 319 02ea D7F8B020 	 ldr r2,[r7,#176]
 320 02ee D7F8AC30 	 ldr r3,[r7,#172]
 321 02f2 1344     	 add r3,r3,r2
 322 02f4 C7F8A430 	 str r3,[r7,#164]
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 323              	 .loc 1 133 0
 324 02f8 D7F89420 	 ldr r2,[r7,#148]
 325 02fc 131D     	 adds r3,r2,#4
 326 02fe C7F89430 	 str r3,[r7,#148]
 327 0302 D7F8A830 	 ldr r3,[r7,#168]
 328 0306 1360     	 str r3,[r2]
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 329              	 .loc 1 135 0
 330 0308 D7F89420 	 ldr r2,[r7,#148]
 331 030c 131D     	 adds r3,r2,#4
 332 030e C7F89430 	 str r3,[r7,#148]
 333 0312 D7F8A430 	 ldr r3,[r7,#164]
 334 0316 1360     	 str r3,[r2]
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 335              	 .loc 1 137 0
 336 0318 D7F89C20 	 ldr r2,[r7,#156]
 337 031c 131D     	 adds r3,r2,#4
 338 031e C7F89C30 	 str r3,[r7,#156]
 339 0322 1368     	 ldr r3,[r2]
 340 0324 C7F8C830 	 str r3,[r7,#200]
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 341              	 .loc 1 138 0
 342 0328 D7F89C20 	 ldr r2,[r7,#156]
 343 032c 131D     	 adds r3,r2,#4
 344 032e C7F89C30 	 str r3,[r7,#156]
 345 0332 1368     	 ldr r3,[r2]
 346 0334 C7F8C430 	 str r3,[r7,#196]
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 347              	 .loc 1 139 0
 348 0338 D7F89820 	 ldr r2,[r7,#152]
 349 033c 131D     	 adds r3,r2,#4
 350 033e C7F89830 	 str r3,[r7,#152]
 351 0342 1368     	 ldr r3,[r2]
 352 0344 C7F8C030 	 str r3,[r7,#192]
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 353              	 .loc 1 140 0
 354 0348 D7F89820 	 ldr r2,[r7,#152]
 355 034c 131D     	 adds r3,r2,#4
 356 034e C7F89830 	 str r3,[r7,#152]
 357 0352 1368     	 ldr r3,[r2]
 358 0354 C7F8BC30 	 str r3,[r7,#188]
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 359              	 .loc 1 142 0
 360 0358 D7F8C830 	 ldr r3,[r7,#200]
 361 035c 1846     	 mov r0,r3
 362 035e 4FEAE071 	 asr r1,r0,#31
 363 0362 D7F8C030 	 ldr r3,[r7,#192]
 364 0366 1A46     	 mov r2,r3
 365 0368 4FEAE273 	 asr r3,r2,#31
 366 036c 02FB01F5 	 mul r5,r2,r1
 367 0370 00FB03F4 	 mul r4,r0,r3
 368 0374 2C44     	 add r4,r4,r5
 369 0376 A0FB0223 	 umull r2,r3,r0,r2
 370 037a E118     	 adds r1,r4,r3
 371 037c 0B46     	 mov r3,r1
 372 037e 1900     	 movs r1,r3
 373 0380 B964     	 str r1,[r7,#72]
 374 0382 DB17     	 asrs r3,r3,#31
 375 0384 FB64     	 str r3,[r7,#76]
 376 0386 BB6C     	 ldr r3,[r7,#72]
 377 0388 C7F8B830 	 str r3,[r7,#184]
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 378              	 .loc 1 143 0
 379 038c D7F8C430 	 ldr r3,[r7,#196]
 380 0390 1846     	 mov r0,r3
 381 0392 4FEAE071 	 asr r1,r0,#31
 382 0396 D7F8BC30 	 ldr r3,[r7,#188]
 383 039a 1A46     	 mov r2,r3
 384 039c 4FEAE273 	 asr r3,r2,#31
 385 03a0 02FB01F5 	 mul r5,r2,r1
 386 03a4 00FB03F4 	 mul r4,r0,r3
 387 03a8 2C44     	 add r4,r4,r5
 388 03aa A0FB0223 	 umull r2,r3,r0,r2
 389 03ae E118     	 adds r1,r4,r3
 390 03b0 0B46     	 mov r3,r1
 391 03b2 1900     	 movs r1,r3
 392 03b4 3964     	 str r1,[r7,#64]
 393 03b6 DB17     	 asrs r3,r3,#31
 394 03b8 7B64     	 str r3,[r7,#68]
 395 03ba 3B6C     	 ldr r3,[r7,#64]
 396 03bc C7F8B430 	 str r3,[r7,#180]
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 397              	 .loc 1 144 0
 398 03c0 D7F8C830 	 ldr r3,[r7,#200]
 399 03c4 1846     	 mov r0,r3
 400 03c6 4FEAE071 	 asr r1,r0,#31
 401 03ca D7F8BC30 	 ldr r3,[r7,#188]
 402 03ce 1A46     	 mov r2,r3
 403 03d0 4FEAE273 	 asr r3,r2,#31
 404 03d4 02FB01F5 	 mul r5,r2,r1
 405 03d8 00FB03F4 	 mul r4,r0,r3
 406 03dc 2C44     	 add r4,r4,r5
 407 03de A0FB0223 	 umull r2,r3,r0,r2
 408 03e2 E118     	 adds r1,r4,r3
 409 03e4 0B46     	 mov r3,r1
 410 03e6 1900     	 movs r1,r3
 411 03e8 B963     	 str r1,[r7,#56]
 412 03ea DB17     	 asrs r3,r3,#31
 413 03ec FB63     	 str r3,[r7,#60]
 414 03ee BB6B     	 ldr r3,[r7,#56]
 415 03f0 C7F8B030 	 str r3,[r7,#176]
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 416              	 .loc 1 145 0
 417 03f4 D7F8C430 	 ldr r3,[r7,#196]
 418 03f8 1846     	 mov r0,r3
 419 03fa 4FEAE071 	 asr r1,r0,#31
 420 03fe D7F8C030 	 ldr r3,[r7,#192]
 421 0402 1A46     	 mov r2,r3
 422 0404 4FEAE273 	 asr r3,r2,#31
 423 0408 02FB01F5 	 mul r5,r2,r1
 424 040c 00FB03F4 	 mul r4,r0,r3
 425 0410 2C44     	 add r4,r4,r5
 426 0412 A0FB0223 	 umull r2,r3,r0,r2
 427 0416 E118     	 adds r1,r4,r3
 428 0418 0B46     	 mov r3,r1
 429 041a 1900     	 movs r1,r3
 430 041c 3963     	 str r1,[r7,#48]
 431 041e DB17     	 asrs r3,r3,#31
 432 0420 7B63     	 str r3,[r7,#52]
 433 0422 3B6B     	 ldr r3,[r7,#48]
 434 0424 C7F8AC30 	 str r3,[r7,#172]
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 435              	 .loc 1 147 0
 436 0428 D7F8B830 	 ldr r3,[r7,#184]
 437 042c 5B10     	 asrs r3,r3,#1
 438 042e C7F8B830 	 str r3,[r7,#184]
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 439              	 .loc 1 148 0
 440 0432 D7F8B430 	 ldr r3,[r7,#180]
 441 0436 5B10     	 asrs r3,r3,#1
 442 0438 C7F8B430 	 str r3,[r7,#180]
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 443              	 .loc 1 149 0
 444 043c D7F8B030 	 ldr r3,[r7,#176]
 445 0440 5B10     	 asrs r3,r3,#1
 446 0442 C7F8B030 	 str r3,[r7,#176]
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 447              	 .loc 1 150 0
 448 0446 D7F8AC30 	 ldr r3,[r7,#172]
 449 044a 5B10     	 asrs r3,r3,#1
 450 044c C7F8AC30 	 str r3,[r7,#172]
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 451              	 .loc 1 152 0
 452 0450 D7F8B820 	 ldr r2,[r7,#184]
 453 0454 D7F8B430 	 ldr r3,[r7,#180]
 454 0458 D31A     	 subs r3,r2,r3
 455 045a C7F8A830 	 str r3,[r7,#168]
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 456              	 .loc 1 153 0
 457 045e D7F8B020 	 ldr r2,[r7,#176]
 458 0462 D7F8AC30 	 ldr r3,[r7,#172]
 459 0466 1344     	 add r3,r3,r2
 460 0468 C7F8A430 	 str r3,[r7,#164]
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 461              	 .loc 1 156 0
 462 046c D7F89420 	 ldr r2,[r7,#148]
 463 0470 131D     	 adds r3,r2,#4
 464 0472 C7F89430 	 str r3,[r7,#148]
 465 0476 D7F8A830 	 ldr r3,[r7,#168]
 466 047a 1360     	 str r3,[r2]
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 467              	 .loc 1 158 0
 468 047c D7F89420 	 ldr r2,[r7,#148]
 469 0480 131D     	 adds r3,r2,#4
 470 0482 C7F89430 	 str r3,[r7,#148]
 471 0486 D7F8A430 	 ldr r3,[r7,#164]
 472 048a 1360     	 str r3,[r2]
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 473              	 .loc 1 160 0
 474 048c D7F89C20 	 ldr r2,[r7,#156]
 475 0490 131D     	 adds r3,r2,#4
 476 0492 C7F89C30 	 str r3,[r7,#156]
 477 0496 1368     	 ldr r3,[r2]
 478 0498 C7F8C830 	 str r3,[r7,#200]
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 479              	 .loc 1 161 0
 480 049c D7F89C20 	 ldr r2,[r7,#156]
 481 04a0 131D     	 adds r3,r2,#4
 482 04a2 C7F89C30 	 str r3,[r7,#156]
 483 04a6 1368     	 ldr r3,[r2]
 484 04a8 C7F8C430 	 str r3,[r7,#196]
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 485              	 .loc 1 162 0
 486 04ac D7F89820 	 ldr r2,[r7,#152]
 487 04b0 131D     	 adds r3,r2,#4
 488 04b2 C7F89830 	 str r3,[r7,#152]
 489 04b6 1368     	 ldr r3,[r2]
 490 04b8 C7F8C030 	 str r3,[r7,#192]
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 491              	 .loc 1 163 0
 492 04bc D7F89820 	 ldr r2,[r7,#152]
 493 04c0 131D     	 adds r3,r2,#4
 494 04c2 C7F89830 	 str r3,[r7,#152]
 495 04c6 1368     	 ldr r3,[r2]
 496 04c8 C7F8BC30 	 str r3,[r7,#188]
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 497              	 .loc 1 165 0
 498 04cc D7F8C830 	 ldr r3,[r7,#200]
 499 04d0 1846     	 mov r0,r3
 500 04d2 4FEAE071 	 asr r1,r0,#31
 501 04d6 D7F8C030 	 ldr r3,[r7,#192]
 502 04da 1A46     	 mov r2,r3
 503 04dc 4FEAE273 	 asr r3,r2,#31
 504 04e0 02FB01F5 	 mul r5,r2,r1
 505 04e4 00FB03F4 	 mul r4,r0,r3
 506 04e8 2C44     	 add r4,r4,r5
 507 04ea A0FB0223 	 umull r2,r3,r0,r2
 508 04ee E118     	 adds r1,r4,r3
 509 04f0 0B46     	 mov r3,r1
 510 04f2 1900     	 movs r1,r3
 511 04f4 B962     	 str r1,[r7,#40]
 512 04f6 DB17     	 asrs r3,r3,#31
 513 04f8 FB62     	 str r3,[r7,#44]
 514 04fa BB6A     	 ldr r3,[r7,#40]
 515 04fc C7F8B830 	 str r3,[r7,#184]
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 516              	 .loc 1 166 0
 517 0500 D7F8C430 	 ldr r3,[r7,#196]
 518 0504 1846     	 mov r0,r3
 519 0506 4FEAE071 	 asr r1,r0,#31
 520 050a D7F8BC30 	 ldr r3,[r7,#188]
 521 050e 1A46     	 mov r2,r3
 522 0510 4FEAE273 	 asr r3,r2,#31
 523 0514 02FB01F5 	 mul r5,r2,r1
 524 0518 00FB03F4 	 mul r4,r0,r3
 525 051c 2C44     	 add r4,r4,r5
 526 051e A0FB0223 	 umull r2,r3,r0,r2
 527 0522 E118     	 adds r1,r4,r3
 528 0524 0B46     	 mov r3,r1
 529 0526 1900     	 movs r1,r3
 530 0528 3962     	 str r1,[r7,#32]
 531 052a DB17     	 asrs r3,r3,#31
 532 052c 7B62     	 str r3,[r7,#36]
 533 052e 3B6A     	 ldr r3,[r7,#32]
 534 0530 C7F8B430 	 str r3,[r7,#180]
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 535              	 .loc 1 167 0
 536 0534 D7F8C830 	 ldr r3,[r7,#200]
 537 0538 1846     	 mov r0,r3
 538 053a 4FEAE071 	 asr r1,r0,#31
 539 053e D7F8BC30 	 ldr r3,[r7,#188]
 540 0542 1A46     	 mov r2,r3
 541 0544 4FEAE273 	 asr r3,r2,#31
 542 0548 02FB01F5 	 mul r5,r2,r1
 543 054c 00FB03F4 	 mul r4,r0,r3
 544 0550 2C44     	 add r4,r4,r5
 545 0552 A0FB0223 	 umull r2,r3,r0,r2
 546 0556 E118     	 adds r1,r4,r3
 547 0558 0B46     	 mov r3,r1
 548 055a 1900     	 movs r1,r3
 549 055c B961     	 str r1,[r7,#24]
 550 055e DB17     	 asrs r3,r3,#31
 551 0560 FB61     	 str r3,[r7,#28]
 552 0562 BB69     	 ldr r3,[r7,#24]
 553 0564 C7F8B030 	 str r3,[r7,#176]
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 554              	 .loc 1 168 0
 555 0568 D7F8C430 	 ldr r3,[r7,#196]
 556 056c 1846     	 mov r0,r3
 557 056e 4FEAE071 	 asr r1,r0,#31
 558 0572 D7F8C030 	 ldr r3,[r7,#192]
 559 0576 1A46     	 mov r2,r3
 560 0578 4FEAE273 	 asr r3,r2,#31
 561 057c 02FB01F5 	 mul r5,r2,r1
 562 0580 00FB03F4 	 mul r4,r0,r3
 563 0584 2C44     	 add r4,r4,r5
 564 0586 A0FB0223 	 umull r2,r3,r0,r2
 565 058a E118     	 adds r1,r4,r3
 566 058c 0B46     	 mov r3,r1
 567 058e 1900     	 movs r1,r3
 568 0590 3961     	 str r1,[r7,#16]
 569 0592 DB17     	 asrs r3,r3,#31
 570 0594 7B61     	 str r3,[r7,#20]
 571 0596 3B69     	 ldr r3,[r7,#16]
 572 0598 C7F8AC30 	 str r3,[r7,#172]
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 573              	 .loc 1 170 0
 574 059c D7F8B830 	 ldr r3,[r7,#184]
 575 05a0 5B10     	 asrs r3,r3,#1
 576 05a2 C7F8B830 	 str r3,[r7,#184]
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 577              	 .loc 1 171 0
 578 05a6 D7F8B430 	 ldr r3,[r7,#180]
 579 05aa 5B10     	 asrs r3,r3,#1
 580 05ac C7F8B430 	 str r3,[r7,#180]
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 581              	 .loc 1 172 0
 582 05b0 D7F8B030 	 ldr r3,[r7,#176]
 583 05b4 5B10     	 asrs r3,r3,#1
 584 05b6 C7F8B030 	 str r3,[r7,#176]
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 585              	 .loc 1 173 0
 586 05ba D7F8AC30 	 ldr r3,[r7,#172]
 587 05be 5B10     	 asrs r3,r3,#1
 588 05c0 C7F8AC30 	 str r3,[r7,#172]
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 589              	 .loc 1 175 0
 590 05c4 D7F8B820 	 ldr r2,[r7,#184]
 591 05c8 D7F8B430 	 ldr r3,[r7,#180]
 592 05cc D31A     	 subs r3,r2,r3
 593 05ce C7F8A830 	 str r3,[r7,#168]
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 594              	 .loc 1 176 0
 595 05d2 D7F8B020 	 ldr r2,[r7,#176]
 596 05d6 D7F8AC30 	 ldr r3,[r7,#172]
 597 05da 1344     	 add r3,r3,r2
 598 05dc C7F8A430 	 str r3,[r7,#164]
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 599              	 .loc 1 179 0
 600 05e0 D7F89420 	 ldr r2,[r7,#148]
 601 05e4 131D     	 adds r3,r2,#4
 602 05e6 C7F89430 	 str r3,[r7,#148]
 603 05ea D7F8A830 	 ldr r3,[r7,#168]
 604 05ee 1360     	 str r3,[r2]
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 605              	 .loc 1 181 0
 606 05f0 D7F89420 	 ldr r2,[r7,#148]
 607 05f4 131D     	 adds r3,r2,#4
 608 05f6 C7F89430 	 str r3,[r7,#148]
 609 05fa D7F8A430 	 ldr r3,[r7,#164]
 610 05fe 1360     	 str r3,[r2]
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 184:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 611              	 .loc 1 184 0
 612 0600 D7F8CC30 	 ldr r3,[r7,#204]
 613 0604 013B     	 subs r3,r3,#1
 614 0606 C7F8CC30 	 str r3,[r7,#204]
 615              	.L2:
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 616              	 .loc 1 87 0
 617 060a D7F8CC30 	 ldr r3,[r7,#204]
 618 060e 002B     	 cmp r3,#0
 619 0610 7FF408AD 	 bne .L3
 185:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 186:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 187:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 188:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** No loop unrolling is used. */
 189:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples % 0x4u;
 620              	 .loc 1 189 0
 621 0614 D7F89030 	 ldr r3,[r7,#144]
 622 0618 03F00303 	 and r3,r3,#3
 623 061c C7F8CC30 	 str r3,[r7,#204]
 190:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 191:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while(blkCnt > 0u)
 624              	 .loc 1 191 0
 625 0620 BCE0     	 b .L4
 626              	.L5:
 192:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 193:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 194:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 195:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 627              	 .loc 1 195 0
 628 0622 D7F89C30 	 ldr r3,[r7,#156]
 629 0626 1A1D     	 adds r2,r3,#4
 630 0628 C7F89C20 	 str r2,[r7,#156]
 631 062c 1B68     	 ldr r3,[r3]
 632 062e C7F8C830 	 str r3,[r7,#200]
 196:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 633              	 .loc 1 196 0
 634 0632 D7F89C30 	 ldr r3,[r7,#156]
 635 0636 1A1D     	 adds r2,r3,#4
 636 0638 C7F89C20 	 str r2,[r7,#156]
 637 063c 1B68     	 ldr r3,[r3]
 638 063e C7F8C430 	 str r3,[r7,#196]
 197:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 639              	 .loc 1 197 0
 640 0642 D7F89830 	 ldr r3,[r7,#152]
 641 0646 1A1D     	 adds r2,r3,#4
 642 0648 C7F89820 	 str r2,[r7,#152]
 643 064c 1B68     	 ldr r3,[r3]
 644 064e C7F8C030 	 str r3,[r7,#192]
 198:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 645              	 .loc 1 198 0
 646 0652 D7F89830 	 ldr r3,[r7,#152]
 647 0656 1A1D     	 adds r2,r3,#4
 648 0658 C7F89820 	 str r2,[r7,#152]
 649 065c 1B68     	 ldr r3,[r3]
 650 065e C7F8BC30 	 str r3,[r7,#188]
 199:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 200:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 651              	 .loc 1 200 0
 652 0662 D7F8C830 	 ldr r3,[r7,#200]
 653 0666 1846     	 mov r0,r3
 654 0668 4FEAE071 	 asr r1,r0,#31
 655 066c D7F8C030 	 ldr r3,[r7,#192]
 656 0670 1A46     	 mov r2,r3
 657 0672 4FEAE273 	 asr r3,r2,#31
 658 0676 02FB01F5 	 mul r5,r2,r1
 659 067a 00FB03F4 	 mul r4,r0,r3
 660 067e 2C44     	 add r4,r4,r5
 661 0680 A0FB0223 	 umull r2,r3,r0,r2
 662 0684 E118     	 adds r1,r4,r3
 663 0686 0B46     	 mov r3,r1
 664 0688 9846     	 mov r8,r3
 665 068a 4FEAE379 	 asr r9,r3,#31
 666 068e 4346     	 mov r3,r8
 667 0690 C7F8B830 	 str r3,[r7,#184]
 201:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 668              	 .loc 1 201 0
 669 0694 D7F8C430 	 ldr r3,[r7,#196]
 670 0698 1846     	 mov r0,r3
 671 069a 4FEAE071 	 asr r1,r0,#31
 672 069e D7F8BC30 	 ldr r3,[r7,#188]
 673 06a2 1A46     	 mov r2,r3
 674 06a4 4FEAE273 	 asr r3,r2,#31
 675 06a8 02FB01F5 	 mul r5,r2,r1
 676 06ac 00FB03F4 	 mul r4,r0,r3
 677 06b0 2C44     	 add r4,r4,r5
 678 06b2 A0FB0223 	 umull r2,r3,r0,r2
 679 06b6 E118     	 adds r1,r4,r3
 680 06b8 0B46     	 mov r3,r1
 681 06ba 9A46     	 mov r10,r3
 682 06bc 4FEAE37B 	 asr fp,r3,#31
 683 06c0 5346     	 mov r3,r10
 684 06c2 C7F8B430 	 str r3,[r7,#180]
 202:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 685              	 .loc 1 202 0
 686 06c6 D7F8C830 	 ldr r3,[r7,#200]
 687 06ca 1846     	 mov r0,r3
 688 06cc 4FEAE071 	 asr r1,r0,#31
 689 06d0 D7F8BC30 	 ldr r3,[r7,#188]
 690 06d4 1A46     	 mov r2,r3
 691 06d6 4FEAE273 	 asr r3,r2,#31
 692 06da 02FB01F5 	 mul r5,r2,r1
 693 06de 00FB03F4 	 mul r4,r0,r3
 694 06e2 2C44     	 add r4,r4,r5
 695 06e4 A0FB0223 	 umull r2,r3,r0,r2
 696 06e8 E118     	 adds r1,r4,r3
 697 06ea 0B46     	 mov r3,r1
 698 06ec 1900     	 movs r1,r3
 699 06ee B960     	 str r1,[r7,#8]
 700 06f0 DB17     	 asrs r3,r3,#31
 701 06f2 FB60     	 str r3,[r7,#12]
 702 06f4 BB68     	 ldr r3,[r7,#8]
 703 06f6 C7F8B030 	 str r3,[r7,#176]
 203:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 704              	 .loc 1 203 0
 705 06fa D7F8C430 	 ldr r3,[r7,#196]
 706 06fe 1846     	 mov r0,r3
 707 0700 4FEAE071 	 asr r1,r0,#31
 708 0704 D7F8C030 	 ldr r3,[r7,#192]
 709 0708 1A46     	 mov r2,r3
 710 070a 4FEAE273 	 asr r3,r2,#31
 711 070e 02FB01F5 	 mul r5,r2,r1
 712 0712 00FB03F4 	 mul r4,r0,r3
 713 0716 2C44     	 add r4,r4,r5
 714 0718 A0FB0223 	 umull r2,r3,r0,r2
 715 071c E118     	 adds r1,r4,r3
 716 071e 0B46     	 mov r3,r1
 717 0720 1900     	 movs r1,r3
 718 0722 3960     	 str r1,[r7]
 719 0724 DB17     	 asrs r3,r3,#31
 720 0726 7B60     	 str r3,[r7,#4]
 721 0728 3B68     	 ldr r3,[r7]
 722 072a C7F8AC30 	 str r3,[r7,#172]
 204:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 205:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 723              	 .loc 1 205 0
 724 072e D7F8B830 	 ldr r3,[r7,#184]
 725 0732 5B10     	 asrs r3,r3,#1
 726 0734 C7F8B830 	 str r3,[r7,#184]
 206:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 727              	 .loc 1 206 0
 728 0738 D7F8B430 	 ldr r3,[r7,#180]
 729 073c 5B10     	 asrs r3,r3,#1
 730 073e C7F8B430 	 str r3,[r7,#180]
 207:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 731              	 .loc 1 207 0
 732 0742 D7F8B030 	 ldr r3,[r7,#176]
 733 0746 5B10     	 asrs r3,r3,#1
 734 0748 C7F8B030 	 str r3,[r7,#176]
 208:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 735              	 .loc 1 208 0
 736 074c D7F8AC30 	 ldr r3,[r7,#172]
 737 0750 5B10     	 asrs r3,r3,#1
 738 0752 C7F8AC30 	 str r3,[r7,#172]
 209:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 210:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 739              	 .loc 1 210 0
 740 0756 D7F8B820 	 ldr r2,[r7,#184]
 741 075a D7F8B430 	 ldr r3,[r7,#180]
 742 075e D31A     	 subs r3,r2,r3
 743 0760 C7F8A830 	 str r3,[r7,#168]
 211:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 744              	 .loc 1 211 0
 745 0764 D7F8B020 	 ldr r2,[r7,#176]
 746 0768 D7F8AC30 	 ldr r3,[r7,#172]
 747 076c 1344     	 add r3,r3,r2
 748 076e C7F8A430 	 str r3,[r7,#164]
 212:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 213:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 214:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 749              	 .loc 1 214 0
 750 0772 D7F89430 	 ldr r3,[r7,#148]
 751 0776 1A1D     	 adds r2,r3,#4
 752 0778 C7F89420 	 str r2,[r7,#148]
 753 077c D7F8A820 	 ldr r2,[r7,#168]
 754 0780 1A60     	 str r2,[r3]
 215:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 216:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 755              	 .loc 1 216 0
 756 0782 D7F89430 	 ldr r3,[r7,#148]
 757 0786 1A1D     	 adds r2,r3,#4
 758 0788 C7F89420 	 str r2,[r7,#148]
 759 078c D7F8A420 	 ldr r2,[r7,#164]
 760 0790 1A60     	 str r2,[r3]
 217:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 218:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 219:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 761              	 .loc 1 219 0
 762 0792 D7F8CC30 	 ldr r3,[r7,#204]
 763 0796 013B     	 subs r3,r3,#1
 764 0798 C7F8CC30 	 str r3,[r7,#204]
 765              	.L4:
 191:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 766              	 .loc 1 191 0
 767 079c D7F8CC30 	 ldr r3,[r7,#204]
 768 07a0 002B     	 cmp r3,#0
 769 07a2 7FF43EAF 	 bne .L5
 220:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 221:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 222:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #else
 223:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 224:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* Run the below code for Cortex-M0 */
 225:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 226:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* loop Unrolling */
 227:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples >> 1u;
 228:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 229:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* First part of the processing with loop unrolling.  Compute 2 outputs at a time.     
 230:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** a second loop below computes the remaining 1 sample. */
 231:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while(blkCnt > 0u)
 232:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 233:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 234:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 235:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 236:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 237:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 238:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 239:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 240:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 241:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 242:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 243:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 244:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 245:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 246:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 247:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 248:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 249:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 250:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 251:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 252:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 253:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 254:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 255:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 256:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 257:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 258:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 259:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 260:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 261:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 262:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 263:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 264:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 265:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 266:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 267:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 268:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 269:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 270:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 271:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 272:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 273:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 274:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 275:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 276:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 277:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 278:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 279:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 280:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 281:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 282:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 283:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 284:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 285:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   /* If the blockSize is not a multiple of 2, compute any remaining output samples here.     
 286:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****    ** No loop unrolling is used. */
 287:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   blkCnt = numSamples % 0x2u;
 288:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 289:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   while(blkCnt > 0u)
 290:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   {
 291:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 292:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 293:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     a = *pSrcA++;
 294:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     b = *pSrcA++;
 295:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     c = *pSrcB++;
 296:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     d = *pSrcB++;
 297:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 298:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (q31_t) (((q63_t) a * c) >> 32);
 299:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (q31_t) (((q63_t) b * d) >> 32);
 300:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (q31_t) (((q63_t) a * d) >> 32);
 301:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (q31_t) (((q63_t) b * c) >> 32);
 302:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 303:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul1 = (mul1 >> 1);
 304:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul2 = (mul2 >> 1);
 305:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul3 = (mul3 >> 1);
 306:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     mul4 = (mul4 >> 1);
 307:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 308:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out1 = mul1 - mul2;
 309:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     out2 = mul3 + mul4;
 310:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 311:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the real result in 3.29 format in the destination buffer. */
 312:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out1;
 313:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* store the imag result in 3.29 format in the destination buffer. */
 314:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     *pDst++ = out2;
 315:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 316:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     /* Decrement the blockSize loop counter */
 317:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****     blkCnt--;
 318:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c ****   }
 319:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 320:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 321:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** 
 322:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q31.c **** }
 770              	 .loc 1 322 0
 771 07a6 D437     	 adds r7,r7,#212
 772              	.LCFI3:
 773              	 .cfi_def_cfa_offset 28
 774 07a8 BD46     	 mov sp,r7
 775              	.LCFI4:
 776              	 .cfi_def_cfa_register 13
 777              	 
 778 07aa BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 779              	.LCFI5:
 780              	 .cfi_restore 11
 781              	 .cfi_restore 10
 782              	 .cfi_restore 9
 783              	 .cfi_restore 8
 784              	 .cfi_restore 7
 785              	 .cfi_restore 5
 786              	 .cfi_restore 4
 787              	 .cfi_def_cfa_offset 0
 788 07ae 7047     	 bx lr
 789              	 .cfi_endproc
 790              	.LFE139:
 792              	 .text
 793              	.Letext0:
 794              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 795              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 796              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_cmplx_q31.c
    {standard input}:19     .text.arm_cmplx_mult_cmplx_q31:00000000 $t
    {standard input}:24     .text.arm_cmplx_mult_cmplx_q31:00000000 arm_cmplx_mult_cmplx_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
