   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cmplx_dot_prod_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_cmplx_dot_prod_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_cmplx_dot_prod_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_cmplx_dot_prod_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * Title:		arm_cmplx_dot_prod_q31.c    
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * Description:	Q31 complex dot product    
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @ingroup groupCmplxMath    
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @addtogroup cmplx_dot_prod    
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @brief  Q31 complex dot product    
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @param  *pSrcA points to the first input vector    
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @param  *pSrcB points to the second input vector    
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @param  numSamples number of complex samples in each vector    
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @param  *realResult real part of the result returned here    
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @param  *imagResult imaginary part of the result returned here    
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * @return none.    
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * <b>Scaling and Overflow Behavior:</b>    
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * \par    
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * The function is implemented using an internal 64-bit accumulator.    
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * The intermediate 1.31 by 1.31 multiplications are performed with 64-bit precision and then shift
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * The internal real and imaginary accumulators are in 16.48 format and provide 15 guard bits.    
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * Additions are nonsaturating and no overflow will occur as long as <code>numSamples</code> is les
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * The return results <code>realResult</code> and <code>imagResult</code> are in 16.48 format.    
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  * Input down scaling is not required.    
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****  */
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** void arm_cmplx_dot_prod_q31(
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   q31_t * pSrcA,
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   q31_t * pSrcB,
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   uint32_t numSamples,
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   q63_t * realResult,
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   q63_t * imagResult)
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** {
  27              	 .loc 1 77 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B00F 	 push {r4,r5,r7,r8,r9,r10,fp}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 28
  35              	 .cfi_offset 4,-28
  36              	 .cfi_offset 5,-24
  37              	 .cfi_offset 7,-20
  38              	 .cfi_offset 8,-16
  39              	 .cfi_offset 9,-12
  40              	 .cfi_offset 10,-8
  41              	 .cfi_offset 11,-4
  42 0004 B3B0     	 sub sp,sp,#204
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 232
  45 0006 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0008 C7F89C00 	 str r0,[r7,#156]
  49 000c C7F89810 	 str r1,[r7,#152]
  50 0010 C7F89420 	 str r2,[r7,#148]
  51 0014 C7F89030 	 str r3,[r7,#144]
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   q63_t real_sum = 0, imag_sum = 0;              /* Temporary result storage */
  52              	 .loc 1 78 0
  53 0018 4FF00002 	 mov r2,#0
  54 001c 4FF00003 	 mov r3,#0
  55 0020 C7E93023 	 strd r2,[r7,#192]
  56 0024 4FF00002 	 mov r2,#0
  57 0028 4FF00003 	 mov r3,#0
  58 002c C7E92E23 	 strd r2,[r7,#184]
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   q31_t a0,b0,c0,d0;
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   /*loop Unrolling */
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   blkCnt = numSamples >> 2u;
  59              	 .loc 1 88 0
  60 0030 D7F89430 	 ldr r3,[r7,#148]
  61 0034 9B08     	 lsrs r3,r3,#2
  62 0036 C7F8B430 	 str r3,[r7,#180]
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   while(blkCnt > 0u)
  63              	 .loc 1 92 0
  64 003a ECE2     	 b .L2
  65              	.L3:
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   {
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       a0 = *pSrcA++;
  66              	 .loc 1 94 0
  67 003c D7F89C20 	 ldr r2,[r7,#156]
  68 0040 131D     	 adds r3,r2,#4
  69 0042 C7F89C30 	 str r3,[r7,#156]
  70 0046 1368     	 ldr r3,[r2]
  71 0048 C7F8B030 	 str r3,[r7,#176]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       b0 = *pSrcA++;
  72              	 .loc 1 95 0
  73 004c D7F89C20 	 ldr r2,[r7,#156]
  74 0050 131D     	 adds r3,r2,#4
  75 0052 C7F89C30 	 str r3,[r7,#156]
  76 0056 1368     	 ldr r3,[r2]
  77 0058 C7F8AC30 	 str r3,[r7,#172]
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       c0 = *pSrcB++;
  78              	 .loc 1 96 0
  79 005c D7F89820 	 ldr r2,[r7,#152]
  80 0060 131D     	 adds r3,r2,#4
  81 0062 C7F89830 	 str r3,[r7,#152]
  82 0066 1368     	 ldr r3,[r2]
  83 0068 C7F8A830 	 str r3,[r7,#168]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       d0 = *pSrcB++;  
  84              	 .loc 1 97 0
  85 006c D7F89820 	 ldr r2,[r7,#152]
  86 0070 131D     	 adds r3,r2,#4
  87 0072 C7F89830 	 str r3,[r7,#152]
  88 0076 1368     	 ldr r3,[r2]
  89 0078 C7F8A430 	 str r3,[r7,#164]
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum += ((q63_t)a0 * c0) >> 14;
  90              	 .loc 1 99 0
  91 007c D7F8B030 	 ldr r3,[r7,#176]
  92 0080 1846     	 mov r0,r3
  93 0082 4FEAE071 	 asr r1,r0,#31
  94 0086 D7F8A830 	 ldr r3,[r7,#168]
  95 008a 1A46     	 mov r2,r3
  96 008c 4FEAE273 	 asr r3,r2,#31
  97 0090 02FB01F5 	 mul r5,r2,r1
  98 0094 00FB03F4 	 mul r4,r0,r3
  99 0098 2C44     	 add r4,r4,r5
 100 009a A0FB0223 	 umull r2,r3,r0,r2
 101 009e E118     	 adds r1,r4,r3
 102 00a0 0B46     	 mov r3,r1
 103 00a2 910B     	 lsrs r1,r2,#14
 104 00a4 C7F88810 	 str r1,[r7,#136]
 105 00a8 D7F88810 	 ldr r1,[r7,#136]
 106 00ac 41EA8341 	 orr r1,r1,r3,lsl#18
 107 00b0 C7F88810 	 str r1,[r7,#136]
 108 00b4 9B13     	 asrs r3,r3,#14
 109 00b6 C7F88C30 	 str r3,[r7,#140]
 110 00ba D7E93023 	 ldrd r2,[r7,#192]
 111 00be D7E92201 	 ldrd r0,[r7,#136]
 112 00c2 8018     	 adds r0,r0,r2
 113 00c4 41EB0301 	 adc r1,r1,r3
 114 00c8 0246     	 mov r2,r0
 115 00ca 0B46     	 mov r3,r1
 116 00cc C7E93023 	 strd r2,[r7,#192]
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)a0 * d0) >> 14;
 117              	 .loc 1 100 0
 118 00d0 D7F8B030 	 ldr r3,[r7,#176]
 119 00d4 1846     	 mov r0,r3
 120 00d6 4FEAE071 	 asr r1,r0,#31
 121 00da D7F8A430 	 ldr r3,[r7,#164]
 122 00de 1A46     	 mov r2,r3
 123 00e0 4FEAE273 	 asr r3,r2,#31
 124 00e4 02FB01F5 	 mul r5,r2,r1
 125 00e8 00FB03F4 	 mul r4,r0,r3
 126 00ec 2C44     	 add r4,r4,r5
 127 00ee A0FB0223 	 umull r2,r3,r0,r2
 128 00f2 E118     	 adds r1,r4,r3
 129 00f4 0B46     	 mov r3,r1
 130 00f6 910B     	 lsrs r1,r2,#14
 131 00f8 C7F88010 	 str r1,[r7,#128]
 132 00fc D7F88010 	 ldr r1,[r7,#128]
 133 0100 41EA8341 	 orr r1,r1,r3,lsl#18
 134 0104 C7F88010 	 str r1,[r7,#128]
 135 0108 9B13     	 asrs r3,r3,#14
 136 010a C7F88430 	 str r3,[r7,#132]
 137 010e D7E92E23 	 ldrd r2,[r7,#184]
 138 0112 D7E92001 	 ldrd r0,[r7,#128]
 139 0116 8018     	 adds r0,r0,r2
 140 0118 41EB0301 	 adc r1,r1,r3
 141 011c 0246     	 mov r2,r0
 142 011e 0B46     	 mov r3,r1
 143 0120 C7E92E23 	 strd r2,[r7,#184]
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum -= ((q63_t)b0 * d0) >> 14;
 144              	 .loc 1 101 0
 145 0124 D7F8AC30 	 ldr r3,[r7,#172]
 146 0128 1846     	 mov r0,r3
 147 012a 4FEAE071 	 asr r1,r0,#31
 148 012e D7F8A430 	 ldr r3,[r7,#164]
 149 0132 1A46     	 mov r2,r3
 150 0134 4FEAE273 	 asr r3,r2,#31
 151 0138 02FB01F5 	 mul r5,r2,r1
 152 013c 00FB03F4 	 mul r4,r0,r3
 153 0140 2C44     	 add r4,r4,r5
 154 0142 A0FB0223 	 umull r2,r3,r0,r2
 155 0146 E118     	 adds r1,r4,r3
 156 0148 0B46     	 mov r3,r1
 157 014a 910B     	 lsrs r1,r2,#14
 158 014c B967     	 str r1,[r7,#120]
 159 014e B96F     	 ldr r1,[r7,#120]
 160 0150 41EA8341 	 orr r1,r1,r3,lsl#18
 161 0154 B967     	 str r1,[r7,#120]
 162 0156 9B13     	 asrs r3,r3,#14
 163 0158 FB67     	 str r3,[r7,#124]
 164 015a D7E93023 	 ldrd r2,[r7,#192]
 165 015e D7E91E01 	 ldrd r0,[r7,#120]
 166 0162 101A     	 subs r0,r2,r0
 167 0164 63EB0101 	 sbc r1,r3,r1
 168 0168 0246     	 mov r2,r0
 169 016a 0B46     	 mov r3,r1
 170 016c C7E93023 	 strd r2,[r7,#192]
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)b0 * c0) >> 14;
 171              	 .loc 1 102 0
 172 0170 D7F8AC30 	 ldr r3,[r7,#172]
 173 0174 1846     	 mov r0,r3
 174 0176 4FEAE071 	 asr r1,r0,#31
 175 017a D7F8A830 	 ldr r3,[r7,#168]
 176 017e 1A46     	 mov r2,r3
 177 0180 4FEAE273 	 asr r3,r2,#31
 178 0184 02FB01F5 	 mul r5,r2,r1
 179 0188 00FB03F4 	 mul r4,r0,r3
 180 018c 2C44     	 add r4,r4,r5
 181 018e A0FB0223 	 umull r2,r3,r0,r2
 182 0192 E118     	 adds r1,r4,r3
 183 0194 0B46     	 mov r3,r1
 184 0196 910B     	 lsrs r1,r2,#14
 185 0198 3967     	 str r1,[r7,#112]
 186 019a 396F     	 ldr r1,[r7,#112]
 187 019c 41EA8341 	 orr r1,r1,r3,lsl#18
 188 01a0 3967     	 str r1,[r7,#112]
 189 01a2 9B13     	 asrs r3,r3,#14
 190 01a4 7B67     	 str r3,[r7,#116]
 191 01a6 D7E92E23 	 ldrd r2,[r7,#184]
 192 01aa D7E91C01 	 ldrd r0,[r7,#112]
 193 01ae 8018     	 adds r0,r0,r2
 194 01b0 41EB0301 	 adc r1,r1,r3
 195 01b4 0246     	 mov r2,r0
 196 01b6 0B46     	 mov r3,r1
 197 01b8 C7E92E23 	 strd r2,[r7,#184]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       a0 = *pSrcA++;
 198              	 .loc 1 104 0
 199 01bc D7F89C20 	 ldr r2,[r7,#156]
 200 01c0 131D     	 adds r3,r2,#4
 201 01c2 C7F89C30 	 str r3,[r7,#156]
 202 01c6 1368     	 ldr r3,[r2]
 203 01c8 C7F8B030 	 str r3,[r7,#176]
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       b0 = *pSrcA++;
 204              	 .loc 1 105 0
 205 01cc D7F89C20 	 ldr r2,[r7,#156]
 206 01d0 131D     	 adds r3,r2,#4
 207 01d2 C7F89C30 	 str r3,[r7,#156]
 208 01d6 1368     	 ldr r3,[r2]
 209 01d8 C7F8AC30 	 str r3,[r7,#172]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       c0 = *pSrcB++;
 210              	 .loc 1 106 0
 211 01dc D7F89820 	 ldr r2,[r7,#152]
 212 01e0 131D     	 adds r3,r2,#4
 213 01e2 C7F89830 	 str r3,[r7,#152]
 214 01e6 1368     	 ldr r3,[r2]
 215 01e8 C7F8A830 	 str r3,[r7,#168]
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       d0 = *pSrcB++;  
 216              	 .loc 1 107 0
 217 01ec D7F89820 	 ldr r2,[r7,#152]
 218 01f0 131D     	 adds r3,r2,#4
 219 01f2 C7F89830 	 str r3,[r7,#152]
 220 01f6 1368     	 ldr r3,[r2]
 221 01f8 C7F8A430 	 str r3,[r7,#164]
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum += ((q63_t)a0 * c0) >> 14;
 222              	 .loc 1 109 0
 223 01fc D7F8B030 	 ldr r3,[r7,#176]
 224 0200 1846     	 mov r0,r3
 225 0202 4FEAE071 	 asr r1,r0,#31
 226 0206 D7F8A830 	 ldr r3,[r7,#168]
 227 020a 1A46     	 mov r2,r3
 228 020c 4FEAE273 	 asr r3,r2,#31
 229 0210 02FB01F5 	 mul r5,r2,r1
 230 0214 00FB03F4 	 mul r4,r0,r3
 231 0218 2C44     	 add r4,r4,r5
 232 021a A0FB0223 	 umull r2,r3,r0,r2
 233 021e E118     	 adds r1,r4,r3
 234 0220 0B46     	 mov r3,r1
 235 0222 910B     	 lsrs r1,r2,#14
 236 0224 B966     	 str r1,[r7,#104]
 237 0226 B96E     	 ldr r1,[r7,#104]
 238 0228 41EA8341 	 orr r1,r1,r3,lsl#18
 239 022c B966     	 str r1,[r7,#104]
 240 022e 9B13     	 asrs r3,r3,#14
 241 0230 FB66     	 str r3,[r7,#108]
 242 0232 D7E93023 	 ldrd r2,[r7,#192]
 243 0236 D7E91A01 	 ldrd r0,[r7,#104]
 244 023a 8018     	 adds r0,r0,r2
 245 023c 41EB0301 	 adc r1,r1,r3
 246 0240 0246     	 mov r2,r0
 247 0242 0B46     	 mov r3,r1
 248 0244 C7E93023 	 strd r2,[r7,#192]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)a0 * d0) >> 14;
 249              	 .loc 1 110 0
 250 0248 D7F8B030 	 ldr r3,[r7,#176]
 251 024c 1846     	 mov r0,r3
 252 024e 4FEAE071 	 asr r1,r0,#31
 253 0252 D7F8A430 	 ldr r3,[r7,#164]
 254 0256 1A46     	 mov r2,r3
 255 0258 4FEAE273 	 asr r3,r2,#31
 256 025c 02FB01F5 	 mul r5,r2,r1
 257 0260 00FB03F4 	 mul r4,r0,r3
 258 0264 2C44     	 add r4,r4,r5
 259 0266 A0FB0223 	 umull r2,r3,r0,r2
 260 026a E118     	 adds r1,r4,r3
 261 026c 0B46     	 mov r3,r1
 262 026e 910B     	 lsrs r1,r2,#14
 263 0270 3966     	 str r1,[r7,#96]
 264 0272 396E     	 ldr r1,[r7,#96]
 265 0274 41EA8341 	 orr r1,r1,r3,lsl#18
 266 0278 3966     	 str r1,[r7,#96]
 267 027a 9B13     	 asrs r3,r3,#14
 268 027c 7B66     	 str r3,[r7,#100]
 269 027e D7E92E23 	 ldrd r2,[r7,#184]
 270 0282 D7E91801 	 ldrd r0,[r7,#96]
 271 0286 8018     	 adds r0,r0,r2
 272 0288 41EB0301 	 adc r1,r1,r3
 273 028c 0246     	 mov r2,r0
 274 028e 0B46     	 mov r3,r1
 275 0290 C7E92E23 	 strd r2,[r7,#184]
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum -= ((q63_t)b0 * d0) >> 14;
 276              	 .loc 1 111 0
 277 0294 D7F8AC30 	 ldr r3,[r7,#172]
 278 0298 1846     	 mov r0,r3
 279 029a 4FEAE071 	 asr r1,r0,#31
 280 029e D7F8A430 	 ldr r3,[r7,#164]
 281 02a2 1A46     	 mov r2,r3
 282 02a4 4FEAE273 	 asr r3,r2,#31
 283 02a8 02FB01F5 	 mul r5,r2,r1
 284 02ac 00FB03F4 	 mul r4,r0,r3
 285 02b0 2C44     	 add r4,r4,r5
 286 02b2 A0FB0223 	 umull r2,r3,r0,r2
 287 02b6 E118     	 adds r1,r4,r3
 288 02b8 0B46     	 mov r3,r1
 289 02ba 910B     	 lsrs r1,r2,#14
 290 02bc B965     	 str r1,[r7,#88]
 291 02be B96D     	 ldr r1,[r7,#88]
 292 02c0 41EA8341 	 orr r1,r1,r3,lsl#18
 293 02c4 B965     	 str r1,[r7,#88]
 294 02c6 9B13     	 asrs r3,r3,#14
 295 02c8 FB65     	 str r3,[r7,#92]
 296 02ca D7E93023 	 ldrd r2,[r7,#192]
 297 02ce D7E91601 	 ldrd r0,[r7,#88]
 298 02d2 101A     	 subs r0,r2,r0
 299 02d4 63EB0101 	 sbc r1,r3,r1
 300 02d8 0246     	 mov r2,r0
 301 02da 0B46     	 mov r3,r1
 302 02dc C7E93023 	 strd r2,[r7,#192]
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)b0 * c0) >> 14;
 303              	 .loc 1 112 0
 304 02e0 D7F8AC30 	 ldr r3,[r7,#172]
 305 02e4 1846     	 mov r0,r3
 306 02e6 4FEAE071 	 asr r1,r0,#31
 307 02ea D7F8A830 	 ldr r3,[r7,#168]
 308 02ee 1A46     	 mov r2,r3
 309 02f0 4FEAE273 	 asr r3,r2,#31
 310 02f4 02FB01F5 	 mul r5,r2,r1
 311 02f8 00FB03F4 	 mul r4,r0,r3
 312 02fc 2C44     	 add r4,r4,r5
 313 02fe A0FB0223 	 umull r2,r3,r0,r2
 314 0302 E118     	 adds r1,r4,r3
 315 0304 0B46     	 mov r3,r1
 316 0306 910B     	 lsrs r1,r2,#14
 317 0308 3965     	 str r1,[r7,#80]
 318 030a 396D     	 ldr r1,[r7,#80]
 319 030c 41EA8341 	 orr r1,r1,r3,lsl#18
 320 0310 3965     	 str r1,[r7,#80]
 321 0312 9B13     	 asrs r3,r3,#14
 322 0314 7B65     	 str r3,[r7,#84]
 323 0316 D7E92E23 	 ldrd r2,[r7,#184]
 324 031a D7E91401 	 ldrd r0,[r7,#80]
 325 031e 8018     	 adds r0,r0,r2
 326 0320 41EB0301 	 adc r1,r1,r3
 327 0324 0246     	 mov r2,r0
 328 0326 0B46     	 mov r3,r1
 329 0328 C7E92E23 	 strd r2,[r7,#184]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       a0 = *pSrcA++;
 330              	 .loc 1 114 0
 331 032c D7F89C20 	 ldr r2,[r7,#156]
 332 0330 131D     	 adds r3,r2,#4
 333 0332 C7F89C30 	 str r3,[r7,#156]
 334 0336 1368     	 ldr r3,[r2]
 335 0338 C7F8B030 	 str r3,[r7,#176]
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       b0 = *pSrcA++;
 336              	 .loc 1 115 0
 337 033c D7F89C20 	 ldr r2,[r7,#156]
 338 0340 131D     	 adds r3,r2,#4
 339 0342 C7F89C30 	 str r3,[r7,#156]
 340 0346 1368     	 ldr r3,[r2]
 341 0348 C7F8AC30 	 str r3,[r7,#172]
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       c0 = *pSrcB++;
 342              	 .loc 1 116 0
 343 034c D7F89820 	 ldr r2,[r7,#152]
 344 0350 131D     	 adds r3,r2,#4
 345 0352 C7F89830 	 str r3,[r7,#152]
 346 0356 1368     	 ldr r3,[r2]
 347 0358 C7F8A830 	 str r3,[r7,#168]
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       d0 = *pSrcB++;  
 348              	 .loc 1 117 0
 349 035c D7F89820 	 ldr r2,[r7,#152]
 350 0360 131D     	 adds r3,r2,#4
 351 0362 C7F89830 	 str r3,[r7,#152]
 352 0366 1368     	 ldr r3,[r2]
 353 0368 C7F8A430 	 str r3,[r7,#164]
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum += ((q63_t)a0 * c0) >> 14;
 354              	 .loc 1 119 0
 355 036c D7F8B030 	 ldr r3,[r7,#176]
 356 0370 1846     	 mov r0,r3
 357 0372 4FEAE071 	 asr r1,r0,#31
 358 0376 D7F8A830 	 ldr r3,[r7,#168]
 359 037a 1A46     	 mov r2,r3
 360 037c 4FEAE273 	 asr r3,r2,#31
 361 0380 02FB01F5 	 mul r5,r2,r1
 362 0384 00FB03F4 	 mul r4,r0,r3
 363 0388 2C44     	 add r4,r4,r5
 364 038a A0FB0223 	 umull r2,r3,r0,r2
 365 038e E118     	 adds r1,r4,r3
 366 0390 0B46     	 mov r3,r1
 367 0392 910B     	 lsrs r1,r2,#14
 368 0394 B964     	 str r1,[r7,#72]
 369 0396 B96C     	 ldr r1,[r7,#72]
 370 0398 41EA8341 	 orr r1,r1,r3,lsl#18
 371 039c B964     	 str r1,[r7,#72]
 372 039e 9B13     	 asrs r3,r3,#14
 373 03a0 FB64     	 str r3,[r7,#76]
 374 03a2 D7E93023 	 ldrd r2,[r7,#192]
 375 03a6 D7E91201 	 ldrd r0,[r7,#72]
 376 03aa 8018     	 adds r0,r0,r2
 377 03ac 41EB0301 	 adc r1,r1,r3
 378 03b0 0246     	 mov r2,r0
 379 03b2 0B46     	 mov r3,r1
 380 03b4 C7E93023 	 strd r2,[r7,#192]
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)a0 * d0) >> 14;
 381              	 .loc 1 120 0
 382 03b8 D7F8B030 	 ldr r3,[r7,#176]
 383 03bc 1846     	 mov r0,r3
 384 03be 4FEAE071 	 asr r1,r0,#31
 385 03c2 D7F8A430 	 ldr r3,[r7,#164]
 386 03c6 1A46     	 mov r2,r3
 387 03c8 4FEAE273 	 asr r3,r2,#31
 388 03cc 02FB01F5 	 mul r5,r2,r1
 389 03d0 00FB03F4 	 mul r4,r0,r3
 390 03d4 2C44     	 add r4,r4,r5
 391 03d6 A0FB0223 	 umull r2,r3,r0,r2
 392 03da E118     	 adds r1,r4,r3
 393 03dc 0B46     	 mov r3,r1
 394 03de 910B     	 lsrs r1,r2,#14
 395 03e0 3964     	 str r1,[r7,#64]
 396 03e2 396C     	 ldr r1,[r7,#64]
 397 03e4 41EA8341 	 orr r1,r1,r3,lsl#18
 398 03e8 3964     	 str r1,[r7,#64]
 399 03ea 9B13     	 asrs r3,r3,#14
 400 03ec 7B64     	 str r3,[r7,#68]
 401 03ee D7E92E23 	 ldrd r2,[r7,#184]
 402 03f2 D7E91001 	 ldrd r0,[r7,#64]
 403 03f6 8018     	 adds r0,r0,r2
 404 03f8 41EB0301 	 adc r1,r1,r3
 405 03fc 0246     	 mov r2,r0
 406 03fe 0B46     	 mov r3,r1
 407 0400 C7E92E23 	 strd r2,[r7,#184]
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum -= ((q63_t)b0 * d0) >> 14;
 408              	 .loc 1 121 0
 409 0404 D7F8AC30 	 ldr r3,[r7,#172]
 410 0408 1846     	 mov r0,r3
 411 040a 4FEAE071 	 asr r1,r0,#31
 412 040e D7F8A430 	 ldr r3,[r7,#164]
 413 0412 1A46     	 mov r2,r3
 414 0414 4FEAE273 	 asr r3,r2,#31
 415 0418 02FB01F5 	 mul r5,r2,r1
 416 041c 00FB03F4 	 mul r4,r0,r3
 417 0420 2C44     	 add r4,r4,r5
 418 0422 A0FB0223 	 umull r2,r3,r0,r2
 419 0426 E118     	 adds r1,r4,r3
 420 0428 0B46     	 mov r3,r1
 421 042a 910B     	 lsrs r1,r2,#14
 422 042c B963     	 str r1,[r7,#56]
 423 042e B96B     	 ldr r1,[r7,#56]
 424 0430 41EA8341 	 orr r1,r1,r3,lsl#18
 425 0434 B963     	 str r1,[r7,#56]
 426 0436 9B13     	 asrs r3,r3,#14
 427 0438 FB63     	 str r3,[r7,#60]
 428 043a D7E93023 	 ldrd r2,[r7,#192]
 429 043e D7E90E01 	 ldrd r0,[r7,#56]
 430 0442 101A     	 subs r0,r2,r0
 431 0444 63EB0101 	 sbc r1,r3,r1
 432 0448 0246     	 mov r2,r0
 433 044a 0B46     	 mov r3,r1
 434 044c C7E93023 	 strd r2,[r7,#192]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)b0 * c0) >> 14;
 435              	 .loc 1 122 0
 436 0450 D7F8AC30 	 ldr r3,[r7,#172]
 437 0454 1846     	 mov r0,r3
 438 0456 4FEAE071 	 asr r1,r0,#31
 439 045a D7F8A830 	 ldr r3,[r7,#168]
 440 045e 1A46     	 mov r2,r3
 441 0460 4FEAE273 	 asr r3,r2,#31
 442 0464 02FB01F5 	 mul r5,r2,r1
 443 0468 00FB03F4 	 mul r4,r0,r3
 444 046c 2C44     	 add r4,r4,r5
 445 046e A0FB0223 	 umull r2,r3,r0,r2
 446 0472 E118     	 adds r1,r4,r3
 447 0474 0B46     	 mov r3,r1
 448 0476 910B     	 lsrs r1,r2,#14
 449 0478 3963     	 str r1,[r7,#48]
 450 047a 396B     	 ldr r1,[r7,#48]
 451 047c 41EA8341 	 orr r1,r1,r3,lsl#18
 452 0480 3963     	 str r1,[r7,#48]
 453 0482 9B13     	 asrs r3,r3,#14
 454 0484 7B63     	 str r3,[r7,#52]
 455 0486 D7E92E23 	 ldrd r2,[r7,#184]
 456 048a D7E90C01 	 ldrd r0,[r7,#48]
 457 048e 8018     	 adds r0,r0,r2
 458 0490 41EB0301 	 adc r1,r1,r3
 459 0494 0246     	 mov r2,r0
 460 0496 0B46     	 mov r3,r1
 461 0498 C7E92E23 	 strd r2,[r7,#184]
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       a0 = *pSrcA++;
 462              	 .loc 1 124 0
 463 049c D7F89C20 	 ldr r2,[r7,#156]
 464 04a0 131D     	 adds r3,r2,#4
 465 04a2 C7F89C30 	 str r3,[r7,#156]
 466 04a6 1368     	 ldr r3,[r2]
 467 04a8 C7F8B030 	 str r3,[r7,#176]
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       b0 = *pSrcA++;
 468              	 .loc 1 125 0
 469 04ac D7F89C20 	 ldr r2,[r7,#156]
 470 04b0 131D     	 adds r3,r2,#4
 471 04b2 C7F89C30 	 str r3,[r7,#156]
 472 04b6 1368     	 ldr r3,[r2]
 473 04b8 C7F8AC30 	 str r3,[r7,#172]
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       c0 = *pSrcB++;
 474              	 .loc 1 126 0
 475 04bc D7F89820 	 ldr r2,[r7,#152]
 476 04c0 131D     	 adds r3,r2,#4
 477 04c2 C7F89830 	 str r3,[r7,#152]
 478 04c6 1368     	 ldr r3,[r2]
 479 04c8 C7F8A830 	 str r3,[r7,#168]
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       d0 = *pSrcB++;  
 480              	 .loc 1 127 0
 481 04cc D7F89820 	 ldr r2,[r7,#152]
 482 04d0 131D     	 adds r3,r2,#4
 483 04d2 C7F89830 	 str r3,[r7,#152]
 484 04d6 1368     	 ldr r3,[r2]
 485 04d8 C7F8A430 	 str r3,[r7,#164]
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum += ((q63_t)a0 * c0) >> 14;
 486              	 .loc 1 129 0
 487 04dc D7F8B030 	 ldr r3,[r7,#176]
 488 04e0 1846     	 mov r0,r3
 489 04e2 4FEAE071 	 asr r1,r0,#31
 490 04e6 D7F8A830 	 ldr r3,[r7,#168]
 491 04ea 1A46     	 mov r2,r3
 492 04ec 4FEAE273 	 asr r3,r2,#31
 493 04f0 02FB01F5 	 mul r5,r2,r1
 494 04f4 00FB03F4 	 mul r4,r0,r3
 495 04f8 2C44     	 add r4,r4,r5
 496 04fa A0FB0223 	 umull r2,r3,r0,r2
 497 04fe E118     	 adds r1,r4,r3
 498 0500 0B46     	 mov r3,r1
 499 0502 910B     	 lsrs r1,r2,#14
 500 0504 B962     	 str r1,[r7,#40]
 501 0506 B96A     	 ldr r1,[r7,#40]
 502 0508 41EA8341 	 orr r1,r1,r3,lsl#18
 503 050c B962     	 str r1,[r7,#40]
 504 050e 9B13     	 asrs r3,r3,#14
 505 0510 FB62     	 str r3,[r7,#44]
 506 0512 D7E93023 	 ldrd r2,[r7,#192]
 507 0516 D7E90A01 	 ldrd r0,[r7,#40]
 508 051a 8018     	 adds r0,r0,r2
 509 051c 41EB0301 	 adc r1,r1,r3
 510 0520 0246     	 mov r2,r0
 511 0522 0B46     	 mov r3,r1
 512 0524 C7E93023 	 strd r2,[r7,#192]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)a0 * d0) >> 14;
 513              	 .loc 1 130 0
 514 0528 D7F8B030 	 ldr r3,[r7,#176]
 515 052c 1846     	 mov r0,r3
 516 052e 4FEAE071 	 asr r1,r0,#31
 517 0532 D7F8A430 	 ldr r3,[r7,#164]
 518 0536 1A46     	 mov r2,r3
 519 0538 4FEAE273 	 asr r3,r2,#31
 520 053c 02FB01F5 	 mul r5,r2,r1
 521 0540 00FB03F4 	 mul r4,r0,r3
 522 0544 2C44     	 add r4,r4,r5
 523 0546 A0FB0223 	 umull r2,r3,r0,r2
 524 054a E118     	 adds r1,r4,r3
 525 054c 0B46     	 mov r3,r1
 526 054e 910B     	 lsrs r1,r2,#14
 527 0550 3962     	 str r1,[r7,#32]
 528 0552 396A     	 ldr r1,[r7,#32]
 529 0554 41EA8341 	 orr r1,r1,r3,lsl#18
 530 0558 3962     	 str r1,[r7,#32]
 531 055a 9B13     	 asrs r3,r3,#14
 532 055c 7B62     	 str r3,[r7,#36]
 533 055e D7E92E23 	 ldrd r2,[r7,#184]
 534 0562 D7E90801 	 ldrd r0,[r7,#32]
 535 0566 8018     	 adds r0,r0,r2
 536 0568 41EB0301 	 adc r1,r1,r3
 537 056c 0246     	 mov r2,r0
 538 056e 0B46     	 mov r3,r1
 539 0570 C7E92E23 	 strd r2,[r7,#184]
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum -= ((q63_t)b0 * d0) >> 14;
 540              	 .loc 1 131 0
 541 0574 D7F8AC30 	 ldr r3,[r7,#172]
 542 0578 1846     	 mov r0,r3
 543 057a 4FEAE071 	 asr r1,r0,#31
 544 057e D7F8A430 	 ldr r3,[r7,#164]
 545 0582 1A46     	 mov r2,r3
 546 0584 4FEAE273 	 asr r3,r2,#31
 547 0588 02FB01F5 	 mul r5,r2,r1
 548 058c 00FB03F4 	 mul r4,r0,r3
 549 0590 2C44     	 add r4,r4,r5
 550 0592 A0FB0223 	 umull r2,r3,r0,r2
 551 0596 E118     	 adds r1,r4,r3
 552 0598 0B46     	 mov r3,r1
 553 059a 910B     	 lsrs r1,r2,#14
 554 059c B961     	 str r1,[r7,#24]
 555 059e B969     	 ldr r1,[r7,#24]
 556 05a0 41EA8341 	 orr r1,r1,r3,lsl#18
 557 05a4 B961     	 str r1,[r7,#24]
 558 05a6 9B13     	 asrs r3,r3,#14
 559 05a8 FB61     	 str r3,[r7,#28]
 560 05aa D7E93023 	 ldrd r2,[r7,#192]
 561 05ae D7E90601 	 ldrd r0,[r7,#24]
 562 05b2 101A     	 subs r0,r2,r0
 563 05b4 63EB0101 	 sbc r1,r3,r1
 564 05b8 0246     	 mov r2,r0
 565 05ba 0B46     	 mov r3,r1
 566 05bc C7E93023 	 strd r2,[r7,#192]
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)b0 * c0) >> 14;
 567              	 .loc 1 132 0
 568 05c0 D7F8AC30 	 ldr r3,[r7,#172]
 569 05c4 1846     	 mov r0,r3
 570 05c6 4FEAE071 	 asr r1,r0,#31
 571 05ca D7F8A830 	 ldr r3,[r7,#168]
 572 05ce 1A46     	 mov r2,r3
 573 05d0 4FEAE273 	 asr r3,r2,#31
 574 05d4 02FB01F5 	 mul r5,r2,r1
 575 05d8 00FB03F4 	 mul r4,r0,r3
 576 05dc 2C44     	 add r4,r4,r5
 577 05de A0FB0223 	 umull r2,r3,r0,r2
 578 05e2 E118     	 adds r1,r4,r3
 579 05e4 0B46     	 mov r3,r1
 580 05e6 910B     	 lsrs r1,r2,#14
 581 05e8 3961     	 str r1,[r7,#16]
 582 05ea 3969     	 ldr r1,[r7,#16]
 583 05ec 41EA8341 	 orr r1,r1,r3,lsl#18
 584 05f0 3961     	 str r1,[r7,#16]
 585 05f2 9B13     	 asrs r3,r3,#14
 586 05f4 7B61     	 str r3,[r7,#20]
 587 05f6 D7E92E23 	 ldrd r2,[r7,#184]
 588 05fa D7E90401 	 ldrd r0,[r7,#16]
 589 05fe 8018     	 adds r0,r0,r2
 590 0600 41EB0301 	 adc r1,r1,r3
 591 0604 0246     	 mov r2,r0
 592 0606 0B46     	 mov r3,r1
 593 0608 C7E92E23 	 strd r2,[r7,#184]
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       /* Decrement the loop counter */
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       blkCnt--;
 594              	 .loc 1 135 0
 595 060c D7F8B430 	 ldr r3,[r7,#180]
 596 0610 013B     	 subs r3,r3,#1
 597 0612 C7F8B430 	 str r3,[r7,#180]
 598              	.L2:
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   {
 599              	 .loc 1 92 0
 600 0616 D7F8B430 	 ldr r3,[r7,#180]
 601 061a 002B     	 cmp r3,#0
 602 061c 7FF40EAD 	 bne .L3
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   }
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   /* If the numSamples  is not a multiple of 4, compute any remaining output samples here.    
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****    ** No loop unrolling is used. */
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   blkCnt = numSamples % 0x4u;
 603              	 .loc 1 140 0
 604 0620 D7F89430 	 ldr r3,[r7,#148]
 605 0624 03F00303 	 and r3,r3,#3
 606 0628 C7F8B430 	 str r3,[r7,#180]
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   while(blkCnt > 0u)
 607              	 .loc 1 142 0
 608 062c B2E0     	 b .L4
 609              	.L5:
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   {
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       a0 = *pSrcA++;
 610              	 .loc 1 144 0
 611 062e D7F89C30 	 ldr r3,[r7,#156]
 612 0632 1A1D     	 adds r2,r3,#4
 613 0634 C7F89C20 	 str r2,[r7,#156]
 614 0638 1B68     	 ldr r3,[r3]
 615 063a C7F8B030 	 str r3,[r7,#176]
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       b0 = *pSrcA++;
 616              	 .loc 1 145 0
 617 063e D7F89C30 	 ldr r3,[r7,#156]
 618 0642 1A1D     	 adds r2,r3,#4
 619 0644 C7F89C20 	 str r2,[r7,#156]
 620 0648 1B68     	 ldr r3,[r3]
 621 064a C7F8AC30 	 str r3,[r7,#172]
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       c0 = *pSrcB++;
 622              	 .loc 1 146 0
 623 064e D7F89830 	 ldr r3,[r7,#152]
 624 0652 1A1D     	 adds r2,r3,#4
 625 0654 C7F89820 	 str r2,[r7,#152]
 626 0658 1B68     	 ldr r3,[r3]
 627 065a C7F8A830 	 str r3,[r7,#168]
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       d0 = *pSrcB++;  
 628              	 .loc 1 147 0
 629 065e D7F89830 	 ldr r3,[r7,#152]
 630 0662 1A1D     	 adds r2,r3,#4
 631 0664 C7F89820 	 str r2,[r7,#152]
 632 0668 1B68     	 ldr r3,[r3]
 633 066a C7F8A430 	 str r3,[r7,#164]
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum += ((q63_t)a0 * c0) >> 14;
 634              	 .loc 1 149 0
 635 066e D7F8B030 	 ldr r3,[r7,#176]
 636 0672 1846     	 mov r0,r3
 637 0674 4FEAE071 	 asr r1,r0,#31
 638 0678 D7F8A830 	 ldr r3,[r7,#168]
 639 067c 1A46     	 mov r2,r3
 640 067e 4FEAE273 	 asr r3,r2,#31
 641 0682 02FB01F5 	 mul r5,r2,r1
 642 0686 00FB03F4 	 mul r4,r0,r3
 643 068a 2C44     	 add r4,r4,r5
 644 068c A0FB0223 	 umull r2,r3,r0,r2
 645 0690 E118     	 adds r1,r4,r3
 646 0692 0B46     	 mov r3,r1
 647 0694 4FEA9238 	 lsr r8,r2,#14
 648 0698 48EA8348 	 orr r8,r8,r3,lsl#18
 649 069c 4FEAA339 	 asr r9,r3,#14
 650 06a0 D7E93023 	 ldrd r2,[r7,#192]
 651 06a4 12EB0802 	 adds r2,r2,r8
 652 06a8 43EB0903 	 adc r3,r3,r9
 653 06ac C7E93023 	 strd r2,[r7,#192]
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)a0 * d0) >> 14;
 654              	 .loc 1 150 0
 655 06b0 D7F8B030 	 ldr r3,[r7,#176]
 656 06b4 1846     	 mov r0,r3
 657 06b6 4FEAE071 	 asr r1,r0,#31
 658 06ba D7F8A430 	 ldr r3,[r7,#164]
 659 06be 1A46     	 mov r2,r3
 660 06c0 4FEAE273 	 asr r3,r2,#31
 661 06c4 02FB01F5 	 mul r5,r2,r1
 662 06c8 00FB03F4 	 mul r4,r0,r3
 663 06cc 2C44     	 add r4,r4,r5
 664 06ce A0FB0223 	 umull r2,r3,r0,r2
 665 06d2 E118     	 adds r1,r4,r3
 666 06d4 0B46     	 mov r3,r1
 667 06d6 4FEA923A 	 lsr r10,r2,#14
 668 06da 4AEA834A 	 orr r10,r10,r3,lsl#18
 669 06de 4FEAA33B 	 asr fp,r3,#14
 670 06e2 D7E92E23 	 ldrd r2,[r7,#184]
 671 06e6 12EB0A02 	 adds r2,r2,r10
 672 06ea 43EB0B03 	 adc r3,r3,fp
 673 06ee C7E92E23 	 strd r2,[r7,#184]
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum -= ((q63_t)b0 * d0) >> 14;
 674              	 .loc 1 151 0
 675 06f2 D7F8AC30 	 ldr r3,[r7,#172]
 676 06f6 1846     	 mov r0,r3
 677 06f8 4FEAE071 	 asr r1,r0,#31
 678 06fc D7F8A430 	 ldr r3,[r7,#164]
 679 0700 1A46     	 mov r2,r3
 680 0702 4FEAE273 	 asr r3,r2,#31
 681 0706 02FB01F5 	 mul r5,r2,r1
 682 070a 00FB03F4 	 mul r4,r0,r3
 683 070e 2C44     	 add r4,r4,r5
 684 0710 A0FB0223 	 umull r2,r3,r0,r2
 685 0714 E118     	 adds r1,r4,r3
 686 0716 0B46     	 mov r3,r1
 687 0718 910B     	 lsrs r1,r2,#14
 688 071a B960     	 str r1,[r7,#8]
 689 071c B968     	 ldr r1,[r7,#8]
 690 071e 41EA8341 	 orr r1,r1,r3,lsl#18
 691 0722 B960     	 str r1,[r7,#8]
 692 0724 9B13     	 asrs r3,r3,#14
 693 0726 FB60     	 str r3,[r7,#12]
 694 0728 D7E93023 	 ldrd r2,[r7,#192]
 695 072c D7E90201 	 ldrd r0,[r7,#8]
 696 0730 101A     	 subs r0,r2,r0
 697 0732 63EB0101 	 sbc r1,r3,r1
 698 0736 0246     	 mov r2,r0
 699 0738 0B46     	 mov r3,r1
 700 073a C7E93023 	 strd r2,[r7,#192]
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)b0 * c0) >> 14;
 701              	 .loc 1 152 0
 702 073e D7F8AC30 	 ldr r3,[r7,#172]
 703 0742 1846     	 mov r0,r3
 704 0744 4FEAE071 	 asr r1,r0,#31
 705 0748 D7F8A830 	 ldr r3,[r7,#168]
 706 074c 1A46     	 mov r2,r3
 707 074e 4FEAE273 	 asr r3,r2,#31
 708 0752 02FB01F5 	 mul r5,r2,r1
 709 0756 00FB03F4 	 mul r4,r0,r3
 710 075a 2C44     	 add r4,r4,r5
 711 075c A0FB0223 	 umull r2,r3,r0,r2
 712 0760 E118     	 adds r1,r4,r3
 713 0762 0B46     	 mov r3,r1
 714 0764 910B     	 lsrs r1,r2,#14
 715 0766 3960     	 str r1,[r7]
 716 0768 3968     	 ldr r1,[r7]
 717 076a 41EA8341 	 orr r1,r1,r3,lsl#18
 718 076e 3960     	 str r1,[r7]
 719 0770 9B13     	 asrs r3,r3,#14
 720 0772 7B60     	 str r3,[r7,#4]
 721 0774 D7E92E23 	 ldrd r2,[r7,#184]
 722 0778 D7E90001 	 ldrd r0,[r7]
 723 077c 8018     	 adds r0,r0,r2
 724 077e 41EB0301 	 adc r1,r1,r3
 725 0782 0246     	 mov r2,r0
 726 0784 0B46     	 mov r3,r1
 727 0786 C7E92E23 	 strd r2,[r7,#184]
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       /* Decrement the loop counter */
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       blkCnt--;
 728              	 .loc 1 155 0
 729 078a D7F8B430 	 ldr r3,[r7,#180]
 730 078e 013B     	 subs r3,r3,#1
 731 0790 C7F8B430 	 str r3,[r7,#180]
 732              	.L4:
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   {
 733              	 .loc 1 142 0
 734 0794 D7F8B430 	 ldr r3,[r7,#180]
 735 0798 002B     	 cmp r3,#0
 736 079a 7FF448AF 	 bne .L5
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   }
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** #else
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   /* Run the below code for Cortex-M0 */
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   while(numSamples > 0u)
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   {
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       a0 = *pSrcA++;
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       b0 = *pSrcA++;
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       c0 = *pSrcB++;
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       d0 = *pSrcB++;  
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum += ((q63_t)a0 * c0) >> 14;
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)a0 * d0) >> 14;
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       real_sum -= ((q63_t)b0 * d0) >> 14;
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       imag_sum += ((q63_t)b0 * c0) >> 14;
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       /* Decrement the loop counter */
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****       numSamples--;
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   }
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** 
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   /* Store the real and imaginary results in 16.48 format  */
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   *realResult = real_sum;
 737              	 .loc 1 181 0
 738 079e D7F89010 	 ldr r1,[r7,#144]
 739 07a2 D7E93023 	 ldrd r2,[r7,#192]
 740 07a6 C1E90023 	 strd r2,[r1]
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c ****   *imagResult = imag_sum;
 741              	 .loc 1 182 0
 742 07aa D7F8E810 	 ldr r1,[r7,#232]
 743 07ae D7E92E23 	 ldrd r2,[r7,#184]
 744 07b2 C1E90023 	 strd r2,[r1]
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q31.c **** }
 745              	 .loc 1 183 0
 746 07b6 CC37     	 adds r7,r7,#204
 747              	.LCFI3:
 748              	 .cfi_def_cfa_offset 28
 749 07b8 BD46     	 mov sp,r7
 750              	.LCFI4:
 751              	 .cfi_def_cfa_register 13
 752              	 
 753 07ba BDE8B00F 	 pop {r4,r5,r7,r8,r9,r10,fp}
 754              	.LCFI5:
 755              	 .cfi_restore 11
 756              	 .cfi_restore 10
 757              	 .cfi_restore 9
 758              	 .cfi_restore 8
 759              	 .cfi_restore 7
 760              	 .cfi_restore 5
 761              	 .cfi_restore 4
 762              	 .cfi_def_cfa_offset 0
 763 07be 7047     	 bx lr
 764              	 .cfi_endproc
 765              	.LFE139:
 767              	 .text
 768              	.Letext0:
 769              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 770              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 771              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_dot_prod_q31.c
    {standard input}:19     .text.arm_cmplx_dot_prod_q31:00000000 $t
    {standard input}:24     .text.arm_cmplx_dot_prod_q31:00000000 arm_cmplx_dot_prod_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
