   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cmplx_conj_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_cmplx_conj_f32,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_cmplx_conj_f32
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_cmplx_conj_f32:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * Title:		arm_cmplx_conj_f32.c    
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * Description:	Floating-point complex conjugate.    
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** * ---------------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**        
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @ingroup groupCmplxMath        
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**        
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @defgroup cmplx_conj Complex Conjugate        
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *        
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Conjugates the elements of a complex data vector.        
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *       
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The <code>pSrc</code> points to the source data and        
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>pDst</code> points to the where the result should be written.        
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>numSamples</code> specifies the number of complex samples        
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * and the data in each array is stored in an interleaved fashion        
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * (real, imag, real, imag, ...).        
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Each array has a total of <code>2*numSamples</code> values.        
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The underlying algorithm is used:        
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *        
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <pre>        
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * for(n=0; n<numSamples; n++) {        
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+0)] = pSrc[(2*n)+0];     // real part        
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+1)] = -pSrc[(2*n)+1];    // imag part        
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * }        
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * </pre>        
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *        
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.        
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**        
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @addtogroup cmplx_conj        
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @{        
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**        
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @brief  Floating-point complex conjugate.        
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pSrc points to the input vector        
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pDst points to the output vector        
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  numSamples number of complex samples in each vector        
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @return none.        
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** void arm_cmplx_conj_f32(
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pSrc,
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pDst,
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t numSamples)
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** {
  27              	 .loc 1 86 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 8FB0     	 sub sp,sp,#60
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 64
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 B960     	 str r1,[r7,#8]
  44 000a 7A60     	 str r2,[r7,#4]
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #ifndef ARM_MATH_CM0_FAMILY
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inR1, inR2, inR3, inR4;
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inI1, inI2, inI3, inI4;
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /*loop Unrolling */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples >> 2u;
  45              	 .loc 1 96 0
  46 000c 7B68     	 ldr r3,[r7,#4]
  47 000e 9B08     	 lsrs r3,r3,#2
  48 0010 7B63     	 str r3,[r7,#52]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.        
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while(blkCnt > 0u)
  49              	 .loc 1 100 0
  50 0012 4FE0     	 b .L2
  51              	.L3:
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* C[0]+jC[1] = A[0]+ j (-1) A[1] */
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read real input samples */
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR1 = pSrc[0];
  52              	 .loc 1 105 0
  53 0014 FB68     	 ldr r3,[r7,#12]
  54 0016 1B68     	 ldr r3,[r3]
  55 0018 3B63     	 str r3,[r7,#48]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store real samples to destination */
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[0] = inR1;
  56              	 .loc 1 107 0
  57 001a BB68     	 ldr r3,[r7,#8]
  58 001c 3A6B     	 ldr r2,[r7,#48]
  59 001e 1A60     	 str r2,[r3]
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR2 = pSrc[2];
  60              	 .loc 1 108 0
  61 0020 FB68     	 ldr r3,[r7,#12]
  62 0022 9B68     	 ldr r3,[r3,#8]
  63 0024 FB62     	 str r3,[r7,#44]
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[2] = inR2;
  64              	 .loc 1 109 0
  65 0026 BB68     	 ldr r3,[r7,#8]
  66 0028 0833     	 adds r3,r3,#8
  67 002a FA6A     	 ldr r2,[r7,#44]
  68 002c 1A60     	 str r2,[r3]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR3 = pSrc[4];
  69              	 .loc 1 110 0
  70 002e FB68     	 ldr r3,[r7,#12]
  71 0030 1B69     	 ldr r3,[r3,#16]
  72 0032 BB62     	 str r3,[r7,#40]
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[4] = inR3;
  73              	 .loc 1 111 0
  74 0034 BB68     	 ldr r3,[r7,#8]
  75 0036 1033     	 adds r3,r3,#16
  76 0038 BA6A     	 ldr r2,[r7,#40]
  77 003a 1A60     	 str r2,[r3]
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR4 = pSrc[6];
  78              	 .loc 1 112 0
  79 003c FB68     	 ldr r3,[r7,#12]
  80 003e 9B69     	 ldr r3,[r3,#24]
  81 0040 7B62     	 str r3,[r7,#36]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[6] = inR4;
  82              	 .loc 1 113 0
  83 0042 BB68     	 ldr r3,[r7,#8]
  84 0044 1833     	 adds r3,r3,#24
  85 0046 7A6A     	 ldr r2,[r7,#36]
  86 0048 1A60     	 str r2,[r3]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = pSrc[1];
  87              	 .loc 1 116 0
  88 004a FB68     	 ldr r3,[r7,#12]
  89 004c 5B68     	 ldr r3,[r3,#4]
  90 004e 3B62     	 str r3,[r7,#32]
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = pSrc[3];
  91              	 .loc 1 117 0
  92 0050 FB68     	 ldr r3,[r7,#12]
  93 0052 DB68     	 ldr r3,[r3,#12]
  94 0054 FB61     	 str r3,[r7,#28]
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = -inI1;
  95              	 .loc 1 120 0
  96 0056 3B6A     	 ldr r3,[r7,#32]
  97 0058 83F00043 	 eor r3,r3,#-2147483648
  98 005c 3B62     	 str r3,[r7,#32]
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = pSrc[5];
  99              	 .loc 1 123 0
 100 005e FB68     	 ldr r3,[r7,#12]
 101 0060 5B69     	 ldr r3,[r3,#20]
 102 0062 BB61     	 str r3,[r7,#24]
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = -inI2;
 103              	 .loc 1 126 0
 104 0064 FB69     	 ldr r3,[r7,#28]
 105 0066 83F00043 	 eor r3,r3,#-2147483648
 106 006a FB61     	 str r3,[r7,#28]
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = pSrc[7];
 107              	 .loc 1 129 0
 108 006c FB68     	 ldr r3,[r7,#12]
 109 006e DB69     	 ldr r3,[r3,#28]
 110 0070 7B61     	 str r3,[r7,#20]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = -inI3;
 111              	 .loc 1 132 0
 112 0072 BB69     	 ldr r3,[r7,#24]
 113 0074 83F00043 	 eor r3,r3,#-2147483648
 114 0078 BB61     	 str r3,[r7,#24]
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[1] = inI1;
 115              	 .loc 1 135 0
 116 007a BB68     	 ldr r3,[r7,#8]
 117 007c 0433     	 adds r3,r3,#4
 118 007e 3A6A     	 ldr r2,[r7,#32]
 119 0080 1A60     	 str r2,[r3]
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[3] = inI2;
 120              	 .loc 1 136 0
 121 0082 BB68     	 ldr r3,[r7,#8]
 122 0084 0C33     	 adds r3,r3,#12
 123 0086 FA69     	 ldr r2,[r7,#28]
 124 0088 1A60     	 str r2,[r3]
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = -inI4;
 125              	 .loc 1 139 0
 126 008a 7B69     	 ldr r3,[r7,#20]
 127 008c 83F00043 	 eor r3,r3,#-2147483648
 128 0090 7B61     	 str r3,[r7,#20]
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[5] = inI3;
 129              	 .loc 1 142 0
 130 0092 BB68     	 ldr r3,[r7,#8]
 131 0094 1433     	 adds r3,r3,#20
 132 0096 BA69     	 ldr r2,[r7,#24]
 133 0098 1A60     	 str r2,[r3]
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment source pointer by 8 to process next sampels */
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pSrc += 8u;
 134              	 .loc 1 145 0
 135 009a FB68     	 ldr r3,[r7,#12]
 136 009c 2033     	 adds r3,r3,#32
 137 009e FB60     	 str r3,[r7,#12]
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary sample to destination */
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[7] = inI4;
 138              	 .loc 1 148 0
 139 00a0 BB68     	 ldr r3,[r7,#8]
 140 00a2 1C33     	 adds r3,r3,#28
 141 00a4 7A69     	 ldr r2,[r7,#20]
 142 00a6 1A60     	 str r2,[r3]
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment destination pointer by 8 to store next samples */
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst += 8u;
 143              	 .loc 1 151 0
 144 00a8 BB68     	 ldr r3,[r7,#8]
 145 00aa 2033     	 adds r3,r3,#32
 146 00ac BB60     	 str r3,[r7,#8]
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 147              	 .loc 1 154 0
 148 00ae 7B6B     	 ldr r3,[r7,#52]
 149 00b0 013B     	 subs r3,r3,#1
 150 00b2 7B63     	 str r3,[r7,#52]
 151              	.L2:
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 152              	 .loc 1 100 0
 153 00b4 7B6B     	 ldr r3,[r7,#52]
 154 00b6 002B     	 cmp r3,#0
 155 00b8 ACD1     	 bne .L3
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.        
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** No loop unrolling is used. */
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples % 0x4u;
 156              	 .loc 1 159 0
 157 00ba 7B68     	 ldr r3,[r7,#4]
 158 00bc 03F00303 	 and r3,r3,#3
 159 00c0 7B63     	 str r3,[r7,#52]
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #else
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M0 */
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples;
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while(blkCnt > 0u)
 160              	 .loc 1 168 0
 161 00c2 14E0     	 b .L4
 162              	.L5:
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* realOut + j (imagOut) = realIn + j (-1) imagIn */
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = *pSrc++;
 163              	 .loc 1 172 0
 164 00c4 BB68     	 ldr r3,[r7,#8]
 165 00c6 1A1D     	 adds r2,r3,#4
 166 00c8 BA60     	 str r2,[r7,#8]
 167 00ca FA68     	 ldr r2,[r7,#12]
 168 00cc 111D     	 adds r1,r2,#4
 169 00ce F960     	 str r1,[r7,#12]
 170 00d0 1268     	 ldr r2,[r2]
 171 00d2 1A60     	 str r2,[r3]
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = -*pSrc++;
 172              	 .loc 1 173 0
 173 00d4 BB68     	 ldr r3,[r7,#8]
 174 00d6 1A1D     	 adds r2,r3,#4
 175 00d8 BA60     	 str r2,[r7,#8]
 176 00da FA68     	 ldr r2,[r7,#12]
 177 00dc 111D     	 adds r1,r2,#4
 178 00de F960     	 str r1,[r7,#12]
 179 00e0 1268     	 ldr r2,[r2]
 180 00e2 82F00042 	 eor r2,r2,#-2147483648
 181 00e6 1A60     	 str r2,[r3]
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 182              	 .loc 1 176 0
 183 00e8 7B6B     	 ldr r3,[r7,#52]
 184 00ea 013B     	 subs r3,r3,#1
 185 00ec 7B63     	 str r3,[r7,#52]
 186              	.L4:
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 187              	 .loc 1 168 0
 188 00ee 7B6B     	 ldr r3,[r7,#52]
 189 00f0 002B     	 cmp r3,#0
 190 00f2 E7D1     	 bne .L5
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_conj_f32.c **** }
 191              	 .loc 1 178 0
 192 00f4 3C37     	 adds r7,r7,#60
 193              	.LCFI3:
 194              	 .cfi_def_cfa_offset 4
 195 00f6 BD46     	 mov sp,r7
 196              	.LCFI4:
 197              	 .cfi_def_cfa_register 13
 198              	 
 199 00f8 5DF8047B 	 ldr r7,[sp],#4
 200              	.LCFI5:
 201              	 .cfi_restore 7
 202              	 .cfi_def_cfa_offset 0
 203 00fc 7047     	 bx lr
 204              	 .cfi_endproc
 205              	.LFE139:
 207 00fe 00BF     	 .text
 208              	.Letext0:
 209              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 210              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 211              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_conj_f32.c
    {standard input}:19     .text.arm_cmplx_conj_f32:00000000 $t
    {standard input}:24     .text.arm_cmplx_conj_f32:00000000 arm_cmplx_conj_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
