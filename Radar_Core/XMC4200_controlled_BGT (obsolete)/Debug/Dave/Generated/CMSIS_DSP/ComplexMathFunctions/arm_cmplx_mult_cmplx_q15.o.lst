   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cmplx_mult_cmplx_q15.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_cmplx_mult_cmplx_q15,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_cmplx_mult_cmplx_q15
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_cmplx_mult_cmplx_q15:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *    
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *    
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * Title:	    arm_cmplx_mult_cmplx_q15.c    
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *    
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * Description:	Q15 complex-by-complex multiplication    
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *    
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *  
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** *
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @ingroup groupCmplxMath    
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @addtogroup CmplxByCmplxMult    
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @brief  Q15 complex-by-complex multiplication    
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  *pSrcA points to the first input vector    
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  *pSrcB points to the second input vector    
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[out]  *pDst  points to the output vector    
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  numSamples number of complex samples in each vector    
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @return none.    
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *    
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * <b>Scaling and Overflow Behavior:</b>    
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * \par    
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * The function implements 1.15 by 1.15 multiplications and finally output is converted into 3.13 f
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** void arm_cmplx_mult_cmplx_q15(
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pSrcA,
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pSrcB,
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pDst,
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t numSamples)
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** {
  27              	 .loc 1 70 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 89B0     	 sub sp,sp,#36
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 40
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 B960     	 str r1,[r7,#8]
  44 000a 7A60     	 str r2,[r7,#4]
  45 000c 3B60     	 str r3,[r7]
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t a, b, c, d;                              /* Temporary variables to store real and imaginary
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #ifndef ARM_MATH_CM0_FAMILY
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t blkCnt;                               /* loop counters */
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* loop Unrolling */
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples >> 2u;
  46              	 .loc 1 79 0
  47 000e 3B68     	 ldr r3,[r7]
  48 0010 9B08     	 lsrs r3,r3,#2
  49 0012 FB61     	 str r3,[r7,#28]
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while(blkCnt > 0u)
  50              	 .loc 1 83 0
  51 0014 0AE1     	 b .L2
  52              	.L3:
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
  53              	 .loc 1 87 0
  54 0016 FB68     	 ldr r3,[r7,#12]
  55 0018 9A1C     	 adds r2,r3,#2
  56 001a FA60     	 str r2,[r7,#12]
  57 001c 1B88     	 ldrh r3,[r3]
  58 001e 7B83     	 strh r3,[r7,#26]
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
  59              	 .loc 1 88 0
  60 0020 FB68     	 ldr r3,[r7,#12]
  61 0022 9A1C     	 adds r2,r3,#2
  62 0024 FA60     	 str r2,[r7,#12]
  63 0026 1B88     	 ldrh r3,[r3]
  64 0028 3B83     	 strh r3,[r7,#24]
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
  65              	 .loc 1 89 0
  66 002a BB68     	 ldr r3,[r7,#8]
  67 002c 9A1C     	 adds r2,r3,#2
  68 002e BA60     	 str r2,[r7,#8]
  69 0030 1B88     	 ldrh r3,[r3]
  70 0032 FB82     	 strh r3,[r7,#22]
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
  71              	 .loc 1 90 0
  72 0034 BB68     	 ldr r3,[r7,#8]
  73 0036 9A1C     	 adds r2,r3,#2
  74 0038 BA60     	 str r2,[r7,#8]
  75 003a 1B88     	 ldrh r3,[r3]
  76 003c BB82     	 strh r3,[r7,#20]
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
  77              	 .loc 1 93 0
  78 003e 7B68     	 ldr r3,[r7,#4]
  79 0040 9A1C     	 adds r2,r3,#2
  80 0042 7A60     	 str r2,[r7,#4]
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  81              	 .loc 1 94 0
  82 0044 B7F91A20 	 ldrsh r2,[r7,#26]
  83 0048 B7F91610 	 ldrsh r1,[r7,#22]
  84 004c 01FB02F2 	 mul r2,r1,r2
  85 0050 5214     	 asrs r2,r2,#17
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  86              	 .loc 1 93 0
  87 0052 91B2     	 uxth r1,r2
  88              	 .loc 1 94 0
  89 0054 B7F91820 	 ldrsh r2,[r7,#24]
  90 0058 B7F91400 	 ldrsh r0,[r7,#20]
  91 005c 00FB02F2 	 mul r2,r0,r2
  92 0060 5214     	 asrs r2,r2,#17
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  93              	 .loc 1 93 0
  94 0062 92B2     	 uxth r2,r2
  95 0064 8A1A     	 subs r2,r1,r2
  96 0066 92B2     	 uxth r2,r2
  97 0068 92B2     	 uxth r2,r2
  98 006a 1A80     	 strh r2,[r3]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
  99              	 .loc 1 96 0
 100 006c 7B68     	 ldr r3,[r7,#4]
 101 006e 9A1C     	 adds r2,r3,#2
 102 0070 7A60     	 str r2,[r7,#4]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 103              	 .loc 1 97 0
 104 0072 B7F91A20 	 ldrsh r2,[r7,#26]
 105 0076 B7F91410 	 ldrsh r1,[r7,#20]
 106 007a 01FB02F2 	 mul r2,r1,r2
 107 007e 5214     	 asrs r2,r2,#17
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 108              	 .loc 1 96 0
 109 0080 91B2     	 uxth r1,r2
 110              	 .loc 1 97 0
 111 0082 B7F91820 	 ldrsh r2,[r7,#24]
 112 0086 B7F91600 	 ldrsh r0,[r7,#22]
 113 008a 00FB02F2 	 mul r2,r0,r2
 114 008e 5214     	 asrs r2,r2,#17
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 115              	 .loc 1 96 0
 116 0090 92B2     	 uxth r2,r2
 117 0092 0A44     	 add r2,r2,r1
 118 0094 92B2     	 uxth r2,r2
 119 0096 92B2     	 uxth r2,r2
 120 0098 1A80     	 strh r2,[r3]
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 121              	 .loc 1 99 0
 122 009a FB68     	 ldr r3,[r7,#12]
 123 009c 9A1C     	 adds r2,r3,#2
 124 009e FA60     	 str r2,[r7,#12]
 125 00a0 1B88     	 ldrh r3,[r3]
 126 00a2 7B83     	 strh r3,[r7,#26]
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 127              	 .loc 1 100 0
 128 00a4 FB68     	 ldr r3,[r7,#12]
 129 00a6 9A1C     	 adds r2,r3,#2
 130 00a8 FA60     	 str r2,[r7,#12]
 131 00aa 1B88     	 ldrh r3,[r3]
 132 00ac 3B83     	 strh r3,[r7,#24]
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 133              	 .loc 1 101 0
 134 00ae BB68     	 ldr r3,[r7,#8]
 135 00b0 9A1C     	 adds r2,r3,#2
 136 00b2 BA60     	 str r2,[r7,#8]
 137 00b4 1B88     	 ldrh r3,[r3]
 138 00b6 FB82     	 strh r3,[r7,#22]
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 139              	 .loc 1 102 0
 140 00b8 BB68     	 ldr r3,[r7,#8]
 141 00ba 9A1C     	 adds r2,r3,#2
 142 00bc BA60     	 str r2,[r7,#8]
 143 00be 1B88     	 ldrh r3,[r3]
 144 00c0 BB82     	 strh r3,[r7,#20]
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 145              	 .loc 1 105 0
 146 00c2 7B68     	 ldr r3,[r7,#4]
 147 00c4 9A1C     	 adds r2,r3,#2
 148 00c6 7A60     	 str r2,[r7,#4]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 149              	 .loc 1 106 0
 150 00c8 B7F91A20 	 ldrsh r2,[r7,#26]
 151 00cc B7F91610 	 ldrsh r1,[r7,#22]
 152 00d0 01FB02F2 	 mul r2,r1,r2
 153 00d4 5214     	 asrs r2,r2,#17
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 154              	 .loc 1 105 0
 155 00d6 91B2     	 uxth r1,r2
 156              	 .loc 1 106 0
 157 00d8 B7F91820 	 ldrsh r2,[r7,#24]
 158 00dc B7F91400 	 ldrsh r0,[r7,#20]
 159 00e0 00FB02F2 	 mul r2,r0,r2
 160 00e4 5214     	 asrs r2,r2,#17
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 161              	 .loc 1 105 0
 162 00e6 92B2     	 uxth r2,r2
 163 00e8 8A1A     	 subs r2,r1,r2
 164 00ea 92B2     	 uxth r2,r2
 165 00ec 92B2     	 uxth r2,r2
 166 00ee 1A80     	 strh r2,[r3]
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 167              	 .loc 1 108 0
 168 00f0 7B68     	 ldr r3,[r7,#4]
 169 00f2 9A1C     	 adds r2,r3,#2
 170 00f4 7A60     	 str r2,[r7,#4]
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 171              	 .loc 1 109 0
 172 00f6 B7F91A20 	 ldrsh r2,[r7,#26]
 173 00fa B7F91410 	 ldrsh r1,[r7,#20]
 174 00fe 01FB02F2 	 mul r2,r1,r2
 175 0102 5214     	 asrs r2,r2,#17
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 176              	 .loc 1 108 0
 177 0104 91B2     	 uxth r1,r2
 178              	 .loc 1 109 0
 179 0106 B7F91820 	 ldrsh r2,[r7,#24]
 180 010a B7F91600 	 ldrsh r0,[r7,#22]
 181 010e 00FB02F2 	 mul r2,r0,r2
 182 0112 5214     	 asrs r2,r2,#17
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 183              	 .loc 1 108 0
 184 0114 92B2     	 uxth r2,r2
 185 0116 0A44     	 add r2,r2,r1
 186 0118 92B2     	 uxth r2,r2
 187 011a 92B2     	 uxth r2,r2
 188 011c 1A80     	 strh r2,[r3]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 189              	 .loc 1 111 0
 190 011e FB68     	 ldr r3,[r7,#12]
 191 0120 9A1C     	 adds r2,r3,#2
 192 0122 FA60     	 str r2,[r7,#12]
 193 0124 1B88     	 ldrh r3,[r3]
 194 0126 7B83     	 strh r3,[r7,#26]
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 195              	 .loc 1 112 0
 196 0128 FB68     	 ldr r3,[r7,#12]
 197 012a 9A1C     	 adds r2,r3,#2
 198 012c FA60     	 str r2,[r7,#12]
 199 012e 1B88     	 ldrh r3,[r3]
 200 0130 3B83     	 strh r3,[r7,#24]
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 201              	 .loc 1 113 0
 202 0132 BB68     	 ldr r3,[r7,#8]
 203 0134 9A1C     	 adds r2,r3,#2
 204 0136 BA60     	 str r2,[r7,#8]
 205 0138 1B88     	 ldrh r3,[r3]
 206 013a FB82     	 strh r3,[r7,#22]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 207              	 .loc 1 114 0
 208 013c BB68     	 ldr r3,[r7,#8]
 209 013e 9A1C     	 adds r2,r3,#2
 210 0140 BA60     	 str r2,[r7,#8]
 211 0142 1B88     	 ldrh r3,[r3]
 212 0144 BB82     	 strh r3,[r7,#20]
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 213              	 .loc 1 117 0
 214 0146 7B68     	 ldr r3,[r7,#4]
 215 0148 9A1C     	 adds r2,r3,#2
 216 014a 7A60     	 str r2,[r7,#4]
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 217              	 .loc 1 118 0
 218 014c B7F91A20 	 ldrsh r2,[r7,#26]
 219 0150 B7F91610 	 ldrsh r1,[r7,#22]
 220 0154 01FB02F2 	 mul r2,r1,r2
 221 0158 5214     	 asrs r2,r2,#17
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 222              	 .loc 1 117 0
 223 015a 91B2     	 uxth r1,r2
 224              	 .loc 1 118 0
 225 015c B7F91820 	 ldrsh r2,[r7,#24]
 226 0160 B7F91400 	 ldrsh r0,[r7,#20]
 227 0164 00FB02F2 	 mul r2,r0,r2
 228 0168 5214     	 asrs r2,r2,#17
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 229              	 .loc 1 117 0
 230 016a 92B2     	 uxth r2,r2
 231 016c 8A1A     	 subs r2,r1,r2
 232 016e 92B2     	 uxth r2,r2
 233 0170 92B2     	 uxth r2,r2
 234 0172 1A80     	 strh r2,[r3]
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 235              	 .loc 1 120 0
 236 0174 7B68     	 ldr r3,[r7,#4]
 237 0176 9A1C     	 adds r2,r3,#2
 238 0178 7A60     	 str r2,[r7,#4]
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 239              	 .loc 1 121 0
 240 017a B7F91A20 	 ldrsh r2,[r7,#26]
 241 017e B7F91410 	 ldrsh r1,[r7,#20]
 242 0182 01FB02F2 	 mul r2,r1,r2
 243 0186 5214     	 asrs r2,r2,#17
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 244              	 .loc 1 120 0
 245 0188 91B2     	 uxth r1,r2
 246              	 .loc 1 121 0
 247 018a B7F91820 	 ldrsh r2,[r7,#24]
 248 018e B7F91600 	 ldrsh r0,[r7,#22]
 249 0192 00FB02F2 	 mul r2,r0,r2
 250 0196 5214     	 asrs r2,r2,#17
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 251              	 .loc 1 120 0
 252 0198 92B2     	 uxth r2,r2
 253 019a 0A44     	 add r2,r2,r1
 254 019c 92B2     	 uxth r2,r2
 255 019e 92B2     	 uxth r2,r2
 256 01a0 1A80     	 strh r2,[r3]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 257              	 .loc 1 123 0
 258 01a2 FB68     	 ldr r3,[r7,#12]
 259 01a4 9A1C     	 adds r2,r3,#2
 260 01a6 FA60     	 str r2,[r7,#12]
 261 01a8 1B88     	 ldrh r3,[r3]
 262 01aa 7B83     	 strh r3,[r7,#26]
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 263              	 .loc 1 124 0
 264 01ac FB68     	 ldr r3,[r7,#12]
 265 01ae 9A1C     	 adds r2,r3,#2
 266 01b0 FA60     	 str r2,[r7,#12]
 267 01b2 1B88     	 ldrh r3,[r3]
 268 01b4 3B83     	 strh r3,[r7,#24]
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 269              	 .loc 1 125 0
 270 01b6 BB68     	 ldr r3,[r7,#8]
 271 01b8 9A1C     	 adds r2,r3,#2
 272 01ba BA60     	 str r2,[r7,#8]
 273 01bc 1B88     	 ldrh r3,[r3]
 274 01be FB82     	 strh r3,[r7,#22]
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 275              	 .loc 1 126 0
 276 01c0 BB68     	 ldr r3,[r7,#8]
 277 01c2 9A1C     	 adds r2,r3,#2
 278 01c4 BA60     	 str r2,[r7,#8]
 279 01c6 1B88     	 ldrh r3,[r3]
 280 01c8 BB82     	 strh r3,[r7,#20]
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 281              	 .loc 1 129 0
 282 01ca 7B68     	 ldr r3,[r7,#4]
 283 01cc 9A1C     	 adds r2,r3,#2
 284 01ce 7A60     	 str r2,[r7,#4]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 285              	 .loc 1 130 0
 286 01d0 B7F91A20 	 ldrsh r2,[r7,#26]
 287 01d4 B7F91610 	 ldrsh r1,[r7,#22]
 288 01d8 01FB02F2 	 mul r2,r1,r2
 289 01dc 5214     	 asrs r2,r2,#17
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 290              	 .loc 1 129 0
 291 01de 91B2     	 uxth r1,r2
 292              	 .loc 1 130 0
 293 01e0 B7F91820 	 ldrsh r2,[r7,#24]
 294 01e4 B7F91400 	 ldrsh r0,[r7,#20]
 295 01e8 00FB02F2 	 mul r2,r0,r2
 296 01ec 5214     	 asrs r2,r2,#17
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 297              	 .loc 1 129 0
 298 01ee 92B2     	 uxth r2,r2
 299 01f0 8A1A     	 subs r2,r1,r2
 300 01f2 92B2     	 uxth r2,r2
 301 01f4 92B2     	 uxth r2,r2
 302 01f6 1A80     	 strh r2,[r3]
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 303              	 .loc 1 132 0
 304 01f8 7B68     	 ldr r3,[r7,#4]
 305 01fa 9A1C     	 adds r2,r3,#2
 306 01fc 7A60     	 str r2,[r7,#4]
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 307              	 .loc 1 133 0
 308 01fe B7F91A20 	 ldrsh r2,[r7,#26]
 309 0202 B7F91410 	 ldrsh r1,[r7,#20]
 310 0206 01FB02F2 	 mul r2,r1,r2
 311 020a 5214     	 asrs r2,r2,#17
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 312              	 .loc 1 132 0
 313 020c 91B2     	 uxth r1,r2
 314              	 .loc 1 133 0
 315 020e B7F91820 	 ldrsh r2,[r7,#24]
 316 0212 B7F91600 	 ldrsh r0,[r7,#22]
 317 0216 00FB02F2 	 mul r2,r0,r2
 318 021a 5214     	 asrs r2,r2,#17
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 319              	 .loc 1 132 0
 320 021c 92B2     	 uxth r2,r2
 321 021e 0A44     	 add r2,r2,r1
 322 0220 92B2     	 uxth r2,r2
 323 0222 92B2     	 uxth r2,r2
 324 0224 1A80     	 strh r2,[r3]
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 325              	 .loc 1 136 0
 326 0226 FB69     	 ldr r3,[r7,#28]
 327 0228 013B     	 subs r3,r3,#1
 328 022a FB61     	 str r3,[r7,#28]
 329              	.L2:
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 330              	 .loc 1 83 0
 331 022c FB69     	 ldr r3,[r7,#28]
 332 022e 002B     	 cmp r3,#0
 333 0230 7FF4F1AE 	 bne .L3
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    ** No loop unrolling is used. */
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples % 0x4u;
 334              	 .loc 1 141 0
 335 0234 3B68     	 ldr r3,[r7]
 336 0236 03F00303 	 and r3,r3,#3
 337 023a FB61     	 str r3,[r7,#28]
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while(blkCnt > 0u)
 338              	 .loc 1 143 0
 339 023c 44E0     	 b .L4
 340              	.L5:
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 341              	 .loc 1 147 0
 342 023e FB68     	 ldr r3,[r7,#12]
 343 0240 9A1C     	 adds r2,r3,#2
 344 0242 FA60     	 str r2,[r7,#12]
 345 0244 1B88     	 ldrh r3,[r3]
 346 0246 7B83     	 strh r3,[r7,#26]
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 347              	 .loc 1 148 0
 348 0248 FB68     	 ldr r3,[r7,#12]
 349 024a 9A1C     	 adds r2,r3,#2
 350 024c FA60     	 str r2,[r7,#12]
 351 024e 1B88     	 ldrh r3,[r3]
 352 0250 3B83     	 strh r3,[r7,#24]
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 353              	 .loc 1 149 0
 354 0252 BB68     	 ldr r3,[r7,#8]
 355 0254 9A1C     	 adds r2,r3,#2
 356 0256 BA60     	 str r2,[r7,#8]
 357 0258 1B88     	 ldrh r3,[r3]
 358 025a FB82     	 strh r3,[r7,#22]
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 359              	 .loc 1 150 0
 360 025c BB68     	 ldr r3,[r7,#8]
 361 025e 9A1C     	 adds r2,r3,#2
 362 0260 BA60     	 str r2,[r7,#8]
 363 0262 1B88     	 ldrh r3,[r3]
 364 0264 BB82     	 strh r3,[r7,#20]
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 365              	 .loc 1 153 0
 366 0266 7B68     	 ldr r3,[r7,#4]
 367 0268 9A1C     	 adds r2,r3,#2
 368 026a 7A60     	 str r2,[r7,#4]
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 369              	 .loc 1 154 0
 370 026c B7F91A20 	 ldrsh r2,[r7,#26]
 371 0270 B7F91610 	 ldrsh r1,[r7,#22]
 372 0274 01FB02F2 	 mul r2,r1,r2
 373 0278 5214     	 asrs r2,r2,#17
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 374              	 .loc 1 153 0
 375 027a 91B2     	 uxth r1,r2
 376              	 .loc 1 154 0
 377 027c B7F91820 	 ldrsh r2,[r7,#24]
 378 0280 B7F91400 	 ldrsh r0,[r7,#20]
 379 0284 00FB02F2 	 mul r2,r0,r2
 380 0288 5214     	 asrs r2,r2,#17
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 381              	 .loc 1 153 0
 382 028a 92B2     	 uxth r2,r2
 383 028c 8A1A     	 subs r2,r1,r2
 384 028e 92B2     	 uxth r2,r2
 385 0290 92B2     	 uxth r2,r2
 386 0292 1A80     	 strh r2,[r3]
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 387              	 .loc 1 156 0
 388 0294 7B68     	 ldr r3,[r7,#4]
 389 0296 9A1C     	 adds r2,r3,#2
 390 0298 7A60     	 str r2,[r7,#4]
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 391              	 .loc 1 157 0
 392 029a B7F91A20 	 ldrsh r2,[r7,#26]
 393 029e B7F91410 	 ldrsh r1,[r7,#20]
 394 02a2 01FB02F2 	 mul r2,r1,r2
 395 02a6 5214     	 asrs r2,r2,#17
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 396              	 .loc 1 156 0
 397 02a8 91B2     	 uxth r1,r2
 398              	 .loc 1 157 0
 399 02aa B7F91820 	 ldrsh r2,[r7,#24]
 400 02ae B7F91600 	 ldrsh r0,[r7,#22]
 401 02b2 00FB02F2 	 mul r2,r0,r2
 402 02b6 5214     	 asrs r2,r2,#17
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 403              	 .loc 1 156 0
 404 02b8 92B2     	 uxth r2,r2
 405 02ba 0A44     	 add r2,r2,r1
 406 02bc 92B2     	 uxth r2,r2
 407 02be 92B2     	 uxth r2,r2
 408 02c0 1A80     	 strh r2,[r3]
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 409              	 .loc 1 160 0
 410 02c2 FB69     	 ldr r3,[r7,#28]
 411 02c4 013B     	 subs r3,r3,#1
 412 02c6 FB61     	 str r3,[r7,#28]
 413              	.L4:
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 414              	 .loc 1 143 0
 415 02c8 FB69     	 ldr r3,[r7,#28]
 416 02ca 002B     	 cmp r3,#0
 417 02cc B7D1     	 bne .L5
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #else
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Run the below code for Cortex-M0 */
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while(numSamples > 0u)
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 184:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     numSamples--;
 185:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 186:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 187:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 188:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 189:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** }
 418              	 .loc 1 189 0
 419 02ce 2437     	 adds r7,r7,#36
 420              	.LCFI3:
 421              	 .cfi_def_cfa_offset 4
 422 02d0 BD46     	 mov sp,r7
 423              	.LCFI4:
 424              	 .cfi_def_cfa_register 13
 425              	 
 426 02d2 5DF8047B 	 ldr r7,[sp],#4
 427              	.LCFI5:
 428              	 .cfi_restore 7
 429              	 .cfi_def_cfa_offset 0
 430 02d6 7047     	 bx lr
 431              	 .cfi_endproc
 432              	.LFE139:
 434              	 .text
 435              	.Letext0:
 436              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 437              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 438              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_cmplx_q15.c
    {standard input}:19     .text.arm_cmplx_mult_cmplx_q15:00000000 $t
    {standard input}:24     .text.arm_cmplx_mult_cmplx_q15:00000000 arm_cmplx_mult_cmplx_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
