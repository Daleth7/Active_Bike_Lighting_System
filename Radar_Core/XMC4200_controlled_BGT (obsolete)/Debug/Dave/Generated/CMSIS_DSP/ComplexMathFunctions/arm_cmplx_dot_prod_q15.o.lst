   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cmplx_dot_prod_q15.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_cmplx_dot_prod_q15,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_cmplx_dot_prod_q15
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_cmplx_dot_prod_q15:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *    
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *    
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * Title:		arm_cmplx_dot_prod_q15.c    
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *    
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * Description:	Processing function for the Q15 Complex Dot product    
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *    
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *  
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** *
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * POSSIBILITY OF SUCH DAMAGE.  
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @ingroup groupCmplxMath    
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  */
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @addtogroup cmplx_dot_prod    
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  */
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @brief  Q15 complex dot product    
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @param  *pSrcA points to the first input vector    
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @param  *pSrcB points to the second input vector    
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @param  numSamples number of complex samples in each vector    
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @param  *realResult real part of the result returned here    
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @param  *imagResult imaginary part of the result returned here    
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * @return none.    
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * <b>Scaling and Overflow Behavior:</b>    
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * \par    
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * The function is implemented using an internal 64-bit accumulator.    
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * The intermediate 1.15 by 1.15 multiplications are performed with full precision and yield a 2.30
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * These are accumulated in a 64-bit accumulator with 34.30 precision.    
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * As a final step, the accumulators are converted to 8.24 format.    
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  * The return results <code>realResult</code> and <code>imagResult</code> are in 8.24 format.    
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****  */
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** void arm_cmplx_dot_prod_q15(
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q15_t * pSrcA,
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q15_t * pSrcB,
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   uint32_t numSamples,
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q31_t * realResult,
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q31_t * imagResult)
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** {
  27              	 .loc 1 76 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 2DE9B003 	 push {r4,r5,r7,r8,r9}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 20
  35              	 .cfi_offset 4,-20
  36              	 .cfi_offset 5,-16
  37              	 .cfi_offset 7,-12
  38              	 .cfi_offset 8,-8
  39              	 .cfi_offset 9,-4
  40 0004 8DB0     	 sub sp,sp,#52
  41              	.LCFI1:
  42              	 .cfi_def_cfa_offset 72
  43 0006 00AF     	 add r7,sp,#0
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 7
  46 0008 F860     	 str r0,[r7,#12]
  47 000a B960     	 str r1,[r7,#8]
  48 000c 7A60     	 str r2,[r7,#4]
  49 000e 3B60     	 str r3,[r7]
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q63_t real_sum = 0, imag_sum = 0;              /* Temporary result storage */
  50              	 .loc 1 77 0
  51 0010 4FF00002 	 mov r2,#0
  52 0014 4FF00003 	 mov r3,#0
  53 0018 C7E90A23 	 strd r2,[r7,#40]
  54 001c 4FF00002 	 mov r2,#0
  55 0020 4FF00003 	 mov r3,#0
  56 0024 C7E90823 	 strd r2,[r7,#32]
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   q15_t a0,b0,c0,d0;
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #ifndef ARM_MATH_CM0_FAMILY
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   uint32_t blkCnt;                               /* loop counter */
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /*loop Unrolling */
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   blkCnt = numSamples >> 2u;
  57              	 .loc 1 87 0
  58 0028 7B68     	 ldr r3,[r7,#4]
  59 002a 9B08     	 lsrs r3,r3,#2
  60 002c FB61     	 str r3,[r7,#28]
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   while(blkCnt > 0u)
  61              	 .loc 1 91 0
  62 002e 52E1     	 b .L2
  63              	.L3:
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       a0 = *pSrcA++;
  64              	 .loc 1 93 0
  65 0030 FB68     	 ldr r3,[r7,#12]
  66 0032 9A1C     	 adds r2,r3,#2
  67 0034 FA60     	 str r2,[r7,#12]
  68 0036 1B88     	 ldrh r3,[r3]
  69 0038 7B83     	 strh r3,[r7,#26]
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       b0 = *pSrcA++;
  70              	 .loc 1 94 0
  71 003a FB68     	 ldr r3,[r7,#12]
  72 003c 9A1C     	 adds r2,r3,#2
  73 003e FA60     	 str r2,[r7,#12]
  74 0040 1B88     	 ldrh r3,[r3]
  75 0042 3B83     	 strh r3,[r7,#24]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       c0 = *pSrcB++;
  76              	 .loc 1 95 0
  77 0044 BB68     	 ldr r3,[r7,#8]
  78 0046 9A1C     	 adds r2,r3,#2
  79 0048 BA60     	 str r2,[r7,#8]
  80 004a 1B88     	 ldrh r3,[r3]
  81 004c FB82     	 strh r3,[r7,#22]
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       d0 = *pSrcB++;  
  82              	 .loc 1 96 0
  83 004e BB68     	 ldr r3,[r7,#8]
  84 0050 9A1C     	 adds r2,r3,#2
  85 0052 BA60     	 str r2,[r7,#8]
  86 0054 1B88     	 ldrh r3,[r3]
  87 0056 BB82     	 strh r3,[r7,#20]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum += (q31_t)a0 * c0;
  88              	 .loc 1 98 0
  89 0058 B7F91A30 	 ldrsh r3,[r7,#26]
  90 005c B7F91620 	 ldrsh r2,[r7,#22]
  91 0060 02FB03F3 	 mul r3,r2,r3
  92 0064 1A46     	 mov r2,r3
  93 0066 4FEAE273 	 asr r3,r2,#31
  94 006a D7E90A01 	 ldrd r0,[r7,#40]
  95 006e 1218     	 adds r2,r2,r0
  96 0070 43EB0103 	 adc r3,r3,r1
  97 0074 C7E90A23 	 strd r2,[r7,#40]
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)a0 * d0;
  98              	 .loc 1 99 0
  99 0078 B7F91A30 	 ldrsh r3,[r7,#26]
 100 007c B7F91420 	 ldrsh r2,[r7,#20]
 101 0080 02FB03F3 	 mul r3,r2,r3
 102 0084 1A46     	 mov r2,r3
 103 0086 4FEAE273 	 asr r3,r2,#31
 104 008a D7E90801 	 ldrd r0,[r7,#32]
 105 008e 1218     	 adds r2,r2,r0
 106 0090 43EB0103 	 adc r3,r3,r1
 107 0094 C7E90823 	 strd r2,[r7,#32]
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum -= (q31_t)b0 * d0;
 108              	 .loc 1 100 0
 109 0098 B7F91830 	 ldrsh r3,[r7,#24]
 110 009c B7F91420 	 ldrsh r2,[r7,#20]
 111 00a0 02FB03F3 	 mul r3,r2,r3
 112 00a4 1A46     	 mov r2,r3
 113 00a6 4FEAE273 	 asr r3,r2,#31
 114 00aa D7E90A01 	 ldrd r0,[r7,#40]
 115 00ae 821A     	 subs r2,r0,r2
 116 00b0 61EB0303 	 sbc r3,r1,r3
 117 00b4 C7E90A23 	 strd r2,[r7,#40]
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)b0 * c0;
 118              	 .loc 1 101 0
 119 00b8 B7F91830 	 ldrsh r3,[r7,#24]
 120 00bc B7F91620 	 ldrsh r2,[r7,#22]
 121 00c0 02FB03F3 	 mul r3,r2,r3
 122 00c4 1A46     	 mov r2,r3
 123 00c6 4FEAE273 	 asr r3,r2,#31
 124 00ca D7E90801 	 ldrd r0,[r7,#32]
 125 00ce 1218     	 adds r2,r2,r0
 126 00d0 43EB0103 	 adc r3,r3,r1
 127 00d4 C7E90823 	 strd r2,[r7,#32]
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       a0 = *pSrcA++;
 128              	 .loc 1 103 0
 129 00d8 FB68     	 ldr r3,[r7,#12]
 130 00da 9A1C     	 adds r2,r3,#2
 131 00dc FA60     	 str r2,[r7,#12]
 132 00de 1B88     	 ldrh r3,[r3]
 133 00e0 7B83     	 strh r3,[r7,#26]
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       b0 = *pSrcA++;
 134              	 .loc 1 104 0
 135 00e2 FB68     	 ldr r3,[r7,#12]
 136 00e4 9A1C     	 adds r2,r3,#2
 137 00e6 FA60     	 str r2,[r7,#12]
 138 00e8 1B88     	 ldrh r3,[r3]
 139 00ea 3B83     	 strh r3,[r7,#24]
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       c0 = *pSrcB++;
 140              	 .loc 1 105 0
 141 00ec BB68     	 ldr r3,[r7,#8]
 142 00ee 9A1C     	 adds r2,r3,#2
 143 00f0 BA60     	 str r2,[r7,#8]
 144 00f2 1B88     	 ldrh r3,[r3]
 145 00f4 FB82     	 strh r3,[r7,#22]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       d0 = *pSrcB++;  
 146              	 .loc 1 106 0
 147 00f6 BB68     	 ldr r3,[r7,#8]
 148 00f8 9A1C     	 adds r2,r3,#2
 149 00fa BA60     	 str r2,[r7,#8]
 150 00fc 1B88     	 ldrh r3,[r3]
 151 00fe BB82     	 strh r3,[r7,#20]
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum += (q31_t)a0 * c0;
 152              	 .loc 1 108 0
 153 0100 B7F91A30 	 ldrsh r3,[r7,#26]
 154 0104 B7F91620 	 ldrsh r2,[r7,#22]
 155 0108 02FB03F3 	 mul r3,r2,r3
 156 010c 1A46     	 mov r2,r3
 157 010e 4FEAE273 	 asr r3,r2,#31
 158 0112 D7E90A01 	 ldrd r0,[r7,#40]
 159 0116 1218     	 adds r2,r2,r0
 160 0118 43EB0103 	 adc r3,r3,r1
 161 011c C7E90A23 	 strd r2,[r7,#40]
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)a0 * d0;
 162              	 .loc 1 109 0
 163 0120 B7F91A30 	 ldrsh r3,[r7,#26]
 164 0124 B7F91420 	 ldrsh r2,[r7,#20]
 165 0128 02FB03F3 	 mul r3,r2,r3
 166 012c 1A46     	 mov r2,r3
 167 012e 4FEAE273 	 asr r3,r2,#31
 168 0132 D7E90801 	 ldrd r0,[r7,#32]
 169 0136 1218     	 adds r2,r2,r0
 170 0138 43EB0103 	 adc r3,r3,r1
 171 013c C7E90823 	 strd r2,[r7,#32]
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum -= (q31_t)b0 * d0;
 172              	 .loc 1 110 0
 173 0140 B7F91830 	 ldrsh r3,[r7,#24]
 174 0144 B7F91420 	 ldrsh r2,[r7,#20]
 175 0148 02FB03F3 	 mul r3,r2,r3
 176 014c 1A46     	 mov r2,r3
 177 014e 4FEAE273 	 asr r3,r2,#31
 178 0152 D7E90A01 	 ldrd r0,[r7,#40]
 179 0156 821A     	 subs r2,r0,r2
 180 0158 61EB0303 	 sbc r3,r1,r3
 181 015c C7E90A23 	 strd r2,[r7,#40]
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)b0 * c0;
 182              	 .loc 1 111 0
 183 0160 B7F91830 	 ldrsh r3,[r7,#24]
 184 0164 B7F91620 	 ldrsh r2,[r7,#22]
 185 0168 02FB03F3 	 mul r3,r2,r3
 186 016c 1A46     	 mov r2,r3
 187 016e 4FEAE273 	 asr r3,r2,#31
 188 0172 D7E90801 	 ldrd r0,[r7,#32]
 189 0176 1218     	 adds r2,r2,r0
 190 0178 43EB0103 	 adc r3,r3,r1
 191 017c C7E90823 	 strd r2,[r7,#32]
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       a0 = *pSrcA++;
 192              	 .loc 1 113 0
 193 0180 FB68     	 ldr r3,[r7,#12]
 194 0182 9A1C     	 adds r2,r3,#2
 195 0184 FA60     	 str r2,[r7,#12]
 196 0186 1B88     	 ldrh r3,[r3]
 197 0188 7B83     	 strh r3,[r7,#26]
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       b0 = *pSrcA++;
 198              	 .loc 1 114 0
 199 018a FB68     	 ldr r3,[r7,#12]
 200 018c 9A1C     	 adds r2,r3,#2
 201 018e FA60     	 str r2,[r7,#12]
 202 0190 1B88     	 ldrh r3,[r3]
 203 0192 3B83     	 strh r3,[r7,#24]
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       c0 = *pSrcB++;
 204              	 .loc 1 115 0
 205 0194 BB68     	 ldr r3,[r7,#8]
 206 0196 9A1C     	 adds r2,r3,#2
 207 0198 BA60     	 str r2,[r7,#8]
 208 019a 1B88     	 ldrh r3,[r3]
 209 019c FB82     	 strh r3,[r7,#22]
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       d0 = *pSrcB++;  
 210              	 .loc 1 116 0
 211 019e BB68     	 ldr r3,[r7,#8]
 212 01a0 9A1C     	 adds r2,r3,#2
 213 01a2 BA60     	 str r2,[r7,#8]
 214 01a4 1B88     	 ldrh r3,[r3]
 215 01a6 BB82     	 strh r3,[r7,#20]
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum += (q31_t)a0 * c0;
 216              	 .loc 1 118 0
 217 01a8 B7F91A30 	 ldrsh r3,[r7,#26]
 218 01ac B7F91620 	 ldrsh r2,[r7,#22]
 219 01b0 02FB03F3 	 mul r3,r2,r3
 220 01b4 1A46     	 mov r2,r3
 221 01b6 4FEAE273 	 asr r3,r2,#31
 222 01ba D7E90A01 	 ldrd r0,[r7,#40]
 223 01be 1218     	 adds r2,r2,r0
 224 01c0 43EB0103 	 adc r3,r3,r1
 225 01c4 C7E90A23 	 strd r2,[r7,#40]
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)a0 * d0;
 226              	 .loc 1 119 0
 227 01c8 B7F91A30 	 ldrsh r3,[r7,#26]
 228 01cc B7F91420 	 ldrsh r2,[r7,#20]
 229 01d0 02FB03F3 	 mul r3,r2,r3
 230 01d4 1A46     	 mov r2,r3
 231 01d6 4FEAE273 	 asr r3,r2,#31
 232 01da D7E90801 	 ldrd r0,[r7,#32]
 233 01de 1218     	 adds r2,r2,r0
 234 01e0 43EB0103 	 adc r3,r3,r1
 235 01e4 C7E90823 	 strd r2,[r7,#32]
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum -= (q31_t)b0 * d0;
 236              	 .loc 1 120 0
 237 01e8 B7F91830 	 ldrsh r3,[r7,#24]
 238 01ec B7F91420 	 ldrsh r2,[r7,#20]
 239 01f0 02FB03F3 	 mul r3,r2,r3
 240 01f4 1A46     	 mov r2,r3
 241 01f6 4FEAE273 	 asr r3,r2,#31
 242 01fa D7E90A01 	 ldrd r0,[r7,#40]
 243 01fe 821A     	 subs r2,r0,r2
 244 0200 61EB0303 	 sbc r3,r1,r3
 245 0204 C7E90A23 	 strd r2,[r7,#40]
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)b0 * c0;
 246              	 .loc 1 121 0
 247 0208 B7F91830 	 ldrsh r3,[r7,#24]
 248 020c B7F91620 	 ldrsh r2,[r7,#22]
 249 0210 02FB03F3 	 mul r3,r2,r3
 250 0214 1A46     	 mov r2,r3
 251 0216 4FEAE273 	 asr r3,r2,#31
 252 021a D7E90801 	 ldrd r0,[r7,#32]
 253 021e 1218     	 adds r2,r2,r0
 254 0220 43EB0103 	 adc r3,r3,r1
 255 0224 C7E90823 	 strd r2,[r7,#32]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       a0 = *pSrcA++;
 256              	 .loc 1 123 0
 257 0228 FB68     	 ldr r3,[r7,#12]
 258 022a 9A1C     	 adds r2,r3,#2
 259 022c FA60     	 str r2,[r7,#12]
 260 022e 1B88     	 ldrh r3,[r3]
 261 0230 7B83     	 strh r3,[r7,#26]
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       b0 = *pSrcA++;
 262              	 .loc 1 124 0
 263 0232 FB68     	 ldr r3,[r7,#12]
 264 0234 9A1C     	 adds r2,r3,#2
 265 0236 FA60     	 str r2,[r7,#12]
 266 0238 1B88     	 ldrh r3,[r3]
 267 023a 3B83     	 strh r3,[r7,#24]
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       c0 = *pSrcB++;
 268              	 .loc 1 125 0
 269 023c BB68     	 ldr r3,[r7,#8]
 270 023e 9A1C     	 adds r2,r3,#2
 271 0240 BA60     	 str r2,[r7,#8]
 272 0242 1B88     	 ldrh r3,[r3]
 273 0244 FB82     	 strh r3,[r7,#22]
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       d0 = *pSrcB++;  
 274              	 .loc 1 126 0
 275 0246 BB68     	 ldr r3,[r7,#8]
 276 0248 9A1C     	 adds r2,r3,#2
 277 024a BA60     	 str r2,[r7,#8]
 278 024c 1B88     	 ldrh r3,[r3]
 279 024e BB82     	 strh r3,[r7,#20]
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum += (q31_t)a0 * c0;
 280              	 .loc 1 128 0
 281 0250 B7F91A30 	 ldrsh r3,[r7,#26]
 282 0254 B7F91620 	 ldrsh r2,[r7,#22]
 283 0258 02FB03F3 	 mul r3,r2,r3
 284 025c 1A46     	 mov r2,r3
 285 025e 4FEAE273 	 asr r3,r2,#31
 286 0262 D7E90A01 	 ldrd r0,[r7,#40]
 287 0266 1218     	 adds r2,r2,r0
 288 0268 43EB0103 	 adc r3,r3,r1
 289 026c C7E90A23 	 strd r2,[r7,#40]
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)a0 * d0;
 290              	 .loc 1 129 0
 291 0270 B7F91A30 	 ldrsh r3,[r7,#26]
 292 0274 B7F91420 	 ldrsh r2,[r7,#20]
 293 0278 02FB03F3 	 mul r3,r2,r3
 294 027c 1A46     	 mov r2,r3
 295 027e 4FEAE273 	 asr r3,r2,#31
 296 0282 D7E90801 	 ldrd r0,[r7,#32]
 297 0286 1218     	 adds r2,r2,r0
 298 0288 43EB0103 	 adc r3,r3,r1
 299 028c C7E90823 	 strd r2,[r7,#32]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum -= (q31_t)b0 * d0;
 300              	 .loc 1 130 0
 301 0290 B7F91830 	 ldrsh r3,[r7,#24]
 302 0294 B7F91420 	 ldrsh r2,[r7,#20]
 303 0298 02FB03F3 	 mul r3,r2,r3
 304 029c 1A46     	 mov r2,r3
 305 029e 4FEAE273 	 asr r3,r2,#31
 306 02a2 D7E90A01 	 ldrd r0,[r7,#40]
 307 02a6 821A     	 subs r2,r0,r2
 308 02a8 61EB0303 	 sbc r3,r1,r3
 309 02ac C7E90A23 	 strd r2,[r7,#40]
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)b0 * c0;
 310              	 .loc 1 131 0
 311 02b0 B7F91830 	 ldrsh r3,[r7,#24]
 312 02b4 B7F91620 	 ldrsh r2,[r7,#22]
 313 02b8 02FB03F3 	 mul r3,r2,r3
 314 02bc 1A46     	 mov r2,r3
 315 02be 4FEAE273 	 asr r3,r2,#31
 316 02c2 D7E90801 	 ldrd r0,[r7,#32]
 317 02c6 1218     	 adds r2,r2,r0
 318 02c8 43EB0103 	 adc r3,r3,r1
 319 02cc C7E90823 	 strd r2,[r7,#32]
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       /* Decrement the loop counter */
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       blkCnt--;
 320              	 .loc 1 134 0
 321 02d0 FB69     	 ldr r3,[r7,#28]
 322 02d2 013B     	 subs r3,r3,#1
 323 02d4 FB61     	 str r3,[r7,#28]
 324              	.L2:
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 325              	 .loc 1 91 0
 326 02d6 FB69     	 ldr r3,[r7,#28]
 327 02d8 002B     	 cmp r3,#0
 328 02da 7FF4A9AE 	 bne .L3
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   }
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.    
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****    ** No loop unrolling is used. */
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   blkCnt = numSamples % 0x4u;
 329              	 .loc 1 139 0
 330 02de 7B68     	 ldr r3,[r7,#4]
 331 02e0 03F00303 	 and r3,r3,#3
 332 02e4 FB61     	 str r3,[r7,#28]
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   while(blkCnt > 0u)
 333              	 .loc 1 141 0
 334 02e6 56E0     	 b .L4
 335              	.L5:
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       a0 = *pSrcA++;
 336              	 .loc 1 143 0
 337 02e8 FB68     	 ldr r3,[r7,#12]
 338 02ea 9A1C     	 adds r2,r3,#2
 339 02ec FA60     	 str r2,[r7,#12]
 340 02ee 1B88     	 ldrh r3,[r3]
 341 02f0 7B83     	 strh r3,[r7,#26]
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       b0 = *pSrcA++;
 342              	 .loc 1 144 0
 343 02f2 FB68     	 ldr r3,[r7,#12]
 344 02f4 9A1C     	 adds r2,r3,#2
 345 02f6 FA60     	 str r2,[r7,#12]
 346 02f8 1B88     	 ldrh r3,[r3]
 347 02fa 3B83     	 strh r3,[r7,#24]
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       c0 = *pSrcB++;
 348              	 .loc 1 145 0
 349 02fc BB68     	 ldr r3,[r7,#8]
 350 02fe 9A1C     	 adds r2,r3,#2
 351 0300 BA60     	 str r2,[r7,#8]
 352 0302 1B88     	 ldrh r3,[r3]
 353 0304 FB82     	 strh r3,[r7,#22]
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       d0 = *pSrcB++;  
 354              	 .loc 1 146 0
 355 0306 BB68     	 ldr r3,[r7,#8]
 356 0308 9A1C     	 adds r2,r3,#2
 357 030a BA60     	 str r2,[r7,#8]
 358 030c 1B88     	 ldrh r3,[r3]
 359 030e BB82     	 strh r3,[r7,#20]
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum += (q31_t)a0 * c0;
 360              	 .loc 1 148 0
 361 0310 B7F91A30 	 ldrsh r3,[r7,#26]
 362 0314 B7F91620 	 ldrsh r2,[r7,#22]
 363 0318 02FB03F3 	 mul r3,r2,r3
 364 031c 1A46     	 mov r2,r3
 365 031e 4FEAE273 	 asr r3,r2,#31
 366 0322 D7E90A01 	 ldrd r0,[r7,#40]
 367 0326 1218     	 adds r2,r2,r0
 368 0328 43EB0103 	 adc r3,r3,r1
 369 032c C7E90A23 	 strd r2,[r7,#40]
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)a0 * d0;
 370              	 .loc 1 149 0
 371 0330 B7F91A30 	 ldrsh r3,[r7,#26]
 372 0334 B7F91420 	 ldrsh r2,[r7,#20]
 373 0338 02FB03F3 	 mul r3,r2,r3
 374 033c 1A46     	 mov r2,r3
 375 033e 4FEAE273 	 asr r3,r2,#31
 376 0342 D7E90801 	 ldrd r0,[r7,#32]
 377 0346 1218     	 adds r2,r2,r0
 378 0348 43EB0103 	 adc r3,r3,r1
 379 034c C7E90823 	 strd r2,[r7,#32]
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum -= (q31_t)b0 * d0;
 380              	 .loc 1 150 0
 381 0350 B7F91830 	 ldrsh r3,[r7,#24]
 382 0354 B7F91420 	 ldrsh r2,[r7,#20]
 383 0358 02FB03F3 	 mul r3,r2,r3
 384 035c 1A46     	 mov r2,r3
 385 035e 4FEAE273 	 asr r3,r2,#31
 386 0362 D7E90A01 	 ldrd r0,[r7,#40]
 387 0366 821A     	 subs r2,r0,r2
 388 0368 61EB0303 	 sbc r3,r1,r3
 389 036c C7E90A23 	 strd r2,[r7,#40]
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += (q31_t)b0 * c0;
 390              	 .loc 1 151 0
 391 0370 B7F91830 	 ldrsh r3,[r7,#24]
 392 0374 B7F91620 	 ldrsh r2,[r7,#22]
 393 0378 02FB03F3 	 mul r3,r2,r3
 394 037c 1A46     	 mov r2,r3
 395 037e 4FEAE273 	 asr r3,r2,#31
 396 0382 D7E90801 	 ldrd r0,[r7,#32]
 397 0386 1218     	 adds r2,r2,r0
 398 0388 43EB0103 	 adc r3,r3,r1
 399 038c C7E90823 	 strd r2,[r7,#32]
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       /* Decrement the loop counter */
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       blkCnt--;
 400              	 .loc 1 154 0
 401 0390 FB69     	 ldr r3,[r7,#28]
 402 0392 013B     	 subs r3,r3,#1
 403 0394 FB61     	 str r3,[r7,#28]
 404              	.L4:
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 405              	 .loc 1 141 0
 406 0396 FB69     	 ldr r3,[r7,#28]
 407 0398 002B     	 cmp r3,#0
 408 039a A5D1     	 bne .L5
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   }
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #else
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Run the below code for Cortex-M0 */
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   while(numSamples > 0u)
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   {
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       a0 = *pSrcA++;
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       b0 = *pSrcA++;
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       c0 = *pSrcB++;
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       d0 = *pSrcB++;  
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum += a0 * c0;
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += a0 * d0;
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       real_sum -= b0 * d0;
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       imag_sum += b0 * c0;
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       /* Decrement the loop counter */
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****       numSamples--;
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   }
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** 
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Store the real and imaginary results in 8.24 format  */
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Convert real data in 34.30 to 8.24 by 6 right shifts */
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   *realResult = (q31_t) (real_sum >> 6);
 409              	 .loc 1 182 0
 410 039c D7E90A23 	 ldrd r2,[r7,#40]
 411 03a0 4FEA9218 	 lsr r8,r2,#6
 412 03a4 48EA8368 	 orr r8,r8,r3,lsl#26
 413 03a8 4FEAA319 	 asr r9,r3,#6
 414 03ac 4246     	 mov r2,r8
 415 03ae 3B68     	 ldr r3,[r7]
 416 03b0 1A60     	 str r2,[r3]
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   /* Convert imaginary data in 34.30 to 8.24 by 6 right shifts */
 184:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c ****   *imagResult = (q31_t) (imag_sum >> 6);
 417              	 .loc 1 184 0
 418 03b2 D7E90823 	 ldrd r2,[r7,#32]
 419 03b6 9409     	 lsrs r4,r2,#6
 420 03b8 44EA8364 	 orr r4,r4,r3,lsl#26
 421 03bc 9D11     	 asrs r5,r3,#6
 422 03be 2246     	 mov r2,r4
 423 03c0 BB6C     	 ldr r3,[r7,#72]
 424 03c2 1A60     	 str r2,[r3]
 185:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_dot_prod_q15.c **** }
 425              	 .loc 1 185 0
 426 03c4 3437     	 adds r7,r7,#52
 427              	.LCFI3:
 428              	 .cfi_def_cfa_offset 20
 429 03c6 BD46     	 mov sp,r7
 430              	.LCFI4:
 431              	 .cfi_def_cfa_register 13
 432              	 
 433 03c8 BDE8B003 	 pop {r4,r5,r7,r8,r9}
 434              	.LCFI5:
 435              	 .cfi_restore 9
 436              	 .cfi_restore 8
 437              	 .cfi_restore 7
 438              	 .cfi_restore 5
 439              	 .cfi_restore 4
 440              	 .cfi_def_cfa_offset 0
 441 03cc 7047     	 bx lr
 442              	 .cfi_endproc
 443              	.LFE139:
 445 03ce 00BF     	 .text
 446              	.Letext0:
 447              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 448              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 449              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_dot_prod_q15.c
    {standard input}:19     .text.arm_cmplx_dot_prod_q15:00000000 $t
    {standard input}:24     .text.arm_cmplx_dot_prod_q15:00000000 arm_cmplx_dot_prod_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
