   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_cmplx_mult_real_q15.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_cmplx_mult_real_q15,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_cmplx_mult_real_q15
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_cmplx_mult_real_q15:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c"
   1:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *    
   4:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *    
   7:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * Title:	    arm_cmplx_mult_real_q15.c    
   9:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *    
  10:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * Description:	Q15 complex by real multiplication    
  11:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *    
  12:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *  
  14:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** *
  27:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * POSSIBILITY OF SUCH DAMAGE. 
  39:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  43:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @ingroup groupCmplxMath    
  45:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  */
  46:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  47:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @addtogroup CmplxByRealMult    
  49:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  */
  51:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  52:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  53:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** /**    
  54:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @brief  Q15 complex-by-real multiplication    
  55:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[in]  *pSrcCmplx points to the complex input vector    
  56:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[in]  *pSrcReal points to the real input vector    
  57:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[out]  *pCmplxDst points to the complex output vector    
  58:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @param[in]  numSamples number of samples in each vector    
  59:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * @return none.    
  60:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  *    
  61:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * <b>Scaling and Overflow Behavior:</b>    
  62:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * \par    
  63:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * The function uses saturating arithmetic.    
  64:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  * Results outside of the allowable Q15 range [0x8000 0x7FFF] will be saturated.    
  65:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****  */
  66:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  67:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** void arm_cmplx_mult_real_q15(
  68:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t * pSrcCmplx,
  69:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t * pSrcReal,
  70:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t * pCmplxDst,
  71:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   uint32_t numSamples)
  72:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** {
  27              	 .loc 1 72 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 B3B0     	 sub sp,sp,#204
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 208
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 B960     	 str r1,[r7,#8]
  44 000a 7A60     	 str r2,[r7,#4]
  45 000c 3B60     	 str r3,[r7]
  73:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t in;                                      /* Temporary variable to store input value */
  74:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #ifndef ARM_MATH_CM0_FAMILY
  76:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  77:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  78:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   uint32_t blkCnt;                               /* loop counters */
  79:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q31_t inA1, inA2;                              /* Temporary variables to hold input data */
  80:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q31_t inB1;                                    /* Temporary variables to hold input data */
  81:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q15_t out1, out2, out3, out4;                  /* Temporary variables to hold output data */
  82:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   q31_t mul1, mul2, mul3, mul4;                  /* Temporary variables to hold intermediate data *
  83:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  84:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* loop Unrolling */
  85:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   blkCnt = numSamples >> 2u;
  46              	 .loc 1 85 0
  47 000e 3B68     	 ldr r3,[r7]
  48 0010 9B08     	 lsrs r3,r3,#2
  49 0012 C7F8C430 	 str r3,[r7,#196]
  86:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
  87:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  88:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   while(blkCnt > 0u)
  50              	 .loc 1 89 0
  51 0016 46E1     	 b .L2
  52              	.L3:
  90:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
  91:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
  92:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
  93:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* read complex number both real and imaginary from complex input buffer */
  94:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA1 = *__SIMD32(pSrcCmplx)++;
  53              	 .loc 1 94 0
  54 0018 07F10C02 	 add r2,r7,#12
  55 001c 1368     	 ldr r3,[r2]
  56 001e 191D     	 adds r1,r3,#4
  57 0020 1160     	 str r1,[r2]
  58 0022 1B68     	 ldr r3,[r3]
  59 0024 C7F8C030 	 str r3,[r7,#192]
  95:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* read two real values at a time from real input buffer */
  96:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inB1 = *__SIMD32(pSrcReal)++;
  60              	 .loc 1 96 0
  61 0028 07F10802 	 add r2,r7,#8
  62 002c 1368     	 ldr r3,[r2]
  63 002e 191D     	 adds r1,r3,#4
  64 0030 1160     	 str r1,[r2]
  65 0032 1B68     	 ldr r3,[r3]
  66 0034 C7F8BC30 	 str r3,[r7,#188]
  97:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* read complex number both real and imaginary from complex input buffer */
  98:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA2 = *__SIMD32(pSrcCmplx)++;
  67              	 .loc 1 98 0
  68 0038 07F10C02 	 add r2,r7,#12
  69 003c 1368     	 ldr r3,[r2]
  70 003e 191D     	 adds r1,r3,#4
  71 0040 1160     	 str r1,[r2]
  72 0042 1B68     	 ldr r3,[r3]
  73 0044 C7F8B830 	 str r3,[r7,#184]
  99:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 100:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* multiply complex number with real numbers */
 101:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 102:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 103:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) (inA1) * (q15_t) (inB1));
  74              	 .loc 1 103 0
  75 0048 D7F8C030 	 ldr r3,[r7,#192]
  76 004c 9BB2     	 uxth r3,r3
  77 004e 1BB2     	 sxth r3,r3
  78 0050 D7F8BC20 	 ldr r2,[r7,#188]
  79 0054 92B2     	 uxth r2,r2
  80 0056 12B2     	 sxth r2,r2
  81 0058 02FB03F3 	 mul r3,r2,r3
  82 005c C7F8B430 	 str r3,[r7,#180]
 104:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1));
  83              	 .loc 1 104 0
  84 0060 D7F8C030 	 ldr r3,[r7,#192]
  85 0064 1B14     	 asrs r3,r3,#16
  86 0066 9BB2     	 uxth r3,r3
  87 0068 1BB2     	 sxth r3,r3
  88 006a D7F8BC20 	 ldr r2,[r7,#188]
  89 006e 92B2     	 uxth r2,r2
  90 0070 12B2     	 sxth r2,r2
  91 0072 02FB03F3 	 mul r3,r2,r3
  92 0076 C7F8B030 	 str r3,[r7,#176]
 105:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) (inA2) * (q15_t) (inB1 >> 16));
  93              	 .loc 1 105 0
  94 007a D7F8B830 	 ldr r3,[r7,#184]
  95 007e 9BB2     	 uxth r3,r3
  96 0080 1BB2     	 sxth r3,r3
  97 0082 D7F8BC20 	 ldr r2,[r7,#188]
  98 0086 1214     	 asrs r2,r2,#16
  99 0088 92B2     	 uxth r2,r2
 100 008a 12B2     	 sxth r2,r2
 101 008c 02FB03F3 	 mul r3,r2,r3
 102 0090 C7F8AC30 	 str r3,[r7,#172]
 106:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) (inB1 >> 16));
 103              	 .loc 1 106 0
 104 0094 D7F8B830 	 ldr r3,[r7,#184]
 105 0098 1B14     	 asrs r3,r3,#16
 106 009a 9BB2     	 uxth r3,r3
 107 009c 1BB2     	 sxth r3,r3
 108 009e D7F8BC20 	 ldr r2,[r7,#188]
 109 00a2 1214     	 asrs r2,r2,#16
 110 00a4 92B2     	 uxth r2,r2
 111 00a6 12B2     	 sxth r2,r2
 112 00a8 02FB03F3 	 mul r3,r2,r3
 113 00ac C7F8A830 	 str r3,[r7,#168]
 114              	.LBB2:
 107:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #else
 109:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 110:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1 >> 16));
 111:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) inA1 * (q15_t) (inB1 >> 16));
 112:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) inB1);
 113:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) inA2 * (q15_t) inB1);
 114:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 115:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #endif //      #ifndef ARM_MATH_BIG_ENDIAN
 116:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 117:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* saturate the result */
 118:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out1 = (q15_t) __SSAT(mul1 >> 15u, 16);
 115              	 .loc 1 118 0
 116 00b0 D7F8B430 	 ldr r3,[r7,#180]
 117 00b4 DB13     	 asrs r3,r3,#15
 118 00b6 C7F8A430 	 str r3,[r7,#164]
 119 00ba D7F8A430 	 ldr r3,[r7,#164]
 120              	
 121 00be 03F30F03 	 ssat r3,#16,r3
 122              	
 123              	 .thumb
 124 00c2 C7F8A030 	 str r3,[r7,#160]
 125 00c6 D7F8A030 	 ldr r3,[r7,#160]
 126              	.LBE2:
 127 00ca A7F89E30 	 strh r3,[r7,#158]
 128              	.LBB3:
 119:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out2 = (q15_t) __SSAT(mul2 >> 15u, 16);
 129              	 .loc 1 119 0
 130 00ce D7F8B030 	 ldr r3,[r7,#176]
 131 00d2 DB13     	 asrs r3,r3,#15
 132 00d4 C7F89830 	 str r3,[r7,#152]
 133 00d8 D7F89830 	 ldr r3,[r7,#152]
 134              	
 135 00dc 03F30F03 	 ssat r3,#16,r3
 136              	
 137              	 .thumb
 138 00e0 C7F89430 	 str r3,[r7,#148]
 139 00e4 D7F89430 	 ldr r3,[r7,#148]
 140              	.LBE3:
 141 00e8 A7F89230 	 strh r3,[r7,#146]
 142              	.LBB4:
 120:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out3 = (q15_t) __SSAT(mul3 >> 15u, 16);
 143              	 .loc 1 120 0
 144 00ec D7F8AC30 	 ldr r3,[r7,#172]
 145 00f0 DB13     	 asrs r3,r3,#15
 146 00f2 C7F88C30 	 str r3,[r7,#140]
 147 00f6 D7F88C30 	 ldr r3,[r7,#140]
 148              	
 149 00fa 03F30F03 	 ssat r3,#16,r3
 150              	
 151              	 .thumb
 152 00fe C7F88830 	 str r3,[r7,#136]
 153 0102 D7F88830 	 ldr r3,[r7,#136]
 154              	.LBE4:
 155 0106 A7F88630 	 strh r3,[r7,#134]
 156              	.LBB5:
 121:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out4 = (q15_t) __SSAT(mul4 >> 15u, 16);
 157              	 .loc 1 121 0
 158 010a D7F8A830 	 ldr r3,[r7,#168]
 159 010e DB13     	 asrs r3,r3,#15
 160 0110 C7F88030 	 str r3,[r7,#128]
 161 0114 D7F88030 	 ldr r3,[r7,#128]
 162              	
 163 0118 03F30F03 	 ssat r3,#16,r3
 164              	
 165              	 .thumb
 166 011c FB67     	 str r3,[r7,#124]
 167 011e FB6F     	 ldr r3,[r7,#124]
 168              	.LBE5:
 169 0120 A7F87A30 	 strh r3,[r7,#122]
 122:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 123:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* pack real and imaginary outputs and store them to destination */
 124:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out1, out2, 16);
 170              	 .loc 1 124 0
 171 0124 3A1D     	 adds r2,r7,#4
 172 0126 1368     	 ldr r3,[r2]
 173 0128 191D     	 adds r1,r3,#4
 174 012a 1160     	 str r1,[r2]
 175              	.LBB6:
 176 012c B7F99E20 	 ldrsh r2,[r7,#158]
 177 0130 7A67     	 str r2,[r7,#116]
 178 0132 B7F99220 	 ldrsh r2,[r7,#146]
 179 0136 3A67     	 str r2,[r7,#112]
 180 0138 7A6F     	 ldr r2,[r7,#116]
 181 013a 396F     	 ldr r1,[r7,#112]
 182              	
 183 013c C2EA0142 	 pkhbt r2,r2,r1,lsl#16
 184              	
 185              	 .thumb
 186 0140 FA66     	 str r2,[r7,#108]
 187 0142 FA6E     	 ldr r2,[r7,#108]
 188              	.LBE6:
 189 0144 1A60     	 str r2,[r3]
 125:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out3, out4, 16);
 190              	 .loc 1 125 0
 191 0146 3A1D     	 adds r2,r7,#4
 192 0148 1368     	 ldr r3,[r2]
 193 014a 191D     	 adds r1,r3,#4
 194 014c 1160     	 str r1,[r2]
 195              	.LBB7:
 196 014e B7F98620 	 ldrsh r2,[r7,#134]
 197 0152 BA66     	 str r2,[r7,#104]
 198 0154 B7F97A20 	 ldrsh r2,[r7,#122]
 199 0158 7A66     	 str r2,[r7,#100]
 200 015a BA6E     	 ldr r2,[r7,#104]
 201 015c 796E     	 ldr r1,[r7,#100]
 202              	
 203 015e C2EA0142 	 pkhbt r2,r2,r1,lsl#16
 204              	
 205              	 .thumb
 206 0162 3A66     	 str r2,[r7,#96]
 207 0164 3A6E     	 ldr r2,[r7,#96]
 208              	.LBE7:
 209 0166 1A60     	 str r2,[r3]
 126:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 127:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA1 = *__SIMD32(pSrcCmplx)++;
 210              	 .loc 1 127 0
 211 0168 07F10C02 	 add r2,r7,#12
 212 016c 1368     	 ldr r3,[r2]
 213 016e 191D     	 adds r1,r3,#4
 214 0170 1160     	 str r1,[r2]
 215 0172 1B68     	 ldr r3,[r3]
 216 0174 C7F8C030 	 str r3,[r7,#192]
 128:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inB1 = *__SIMD32(pSrcReal)++;
 217              	 .loc 1 128 0
 218 0178 07F10802 	 add r2,r7,#8
 219 017c 1368     	 ldr r3,[r2]
 220 017e 191D     	 adds r1,r3,#4
 221 0180 1160     	 str r1,[r2]
 222 0182 1B68     	 ldr r3,[r3]
 223 0184 C7F8BC30 	 str r3,[r7,#188]
 129:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     inA2 = *__SIMD32(pSrcCmplx)++;
 224              	 .loc 1 129 0
 225 0188 07F10C02 	 add r2,r7,#12
 226 018c 1368     	 ldr r3,[r2]
 227 018e 191D     	 adds r1,r3,#4
 228 0190 1160     	 str r1,[r2]
 229 0192 1B68     	 ldr r3,[r3]
 230 0194 C7F8B830 	 str r3,[r7,#184]
 130:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 131:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 132:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 133:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) (inA1) * (q15_t) (inB1));
 231              	 .loc 1 133 0
 232 0198 D7F8C030 	 ldr r3,[r7,#192]
 233 019c 9BB2     	 uxth r3,r3
 234 019e 1BB2     	 sxth r3,r3
 235 01a0 D7F8BC20 	 ldr r2,[r7,#188]
 236 01a4 92B2     	 uxth r2,r2
 237 01a6 12B2     	 sxth r2,r2
 238 01a8 02FB03F3 	 mul r3,r2,r3
 239 01ac C7F8B430 	 str r3,[r7,#180]
 134:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1));
 240              	 .loc 1 134 0
 241 01b0 D7F8C030 	 ldr r3,[r7,#192]
 242 01b4 1B14     	 asrs r3,r3,#16
 243 01b6 9BB2     	 uxth r3,r3
 244 01b8 1BB2     	 sxth r3,r3
 245 01ba D7F8BC20 	 ldr r2,[r7,#188]
 246 01be 92B2     	 uxth r2,r2
 247 01c0 12B2     	 sxth r2,r2
 248 01c2 02FB03F3 	 mul r3,r2,r3
 249 01c6 C7F8B030 	 str r3,[r7,#176]
 135:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) (inA2) * (q15_t) (inB1 >> 16));
 250              	 .loc 1 135 0
 251 01ca D7F8B830 	 ldr r3,[r7,#184]
 252 01ce 9BB2     	 uxth r3,r3
 253 01d0 1BB2     	 sxth r3,r3
 254 01d2 D7F8BC20 	 ldr r2,[r7,#188]
 255 01d6 1214     	 asrs r2,r2,#16
 256 01d8 92B2     	 uxth r2,r2
 257 01da 12B2     	 sxth r2,r2
 258 01dc 02FB03F3 	 mul r3,r2,r3
 259 01e0 C7F8AC30 	 str r3,[r7,#172]
 136:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) (inB1 >> 16));
 260              	 .loc 1 136 0
 261 01e4 D7F8B830 	 ldr r3,[r7,#184]
 262 01e8 1B14     	 asrs r3,r3,#16
 263 01ea 9BB2     	 uxth r3,r3
 264 01ec 1BB2     	 sxth r3,r3
 265 01ee D7F8BC20 	 ldr r2,[r7,#188]
 266 01f2 1214     	 asrs r2,r2,#16
 267 01f4 92B2     	 uxth r2,r2
 268 01f6 12B2     	 sxth r2,r2
 269 01f8 02FB03F3 	 mul r3,r2,r3
 270 01fc C7F8A830 	 str r3,[r7,#168]
 271              	.LBB8:
 137:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 138:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #else
 139:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 140:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul2 = (q31_t) ((q15_t) (inA1 >> 16) * (q15_t) (inB1 >> 16));
 141:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul1 = (q31_t) ((q15_t) inA1 * (q15_t) (inB1 >> 16));
 142:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul4 = (q31_t) ((q15_t) (inA2 >> 16) * (q15_t) inB1);
 143:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     mul3 = (q31_t) ((q15_t) inA2 * (q15_t) inB1);
 144:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 145:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #endif //      #ifndef ARM_MATH_BIG_ENDIAN
 146:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out1 = (q15_t) __SSAT(mul1 >> 15u, 16);
 272              	 .loc 1 147 0
 273 0200 D7F8B430 	 ldr r3,[r7,#180]
 274 0204 DB13     	 asrs r3,r3,#15
 275 0206 FB65     	 str r3,[r7,#92]
 276 0208 FB6D     	 ldr r3,[r7,#92]
 277              	
 278 020a 03F30F03 	 ssat r3,#16,r3
 279              	
 280              	 .thumb
 281 020e BB65     	 str r3,[r7,#88]
 282 0210 BB6D     	 ldr r3,[r7,#88]
 283              	.LBE8:
 284 0212 A7F89E30 	 strh r3,[r7,#158]
 285              	.LBB9:
 148:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out2 = (q15_t) __SSAT(mul2 >> 15u, 16);
 286              	 .loc 1 148 0
 287 0216 D7F8B030 	 ldr r3,[r7,#176]
 288 021a DB13     	 asrs r3,r3,#15
 289 021c 7B65     	 str r3,[r7,#84]
 290 021e 7B6D     	 ldr r3,[r7,#84]
 291              	
 292 0220 03F30F03 	 ssat r3,#16,r3
 293              	
 294              	 .thumb
 295 0224 3B65     	 str r3,[r7,#80]
 296 0226 3B6D     	 ldr r3,[r7,#80]
 297              	.LBE9:
 298 0228 A7F89230 	 strh r3,[r7,#146]
 299              	.LBB10:
 149:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out3 = (q15_t) __SSAT(mul3 >> 15u, 16);
 300              	 .loc 1 149 0
 301 022c D7F8AC30 	 ldr r3,[r7,#172]
 302 0230 DB13     	 asrs r3,r3,#15
 303 0232 FB64     	 str r3,[r7,#76]
 304 0234 FB6C     	 ldr r3,[r7,#76]
 305              	
 306 0236 03F30F03 	 ssat r3,#16,r3
 307              	
 308              	 .thumb
 309 023a BB64     	 str r3,[r7,#72]
 310 023c BB6C     	 ldr r3,[r7,#72]
 311              	.LBE10:
 312 023e A7F88630 	 strh r3,[r7,#134]
 313              	.LBB11:
 150:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     out4 = (q15_t) __SSAT(mul4 >> 15u, 16);
 314              	 .loc 1 150 0
 315 0242 D7F8A830 	 ldr r3,[r7,#168]
 316 0246 DB13     	 asrs r3,r3,#15
 317 0248 7B64     	 str r3,[r7,#68]
 318 024a 7B6C     	 ldr r3,[r7,#68]
 319              	
 320 024c 03F30F03 	 ssat r3,#16,r3
 321              	
 322              	 .thumb
 323 0250 3B64     	 str r3,[r7,#64]
 324 0252 3B6C     	 ldr r3,[r7,#64]
 325              	.LBE11:
 326 0254 A7F87A30 	 strh r3,[r7,#122]
 151:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 152:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out1, out2, 16);
 327              	 .loc 1 152 0
 328 0258 3A1D     	 adds r2,r7,#4
 329 025a 1368     	 ldr r3,[r2]
 330 025c 191D     	 adds r1,r3,#4
 331 025e 1160     	 str r1,[r2]
 332              	.LBB12:
 333 0260 B7F99E20 	 ldrsh r2,[r7,#158]
 334 0264 FA63     	 str r2,[r7,#60]
 335 0266 B7F99220 	 ldrsh r2,[r7,#146]
 336 026a BA63     	 str r2,[r7,#56]
 337 026c FA6B     	 ldr r2,[r7,#60]
 338 026e B96B     	 ldr r1,[r7,#56]
 339              	
 340 0270 C2EA0142 	 pkhbt r2,r2,r1,lsl#16
 341              	
 342              	 .thumb
 343 0274 7A63     	 str r2,[r7,#52]
 344 0276 7A6B     	 ldr r2,[r7,#52]
 345              	.LBE12:
 346 0278 1A60     	 str r2,[r3]
 153:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *__SIMD32(pCmplxDst)++ = __PKHBT(out3, out4, 16);
 347              	 .loc 1 153 0
 348 027a 3A1D     	 adds r2,r7,#4
 349 027c 1368     	 ldr r3,[r2]
 350 027e 191D     	 adds r1,r3,#4
 351 0280 1160     	 str r1,[r2]
 352              	.LBB13:
 353 0282 B7F98620 	 ldrsh r2,[r7,#134]
 354 0286 3A63     	 str r2,[r7,#48]
 355 0288 B7F97A20 	 ldrsh r2,[r7,#122]
 356 028c FA62     	 str r2,[r7,#44]
 357 028e 3A6B     	 ldr r2,[r7,#48]
 358 0290 F96A     	 ldr r1,[r7,#44]
 359              	
 360 0292 C2EA0142 	 pkhbt r2,r2,r1,lsl#16
 361              	
 362              	 .thumb
 363 0296 BA62     	 str r2,[r7,#40]
 364 0298 BA6A     	 ldr r2,[r7,#40]
 365              	.LBE13:
 366 029a 1A60     	 str r2,[r3]
 154:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 155:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* Decrement the numSamples loop counter */
 156:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     blkCnt--;
 367              	 .loc 1 156 0
 368 029c D7F8C430 	 ldr r3,[r7,#196]
 369 02a0 013B     	 subs r3,r3,#1
 370 02a2 C7F8C430 	 str r3,[r7,#196]
 371              	.L2:
  89:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 372              	 .loc 1 89 0
 373 02a6 D7F8C430 	 ldr r3,[r7,#196]
 374 02aa 002B     	 cmp r3,#0
 375 02ac 7FF4B4AE 	 bne .L3
 157:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   }
 158:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 159:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.    
 160:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****    ** No loop unrolling is used. */
 161:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   blkCnt = numSamples % 0x4u;
 376              	 .loc 1 161 0
 377 02b0 3B68     	 ldr r3,[r7]
 378 02b2 03F00303 	 and r3,r3,#3
 379 02b6 C7F8C430 	 str r3,[r7,#196]
 162:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   while(blkCnt > 0u)
 380              	 .loc 1 163 0
 381 02ba 33E0     	 b .L4
 382              	.L5:
 164:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 165:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i] = A[2 * i] * B[i].            */
 166:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* C[2 * i + 1] = A[2 * i + 1] * B[i].        */
 167:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     in = *pSrcReal++;
 383              	 .loc 1 167 0
 384 02bc BB68     	 ldr r3,[r7,#8]
 385 02be 9A1C     	 adds r2,r3,#2
 386 02c0 BA60     	 str r2,[r7,#8]
 387 02c2 1B88     	 ldrh r3,[r3]
 388 02c4 FB84     	 strh r3,[r7,#38]
 168:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* store the result in the destination buffer. */
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 389              	 .loc 1 169 0
 390 02c6 7B68     	 ldr r3,[r7,#4]
 391 02c8 9A1C     	 adds r2,r3,#2
 392 02ca 7A60     	 str r2,[r7,#4]
 393              	.LBB14:
 170:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 394              	 .loc 1 170 0
 395 02cc FA68     	 ldr r2,[r7,#12]
 396 02ce 911C     	 adds r1,r2,#2
 397 02d0 F960     	 str r1,[r7,#12]
 398 02d2 1288     	 ldrh r2,[r2]
 399 02d4 12B2     	 sxth r2,r2
 400 02d6 B7F92610 	 ldrsh r1,[r7,#38]
 401 02da 01FB02F2 	 mul r2,r1,r2
 402 02de D213     	 asrs r2,r2,#15
 403 02e0 3A62     	 str r2,[r7,#32]
 404 02e2 3A6A     	 ldr r2,[r7,#32]
 405              	
 406 02e4 02F30F02 	 ssat r2,#16,r2
 407              	
 408              	 .thumb
 409 02e8 FA61     	 str r2,[r7,#28]
 410 02ea FA69     	 ldr r2,[r7,#28]
 411              	.LBE14:
 412 02ec 92B2     	 uxth r2,r2
 169:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 413              	 .loc 1 169 0
 414 02ee 1A80     	 strh r2,[r3]
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 415              	 .loc 1 171 0
 416 02f0 7B68     	 ldr r3,[r7,#4]
 417 02f2 9A1C     	 adds r2,r3,#2
 418 02f4 7A60     	 str r2,[r7,#4]
 419              	.LBB15:
 172:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 420              	 .loc 1 172 0
 421 02f6 FA68     	 ldr r2,[r7,#12]
 422 02f8 911C     	 adds r1,r2,#2
 423 02fa F960     	 str r1,[r7,#12]
 424 02fc 1288     	 ldrh r2,[r2]
 425 02fe 12B2     	 sxth r2,r2
 426 0300 B7F92610 	 ldrsh r1,[r7,#38]
 427 0304 01FB02F2 	 mul r2,r1,r2
 428 0308 D213     	 asrs r2,r2,#15
 429 030a BA61     	 str r2,[r7,#24]
 430 030c BA69     	 ldr r2,[r7,#24]
 431              	
 432 030e 02F30F02 	 ssat r2,#16,r2
 433              	
 434              	 .thumb
 435 0312 7A61     	 str r2,[r7,#20]
 436 0314 7A69     	 ldr r2,[r7,#20]
 437              	.LBE15:
 438 0316 92B2     	 uxth r2,r2
 171:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 439              	 .loc 1 171 0
 440 0318 1A80     	 strh r2,[r3]
 173:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* Decrement the numSamples loop counter */
 175:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     blkCnt--;
 441              	 .loc 1 175 0
 442 031a D7F8C430 	 ldr r3,[r7,#196]
 443 031e 013B     	 subs r3,r3,#1
 444 0320 C7F8C430 	 str r3,[r7,#196]
 445              	.L4:
 163:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 446              	 .loc 1 163 0
 447 0324 D7F8C430 	 ldr r3,[r7,#196]
 448 0328 002B     	 cmp r3,#0
 449 032a C7D1     	 bne .L5
 176:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   }
 177:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #else
 179:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 180:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   /* Run the below code for Cortex-M0 */
 181:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 182:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   while(numSamples > 0u)
 183:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   {
 184:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* realOut = realA * realB.            */
 185:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* imagOut = imagA * realB.                */
 186:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     in = *pSrcReal++;
 187:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* store the result in the destination buffer. */
 188:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 189:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 190:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     *pCmplxDst++ =
 191:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****       (q15_t) __SSAT((((q31_t) (*pSrcCmplx++) * (in)) >> 15), 16);
 192:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 193:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     /* Decrement the numSamples loop counter */
 194:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****     numSamples--;
 195:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c ****   }
 196:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 197:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 198:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** 
 199:../Dave/Generated/CMSIS_DSP/ComplexMathFunctions/arm_cmplx_mult_real_q15.c **** }
 450              	 .loc 1 199 0
 451 032c CC37     	 adds r7,r7,#204
 452              	.LCFI3:
 453              	 .cfi_def_cfa_offset 4
 454 032e BD46     	 mov sp,r7
 455              	.LCFI4:
 456              	 .cfi_def_cfa_register 13
 457              	 
 458 0330 5DF8047B 	 ldr r7,[sp],#4
 459              	.LCFI5:
 460              	 .cfi_restore 7
 461              	 .cfi_def_cfa_offset 0
 462 0334 7047     	 bx lr
 463              	 .cfi_endproc
 464              	.LFE139:
 466 0336 00BF     	 .text
 467              	.Letext0:
 468              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 469              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 470              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_real_q15.c
    {standard input}:19     .text.arm_cmplx_mult_real_q15:00000000 $t
    {standard input}:24     .text.arm_cmplx_mult_real_q15:00000000 arm_cmplx_mult_real_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
