   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_float_to_q15.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global __aeabi_fmul
  19              	 .global __aeabi_fcmpgt
  20              	 .global __aeabi_fadd
  21              	 .global __aeabi_f2iz
  22              	 .section .text.arm_float_to_q15,"ax",%progbits
  23              	 .align 2
  24              	 .global arm_float_to_q15
  25              	 .thumb
  26              	 .thumb_func
  28              	arm_float_to_q15:
  29              	.LFB139:
  30              	 .file 1 "../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c"
   1:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** /* ----------------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *    
   4:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * $Date:        31. July 2014
   5:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * $Revision: 	V1.4.4  
   6:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *    
   7:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * Title:		arm_float_to_q15.c    
   9:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *    
  10:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * Description:	Converts the elements of the floating-point vector to Q15 vector.    
  11:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *    
  12:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *  
  14:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** *
  27:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * POSSIBILITY OF SUCH DAMAGE.    
  39:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** * ---------------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  43:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @ingroup groupSupport    
  45:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  */
  46:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  47:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @addtogroup float_to_x    
  49:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  */
  51:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  52:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** /**    
  53:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @brief Converts the elements of the floating-point vector to Q15 vector.    
  54:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @param[in]       *pSrc points to the floating-point input vector    
  55:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @param[out]      *pDst points to the Q15 output vector   
  56:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @param[in]       blockSize length of the input vector    
  57:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * @return none.    
  58:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  *    
  59:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * \par Description:    
  60:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * \par   
  61:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * The equation used for the conversion process is:    
  62:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * <pre>    
  63:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * 	pDst[n] = (q15_t)(pSrc[n] * 32768);   0 <= n < blockSize.    
  64:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * </pre>    
  65:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * \par Scaling and Overflow Behavior:    
  66:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * \par    
  67:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * The function uses saturating arithmetic.    
  68:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * Results outside of the allowable Q15 range [0x8000 0x7FFF] will be saturated.    
  69:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * \note   
  70:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * In order to apply rounding, the library should be rebuilt with the ROUNDING macro     
  71:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  * defined in the preprocessor section of project options.     
  72:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  *    
  73:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****  */
  74:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  75:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  76:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** void arm_float_to_q15(
  77:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   float32_t * pSrc,
  78:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   q15_t * pDst,
  79:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   uint32_t blockSize)
  80:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** {
  31              	 .loc 1 80 0
  32              	 .cfi_startproc
  33              	 
  34              	 
  35 0000 90B5     	 push {r4,r7,lr}
  36              	.LCFI0:
  37              	 .cfi_def_cfa_offset 12
  38              	 .cfi_offset 4,-12
  39              	 .cfi_offset 7,-8
  40              	 .cfi_offset 14,-4
  41 0002 93B0     	 sub sp,sp,#76
  42              	.LCFI1:
  43              	 .cfi_def_cfa_offset 88
  44 0004 00AF     	 add r7,sp,#0
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 7
  47 0006 F860     	 str r0,[r7,#12]
  48 0008 B960     	 str r1,[r7,#8]
  49 000a 7A60     	 str r2,[r7,#4]
  81:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   float32_t *pIn = pSrc;                         /* Src pointer */
  50              	 .loc 1 81 0
  51 000c FB68     	 ldr r3,[r7,#12]
  52 000e 7B64     	 str r3,[r7,#68]
  82:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   uint32_t blkCnt;                               /* loop counter */
  83:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  84:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #ifdef ARM_MATH_ROUNDING
  85:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  86:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   float32_t in;
  87:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  88:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #endif /*      #ifdef ARM_MATH_ROUNDING        */
  89:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  90:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #ifndef ARM_MATH_CM0_FAMILY
  91:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  92:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  93:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  94:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   /*loop Unrolling */
  95:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   blkCnt = blockSize >> 2u;
  53              	 .loc 1 95 0
  54 0010 7B68     	 ldr r3,[r7,#4]
  55 0012 9B08     	 lsrs r3,r3,#2
  56 0014 3B64     	 str r3,[r7,#64]
  96:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
  97:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
  98:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  99:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   while(blkCnt > 0u)
  57              	 .loc 1 99 0
  58 0016 BAE0     	 b .L2
  59              	.L15:
 100:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   {
 101:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 102:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #ifdef ARM_MATH_ROUNDING
 103:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* C = A * 32768 */
 104:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* convert from float to q15 and then store the results in the destination buffer */
 105:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = *pIn++;
  60              	 .loc 1 105 0
  61 0018 7B6C     	 ldr r3,[r7,#68]
  62 001a 1A1D     	 adds r2,r3,#4
  63 001c 7A64     	 str r2,[r7,#68]
  64 001e 1B68     	 ldr r3,[r3]
  65 0020 FB63     	 str r3,[r7,#60]
 106:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = (in * 32768.0f);
  66              	 .loc 1 106 0
  67 0022 F86B     	 ldr r0,[r7,#60]
  68 0024 4FF08E41 	 mov r1,#1191182336
  69 0028 FFF7FEFF 	 bl __aeabi_fmul
  70 002c 0346     	 mov r3,r0
  71 002e FB63     	 str r3,[r7,#60]
 107:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in += in > 0.0f ? 0.5f : -0.5f;
  72              	 .loc 1 107 0
  73 0030 F86B     	 ldr r0,[r7,#60]
  74 0032 4FF00001 	 mov r1,#0
  75 0036 FFF7FEFF 	 bl __aeabi_fcmpgt
  76 003a 0346     	 mov r3,r0
  77 003c 002B     	 cmp r3,#0
  78 003e 02D0     	 beq .L26
  79              	 .loc 1 107 0 is_stmt 0 discriminator 1
  80 0040 4FF07C53 	 mov r3,#1056964608
  81 0044 01E0     	 b .L5
  82              	.L26:
  83              	 .loc 1 107 0 discriminator 2
  84 0046 4FF03F43 	 mov r3,#-1090519040
  85              	.L5:
  86              	 .loc 1 107 0 discriminator 4
  87 004a F86B     	 ldr r0,[r7,#60]
  88 004c 1946     	 mov r1,r3
  89 004e FFF7FEFF 	 bl __aeabi_fadd
  90 0052 0346     	 mov r3,r0
  91 0054 FB63     	 str r3,[r7,#60]
 108:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) (__SSAT((q31_t) (in), 16));
  92              	 .loc 1 108 0 is_stmt 1 discriminator 4
  93 0056 BC68     	 ldr r4,[r7,#8]
  94 0058 A31C     	 adds r3,r4,#2
  95 005a BB60     	 str r3,[r7,#8]
  96              	.LBB2:
  97 005c F86B     	 ldr r0,[r7,#60]
  98 005e FFF7FEFF 	 bl __aeabi_f2iz
  99 0062 0346     	 mov r3,r0
 100 0064 BB63     	 str r3,[r7,#56]
 101 0066 BB6B     	 ldr r3,[r7,#56]
 102              	
 103 0068 03F30F03 	 ssat r3,#16,r3
 104              	
 105              	 .thumb
 106 006c 7B63     	 str r3,[r7,#52]
 107 006e 7B6B     	 ldr r3,[r7,#52]
 108              	.LBE2:
 109 0070 9BB2     	 uxth r3,r3
 110 0072 2380     	 strh r3,[r4]
 109:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 110:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = *pIn++;
 111              	 .loc 1 110 0 discriminator 4
 112 0074 7B6C     	 ldr r3,[r7,#68]
 113 0076 1A1D     	 adds r2,r3,#4
 114 0078 7A64     	 str r2,[r7,#68]
 115 007a 1B68     	 ldr r3,[r3]
 116 007c FB63     	 str r3,[r7,#60]
 111:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = (in * 32768.0f);
 117              	 .loc 1 111 0 discriminator 4
 118 007e F86B     	 ldr r0,[r7,#60]
 119 0080 4FF08E41 	 mov r1,#1191182336
 120 0084 FFF7FEFF 	 bl __aeabi_fmul
 121 0088 0346     	 mov r3,r0
 122 008a FB63     	 str r3,[r7,#60]
 112:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 123              	 .loc 1 112 0 discriminator 4
 124 008c F86B     	 ldr r0,[r7,#60]
 125 008e 4FF00001 	 mov r1,#0
 126 0092 FFF7FEFF 	 bl __aeabi_fcmpgt
 127 0096 0346     	 mov r3,r0
 128 0098 002B     	 cmp r3,#0
 129 009a 02D0     	 beq .L27
 130              	 .loc 1 112 0 is_stmt 0 discriminator 1
 131 009c 4FF07C53 	 mov r3,#1056964608
 132 00a0 01E0     	 b .L8
 133              	.L27:
 134              	 .loc 1 112 0 discriminator 2
 135 00a2 4FF03F43 	 mov r3,#-1090519040
 136              	.L8:
 137              	 .loc 1 112 0 discriminator 4
 138 00a6 F86B     	 ldr r0,[r7,#60]
 139 00a8 1946     	 mov r1,r3
 140 00aa FFF7FEFF 	 bl __aeabi_fadd
 141 00ae 0346     	 mov r3,r0
 142 00b0 FB63     	 str r3,[r7,#60]
 113:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) (__SSAT((q31_t) (in), 16));
 143              	 .loc 1 113 0 is_stmt 1 discriminator 4
 144 00b2 BC68     	 ldr r4,[r7,#8]
 145 00b4 A31C     	 adds r3,r4,#2
 146 00b6 BB60     	 str r3,[r7,#8]
 147              	.LBB3:
 148 00b8 F86B     	 ldr r0,[r7,#60]
 149 00ba FFF7FEFF 	 bl __aeabi_f2iz
 150 00be 0346     	 mov r3,r0
 151 00c0 3B63     	 str r3,[r7,#48]
 152 00c2 3B6B     	 ldr r3,[r7,#48]
 153              	
 154 00c4 03F30F03 	 ssat r3,#16,r3
 155              	
 156              	 .thumb
 157 00c8 FB62     	 str r3,[r7,#44]
 158 00ca FB6A     	 ldr r3,[r7,#44]
 159              	.LBE3:
 160 00cc 9BB2     	 uxth r3,r3
 161 00ce 2380     	 strh r3,[r4]
 114:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 115:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = *pIn++;
 162              	 .loc 1 115 0 discriminator 4
 163 00d0 7B6C     	 ldr r3,[r7,#68]
 164 00d2 1A1D     	 adds r2,r3,#4
 165 00d4 7A64     	 str r2,[r7,#68]
 166 00d6 1B68     	 ldr r3,[r3]
 167 00d8 FB63     	 str r3,[r7,#60]
 116:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = (in * 32768.0f);
 168              	 .loc 1 116 0 discriminator 4
 169 00da F86B     	 ldr r0,[r7,#60]
 170 00dc 4FF08E41 	 mov r1,#1191182336
 171 00e0 FFF7FEFF 	 bl __aeabi_fmul
 172 00e4 0346     	 mov r3,r0
 173 00e6 FB63     	 str r3,[r7,#60]
 117:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 174              	 .loc 1 117 0 discriminator 4
 175 00e8 F86B     	 ldr r0,[r7,#60]
 176 00ea 4FF00001 	 mov r1,#0
 177 00ee FFF7FEFF 	 bl __aeabi_fcmpgt
 178 00f2 0346     	 mov r3,r0
 179 00f4 002B     	 cmp r3,#0
 180 00f6 02D0     	 beq .L28
 181              	 .loc 1 117 0 is_stmt 0 discriminator 1
 182 00f8 4FF07C53 	 mov r3,#1056964608
 183 00fc 01E0     	 b .L11
 184              	.L28:
 185              	 .loc 1 117 0 discriminator 2
 186 00fe 4FF03F43 	 mov r3,#-1090519040
 187              	.L11:
 188              	 .loc 1 117 0 discriminator 4
 189 0102 F86B     	 ldr r0,[r7,#60]
 190 0104 1946     	 mov r1,r3
 191 0106 FFF7FEFF 	 bl __aeabi_fadd
 192 010a 0346     	 mov r3,r0
 193 010c FB63     	 str r3,[r7,#60]
 118:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) (__SSAT((q31_t) (in), 16));
 194              	 .loc 1 118 0 is_stmt 1 discriminator 4
 195 010e BC68     	 ldr r4,[r7,#8]
 196 0110 A31C     	 adds r3,r4,#2
 197 0112 BB60     	 str r3,[r7,#8]
 198              	.LBB4:
 199 0114 F86B     	 ldr r0,[r7,#60]
 200 0116 FFF7FEFF 	 bl __aeabi_f2iz
 201 011a 0346     	 mov r3,r0
 202 011c BB62     	 str r3,[r7,#40]
 203 011e BB6A     	 ldr r3,[r7,#40]
 204              	
 205 0120 03F30F03 	 ssat r3,#16,r3
 206              	
 207              	 .thumb
 208 0124 7B62     	 str r3,[r7,#36]
 209 0126 7B6A     	 ldr r3,[r7,#36]
 210              	.LBE4:
 211 0128 9BB2     	 uxth r3,r3
 212 012a 2380     	 strh r3,[r4]
 119:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 120:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = *pIn++;
 213              	 .loc 1 120 0 discriminator 4
 214 012c 7B6C     	 ldr r3,[r7,#68]
 215 012e 1A1D     	 adds r2,r3,#4
 216 0130 7A64     	 str r2,[r7,#68]
 217 0132 1B68     	 ldr r3,[r3]
 218 0134 FB63     	 str r3,[r7,#60]
 121:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = (in * 32768.0f);
 219              	 .loc 1 121 0 discriminator 4
 220 0136 F86B     	 ldr r0,[r7,#60]
 221 0138 4FF08E41 	 mov r1,#1191182336
 222 013c FFF7FEFF 	 bl __aeabi_fmul
 223 0140 0346     	 mov r3,r0
 224 0142 FB63     	 str r3,[r7,#60]
 122:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 225              	 .loc 1 122 0 discriminator 4
 226 0144 F86B     	 ldr r0,[r7,#60]
 227 0146 4FF00001 	 mov r1,#0
 228 014a FFF7FEFF 	 bl __aeabi_fcmpgt
 229 014e 0346     	 mov r3,r0
 230 0150 002B     	 cmp r3,#0
 231 0152 02D0     	 beq .L29
 232              	 .loc 1 122 0 is_stmt 0 discriminator 1
 233 0154 4FF07C53 	 mov r3,#1056964608
 234 0158 01E0     	 b .L14
 235              	.L29:
 236              	 .loc 1 122 0 discriminator 2
 237 015a 4FF03F43 	 mov r3,#-1090519040
 238              	.L14:
 239              	 .loc 1 122 0 discriminator 4
 240 015e F86B     	 ldr r0,[r7,#60]
 241 0160 1946     	 mov r1,r3
 242 0162 FFF7FEFF 	 bl __aeabi_fadd
 243 0166 0346     	 mov r3,r0
 244 0168 FB63     	 str r3,[r7,#60]
 123:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) (__SSAT((q31_t) (in), 16));
 245              	 .loc 1 123 0 is_stmt 1 discriminator 4
 246 016a BC68     	 ldr r4,[r7,#8]
 247 016c A31C     	 adds r3,r4,#2
 248 016e BB60     	 str r3,[r7,#8]
 249              	.LBB5:
 250 0170 F86B     	 ldr r0,[r7,#60]
 251 0172 FFF7FEFF 	 bl __aeabi_f2iz
 252 0176 0346     	 mov r3,r0
 253 0178 3B62     	 str r3,[r7,#32]
 254 017a 3B6A     	 ldr r3,[r7,#32]
 255              	
 256 017c 03F30F03 	 ssat r3,#16,r3
 257              	
 258              	 .thumb
 259 0180 FB61     	 str r3,[r7,#28]
 260 0182 FB69     	 ldr r3,[r7,#28]
 261              	.LBE5:
 262 0184 9BB2     	 uxth r3,r3
 263 0186 2380     	 strh r3,[r4]
 124:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 125:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #else
 126:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 127:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* C = A * 32768 */
 128:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* convert from float to q15 and then store the results in the destination buffer */
 129:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) __SSAT((q31_t) (*pIn++ * 32768.0f), 16);
 130:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) __SSAT((q31_t) (*pIn++ * 32768.0f), 16);
 131:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) __SSAT((q31_t) (*pIn++ * 32768.0f), 16);
 132:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) __SSAT((q31_t) (*pIn++ * 32768.0f), 16);
 133:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 134:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #endif /*      #ifdef ARM_MATH_ROUNDING        */
 135:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 136:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* Decrement the loop counter */
 137:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     blkCnt--;
 264              	 .loc 1 137 0 discriminator 4
 265 0188 3B6C     	 ldr r3,[r7,#64]
 266 018a 013B     	 subs r3,r3,#1
 267 018c 3B64     	 str r3,[r7,#64]
 268              	.L2:
  99:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   {
 269              	 .loc 1 99 0
 270 018e 3B6C     	 ldr r3,[r7,#64]
 271 0190 002B     	 cmp r3,#0
 272 0192 7FF441AF 	 bne .L15
 138:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   }
 139:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 140:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.    
 141:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****    ** No loop unrolling is used. */
 142:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   blkCnt = blockSize % 0x4u;
 273              	 .loc 1 142 0
 274 0196 7B68     	 ldr r3,[r7,#4]
 275 0198 03F00303 	 and r3,r3,#3
 276 019c 3B64     	 str r3,[r7,#64]
 143:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 144:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   while(blkCnt > 0u)
 277              	 .loc 1 144 0
 278 019e 30E0     	 b .L16
 279              	.L20:
 145:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   {
 146:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 147:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #ifdef ARM_MATH_ROUNDING
 148:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* C = A * 32768 */
 149:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* convert from float to q15 and then store the results in the destination buffer */
 150:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = *pIn++;
 280              	 .loc 1 150 0
 281 01a0 7B6C     	 ldr r3,[r7,#68]
 282 01a2 1A1D     	 adds r2,r3,#4
 283 01a4 7A64     	 str r2,[r7,#68]
 284 01a6 1B68     	 ldr r3,[r3]
 285 01a8 FB63     	 str r3,[r7,#60]
 151:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = (in * 32768.0f);
 286              	 .loc 1 151 0
 287 01aa F86B     	 ldr r0,[r7,#60]
 288 01ac 4FF08E41 	 mov r1,#1191182336
 289 01b0 FFF7FEFF 	 bl __aeabi_fmul
 290 01b4 0346     	 mov r3,r0
 291 01b6 FB63     	 str r3,[r7,#60]
 152:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in += in > 0.0f ? 0.5f : -0.5f;
 292              	 .loc 1 152 0
 293 01b8 F86B     	 ldr r0,[r7,#60]
 294 01ba 4FF00001 	 mov r1,#0
 295 01be FFF7FEFF 	 bl __aeabi_fcmpgt
 296 01c2 0346     	 mov r3,r0
 297 01c4 002B     	 cmp r3,#0
 298 01c6 02D0     	 beq .L30
 299              	 .loc 1 152 0 is_stmt 0 discriminator 1
 300 01c8 4FF07C53 	 mov r3,#1056964608
 301 01cc 01E0     	 b .L19
 302              	.L30:
 303              	 .loc 1 152 0 discriminator 2
 304 01ce 4FF03F43 	 mov r3,#-1090519040
 305              	.L19:
 306              	 .loc 1 152 0 discriminator 4
 307 01d2 F86B     	 ldr r0,[r7,#60]
 308 01d4 1946     	 mov r1,r3
 309 01d6 FFF7FEFF 	 bl __aeabi_fadd
 310 01da 0346     	 mov r3,r0
 311 01dc FB63     	 str r3,[r7,#60]
 153:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) (__SSAT((q31_t) (in), 16));
 312              	 .loc 1 153 0 is_stmt 1 discriminator 4
 313 01de BC68     	 ldr r4,[r7,#8]
 314 01e0 A31C     	 adds r3,r4,#2
 315 01e2 BB60     	 str r3,[r7,#8]
 316              	.LBB6:
 317 01e4 F86B     	 ldr r0,[r7,#60]
 318 01e6 FFF7FEFF 	 bl __aeabi_f2iz
 319 01ea 0346     	 mov r3,r0
 320 01ec BB61     	 str r3,[r7,#24]
 321 01ee BB69     	 ldr r3,[r7,#24]
 322              	
 323 01f0 03F30F03 	 ssat r3,#16,r3
 324              	
 325              	 .thumb
 326 01f4 7B61     	 str r3,[r7,#20]
 327 01f6 7B69     	 ldr r3,[r7,#20]
 328              	.LBE6:
 329 01f8 9BB2     	 uxth r3,r3
 330 01fa 2380     	 strh r3,[r4]
 154:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 155:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #else
 156:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 157:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* C = A * 32768 */
 158:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* convert from float to q15 and then store the results in the destination buffer */
 159:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) __SSAT((q31_t) (*pIn++ * 32768.0f), 16);
 160:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 161:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #endif /*      #ifdef ARM_MATH_ROUNDING        */
 162:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 163:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* Decrement the loop counter */
 164:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     blkCnt--;
 331              	 .loc 1 164 0 discriminator 4
 332 01fc 3B6C     	 ldr r3,[r7,#64]
 333 01fe 013B     	 subs r3,r3,#1
 334 0200 3B64     	 str r3,[r7,#64]
 335              	.L16:
 144:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   {
 336              	 .loc 1 144 0
 337 0202 3B6C     	 ldr r3,[r7,#64]
 338 0204 002B     	 cmp r3,#0
 339 0206 CBD1     	 bne .L20
 165:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   }
 166:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 167:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #else
 169:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 170:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   /* Run the below code for Cortex-M0 */
 171:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 172:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   /* Loop over blockSize number of values */
 173:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   blkCnt = blockSize;
 174:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 175:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   while(blkCnt > 0u)
 176:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   {
 177:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #ifdef ARM_MATH_ROUNDING
 179:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* C = A * 32768 */
 180:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* convert from float to q15 and then store the results in the destination buffer */
 181:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = *pIn++;
 182:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in = (in * 32768.0f);
 183:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     in += in > 0 ? 0.5f : -0.5f;
 184:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) (__SSAT((q31_t) (in), 16));
 185:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 186:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #else
 187:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 188:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* C = A * 32768 */
 189:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* convert from float to q15 and then store the results in the destination buffer */
 190:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     *pDst++ = (q15_t) __SSAT((q31_t) (*pIn++ * 32768.0f), 16);
 191:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 192:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #endif /*      #ifdef ARM_MATH_ROUNDING        */
 193:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 194:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     /* Decrement the loop counter */
 195:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****     blkCnt--;
 196:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c ****   }
 197:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 198:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 199:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** 
 200:../Dave/Generated/CMSIS_DSP/SupportFunctions/arm_float_to_q15.c **** }
 340              	 .loc 1 200 0
 341 0208 4C37     	 adds r7,r7,#76
 342              	.LCFI3:
 343              	 .cfi_def_cfa_offset 12
 344 020a BD46     	 mov sp,r7
 345              	.LCFI4:
 346              	 .cfi_def_cfa_register 13
 347              	 
 348 020c 90BD     	 pop {r4,r7,pc}
 349              	 .cfi_endproc
 350              	.LFE139:
 352 020e 00BF     	 .text
 353              	.Letext0:
 354              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 355              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 356              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_float_to_q15.c
    {standard input}:23     .text.arm_float_to_q15:00000000 $t
    {standard input}:28     .text.arm_float_to_q15:00000000 arm_float_to_q15
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_fmul
__aeabi_fcmpgt
__aeabi_fadd
__aeabi_f2iz
