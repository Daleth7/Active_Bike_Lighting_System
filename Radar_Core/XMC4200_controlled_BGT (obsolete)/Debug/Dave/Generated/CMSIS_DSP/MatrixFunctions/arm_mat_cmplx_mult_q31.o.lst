   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_mat_cmplx_mult_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.clip_q63_to_q31,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	clip_q63_to_q31:
  24              	.LFB106:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /* ----------------------------------------------------------------------
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Date:        12. March 2014
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * $Revision: 	V1.4.4
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Project: 	    CMSIS DSP Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Title:	    arm_math.h
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Description:	Public header file for CMSIS DSP Library
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Target Processor: Cortex-M7/Cortex-M4/Cortex-M3/Cortex-M0
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * Redistribution and use in source and binary forms, with or without
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * modification, are permitted provided that the following conditions
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * are met:
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions of source code must retain the above copyright
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer.
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Redistributions in binary form must reproduce the above copyright
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     notice, this list of conditions and the following disclaimer in
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     the documentation and/or other materials provided with the
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     distribution.
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     may be used to endorse or promote products derived from this
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *     software without specific prior written permission.
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** *
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** * POSSIBILITY OF SUCH DAMAGE.
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * -------------------------------------------------------------------- */
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    \mainpage CMSIS DSP Software Library
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Introduction
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Basic math functions
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Fast math functions
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Complex math functions
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Filters
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Matrix functions
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Transforms
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Motor control functions
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Statistical functions
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Support functions
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - Interpolation functions
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Using the Library
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Little endian and Double Precision Floating Point Unit on Cortex-
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Big endian and Double Precision Floating Point Unit on Cortex-M7)
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Little endian and Single Precision Floating Point Unit on Cortex-
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Big endian and Single Precision Floating Point Unit on Cortex-M7)
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7l_math.lib (Little endian on Cortex-M7)
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM7b_math.lib (Big endian on Cortex-M7)
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4lf_math.lib (Little endian and Floating Point Unit on Cortex-M4)
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4bf_math.lib (Big endian and Floating Point Unit on Cortex-M4)
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4l_math.lib (Little endian on Cortex-M4)
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM4b_math.lib (Big endian on Cortex-M4)
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3l_math.lib (Little endian on Cortex-M3)
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM3b_math.lib (Big endian on Cortex-M3)
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0l_math.lib (Little endian on Cortex-M0 / CortexM0+)
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM0b_math.lib (Big endian on Cortex-M0 / CortexM0+)
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M7/M4/M3/M0/M0+ with little endian and 
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define the appropriate pre processor MACRO ARM_MATH_CM7 or ARM_MATH_CM4 or  ARM_MATH_CM3 or
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Examples
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * --------
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Toolchain Support
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library has been developed and tested with MDK-ARM version 4.60.
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Building the Library
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The library installer contains a project file to re build libraries on MDK-ARM Tool chain in t
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - arm_cortexM_math.uvproj
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvproj project in MDK-ARM, selectin
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Pre-processor Macros
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Each library project have differant pre-processor macros.
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_ROUNDING:
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - ARM_MATH_CMx:
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * and ARM_MATH_CM0 for building library on cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * - __FPU_PRESENT:
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * -----------------------------
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |File/Folder                   |Content                                                       
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * 
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * <hr>
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Revision History of CMSIS-DSP
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright Notice
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * ------------
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    *
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * Copyright (C) 2010-2014 ARM Limited. All rights reserved.
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMath Basic Math Functions
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * operate on individual values and not arrays.
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions operates on complex data vectors.
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * (real, imag, real, imag, ...).
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * to the number of complex values; the array contains twice this number of
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * real values.
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupFilters Filtering Functions
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * This set of functions provides basic matrix math operations.
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The functions operate on matrix data structures.  For example,
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * the type
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * definition for the floating-point matrix structure is shown
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * below:
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     typedef struct
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     {
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     } arm_matrix_instance_f32;
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The structure specifies the size of the matrix and then points to
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and the values are arranged in row order.  That is, the
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * matrix element (i, j) is stored at:
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     pData[i*numCols + j]
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Init Functions
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is an associated initialization function for each type of matrix
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data structure.
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * To place the instance structure in a const data
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * section, manually initialize the data structure.  For example:
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * data array.
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * \par Size Checking
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * output matrices.  For example, the matrix addition function verifies that the
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * columns.  If the size check fails the functions return:
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Otherwise the functions return
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_SUCCESS
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * There is some overhead associated with this matrix size checking.
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * The matrix size checking is enabled via the \#define
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * <pre>
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * </pre>
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * within the library project settings.  By default this macro is defined
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * and size checking is enabled.  By changing the project settings and
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * run a bit faster.  With size checking disabled the functions always
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupTransforms Transform Functions
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupController Controller Functions
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupStats Statistics Functions
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupSupport Support Functions
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** /**
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  * @defgroup groupExamples Examples
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****  */
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef _ARM_MATH_H
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _ARM_MATH_H
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined(ARM_MATH_CM7)
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm7.h"
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM4)
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm4.h"
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM3)
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm3.h"
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined (ARM_MATH_CM0)
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #include "core_cm0.h"
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define ARM_MATH_CM0_FAMILY
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #elif defined (ARM_MATH_CM0PLUS)
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "core_cm0plus.h"
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "string.h"
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #include "math.h"
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifdef	__cplusplus
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** extern "C"
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** {
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q31 			(0x100)
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define DELTA_Q15 			0x5
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INDEX_MASK 			0x0000003F
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef PI
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define PI					3.14159265358979f
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SIZE  256
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q31	   0x400000
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define TABLE_SPACING_Q15	   0x80
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define INPUT_SPACING			0xB60B61
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Macro for Unaligned Support
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #if defined  (__GNUC__)
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #elif defined  (__ICCARM__)
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #else
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     #define ALIGN4 __align(4)
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   #endif
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Error status returned by some functions in the library.
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef enum
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   } arm_status;
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int8_t q7_t;
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int16_t q15_t;
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int32_t q31_t;
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef int64_t q63_t;
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 32-bit floating-point type definition.
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef float float32_t;
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief 64-bit floating-point type definition.
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   typedef double float64_t;
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to read/write two 16 bit values.
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined __CC_ARM
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t __packed
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED __attribute__((unused))
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __ICCARM__
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t __packed
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __GNUC__
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED __attribute__((unused))
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #elif defined __CSMC__			/* Cosmic */
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define CMSIS_UNUSED
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_TYPE int32_t
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #error Unknown compiler
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32(addr)  (*(__SIMD32_TYPE **) & (addr))
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __SIMD64(addr)  (*(int64_t **) & (addr))
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #if defined (ARM_MATH_CM3) || defined (ARM_MATH_CM0_FAMILY)
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack two 16 bit values.
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0x0000FFFF) | \
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3)      ( (((int32_t)(ARG1) <<  0) & (int32_t)0xFFFF0000) | \
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                          (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    /**
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief definition to pack four 8 bit values.
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) |	\
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) |	\
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) |	\
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #else
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) |	\
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) |	\
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) |	\
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 							    (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** #endif
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h **** 
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   /**
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    * @brief Clips Q63 to Q31 values.
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****    */
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   static __INLINE q31_t clip_q63_to_q31(
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   q63_t x)
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   {
  26              	 .loc 1 469 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 2DE9B003 	 push {r4,r5,r7,r8,r9}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 20
  34              	 .cfi_offset 4,-20
  35              	 .cfi_offset 5,-16
  36              	 .cfi_offset 7,-12
  37              	 .cfi_offset 8,-8
  38              	 .cfi_offset 9,-4
  39 0004 83B0     	 sub sp,sp,#12
  40              	.LCFI1:
  41              	 .cfi_def_cfa_offset 32
  42 0006 00AF     	 add r7,sp,#0
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 7
  45 0008 C7E90001 	 strd r0,[r7]
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
  46              	 .loc 1 470 0
  47 000c D7E90023 	 ldrd r2,[r7]
  48 0010 9846     	 mov r8,r3
  49 0012 4FEAE379 	 asr r9,r3,#31
  50 0016 4246     	 mov r2,r8
  51 0018 3B68     	 ldr r3,[r7]
  52 001a DB17     	 asrs r3,r3,#31
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
  53              	 .loc 1 471 0
  54 001c 9A42     	 cmp r2,r3
  55 001e 08D0     	 beq .L2
  56              	 .loc 1 471 0 is_stmt 0 discriminator 1
  57 0020 D7E90023 	 ldrd r2,[r7]
  58 0024 DC17     	 asrs r4,r3,#31
  59 0026 DD17     	 asrs r5,r3,#31
  60 0028 2346     	 mov r3,r4
  61 002a 83F00043 	 eor r3,r3,#-2147483648
  62 002e DB43     	 mvns r3,r3
  63 0030 00E0     	 b .L3
  64              	.L2:
  65              	 .loc 1 471 0 discriminator 2
  66 0032 3B68     	 ldr r3,[r7]
  67              	.L3:
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/CMSIS_DSP\arm_math.h ****   }
  68              	 .loc 1 472 0 is_stmt 1
  69 0034 1846     	 mov r0,r3
  70 0036 0C37     	 adds r7,r7,#12
  71              	.LCFI3:
  72              	 .cfi_def_cfa_offset 20
  73 0038 BD46     	 mov sp,r7
  74              	.LCFI4:
  75              	 .cfi_def_cfa_register 13
  76              	 
  77 003a BDE8B003 	 pop {r4,r5,r7,r8,r9}
  78              	.LCFI5:
  79              	 .cfi_restore 9
  80              	 .cfi_restore 8
  81              	 .cfi_restore 7
  82              	 .cfi_restore 5
  83              	 .cfi_restore 4
  84              	 .cfi_def_cfa_offset 0
  85 003e 7047     	 bx lr
  86              	 .cfi_endproc
  87              	.LFE106:
  89              	 .section .text.arm_mat_cmplx_mult_q31,"ax",%progbits
  90              	 .align 2
  91              	 .global arm_mat_cmplx_mult_q31
  92              	 .thumb
  93              	 .thumb_func
  95              	arm_mat_cmplx_mult_q31:
  96              	.LFB139:
  97              	 .file 2 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /* ----------------------------------------------------------------------      
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved. 
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *      
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * $Date:        12. March 2014
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *      
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * Project:      CMSIS DSP Library 
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * Title:	    arm_mat_cmplx_mult_q31.c      
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *      
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * Description:  Floating-point matrix multiplication.      
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *      
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * Target Processor:          Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * POSSIBILITY OF SUCH DAMAGE.     
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**     
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @ingroup groupMatrix     
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**      
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @addtogroup CmplxMatrixMult      
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @{      
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** /**      
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @brief Q31 Complex matrix multiplication      
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @param[in]       *pSrcA points to the first input complex matrix structure      
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @param[in]       *pSrcB points to the second input complex matrix structure      
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @param[out]      *pDst points to output complex matrix structure      
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @return     		The function returns either      
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *      
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * @details      
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * <b>Scaling and Overflow Behavior:</b>      
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *      
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * \par      
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * The function is implemented using an internal 64-bit accumulator.      
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate      
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * multiplication results but provides only a single guard bit. There is no saturation      
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * on intermediate additions. Thus, if the accumulator overflows it wraps around and      
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * distorts the result. The input signals should be scaled down to avoid intermediate      
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * overflows. The input is thus scaled down by log2(numColsA) bits      
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * to avoid overflows, as a total of numColsA additions are performed internally.      
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  * The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to yield the final
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *      
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  *      
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****  */
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** arm_status arm_mat_cmplx_mult_q31(
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_matrix_instance_q31 * pDst)
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** {
  98              	 .loc 2 79 0
  99              	 .cfi_startproc
 100              	 
 101              	 
 102 0000 2DE9F043 	 push {r4,r5,r6,r7,r8,r9,lr}
 103              	.LCFI6:
 104              	 .cfi_def_cfa_offset 28
 105              	 .cfi_offset 4,-28
 106              	 .cfi_offset 5,-24
 107              	 .cfi_offset 6,-20
 108              	 .cfi_offset 7,-16
 109              	 .cfi_offset 8,-12
 110              	 .cfi_offset 9,-8
 111              	 .cfi_offset 14,-4
 112 0004 9BB0     	 sub sp,sp,#108
 113              	.LCFI7:
 114              	 .cfi_def_cfa_offset 136
 115 0006 00AF     	 add r7,sp,#0
 116              	.LCFI8:
 117              	 .cfi_def_cfa_register 7
 118 0008 F860     	 str r0,[r7,#12]
 119 000a B960     	 str r1,[r7,#8]
 120 000c 7A60     	 str r2,[r7,#4]
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* input data matrix pointer A */
 121              	 .loc 2 80 0
 122 000e FB68     	 ldr r3,[r7,#12]
 123 0010 5B68     	 ldr r3,[r3,#4]
 124 0012 7B66     	 str r3,[r7,#100]
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pIn2 = pSrcB->pData;                    /* input data matrix pointer B */
 125              	 .loc 2 81 0
 126 0014 BB68     	 ldr r3,[r7,#8]
 127 0016 5B68     	 ldr r3,[r3,#4]
 128 0018 3B66     	 str r3,[r7,#96]
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* input data matrix pointer A  */
 129              	 .loc 2 82 0
 130 001a FB68     	 ldr r3,[r7,#12]
 131 001c 5B68     	 ldr r3,[r3,#4]
 132 001e FB65     	 str r3,[r7,#92]
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* output data matrix pointer */
 133              	 .loc 2 83 0
 134 0020 7B68     	 ldr r3,[r7,#4]
 135 0022 5B68     	 ldr r3,[r3,#4]
 136 0024 BB63     	 str r3,[r7,#56]
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* number of rows of input matrix A */
 137              	 .loc 2 85 0
 138 0026 FB68     	 ldr r3,[r7,#12]
 139 0028 1B88     	 ldrh r3,[r3]
 140 002a FB86     	 strh r3,[r7,#54]
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* number of columns of input matrix B */
 141              	 .loc 2 86 0
 142 002c BB68     	 ldr r3,[r7,#8]
 143 002e 5B88     	 ldrh r3,[r3,#2]
 144 0030 BB86     	 strh r3,[r7,#52]
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* number of columns of input matrix A */
 145              	 .loc 2 87 0
 146 0032 FB68     	 ldr r3,[r7,#12]
 147 0034 5B88     	 ldrh r3,[r3,#2]
 148 0036 7B86     	 strh r3,[r7,#50]
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q63_t sumReal1, sumImag1;                      /* accumulator */
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a0, b0, c0, d0;
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   q31_t a1, b1, c1, d1;
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   uint16_t col, i = 0u, j, row = numRowsA, colCnt;      /* loop counters */
 149              	 .loc 2 95 0
 150 0038 0023     	 movs r3,#0
 151 003a A7F84430 	 strh r3,[r7,#68]
 152 003e FB8E     	 ldrh r3,[r7,#54]
 153 0040 A7F84030 	 strh r3,[r7,#64]
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Check for matrix mismatch condition */
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   if((pSrcA->numCols != pSrcB->numRows) ||
 154              	 .loc 2 102 0
 155 0044 FB68     	 ldr r3,[r7,#12]
 156 0046 5A88     	 ldrh r2,[r3,#2]
 157 0048 BB68     	 ldr r3,[r7,#8]
 158 004a 1B88     	 ldrh r3,[r3]
 159 004c 9A42     	 cmp r2,r3
 160 004e 0BD1     	 bne .L6
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
 161              	 .loc 2 103 0 discriminator 1
 162 0050 FB68     	 ldr r3,[r7,#12]
 163 0052 1A88     	 ldrh r2,[r3]
 164 0054 7B68     	 ldr r3,[r7,#4]
 165 0056 1B88     	 ldrh r3,[r3]
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
 166              	 .loc 2 102 0 discriminator 1
 167 0058 9A42     	 cmp r2,r3
 168 005a 05D1     	 bne .L6
 169              	 .loc 2 103 0
 170 005c BB68     	 ldr r3,[r7,#8]
 171 005e 5A88     	 ldrh r2,[r3,#2]
 172 0060 7B68     	 ldr r3,[r7,#4]
 173 0062 5B88     	 ldrh r3,[r3,#2]
 174 0064 9A42     	 cmp r2,r3
 175 0066 03D0     	 beq .L7
 176              	.L6:
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
 177              	 .loc 2 107 0
 178 0068 FD23     	 movs r3,#253
 179 006a 87F83D30 	 strb r3,[r7,#61]
 180 006e CBE2     	 b .L8
 181              	.L7:
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   else
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** #endif /*      #ifdef ARM_MATH_MATRIX_CHECK    */
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   {
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* row loop */
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     do
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     {
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Output pointer is set to starting address of the row being processed */
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       px = pOut + 2 * i;
 182              	 .loc 2 118 0
 183 0070 B7F84430 	 ldrh r3,[r7,#68]
 184 0074 DB00     	 lsls r3,r3,#3
 185 0076 1A46     	 mov r2,r3
 186 0078 BB6B     	 ldr r3,[r7,#56]
 187 007a 1344     	 add r3,r3,r2
 188 007c BB65     	 str r3,[r7,#88]
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the column loop counter is to be initiated */
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       col = numColsB;
 189              	 .loc 2 121 0
 190 007e BB8E     	 ldrh r3,[r7,#52]
 191 0080 A7F84630 	 strh r3,[r7,#70]
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* For every row wise process, the pIn2 pointer is set     
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****        ** to the starting address of the pSrcB data */
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pIn2 = pSrcB->pData;
 192              	 .loc 2 125 0
 193 0084 BB68     	 ldr r3,[r7,#8]
 194 0086 5B68     	 ldr r3,[r3,#4]
 195 0088 3B66     	 str r3,[r7,#96]
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       j = 0u;
 196              	 .loc 2 127 0
 197 008a 0023     	 movs r3,#0
 198 008c A7F84230 	 strh r3,[r7,#66]
 199              	.L13:
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* column loop */
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       do
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       {
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumReal1 = 0.0;
 200              	 .loc 2 133 0
 201 0090 4FF00002 	 mov r2,#0
 202 0094 4FF00003 	 mov r3,#0
 203 0098 C7E91423 	 strd r2,[r7,#80]
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         sumImag1 = 0.0;
 204              	 .loc 2 134 0
 205 009c 4FF00002 	 mov r2,#0
 206 00a0 4FF00003 	 mov r3,#0
 207 00a4 C7E91223 	 strd r2,[r7,#72]
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Initiate the pointer pIn1 to point to the starting address of the column being processed
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn1 = pInA;
 208              	 .loc 2 137 0
 209 00a8 FB6D     	 ldr r3,[r7,#92]
 210 00aa 7B66     	 str r3,[r7,#100]
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA >> 2;
 211              	 .loc 2 140 0
 212 00ac 7B8E     	 ldrh r3,[r7,#50]
 213 00ae 9B08     	 lsrs r3,r3,#2
 214 00b0 FB87     	 strh r3,[r7,#62]
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* matrix multiplication        */
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while(colCnt > 0u)
 215              	 .loc 2 143 0
 216 00b2 D6E1     	 b .L9
 217              	.L10:
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix A */
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *pIn1;
 218              	 .loc 2 147 0
 219 00b4 7B6E     	 ldr r3,[r7,#100]
 220 00b6 1B68     	 ldr r3,[r3]
 221 00b8 FB62     	 str r3,[r7,#44]
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading real part of complex matrix B */
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *pIn2;
 222              	 .loc 2 150 0
 223 00ba 3B6E     	 ldr r3,[r7,#96]
 224 00bc 1B68     	 ldr r3,[r3]
 225 00be BB62     	 str r3,[r7,#40]
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix A */
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1u);
 226              	 .loc 2 153 0
 227 00c0 7B6E     	 ldr r3,[r7,#100]
 228 00c2 5B68     	 ldr r3,[r3,#4]
 229 00c4 7B62     	 str r3,[r7,#36]
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Reading imaginary part of complex matrix B */
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1u);
 230              	 .loc 2 156 0
 231 00c6 3B6E     	 ldr r3,[r7,#96]
 232 00c8 5B68     	 ldr r3,[r3,#4]
 233 00ca 3B62     	 str r3,[r7,#32]
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a0 *c0;
 234              	 .loc 2 159 0
 235 00cc FB6A     	 ldr r3,[r7,#44]
 236 00ce 1846     	 mov r0,r3
 237 00d0 4FEAE071 	 asr r1,r0,#31
 238 00d4 BB6A     	 ldr r3,[r7,#40]
 239 00d6 1A46     	 mov r2,r3
 240 00d8 4FEAE273 	 asr r3,r2,#31
 241 00dc 02FB01FE 	 mul lr,r2,r1
 242 00e0 00FB03F6 	 mul r6,r0,r3
 243 00e4 7644     	 add r6,r6,lr
 244 00e6 A0FB0223 	 umull r2,r3,r0,r2
 245 00ea F118     	 adds r1,r6,r3
 246 00ec 0B46     	 mov r3,r1
 247 00ee D7E91401 	 ldrd r0,[r7,#80]
 248 00f2 1218     	 adds r2,r2,r0
 249 00f4 43EB0103 	 adc r3,r3,r1
 250 00f8 C7E91423 	 strd r2,[r7,#80]
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b0 *c0;
 251              	 .loc 2 160 0
 252 00fc 7B6A     	 ldr r3,[r7,#36]
 253 00fe 1846     	 mov r0,r3
 254 0100 4FEAE071 	 asr r1,r0,#31
 255 0104 BB6A     	 ldr r3,[r7,#40]
 256 0106 1A46     	 mov r2,r3
 257 0108 4FEAE273 	 asr r3,r2,#31
 258 010c 02FB01FE 	 mul lr,r2,r1
 259 0110 00FB03F6 	 mul r6,r0,r3
 260 0114 7644     	 add r6,r6,lr
 261 0116 A0FB0223 	 umull r2,r3,r0,r2
 262 011a F118     	 adds r1,r6,r3
 263 011c 0B46     	 mov r3,r1
 264 011e D7E91201 	 ldrd r0,[r7,#72]
 265 0122 1218     	 adds r2,r2,r0
 266 0124 43EB0103 	 adc r3,r3,r1
 267 0128 C7E91223 	 strd r2,[r7,#72]
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 268              	 .loc 2 163 0
 269 012c 7B6E     	 ldr r3,[r7,#100]
 270 012e 0833     	 adds r3,r3,#8
 271 0130 7B66     	 str r3,[r7,#100]
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 272              	 .loc 2 164 0
 273 0132 BB8E     	 ldrh r3,[r7,#52]
 274 0134 DB00     	 lsls r3,r3,#3
 275 0136 1A46     	 mov r2,r3
 276 0138 3B6E     	 ldr r3,[r7,#96]
 277 013a 1344     	 add r3,r3,r2
 278 013c 3B66     	 str r3,[r7,#96]
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b0 *d0;
 279              	 .loc 2 167 0
 280 013e 7B6A     	 ldr r3,[r7,#36]
 281 0140 1846     	 mov r0,r3
 282 0142 4FEAE071 	 asr r1,r0,#31
 283 0146 3B6A     	 ldr r3,[r7,#32]
 284 0148 1A46     	 mov r2,r3
 285 014a 4FEAE273 	 asr r3,r2,#31
 286 014e 02FB01FE 	 mul lr,r2,r1
 287 0152 00FB03F6 	 mul r6,r0,r3
 288 0156 7644     	 add r6,r6,lr
 289 0158 A0FB0223 	 umull r2,r3,r0,r2
 290 015c F118     	 adds r1,r6,r3
 291 015e 0B46     	 mov r3,r1
 292 0160 D7E91401 	 ldrd r0,[r7,#80]
 293 0164 821A     	 subs r2,r0,r2
 294 0166 61EB0303 	 sbc r3,r1,r3
 295 016a C7E91423 	 strd r2,[r7,#80]
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a0 *d0;
 296              	 .loc 2 168 0
 297 016e FB6A     	 ldr r3,[r7,#44]
 298 0170 1846     	 mov r0,r3
 299 0172 4FEAE071 	 asr r1,r0,#31
 300 0176 3B6A     	 ldr r3,[r7,#32]
 301 0178 1A46     	 mov r2,r3
 302 017a 4FEAE273 	 asr r3,r2,#31
 303 017e 02FB01FE 	 mul lr,r2,r1
 304 0182 00FB03F6 	 mul r6,r0,r3
 305 0186 7644     	 add r6,r6,lr
 306 0188 A0FB0223 	 umull r2,r3,r0,r2
 307 018c F118     	 adds r1,r6,r3
 308 018e 0B46     	 mov r3,r1
 309 0190 D7E91201 	 ldrd r0,[r7,#72]
 310 0194 1218     	 adds r2,r2,r0
 311 0196 43EB0103 	 adc r3,r3,r1
 312 019a C7E91223 	 strd r2,[r7,#72]
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* read real and imag values from pSrcA and pSrcB buffer */
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *pIn1;
 313              	 .loc 2 173 0
 314 019e 7B6E     	 ldr r3,[r7,#100]
 315 01a0 1B68     	 ldr r3,[r3]
 316 01a2 FB61     	 str r3,[r7,#28]
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *pIn2;
 317              	 .loc 2 174 0
 318 01a4 3B6E     	 ldr r3,[r7,#96]
 319 01a6 1B68     	 ldr r3,[r3]
 320 01a8 BB61     	 str r3,[r7,#24]
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1u);
 321              	 .loc 2 175 0
 322 01aa 7B6E     	 ldr r3,[r7,#100]
 323 01ac 5B68     	 ldr r3,[r3,#4]
 324 01ae 7B61     	 str r3,[r7,#20]
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1u);
 325              	 .loc 2 176 0
 326 01b0 3B6E     	 ldr r3,[r7,#96]
 327 01b2 5B68     	 ldr r3,[r3,#4]
 328 01b4 3B61     	 str r3,[r7,#16]
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a1 *c1;
 329              	 .loc 2 179 0
 330 01b6 FB69     	 ldr r3,[r7,#28]
 331 01b8 1846     	 mov r0,r3
 332 01ba 4FEAE071 	 asr r1,r0,#31
 333 01be BB69     	 ldr r3,[r7,#24]
 334 01c0 1A46     	 mov r2,r3
 335 01c2 4FEAE273 	 asr r3,r2,#31
 336 01c6 02FB01FE 	 mul lr,r2,r1
 337 01ca 00FB03F6 	 mul r6,r0,r3
 338 01ce 7644     	 add r6,r6,lr
 339 01d0 A0FB0223 	 umull r2,r3,r0,r2
 340 01d4 F118     	 adds r1,r6,r3
 341 01d6 0B46     	 mov r3,r1
 342 01d8 D7E91401 	 ldrd r0,[r7,#80]
 343 01dc 1218     	 adds r2,r2,r0
 344 01de 43EB0103 	 adc r3,r3,r1
 345 01e2 C7E91423 	 strd r2,[r7,#80]
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b1 *c1;
 346              	 .loc 2 180 0
 347 01e6 7B69     	 ldr r3,[r7,#20]
 348 01e8 1846     	 mov r0,r3
 349 01ea 4FEAE071 	 asr r1,r0,#31
 350 01ee BB69     	 ldr r3,[r7,#24]
 351 01f0 1A46     	 mov r2,r3
 352 01f2 4FEAE273 	 asr r3,r2,#31
 353 01f6 02FB01FE 	 mul lr,r2,r1
 354 01fa 00FB03F6 	 mul r6,r0,r3
 355 01fe 7644     	 add r6,r6,lr
 356 0200 A0FB0223 	 umull r2,r3,r0,r2
 357 0204 F118     	 adds r1,r6,r3
 358 0206 0B46     	 mov r3,r1
 359 0208 D7E91201 	 ldrd r0,[r7,#72]
 360 020c 1218     	 adds r2,r2,r0
 361 020e 43EB0103 	 adc r3,r3,r1
 362 0212 C7E91223 	 strd r2,[r7,#72]
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 363              	 .loc 2 183 0
 364 0216 7B6E     	 ldr r3,[r7,#100]
 365 0218 0833     	 adds r3,r3,#8
 366 021a 7B66     	 str r3,[r7,#100]
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 367              	 .loc 2 184 0
 368 021c BB8E     	 ldrh r3,[r7,#52]
 369 021e DB00     	 lsls r3,r3,#3
 370 0220 1A46     	 mov r2,r3
 371 0222 3B6E     	 ldr r3,[r7,#96]
 372 0224 1344     	 add r3,r3,r2
 373 0226 3B66     	 str r3,[r7,#96]
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b1 *d1;
 374              	 .loc 2 187 0
 375 0228 7B69     	 ldr r3,[r7,#20]
 376 022a 1846     	 mov r0,r3
 377 022c 4FEAE071 	 asr r1,r0,#31
 378 0230 3B69     	 ldr r3,[r7,#16]
 379 0232 1A46     	 mov r2,r3
 380 0234 4FEAE273 	 asr r3,r2,#31
 381 0238 02FB01FE 	 mul lr,r2,r1
 382 023c 00FB03F6 	 mul r6,r0,r3
 383 0240 7644     	 add r6,r6,lr
 384 0242 A0FB0223 	 umull r2,r3,r0,r2
 385 0246 F118     	 adds r1,r6,r3
 386 0248 0B46     	 mov r3,r1
 387 024a D7E91401 	 ldrd r0,[r7,#80]
 388 024e 821A     	 subs r2,r0,r2
 389 0250 61EB0303 	 sbc r3,r1,r3
 390 0254 C7E91423 	 strd r2,[r7,#80]
 188:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a1 *d1;
 391              	 .loc 2 188 0
 392 0258 FB69     	 ldr r3,[r7,#28]
 393 025a 1846     	 mov r0,r3
 394 025c 4FEAE071 	 asr r1,r0,#31
 395 0260 3B69     	 ldr r3,[r7,#16]
 396 0262 1A46     	 mov r2,r3
 397 0264 4FEAE273 	 asr r3,r2,#31
 398 0268 02FB01FE 	 mul lr,r2,r1
 399 026c 00FB03F6 	 mul r6,r0,r3
 400 0270 7644     	 add r6,r6,lr
 401 0272 A0FB0223 	 umull r2,r3,r0,r2
 402 0276 F118     	 adds r1,r6,r3
 403 0278 0B46     	 mov r3,r1
 404 027a D7E91201 	 ldrd r0,[r7,#72]
 405 027e 1218     	 adds r2,r2,r0
 406 0280 43EB0103 	 adc r3,r3,r1
 407 0284 C7E91223 	 strd r2,[r7,#72]
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 190:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a0 = *pIn1;
 408              	 .loc 2 190 0
 409 0288 7B6E     	 ldr r3,[r7,#100]
 410 028a 1B68     	 ldr r3,[r3]
 411 028c FB62     	 str r3,[r7,#44]
 191:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c0 = *pIn2;
 412              	 .loc 2 191 0
 413 028e 3B6E     	 ldr r3,[r7,#96]
 414 0290 1B68     	 ldr r3,[r3]
 415 0292 BB62     	 str r3,[r7,#40]
 192:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 193:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b0 = *(pIn1 + 1u);
 416              	 .loc 2 193 0
 417 0294 7B6E     	 ldr r3,[r7,#100]
 418 0296 5B68     	 ldr r3,[r3,#4]
 419 0298 7B62     	 str r3,[r7,#36]
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d0 = *(pIn2 + 1u);
 420              	 .loc 2 194 0
 421 029a 3B6E     	 ldr r3,[r7,#96]
 422 029c 5B68     	 ldr r3,[r3,#4]
 423 029e 3B62     	 str r3,[r7,#32]
 195:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 196:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 197:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a0 *c0;
 424              	 .loc 2 197 0
 425 02a0 FB6A     	 ldr r3,[r7,#44]
 426 02a2 1846     	 mov r0,r3
 427 02a4 4FEAE071 	 asr r1,r0,#31
 428 02a8 BB6A     	 ldr r3,[r7,#40]
 429 02aa 1A46     	 mov r2,r3
 430 02ac 4FEAE273 	 asr r3,r2,#31
 431 02b0 02FB01FE 	 mul lr,r2,r1
 432 02b4 00FB03F6 	 mul r6,r0,r3
 433 02b8 7644     	 add r6,r6,lr
 434 02ba A0FB0223 	 umull r2,r3,r0,r2
 435 02be F118     	 adds r1,r6,r3
 436 02c0 0B46     	 mov r3,r1
 437 02c2 D7E91401 	 ldrd r0,[r7,#80]
 438 02c6 1218     	 adds r2,r2,r0
 439 02c8 43EB0103 	 adc r3,r3,r1
 440 02cc C7E91423 	 strd r2,[r7,#80]
 198:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b0 *c0;
 441              	 .loc 2 198 0
 442 02d0 7B6A     	 ldr r3,[r7,#36]
 443 02d2 1846     	 mov r0,r3
 444 02d4 4FEAE071 	 asr r1,r0,#31
 445 02d8 BB6A     	 ldr r3,[r7,#40]
 446 02da 1A46     	 mov r2,r3
 447 02dc 4FEAE273 	 asr r3,r2,#31
 448 02e0 02FB01FE 	 mul lr,r2,r1
 449 02e4 00FB03F6 	 mul r6,r0,r3
 450 02e8 7644     	 add r6,r6,lr
 451 02ea A0FB0223 	 umull r2,r3,r0,r2
 452 02ee F118     	 adds r1,r6,r3
 453 02f0 0B46     	 mov r3,r1
 454 02f2 D7E91201 	 ldrd r0,[r7,#72]
 455 02f6 1218     	 adds r2,r2,r0
 456 02f8 43EB0103 	 adc r3,r3,r1
 457 02fc C7E91223 	 strd r2,[r7,#72]
 199:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 200:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 201:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 458              	 .loc 2 201 0
 459 0300 7B6E     	 ldr r3,[r7,#100]
 460 0302 0833     	 adds r3,r3,#8
 461 0304 7B66     	 str r3,[r7,#100]
 202:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 462              	 .loc 2 202 0
 463 0306 BB8E     	 ldrh r3,[r7,#52]
 464 0308 DB00     	 lsls r3,r3,#3
 465 030a 1A46     	 mov r2,r3
 466 030c 3B6E     	 ldr r3,[r7,#96]
 467 030e 1344     	 add r3,r3,r2
 468 0310 3B66     	 str r3,[r7,#96]
 203:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 204:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 205:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b0 *d0;
 469              	 .loc 2 205 0
 470 0312 7B6A     	 ldr r3,[r7,#36]
 471 0314 1846     	 mov r0,r3
 472 0316 4FEAE071 	 asr r1,r0,#31
 473 031a 3B6A     	 ldr r3,[r7,#32]
 474 031c 1A46     	 mov r2,r3
 475 031e 4FEAE273 	 asr r3,r2,#31
 476 0322 02FB01FE 	 mul lr,r2,r1
 477 0326 00FB03F6 	 mul r6,r0,r3
 478 032a 7644     	 add r6,r6,lr
 479 032c A0FB0223 	 umull r2,r3,r0,r2
 480 0330 F118     	 adds r1,r6,r3
 481 0332 0B46     	 mov r3,r1
 482 0334 D7E91401 	 ldrd r0,[r7,#80]
 483 0338 821A     	 subs r2,r0,r2
 484 033a 61EB0303 	 sbc r3,r1,r3
 485 033e C7E91423 	 strd r2,[r7,#80]
 206:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a0 *d0;
 486              	 .loc 2 206 0
 487 0342 FB6A     	 ldr r3,[r7,#44]
 488 0344 1846     	 mov r0,r3
 489 0346 4FEAE071 	 asr r1,r0,#31
 490 034a 3B6A     	 ldr r3,[r7,#32]
 491 034c 1A46     	 mov r2,r3
 492 034e 4FEAE273 	 asr r3,r2,#31
 493 0352 02FB01FE 	 mul lr,r2,r1
 494 0356 00FB03F6 	 mul r6,r0,r3
 495 035a 7644     	 add r6,r6,lr
 496 035c A0FB0223 	 umull r2,r3,r0,r2
 497 0360 F118     	 adds r1,r6,r3
 498 0362 0B46     	 mov r3,r1
 499 0364 D7E91201 	 ldrd r0,[r7,#72]
 500 0368 1218     	 adds r2,r2,r0
 501 036a 43EB0103 	 adc r3,r3,r1
 502 036e C7E91223 	 strd r2,[r7,#72]
 207:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 208:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 209:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 210:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *pIn1;
 503              	 .loc 2 210 0
 504 0372 7B6E     	 ldr r3,[r7,#100]
 505 0374 1B68     	 ldr r3,[r3]
 506 0376 FB61     	 str r3,[r7,#28]
 211:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *pIn2;
 507              	 .loc 2 211 0
 508 0378 3B6E     	 ldr r3,[r7,#96]
 509 037a 1B68     	 ldr r3,[r3]
 510 037c BB61     	 str r3,[r7,#24]
 212:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 213:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1u);
 511              	 .loc 2 213 0
 512 037e 7B6E     	 ldr r3,[r7,#100]
 513 0380 5B68     	 ldr r3,[r3,#4]
 514 0382 7B61     	 str r3,[r7,#20]
 214:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1u);
 515              	 .loc 2 214 0
 516 0384 3B6E     	 ldr r3,[r7,#96]
 517 0386 5B68     	 ldr r3,[r3,#4]
 518 0388 3B61     	 str r3,[r7,#16]
 215:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 216:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 217:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a1 *c1;
 519              	 .loc 2 217 0
 520 038a FB69     	 ldr r3,[r7,#28]
 521 038c 1846     	 mov r0,r3
 522 038e 4FEAE071 	 asr r1,r0,#31
 523 0392 BB69     	 ldr r3,[r7,#24]
 524 0394 1A46     	 mov r2,r3
 525 0396 4FEAE273 	 asr r3,r2,#31
 526 039a 02FB01FE 	 mul lr,r2,r1
 527 039e 00FB03F6 	 mul r6,r0,r3
 528 03a2 7644     	 add r6,r6,lr
 529 03a4 A0FB0223 	 umull r2,r3,r0,r2
 530 03a8 F118     	 adds r1,r6,r3
 531 03aa 0B46     	 mov r3,r1
 532 03ac D7E91401 	 ldrd r0,[r7,#80]
 533 03b0 1218     	 adds r2,r2,r0
 534 03b2 43EB0103 	 adc r3,r3,r1
 535 03b6 C7E91423 	 strd r2,[r7,#80]
 218:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b1 *c1;
 536              	 .loc 2 218 0
 537 03ba 7B69     	 ldr r3,[r7,#20]
 538 03bc 1846     	 mov r0,r3
 539 03be 4FEAE071 	 asr r1,r0,#31
 540 03c2 BB69     	 ldr r3,[r7,#24]
 541 03c4 1A46     	 mov r2,r3
 542 03c6 4FEAE273 	 asr r3,r2,#31
 543 03ca 02FB01FE 	 mul lr,r2,r1
 544 03ce 00FB03F6 	 mul r6,r0,r3
 545 03d2 7644     	 add r6,r6,lr
 546 03d4 A0FB0223 	 umull r2,r3,r0,r2
 547 03d8 F118     	 adds r1,r6,r3
 548 03da 0B46     	 mov r3,r1
 549 03dc D7E91201 	 ldrd r0,[r7,#72]
 550 03e0 1218     	 adds r2,r2,r0
 551 03e2 43EB0103 	 adc r3,r3,r1
 552 03e6 C7E91223 	 strd r2,[r7,#72]
 219:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 220:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 221:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 553              	 .loc 2 221 0
 554 03ea 7B6E     	 ldr r3,[r7,#100]
 555 03ec 0833     	 adds r3,r3,#8
 556 03ee 7B66     	 str r3,[r7,#100]
 222:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 557              	 .loc 2 222 0
 558 03f0 BB8E     	 ldrh r3,[r7,#52]
 559 03f2 DB00     	 lsls r3,r3,#3
 560 03f4 1A46     	 mov r2,r3
 561 03f6 3B6E     	 ldr r3,[r7,#96]
 562 03f8 1344     	 add r3,r3,r2
 563 03fa 3B66     	 str r3,[r7,#96]
 223:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 224:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 225:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b1 *d1;
 564              	 .loc 2 225 0
 565 03fc 7B69     	 ldr r3,[r7,#20]
 566 03fe 1846     	 mov r0,r3
 567 0400 4FEAE071 	 asr r1,r0,#31
 568 0404 3B69     	 ldr r3,[r7,#16]
 569 0406 1A46     	 mov r2,r3
 570 0408 4FEAE273 	 asr r3,r2,#31
 571 040c 02FB01FE 	 mul lr,r2,r1
 572 0410 00FB03F6 	 mul r6,r0,r3
 573 0414 7644     	 add r6,r6,lr
 574 0416 A0FB0223 	 umull r2,r3,r0,r2
 575 041a F118     	 adds r1,r6,r3
 576 041c 0B46     	 mov r3,r1
 577 041e D7E91401 	 ldrd r0,[r7,#80]
 578 0422 821A     	 subs r2,r0,r2
 579 0424 61EB0303 	 sbc r3,r1,r3
 580 0428 C7E91423 	 strd r2,[r7,#80]
 226:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a1 *d1;
 581              	 .loc 2 226 0
 582 042c FB69     	 ldr r3,[r7,#28]
 583 042e 1846     	 mov r0,r3
 584 0430 4FEAE071 	 asr r1,r0,#31
 585 0434 3B69     	 ldr r3,[r7,#16]
 586 0436 1A46     	 mov r2,r3
 587 0438 4FEAE273 	 asr r3,r2,#31
 588 043c 02FB01FE 	 mul lr,r2,r1
 589 0440 00FB03F6 	 mul r6,r0,r3
 590 0444 7644     	 add r6,r6,lr
 591 0446 A0FB0223 	 umull r2,r3,r0,r2
 592 044a F118     	 adds r1,r6,r3
 593 044c 0B46     	 mov r3,r1
 594 044e D7E91201 	 ldrd r0,[r7,#72]
 595 0452 1218     	 adds r2,r2,r0
 596 0454 43EB0103 	 adc r3,r3,r1
 597 0458 C7E91223 	 strd r2,[r7,#72]
 227:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 228:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement the loop count */
 229:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 598              	 .loc 2 229 0
 599 045c FB8F     	 ldrh r3,[r7,#62]
 600 045e 013B     	 subs r3,r3,#1
 601 0460 FB87     	 strh r3,[r7,#62]
 602              	.L9:
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 603              	 .loc 2 143 0
 604 0462 FB8F     	 ldrh r3,[r7,#62]
 605 0464 002B     	 cmp r3,#0
 606 0466 7FF425AE 	 bne .L10
 230:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 231:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 232:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* If the columns of pSrcA is not a multiple of 4, compute any remaining MACs here.     
 233:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****          ** No loop unrolling is used. */
 234:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         colCnt = numColsA % 0x4u;
 607              	 .loc 2 234 0
 608 046a 7B8E     	 ldrh r3,[r7,#50]
 609 046c 03F00303 	 and r3,r3,#3
 610 0470 FB87     	 strh r3,[r7,#62]
 235:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 236:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         while(colCnt > 0u)
 611              	 .loc 2 236 0
 612 0472 77E0     	 b .L11
 613              	.L12:
 237:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 238:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 239:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           a1 = *pIn1;
 614              	 .loc 2 239 0
 615 0474 7B6E     	 ldr r3,[r7,#100]
 616 0476 1B68     	 ldr r3,[r3]
 617 0478 FB61     	 str r3,[r7,#28]
 240:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           c1 = *pIn2;
 618              	 .loc 2 240 0
 619 047a 3B6E     	 ldr r3,[r7,#96]
 620 047c 1B68     	 ldr r3,[r3]
 621 047e BB61     	 str r3,[r7,#24]
 241:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 242:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           b1 = *(pIn1 + 1u);
 622              	 .loc 2 242 0
 623 0480 7B6E     	 ldr r3,[r7,#100]
 624 0482 5B68     	 ldr r3,[r3,#4]
 625 0484 7B61     	 str r3,[r7,#20]
 243:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           d1 = *(pIn2 + 1u);
 626              	 .loc 2 243 0
 627 0486 3B6E     	 ldr r3,[r7,#96]
 628 0488 5B68     	 ldr r3,[r3,#4]
 629 048a 3B61     	 str r3,[r7,#16]
 244:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 245:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 246:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 += (q63_t) a1 *c1;
 630              	 .loc 2 246 0
 631 048c FB69     	 ldr r3,[r7,#28]
 632 048e 1846     	 mov r0,r3
 633 0490 4FEAE071 	 asr r1,r0,#31
 634 0494 BB69     	 ldr r3,[r7,#24]
 635 0496 1A46     	 mov r2,r3
 636 0498 4FEAE273 	 asr r3,r2,#31
 637 049c 02FB01FE 	 mul lr,r2,r1
 638 04a0 00FB03F6 	 mul r6,r0,r3
 639 04a4 7644     	 add r6,r6,lr
 640 04a6 A0FB0223 	 umull r2,r3,r0,r2
 641 04aa F118     	 adds r1,r6,r3
 642 04ac 0B46     	 mov r3,r1
 643 04ae D7E91401 	 ldrd r0,[r7,#80]
 644 04b2 1218     	 adds r2,r2,r0
 645 04b4 43EB0103 	 adc r3,r3,r1
 646 04b8 C7E91423 	 strd r2,[r7,#80]
 247:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) b1 *c1;
 647              	 .loc 2 247 0
 648 04bc 7B69     	 ldr r3,[r7,#20]
 649 04be 1846     	 mov r0,r3
 650 04c0 4FEAE071 	 asr r1,r0,#31
 651 04c4 BB69     	 ldr r3,[r7,#24]
 652 04c6 1A46     	 mov r2,r3
 653 04c8 4FEAE273 	 asr r3,r2,#31
 654 04cc 02FB01FE 	 mul lr,r2,r1
 655 04d0 00FB03F6 	 mul r6,r0,r3
 656 04d4 7644     	 add r6,r6,lr
 657 04d6 A0FB0223 	 umull r2,r3,r0,r2
 658 04da F118     	 adds r1,r6,r3
 659 04dc 0B46     	 mov r3,r1
 660 04de D7E91201 	 ldrd r0,[r7,#72]
 661 04e2 1218     	 adds r2,r2,r0
 662 04e4 43EB0103 	 adc r3,r3,r1
 663 04e8 C7E91223 	 strd r2,[r7,#72]
 248:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 249:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* update pointers */
 250:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn1 += 2u;
 664              	 .loc 2 250 0
 665 04ec 7B6E     	 ldr r3,[r7,#100]
 666 04ee 0833     	 adds r3,r3,#8
 667 04f0 7B66     	 str r3,[r7,#100]
 251:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           pIn2 += 2 * numColsB;
 668              	 .loc 2 251 0
 669 04f2 BB8E     	 ldrh r3,[r7,#52]
 670 04f4 DB00     	 lsls r3,r3,#3
 671 04f6 1A46     	 mov r2,r3
 672 04f8 3B6E     	 ldr r3,[r7,#96]
 673 04fa 1344     	 add r3,r3,r2
 674 04fc 3B66     	 str r3,[r7,#96]
 252:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 253:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Multiply and Accumlates */
 254:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumReal1 -= (q63_t) b1 *d1;
 675              	 .loc 2 254 0
 676 04fe 7B69     	 ldr r3,[r7,#20]
 677 0500 1846     	 mov r0,r3
 678 0502 4FEAE071 	 asr r1,r0,#31
 679 0506 3B69     	 ldr r3,[r7,#16]
 680 0508 1A46     	 mov r2,r3
 681 050a 4FEAE273 	 asr r3,r2,#31
 682 050e 02FB01FE 	 mul lr,r2,r1
 683 0512 00FB03F6 	 mul r6,r0,r3
 684 0516 7644     	 add r6,r6,lr
 685 0518 A0FB0223 	 umull r2,r3,r0,r2
 686 051c F118     	 adds r1,r6,r3
 687 051e 0B46     	 mov r3,r1
 688 0520 D7E91401 	 ldrd r0,[r7,#80]
 689 0524 821A     	 subs r2,r0,r2
 690 0526 61EB0303 	 sbc r3,r1,r3
 691 052a C7E91423 	 strd r2,[r7,#80]
 255:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           sumImag1 += (q63_t) a1 *d1;
 692              	 .loc 2 255 0
 693 052e FB69     	 ldr r3,[r7,#28]
 694 0530 1846     	 mov r0,r3
 695 0532 4FEAE071 	 asr r1,r0,#31
 696 0536 3B69     	 ldr r3,[r7,#16]
 697 0538 1A46     	 mov r2,r3
 698 053a 4FEAE273 	 asr r3,r2,#31
 699 053e 02FB01FE 	 mul lr,r2,r1
 700 0542 00FB03F6 	 mul r6,r0,r3
 701 0546 7644     	 add r6,r6,lr
 702 0548 A0FB0223 	 umull r2,r3,r0,r2
 703 054c F118     	 adds r1,r6,r3
 704 054e 0B46     	 mov r3,r1
 705 0550 D7E91201 	 ldrd r0,[r7,#72]
 706 0554 1218     	 adds r2,r2,r0
 707 0556 43EB0103 	 adc r3,r3,r1
 708 055a C7E91223 	 strd r2,[r7,#72]
 256:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 257:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           /* Decrement the loop counter */
 258:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****           colCnt--;
 709              	 .loc 2 258 0
 710 055e FB8F     	 ldrh r3,[r7,#62]
 711 0560 013B     	 subs r3,r3,#1
 712 0562 FB87     	 strh r3,[r7,#62]
 713              	.L11:
 236:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         {
 714              	 .loc 2 236 0
 715 0564 FB8F     	 ldrh r3,[r7,#62]
 716 0566 002B     	 cmp r3,#0
 717 0568 84D1     	 bne .L12
 259:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         }
 260:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 261:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Store the result in the destination buffer */
 262:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumReal1 >> 31);
 718              	 .loc 2 262 0
 719 056a BE6D     	 ldr r6,[r7,#88]
 720 056c 331D     	 adds r3,r6,#4
 721 056e BB65     	 str r3,[r7,#88]
 722 0570 D7E91423 	 ldrd r2,[r7,#80]
 723 0574 D40F     	 lsrs r4,r2,#31
 724 0576 44EA4304 	 orr r4,r4,r3,lsl#1
 725 057a DD17     	 asrs r5,r3,#31
 726 057c 2046     	 mov r0,r4
 727 057e 2946     	 mov r1,r5
 728 0580 FFF7FEFF 	 bl clip_q63_to_q31
 729 0584 0346     	 mov r3,r0
 730 0586 3360     	 str r3,[r6]
 263:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sumImag1 >> 31);
 731              	 .loc 2 263 0
 732 0588 BE6D     	 ldr r6,[r7,#88]
 733 058a 331D     	 adds r3,r6,#4
 734 058c BB65     	 str r3,[r7,#88]
 735 058e D7E91223 	 ldrd r2,[r7,#72]
 736 0592 4FEAD278 	 lsr r8,r2,#31
 737 0596 48EA4308 	 orr r8,r8,r3,lsl#1
 738 059a 4FEAE379 	 asr r9,r3,#31
 739 059e 4046     	 mov r0,r8
 740 05a0 4946     	 mov r1,r9
 741 05a2 FFF7FEFF 	 bl clip_q63_to_q31
 742 05a6 0346     	 mov r3,r0
 743 05a8 3360     	 str r3,[r6]
 264:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         
 265:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Update the pointer pIn2 to point to the  starting address of the next column */
 266:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         j++;
 744              	 .loc 2 266 0
 745 05aa B7F84230 	 ldrh r3,[r7,#66]
 746 05ae 0133     	 adds r3,r3,#1
 747 05b0 A7F84230 	 strh r3,[r7,#66]
 267:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         pIn2 = pSrcB->pData + 2u * j;
 748              	 .loc 2 267 0
 749 05b4 BB68     	 ldr r3,[r7,#8]
 750 05b6 5A68     	 ldr r2,[r3,#4]
 751 05b8 B7F84230 	 ldrh r3,[r7,#66]
 752 05bc DB00     	 lsls r3,r3,#3
 753 05be 1344     	 add r3,r3,r2
 754 05c0 3B66     	 str r3,[r7,#96]
 268:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 269:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         /* Decrement the column loop counter */
 270:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****         col--;
 755              	 .loc 2 270 0
 756 05c2 B7F84630 	 ldrh r3,[r7,#70]
 757 05c6 013B     	 subs r3,r3,#1
 758 05c8 A7F84630 	 strh r3,[r7,#70]
 271:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 272:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       } while(col > 0u);
 759              	 .loc 2 272 0
 760 05cc B7F84630 	 ldrh r3,[r7,#70]
 761 05d0 002B     	 cmp r3,#0
 762 05d2 7FF45DAD 	 bne .L13
 273:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 274:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Update the pointer pInA to point to the  starting address of the next row */
 275:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       i = i + numColsB;
 763              	 .loc 2 275 0
 764 05d6 B7F84420 	 ldrh r2,[r7,#68]
 765 05da BB8E     	 ldrh r3,[r7,#52]
 766 05dc 1344     	 add r3,r3,r2
 767 05de A7F84430 	 strh r3,[r7,#68]
 276:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       pInA = pInA + 2 * numColsA;
 768              	 .loc 2 276 0
 769 05e2 7B8E     	 ldrh r3,[r7,#50]
 770 05e4 DB00     	 lsls r3,r3,#3
 771 05e6 1A46     	 mov r2,r3
 772 05e8 FB6D     	 ldr r3,[r7,#92]
 773 05ea 1344     	 add r3,r3,r2
 774 05ec FB65     	 str r3,[r7,#92]
 277:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 278:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       /* Decrement the row loop counter */
 279:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****       row--;
 775              	 .loc 2 279 0
 776 05ee B7F84030 	 ldrh r3,[r7,#64]
 777 05f2 013B     	 subs r3,r3,#1
 778 05f4 A7F84030 	 strh r3,[r7,#64]
 280:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 281:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     } while(row > 0u);
 779              	 .loc 2 281 0
 780 05f8 B7F84030 	 ldrh r3,[r7,#64]
 781 05fc 002B     	 cmp r3,#0
 782 05fe 7FF437AD 	 bne .L7
 282:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 283:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     /* Set status as ARM_MATH_SUCCESS */
 284:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 783              	 .loc 2 284 0
 784 0602 0023     	 movs r3,#0
 785 0604 87F83D30 	 strb r3,[r7,#61]
 786              	.L8:
 285:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   }
 286:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** 
 287:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   /* Return to application */
 288:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c ****   return (status);
 787              	 .loc 2 288 0
 788 0608 97F83D30 	 ldrb r3,[r7,#61]
 789 060c 5BB2     	 sxtb r3,r3
 289:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_cmplx_mult_q31.c **** }
 790              	 .loc 2 289 0
 791 060e 1846     	 mov r0,r3
 792 0610 6C37     	 adds r7,r7,#108
 793              	.LCFI9:
 794              	 .cfi_def_cfa_offset 28
 795 0612 BD46     	 mov sp,r7
 796              	.LCFI10:
 797              	 .cfi_def_cfa_register 13
 798              	 
 799 0614 BDE8F083 	 pop {r4,r5,r6,r7,r8,r9,pc}
 800              	 .cfi_endproc
 801              	.LFE139:
 803              	 .text
 804              	.Letext0:
 805              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 806              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_cmplx_mult_q31.c
    {standard input}:19     .text.clip_q63_to_q31:00000000 $t
    {standard input}:23     .text.clip_q63_to_q31:00000000 clip_q63_to_q31
    {standard input}:90     .text.arm_mat_cmplx_mult_q31:00000000 $t
    {standard input}:95     .text.arm_mat_cmplx_mult_q31:00000000 arm_mat_cmplx_mult_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
