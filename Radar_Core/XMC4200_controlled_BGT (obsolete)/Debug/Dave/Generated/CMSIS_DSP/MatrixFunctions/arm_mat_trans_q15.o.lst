   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_mat_trans_q15.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_mat_trans_q15,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_mat_trans_q15
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_mat_trans_q15:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *    
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * $Date:        31. July 2014
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *    
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * Title:	    arm_mat_trans_q15.c    
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *    
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * Description:	Q15 matrix transpose.    
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *    
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *  
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** *
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * POSSIBILITY OF SUCH DAMAGE.  
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * @ingroup groupMatrix    
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  */
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * @addtogroup MatrixTrans    
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  */
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** /*    
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * @brief Q15 matrix transpose.    
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * @param[in]  *pSrc points to the input matrix    
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * @param[out] *pDst points to the output matrix    
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * @return 	The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>    
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.    
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  */
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** arm_status arm_mat_trans_q15(
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   const arm_matrix_instance_q15 * pSrc,
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   arm_matrix_instance_q15 * pDst)
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** {
  27              	 .loc 1 63 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 89B0     	 sub sp,sp,#36
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 40
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   q15_t *pSrcA = pSrc->pData;                    /* input data matrix pointer */
  44              	 .loc 1 64 0
  45 000a 7B68     	 ldr r3,[r7,#4]
  46 000c 5B68     	 ldr r3,[r3,#4]
  47 000e BB60     	 str r3,[r7,#8]
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   q15_t *pOut = pDst->pData;                     /* output data matrix pointer */
  48              	 .loc 1 65 0
  49 0010 3B68     	 ldr r3,[r7]
  50 0012 5B68     	 ldr r3,[r3,#4]
  51 0014 FB61     	 str r3,[r7,#28]
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   uint16_t nRows = pSrc->numRows;                /* number of nRows */
  52              	 .loc 1 66 0
  53 0016 7B68     	 ldr r3,[r7,#4]
  54 0018 1B88     	 ldrh r3,[r3]
  55 001a 7B82     	 strh r3,[r7,#18]
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   uint16_t nColumns = pSrc->numCols;             /* number of nColumns */
  56              	 .loc 1 67 0
  57 001c 7B68     	 ldr r3,[r7,#4]
  58 001e 5B88     	 ldrh r3,[r3,#2]
  59 0020 3B82     	 strh r3,[r7,#16]
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   uint16_t col, row = nRows, i = 0u;             /* row and column loop counters */
  60              	 .loc 1 68 0
  61 0022 7B8A     	 ldrh r3,[r7,#18]
  62 0024 3B83     	 strh r3,[r7,#24]
  63 0026 0023     	 movs r3,#0
  64 0028 FB82     	 strh r3,[r7,#22]
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   arm_status status;                             /* status of matrix transpose */
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef ARM_MATH_CM0_FAMILY
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   q31_t in;                                      /* variable to hold temporary output  */
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   q15_t in;
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifdef ARM_MATH_MATRIX_CHECK
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   /* Check for matrix mismatch condition */
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   if((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
  65              	 .loc 1 88 0
  66 002a 7B68     	 ldr r3,[r7,#4]
  67 002c 1A88     	 ldrh r2,[r3]
  68 002e 3B68     	 ldr r3,[r7]
  69 0030 5B88     	 ldrh r3,[r3,#2]
  70 0032 9A42     	 cmp r2,r3
  71 0034 05D1     	 bne .L2
  72              	 .loc 1 88 0 is_stmt 0 discriminator 1
  73 0036 7B68     	 ldr r3,[r7,#4]
  74 0038 5A88     	 ldrh r2,[r3,#2]
  75 003a 3B68     	 ldr r3,[r7]
  76 003c 1B88     	 ldrh r3,[r3]
  77 003e 9A42     	 cmp r2,r3
  78 0040 02D0     	 beq .L3
  79              	.L2:
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   {
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     status = ARM_MATH_SIZE_MISMATCH;
  80              	 .loc 1 91 0 is_stmt 1
  81 0042 FD23     	 movs r3,#253
  82 0044 7B75     	 strb r3,[r7,#21]
  83 0046 64E0     	 b .L4
  84              	.L3:
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   }
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   else
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /*      #ifdef ARM_MATH_MATRIX_CHECK    */
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   {
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     /* Matrix transpose by exchanging the rows with columns */
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     /* row loop     */
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     do
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     {
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       /* Apply loop unrolling and exchange the columns with row elements */
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       col = nColumns >> 2u;
  85              	 .loc 1 103 0
  86 0048 3B8A     	 ldrh r3,[r7,#16]
  87 004a 9B08     	 lsrs r3,r3,#2
  88 004c 7B83     	 strh r3,[r7,#26]
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       /* The pointer pOut is set to starting address of the column being processed */
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       pOut = pDst->pData + i;
  89              	 .loc 1 106 0
  90 004e 3B68     	 ldr r3,[r7]
  91 0050 5A68     	 ldr r2,[r3,#4]
  92 0052 FB8A     	 ldrh r3,[r7,#22]
  93 0054 5B00     	 lsls r3,r3,#1
  94 0056 1344     	 add r3,r3,r2
  95 0058 FB61     	 str r3,[r7,#28]
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****        ** a second loop below computes the remaining 1 to 3 samples. */
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       while(col > 0u)
  96              	 .loc 1 110 0
  97 005a 36E0     	 b .L5
  98              	.L6:
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       {
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef UNALIGNED_SUPPORT_DISABLE
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Read two elements from the row */
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         in = *__SIMD32(pSrcA)++;
  99              	 .loc 1 115 0
 100 005c 07F10802 	 add r2,r7,#8
 101 0060 1368     	 ldr r3,[r2]
 102 0062 191D     	 adds r1,r3,#4
 103 0064 1160     	 str r1,[r2]
 104 0066 1B68     	 ldr r3,[r3]
 105 0068 FB60     	 str r3,[r7,#12]
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Unpack and store one element in the destination */
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) in;
 106              	 .loc 1 120 0
 107 006a FB68     	 ldr r3,[r7,#12]
 108 006c 9AB2     	 uxth r2,r3
 109 006e FB69     	 ldr r3,[r7,#28]
 110 0070 1A80     	 strh r2,[r3]
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /*    #ifndef ARM_MATH_BIG_ENDIAN    */
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer pOut to point to the next row of the transposed matrix */
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 111              	 .loc 1 129 0
 112 0072 7B8A     	 ldrh r3,[r7,#18]
 113 0074 5B00     	 lsls r3,r3,#1
 114 0076 FA69     	 ldr r2,[r7,#28]
 115 0078 1344     	 add r3,r3,r2
 116 007a FB61     	 str r3,[r7,#28]
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Unpack and store the second element in the destination */
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 117              	 .loc 1 135 0
 118 007c FB68     	 ldr r3,[r7,#12]
 119 007e 1B14     	 asrs r3,r3,#16
 120 0080 9AB2     	 uxth r2,r3
 121 0082 FB69     	 ldr r3,[r7,#28]
 122 0084 1A80     	 strh r2,[r3]
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) in;
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /*    #ifndef ARM_MATH_BIG_ENDIAN    */
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer pOut to point to the next row of the transposed matrix */
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 123              	 .loc 1 144 0
 124 0086 7B8A     	 ldrh r3,[r7,#18]
 125 0088 5B00     	 lsls r3,r3,#1
 126 008a FA69     	 ldr r2,[r7,#28]
 127 008c 1344     	 add r3,r3,r2
 128 008e FB61     	 str r3,[r7,#28]
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Read two elements from the row */
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         in = *__SIMD32(pSrcA)++;
 129              	 .loc 1 149 0
 130 0090 07F10802 	 add r2,r7,#8
 131 0094 1368     	 ldr r3,[r2]
 132 0096 191D     	 adds r1,r3,#4
 133 0098 1160     	 str r1,[r2]
 134 009a 1B68     	 ldr r3,[r3]
 135 009c FB60     	 str r3,[r7,#12]
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         in = *__SIMD32(pSrcA)++;
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /*    #ifndef ARM_MATH_BIG_ENDIAN    */
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Unpack and store one element in the destination */
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) in;
 136              	 .loc 1 160 0
 137 009e FB68     	 ldr r3,[r7,#12]
 138 00a0 9AB2     	 uxth r2,r3
 139 00a2 FB69     	 ldr r3,[r7,#28]
 140 00a4 1A80     	 strh r2,[r3]
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /*    #ifndef ARM_MATH_BIG_ENDIAN    */
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer pOut to point to the next row of the transposed matrix */
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 141              	 .loc 1 169 0
 142 00a6 7B8A     	 ldrh r3,[r7,#18]
 143 00a8 5B00     	 lsls r3,r3,#1
 144 00aa FA69     	 ldr r2,[r7,#28]
 145 00ac 1344     	 add r3,r3,r2
 146 00ae FB61     	 str r3,[r7,#28]
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Unpack and store the second element in the destination */
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifndef ARM_MATH_BIG_ENDIAN
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) ((in & (q31_t) 0xffff0000) >> 16);
 147              	 .loc 1 174 0
 148 00b0 FB68     	 ldr r3,[r7,#12]
 149 00b2 1B14     	 asrs r3,r3,#16
 150 00b4 9AB2     	 uxth r2,r3
 151 00b6 FB69     	 ldr r3,[r7,#28]
 152 00b8 1A80     	 strh r2,[r3]
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = (q15_t) in;
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /*    #ifndef ARM_MATH_BIG_ENDIAN    */
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else	 
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Read one element from the row */
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         in = *pSrcA++;
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Store one element in the destination */
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = in;
 188:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 190:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 191:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 192:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Read one element from the row */
 193:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         in = *pSrcA++;
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 195:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Store one element in the destination */
 196:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = in;
 197:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  
 198:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 199:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 200:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 201:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Read one element from the row */
 202:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         in = *pSrcA++;
 203:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 204:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Store one element in the destination */
 205:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = in;
 206:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****  
 207:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 208:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 209:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 210:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Read one element from the row */
 211:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         in = *pSrcA++;
 212:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 213:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Store one element in the destination */
 214:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = in;
 215:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 216:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif	/*	#ifndef UNALIGNED_SUPPORT_DISABLE	*/
 217:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 218:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer pOut to point to the next row of the transposed matrix */
 219:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 153              	 .loc 1 219 0
 154 00ba 7B8A     	 ldrh r3,[r7,#18]
 155 00bc 5B00     	 lsls r3,r3,#1
 156 00be FA69     	 ldr r2,[r7,#28]
 157 00c0 1344     	 add r3,r3,r2
 158 00c2 FB61     	 str r3,[r7,#28]
 220:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 221:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Decrement the column loop counter */
 222:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         col--;
 159              	 .loc 1 222 0
 160 00c4 7B8B     	 ldrh r3,[r7,#26]
 161 00c6 013B     	 subs r3,r3,#1
 162 00c8 7B83     	 strh r3,[r7,#26]
 163              	.L5:
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       {
 164              	 .loc 1 110 0
 165 00ca 7B8B     	 ldrh r3,[r7,#26]
 166 00cc 002B     	 cmp r3,#0
 167 00ce C5D1     	 bne .L6
 223:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       }
 224:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 225:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       /* Perform matrix transpose for last 3 samples here. */
 226:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       col = nColumns % 0x4u;
 168              	 .loc 1 226 0
 169 00d0 3B8A     	 ldrh r3,[r7,#16]
 170 00d2 03F00303 	 and r3,r3,#3
 171 00d6 7B83     	 strh r3,[r7,#26]
 227:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 228:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #else
 229:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 230:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   /* Run the below code for Cortex-M0 */
 231:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 232:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #ifdef ARM_MATH_MATRIX_CHECK
 233:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 234:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   /* Check for matrix mismatch condition */
 235:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   if((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
 236:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   {
 237:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 238:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     status = ARM_MATH_SIZE_MISMATCH;
 239:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   }
 240:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   else
 241:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
 242:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 243:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   {
 244:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     /* Matrix transpose by exchanging the rows with columns */
 245:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     /* row loop     */
 246:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     do
 247:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     {
 248:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       /* The pointer pOut is set to starting address of the column being processed */
 249:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       pOut = pDst->pData + i;
 250:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 251:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       /* Initialize column loop counter */
 252:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       col = nColumns;
 253:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 254:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 255:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 256:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       while(col > 0u)
 172              	 .loc 1 256 0
 173 00d8 0DE0     	 b .L7
 174              	.L8:
 257:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       {
 258:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Read and store the input element in the destination */
 259:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         *pOut = *pSrcA++;
 175              	 .loc 1 259 0
 176 00da BB68     	 ldr r3,[r7,#8]
 177 00dc 9A1C     	 adds r2,r3,#2
 178 00de BA60     	 str r2,[r7,#8]
 179 00e0 1A88     	 ldrh r2,[r3]
 180 00e2 FB69     	 ldr r3,[r7,#28]
 181 00e4 1A80     	 strh r2,[r3]
 260:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 261:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Update the pointer pOut to point to the next row of the transposed matrix */
 262:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         pOut += nRows;
 182              	 .loc 1 262 0
 183 00e6 7B8A     	 ldrh r3,[r7,#18]
 184 00e8 5B00     	 lsls r3,r3,#1
 185 00ea FA69     	 ldr r2,[r7,#28]
 186 00ec 1344     	 add r3,r3,r2
 187 00ee FB61     	 str r3,[r7,#28]
 263:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 264:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         /* Decrement the column loop counter */
 265:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****         col--;
 188              	 .loc 1 265 0
 189 00f0 7B8B     	 ldrh r3,[r7,#26]
 190 00f2 013B     	 subs r3,r3,#1
 191 00f4 7B83     	 strh r3,[r7,#26]
 192              	.L7:
 256:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       {
 193              	 .loc 1 256 0
 194 00f6 7B8B     	 ldrh r3,[r7,#26]
 195 00f8 002B     	 cmp r3,#0
 196 00fa EED1     	 bne .L8
 266:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       }
 267:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 268:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       i++;
 197              	 .loc 1 268 0
 198 00fc FB8A     	 ldrh r3,[r7,#22]
 199 00fe 0133     	 adds r3,r3,#1
 200 0100 FB82     	 strh r3,[r7,#22]
 269:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 270:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       /* Decrement the row loop counter */
 271:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****       row--;
 201              	 .loc 1 271 0
 202 0102 3B8B     	 ldrh r3,[r7,#24]
 203 0104 013B     	 subs r3,r3,#1
 204 0106 3B83     	 strh r3,[r7,#24]
 272:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 273:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     } while(row > 0u);
 205              	 .loc 1 273 0
 206 0108 3B8B     	 ldrh r3,[r7,#24]
 207 010a 002B     	 cmp r3,#0
 208 010c 9CD1     	 bne .L3
 274:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** 
 275:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     /* set status as ARM_MATH_SUCCESS */
 276:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****     status = ARM_MATH_SUCCESS;
 209              	 .loc 1 276 0
 210 010e 0023     	 movs r3,#0
 211 0110 7B75     	 strb r3,[r7,#21]
 212              	.L4:
 277:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   }
 278:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   /* Return to application */
 279:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c ****   return (status);
 213              	 .loc 1 279 0
 214 0112 7B7D     	 ldrb r3,[r7,#21]
 215 0114 5BB2     	 sxtb r3,r3
 280:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q15.c **** }
 216              	 .loc 1 280 0
 217 0116 1846     	 mov r0,r3
 218 0118 2437     	 adds r7,r7,#36
 219              	.LCFI3:
 220              	 .cfi_def_cfa_offset 4
 221 011a BD46     	 mov sp,r7
 222              	.LCFI4:
 223              	 .cfi_def_cfa_register 13
 224              	 
 225 011c 5DF8047B 	 ldr r7,[sp],#4
 226              	.LCFI5:
 227              	 .cfi_restore 7
 228              	 .cfi_def_cfa_offset 0
 229 0120 7047     	 bx lr
 230              	 .cfi_endproc
 231              	.LFE139:
 233 0122 00BF     	 .text
 234              	.Letext0:
 235              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 236              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 237              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_trans_q15.c
    {standard input}:19     .text.arm_mat_trans_q15:00000000 $t
    {standard input}:24     .text.arm_mat_trans_q15:00000000 arm_mat_trans_q15
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
