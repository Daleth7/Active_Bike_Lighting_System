   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_mat_trans_q31.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_mat_trans_q31,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_mat_trans_q31
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_mat_trans_q31:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /* ----------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *    
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * $Date:        31. July 2014
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *    
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * Title:	    arm_mat_trans_q31.c    
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *    
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * Description:	Q31 matrix transpose.    
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *    
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *  
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** *
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * POSSIBILITY OF SUCH DAMAGE.    
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** * -------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * @ingroup groupMatrix    
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  */
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * @addtogroup MatrixTrans    
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  * @{    
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  */
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** /*    
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @brief Q31 matrix transpose.    
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @param[in]  *pSrc points to the input matrix    
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @param[out] *pDst points to the output matrix    
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * @return 	The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>    
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.    
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****  */
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** arm_status arm_mat_trans_q31(
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   const arm_matrix_instance_q31 * pSrc,
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   arm_matrix_instance_q31 * pDst)
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** {
  27              	 .loc 1 63 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 89B0     	 sub sp,sp,#36
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 40
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *pIn = pSrc->pData;                      /* input data matrix pointer  */
  44              	 .loc 1 64 0
  45 000a 7B68     	 ldr r3,[r7,#4]
  46 000c 5B68     	 ldr r3,[r3,#4]
  47 000e FB61     	 str r3,[r7,#28]
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *pOut = pDst->pData;                     /* output data matrix pointer  */
  48              	 .loc 1 65 0
  49 0010 3B68     	 ldr r3,[r7]
  50 0012 5B68     	 ldr r3,[r3,#4]
  51 0014 FB60     	 str r3,[r7,#12]
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t nRows = pSrc->numRows;                /* number of nRows */
  52              	 .loc 1 67 0
  53 0016 7B68     	 ldr r3,[r7,#4]
  54 0018 1B88     	 ldrh r3,[r3]
  55 001a 7B81     	 strh r3,[r7,#10]
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t nColumns = pSrc->numCols;             /* number of nColumns  */
  56              	 .loc 1 68 0
  57 001c 7B68     	 ldr r3,[r7,#4]
  58 001e 5B88     	 ldrh r3,[r3,#2]
  59 0020 3B81     	 strh r3,[r7,#8]
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #ifndef ARM_MATH_CM0_FAMILY
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t blkCnt, i = 0u, row = nRows;          /* loop counters */
  60              	 .loc 1 74 0
  61 0022 0023     	 movs r3,#0
  62 0024 BB82     	 strh r3,[r7,#20]
  63 0026 7B89     	 ldrh r3,[r7,#10]
  64 0028 7B82     	 strh r3,[r7,#18]
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   arm_status status;                             /* status of matrix transpose */
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Check for matrix mismatch condition */
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   if((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
  65              	 .loc 1 82 0
  66 002a 7B68     	 ldr r3,[r7,#4]
  67 002c 1A88     	 ldrh r2,[r3]
  68 002e 3B68     	 ldr r3,[r7]
  69 0030 5B88     	 ldrh r3,[r3,#2]
  70 0032 9A42     	 cmp r2,r3
  71 0034 05D1     	 bne .L2
  72              	 .loc 1 82 0 is_stmt 0 discriminator 1
  73 0036 7B68     	 ldr r3,[r7,#4]
  74 0038 5A88     	 ldrh r2,[r3,#2]
  75 003a 3B68     	 ldr r3,[r7]
  76 003c 1B88     	 ldrh r3,[r3]
  77 003e 9A42     	 cmp r2,r3
  78 0040 02D0     	 beq .L3
  79              	.L2:
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  85:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  80              	 .loc 1 85 0 is_stmt 1
  81 0042 FD23     	 movs r3,#253
  82 0044 7B74     	 strb r3,[r7,#17]
  83 0046 5BE0     	 b .L4
  84              	.L3:
  86:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   }
  87:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   else
  88:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
  89:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  90:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
  91:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Matrix transpose by exchanging the rows with columns */
  92:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* row loop     */
  93:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     do
  94:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     {
  95:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Apply loop unrolling and exchange the columns with row elements */
  96:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       blkCnt = nColumns >> 2u;
  85              	 .loc 1 96 0
  86 0048 3B89     	 ldrh r3,[r7,#8]
  87 004a 9B08     	 lsrs r3,r3,#2
  88 004c FB82     	 strh r3,[r7,#22]
  97:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
  98:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* The pointer px is set to starting address of the column being processed */
  99:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       px = pOut + i;
  89              	 .loc 1 99 0
  90 004e BB8A     	 ldrh r3,[r7,#20]
  91 0050 9B00     	 lsls r3,r3,#2
  92 0052 FA68     	 ldr r2,[r7,#12]
  93 0054 1344     	 add r3,r3,r2
  94 0056 BB61     	 str r3,[r7,#24]
 100:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 101:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.    
 102:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****        ** a second loop below computes the remaining 1 to 3 samples. */
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       while(blkCnt > 0u)
  95              	 .loc 1 103 0
  96 0058 2EE0     	 b .L5
  97              	.L6:
 104:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 105:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 106:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
  98              	 .loc 1 106 0
  99 005a FB69     	 ldr r3,[r7,#28]
 100 005c 1A1D     	 adds r2,r3,#4
 101 005e FA61     	 str r2,[r7,#28]
 102 0060 1A68     	 ldr r2,[r3]
 103 0062 BB69     	 ldr r3,[r7,#24]
 104 0064 1A60     	 str r2,[r3]
 107:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 108:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 109:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 105              	 .loc 1 109 0
 106 0066 7B89     	 ldrh r3,[r7,#10]
 107 0068 9B00     	 lsls r3,r3,#2
 108 006a BA69     	 ldr r2,[r7,#24]
 109 006c 1344     	 add r3,r3,r2
 110 006e BB61     	 str r3,[r7,#24]
 110:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 111:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 112:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 111              	 .loc 1 112 0
 112 0070 FB69     	 ldr r3,[r7,#28]
 113 0072 1A1D     	 adds r2,r3,#4
 114 0074 FA61     	 str r2,[r7,#28]
 115 0076 1A68     	 ldr r2,[r3]
 116 0078 BB69     	 ldr r3,[r7,#24]
 117 007a 1A60     	 str r2,[r3]
 113:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 114:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 115:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 118              	 .loc 1 115 0
 119 007c 7B89     	 ldrh r3,[r7,#10]
 120 007e 9B00     	 lsls r3,r3,#2
 121 0080 BA69     	 ldr r2,[r7,#24]
 122 0082 1344     	 add r3,r3,r2
 123 0084 BB61     	 str r3,[r7,#24]
 116:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 117:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 118:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 124              	 .loc 1 118 0
 125 0086 FB69     	 ldr r3,[r7,#28]
 126 0088 1A1D     	 adds r2,r3,#4
 127 008a FA61     	 str r2,[r7,#28]
 128 008c 1A68     	 ldr r2,[r3]
 129 008e BB69     	 ldr r3,[r7,#24]
 130 0090 1A60     	 str r2,[r3]
 119:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 120:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 121:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 131              	 .loc 1 121 0
 132 0092 7B89     	 ldrh r3,[r7,#10]
 133 0094 9B00     	 lsls r3,r3,#2
 134 0096 BA69     	 ldr r2,[r7,#24]
 135 0098 1344     	 add r3,r3,r2
 136 009a BB61     	 str r3,[r7,#24]
 122:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 123:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 124:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 137              	 .loc 1 124 0
 138 009c FB69     	 ldr r3,[r7,#28]
 139 009e 1A1D     	 adds r2,r3,#4
 140 00a0 FA61     	 str r2,[r7,#28]
 141 00a2 1A68     	 ldr r2,[r3]
 142 00a4 BB69     	 ldr r3,[r7,#24]
 143 00a6 1A60     	 str r2,[r3]
 125:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 126:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 127:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 144              	 .loc 1 127 0
 145 00a8 7B89     	 ldrh r3,[r7,#10]
 146 00aa 9B00     	 lsls r3,r3,#2
 147 00ac BA69     	 ldr r2,[r7,#24]
 148 00ae 1344     	 add r3,r3,r2
 149 00b0 BB61     	 str r3,[r7,#24]
 128:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 129:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Decrement the column loop counter */
 130:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         blkCnt--;
 150              	 .loc 1 130 0
 151 00b2 FB8A     	 ldrh r3,[r7,#22]
 152 00b4 013B     	 subs r3,r3,#1
 153 00b6 FB82     	 strh r3,[r7,#22]
 154              	.L5:
 103:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 155              	 .loc 1 103 0
 156 00b8 FB8A     	 ldrh r3,[r7,#22]
 157 00ba 002B     	 cmp r3,#0
 158 00bc CDD1     	 bne .L6
 131:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       }
 132:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 133:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Perform matrix transpose for last 3 samples here. */
 134:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       blkCnt = nColumns % 0x4u;
 159              	 .loc 1 134 0
 160 00be 3B89     	 ldrh r3,[r7,#8]
 161 00c0 03F00303 	 and r3,r3,#3
 162 00c4 FB82     	 strh r3,[r7,#22]
 135:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       while(blkCnt > 0u)
 163              	 .loc 1 136 0
 164 00c6 0DE0     	 b .L7
 165              	.L8:
 137:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 138:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 139:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 166              	 .loc 1 139 0
 167 00c8 FB69     	 ldr r3,[r7,#28]
 168 00ca 1A1D     	 adds r2,r3,#4
 169 00cc FA61     	 str r2,[r7,#28]
 170 00ce 1A68     	 ldr r2,[r3]
 171 00d0 BB69     	 ldr r3,[r7,#24]
 172 00d2 1A60     	 str r2,[r3]
 140:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 141:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 142:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 173              	 .loc 1 142 0
 174 00d4 7B89     	 ldrh r3,[r7,#10]
 175 00d6 9B00     	 lsls r3,r3,#2
 176 00d8 BA69     	 ldr r2,[r7,#24]
 177 00da 1344     	 add r3,r3,r2
 178 00dc BB61     	 str r3,[r7,#24]
 143:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 144:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Decrement the column loop counter */
 145:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         blkCnt--;
 179              	 .loc 1 145 0
 180 00de FB8A     	 ldrh r3,[r7,#22]
 181 00e0 013B     	 subs r3,r3,#1
 182 00e2 FB82     	 strh r3,[r7,#22]
 183              	.L7:
 136:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 184              	 .loc 1 136 0
 185 00e4 FB8A     	 ldrh r3,[r7,#22]
 186 00e6 002B     	 cmp r3,#0
 187 00e8 EED1     	 bne .L8
 146:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       }
 147:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 148:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #else
 149:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 150:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Run the below code for Cortex-M0 */
 151:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 152:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   uint16_t col, i = 0u, row = nRows;             /* loop counters */
 153:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   arm_status status;                             /* status of matrix transpose */
 154:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 155:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 156:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
 157:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 158:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Check for matrix mismatch condition */
 159:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   if((pSrc->numRows != pDst->numCols) || (pSrc->numCols != pDst->numRows))
 160:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
 161:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 162:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
 163:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   }
 164:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   else
 165:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
 166:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 167:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   {
 168:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* Matrix transpose by exchanging the rows with columns */
 169:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* row loop     */
 170:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     do
 171:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     {
 172:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* The pointer px is set to starting address of the column being processed */
 173:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       px = pOut + i;
 174:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 175:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Initialize column loop counter */
 176:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       col = nColumns;
 177:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 178:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       while(col > 0u)
 179:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       {
 180:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Read and store the input element in the destination */
 181:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         *px = *pIn++;
 182:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 183:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Update the pointer px to point to the next row of the transposed matrix */
 184:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         px += nRows;
 185:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 186:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         /* Decrement the column loop counter */
 187:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****         col--;
 188:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       }
 189:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 190:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** #endif /* #ifndef ARM_MATH_CM0_FAMILY */
 191:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 192:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       i++;
 188              	 .loc 1 192 0
 189 00ea BB8A     	 ldrh r3,[r7,#20]
 190 00ec 0133     	 adds r3,r3,#1
 191 00ee BB82     	 strh r3,[r7,#20]
 193:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 194:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       /* Decrement the row loop counter */
 195:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****       row--;
 192              	 .loc 1 195 0
 193 00f0 7B8A     	 ldrh r3,[r7,#18]
 194 00f2 013B     	 subs r3,r3,#1
 195 00f4 7B82     	 strh r3,[r7,#18]
 196:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 197:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     }
 198:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     while(row > 0u);            /* row loop end */
 196              	 .loc 1 198 0
 197 00f6 7B8A     	 ldrh r3,[r7,#18]
 198 00f8 002B     	 cmp r3,#0
 199 00fa A5D1     	 bne .L3
 199:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 200:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     /* set status as ARM_MATH_SUCCESS */
 201:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****     status = ARM_MATH_SUCCESS;
 200              	 .loc 1 201 0
 201 00fc 0023     	 movs r3,#0
 202 00fe 7B74     	 strb r3,[r7,#17]
 203              	.L4:
 202:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   }
 203:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** 
 204:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   /* Return to application */
 205:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c ****   return (status);
 204              	 .loc 1 205 0
 205 0100 7B7C     	 ldrb r3,[r7,#17]
 206 0102 5BB2     	 sxtb r3,r3
 206:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_trans_q31.c **** }
 207              	 .loc 1 206 0
 208 0104 1846     	 mov r0,r3
 209 0106 2437     	 adds r7,r7,#36
 210              	.LCFI3:
 211              	 .cfi_def_cfa_offset 4
 212 0108 BD46     	 mov sp,r7
 213              	.LCFI4:
 214              	 .cfi_def_cfa_register 13
 215              	 
 216 010a 5DF8047B 	 ldr r7,[sp],#4
 217              	.LCFI5:
 218              	 .cfi_restore 7
 219              	 .cfi_def_cfa_offset 0
 220 010e 7047     	 bx lr
 221              	 .cfi_endproc
 222              	.LFE139:
 224              	 .text
 225              	.Letext0:
 226              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 227              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 228              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_trans_q31.c
    {standard input}:19     .text.arm_mat_trans_q31:00000000 $t
    {standard input}:24     .text.arm_mat_trans_q31:00000000 arm_mat_trans_q31
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
