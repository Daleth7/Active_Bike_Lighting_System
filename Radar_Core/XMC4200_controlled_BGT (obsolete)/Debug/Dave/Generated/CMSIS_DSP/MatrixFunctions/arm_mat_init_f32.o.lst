   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "arm_mat_init_f32.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.arm_mat_init_f32,"ax",%progbits
  19              	 .align 2
  20              	 .global arm_mat_init_f32
  21              	 .thumb
  22              	 .thumb_func
  24              	arm_mat_init_f32:
  25              	.LFB139:
  26              	 .file 1 "../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c"
   1:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** /* ----------------------------------------------------------------------------    
   2:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * Copyright (C) 2010-2014 ARM Limited. All rights reserved.    
   3:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *    
   4:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * $Date:        31. July 2014
   5:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * $Revision: 	V1.4.4
   6:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *    
   7:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * Project: 	    CMSIS DSP Library    
   8:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * Title:        arm_mat_init_f32.c    
   9:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *    
  10:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * Description:	Floating-point matrix initialization.    
  11:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *    
  12:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * Target Processor: Cortex-M4/Cortex-M3/Cortex-M0
  13:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *  
  14:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * Redistribution and use in source and binary forms, with or without 
  15:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * modification, are permitted provided that the following conditions
  16:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * are met:
  17:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *   - Redistributions of source code must retain the above copyright
  18:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *     notice, this list of conditions and the following disclaimer.
  19:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *   - Redistributions in binary form must reproduce the above copyright
  20:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *     notice, this list of conditions and the following disclaimer in
  21:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *     the documentation and/or other materials provided with the 
  22:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *     distribution.
  23:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *   - Neither the name of ARM LIMITED nor the names of its contributors
  24:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *     may be used to endorse or promote products derived from this
  25:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *     software without specific prior written permission.
  26:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** *
  27:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  28:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  29:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  30:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
  31:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  32:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  33:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  34:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  35:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
  36:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
  37:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  38:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * POSSIBILITY OF SUCH DAMAGE.   
  39:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** * -------------------------------------------------------------------------- */
  40:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  41:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** #include "CMSIS_DSP/cmsis_dsp.h"
  42:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  43:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** /**    
  44:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * @ingroup groupMatrix    
  45:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  */
  46:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  47:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** /**    
  48:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * @defgroup MatrixInit Matrix Initialization    
  49:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  *    
  50:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * Initializes the underlying matrix data structure.    
  51:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * The functions set the <code>numRows</code>,    
  52:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * <code>numCols</code>, and <code>pData</code> fields    
  53:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * of the matrix data structure.    
  54:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  */
  55:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  56:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** /**    
  57:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * @addtogroup MatrixInit    
  58:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  * @{    
  59:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****  */
  60:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  61:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** /**    
  62:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****    * @brief  Floating-point matrix initialization.    
  63:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****    * @param[in,out] *S             points to an instance of the floating-point matrix structure.   
  64:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****    * @param[in]     nRows          number of rows in the matrix.    
  65:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****    * @param[in]     nColumns       number of columns in the matrix.    
  66:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****    * @param[in]     *pData	   points to the matrix data array.    
  67:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****    * @return        none    
  68:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****    */
  69:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  70:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** void arm_mat_init_f32(
  71:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   arm_matrix_instance_f32 * S,
  72:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   uint16_t nRows,
  73:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   uint16_t nColumns,
  74:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   float32_t * pData)
  75:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** {
  27              	 .loc 1 75 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 7B60     	 str r3,[r7,#4]
  44 000a 0B46     	 mov r3,r1
  45 000c 7B81     	 strh r3,[r7,#10]
  46 000e 1346     	 mov r3,r2
  47 0010 3B81     	 strh r3,[r7,#8]
  76:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   /* Assign Number of Rows */
  77:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   S->numRows = nRows;
  48              	 .loc 1 77 0
  49 0012 FB68     	 ldr r3,[r7,#12]
  50 0014 7A89     	 ldrh r2,[r7,#10]
  51 0016 1A80     	 strh r2,[r3]
  78:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  79:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   /* Assign Number of Columns */
  80:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   S->numCols = nColumns;
  52              	 .loc 1 80 0
  53 0018 FB68     	 ldr r3,[r7,#12]
  54 001a 3A89     	 ldrh r2,[r7,#8]
  55 001c 5A80     	 strh r2,[r3,#2]
  81:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** 
  82:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   /* Assign Data pointer */
  83:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c ****   S->pData = pData;
  56              	 .loc 1 83 0
  57 001e FB68     	 ldr r3,[r7,#12]
  58 0020 7A68     	 ldr r2,[r7,#4]
  59 0022 5A60     	 str r2,[r3,#4]
  84:../Dave/Generated/CMSIS_DSP/MatrixFunctions/arm_mat_init_f32.c **** }
  60              	 .loc 1 84 0
  61 0024 1437     	 adds r7,r7,#20
  62              	.LCFI3:
  63              	 .cfi_def_cfa_offset 4
  64 0026 BD46     	 mov sp,r7
  65              	.LCFI4:
  66              	 .cfi_def_cfa_register 13
  67              	 
  68 0028 5DF8047B 	 ldr r7,[sp],#4
  69              	.LCFI5:
  70              	 .cfi_restore 7
  71              	 .cfi_def_cfa_offset 0
  72 002c 7047     	 bx lr
  73              	 .cfi_endproc
  74              	.LFE139:
  76 002e 00BF     	 .text
  77              	.Letext0:
  78              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
  79              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
  80              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_init_f32.c
    {standard input}:19     .text.arm_mat_init_f32:00000000 $t
    {standard input}:24     .text.arm_mat_init_f32:00000000 arm_mat_init_f32
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
