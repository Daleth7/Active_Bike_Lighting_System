   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "timer.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_CCU4_EnableClock,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_CCU4_EnableClock:
  24              	.LFB154:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_ccu4.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @date 2015-06-20 
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @cond
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                             
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * following conditions are met:   
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * disclaimer.                        
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Change History
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * --------------
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-02-20:
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Initial <br>
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-06-20:
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @endcond
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #ifndef CCU4_H
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define CCU4_H
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * HEADER FILES
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #include "xmc_common.h"
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #include "xmc_scu.h"
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @{
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @addtogroup CCU4
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Note:
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)\n
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_) \n
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:\n
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().\n
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Capture configuration:\n
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().\n
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Function/Event configuration:\n
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Interrupt configuration:\n
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @{
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * MACROS
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44))
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_NUM_MODULES           (4U) /* Number of XMC_CCU4 modules on the device */
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_NUM_MODULES           (2U) /* Number of XMC_CCU4 modules on the device */
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #else
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_NUM_MODULES           (1U) /* Number of XMC_CCU4 modules on the device */
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_NUM_SLICES_PER_MODULE (4U) /**< Number of timer slices per module */
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_TIMER_LENGTH    (4U) /* Timer length - 16 bits */
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44))
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_CHECK_MODULE_PTR(PTR)  ( ((PTR)== CCU40) || ((PTR)== CCU41) || ((PTR)== CCU42) || 
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_CHECK_MODULE_PTR(PTR)  ( ((PTR)== CCU40) || ((PTR)== CCU41) )
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #else
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_CHECK_MODULE_PTR(PTR)  ( ((PTR)== CCU40) )
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44))
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_CHECK_SLICE_PTR(PTR)   ( ((PTR)== CCU40_CC40) || ((PTR)== CCU40_CC41) || ((PTR)== 
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU40_CC43) || ((PTR)== CCU41_CC40) || ((PTR)== 
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU41_CC42) || ((PTR)== CCU41_CC43) || ((PTR)== 
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU42_CC41) || ((PTR)== CCU42_CC42) || ((PTR)== 
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU43_CC40) || ((PTR)== CCU43_CC41) || ((PTR)== 
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU43_CC43) )
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_CHECK_SLICE_PTR(PTR)   ( ((PTR)== CCU40_CC40) || ((PTR)== CCU40_CC41) || ((PTR)== 
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU40_CC43) || ((PTR)== CCU41_CC40) || ((PTR)== 
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU41_CC42) || ((PTR)== CCU41_CC43) )
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #else
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_CHECK_SLICE_PTR(PTR)   ( ((PTR)== CCU40_CC40) || ((PTR)== CCU40_CC41) || ((PTR)== 
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           ((PTR)== CCU40_CC43) )                                   
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * ENUMS
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Return Value of an API
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  CCU4 module clock
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C     , /**< External clock-C */
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      only for slice
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      and hardware f
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      only for slice
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      and hardware f
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       only for slic
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       and hardware 
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       only for slic
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000, /**< Shadow transf
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       and hardware 
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE      , /**< slice(CC4y) operates in Capture Mode */
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA      , /**< Center Aligned Mode */
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE      , /**< Single shot mode: Once a Period match/One mat
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN     , /**< Counting down */
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Capture mode register sets
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH     , /**< Capture register-2, Capture register-3 used */
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Prescaler mode
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT      , /**< Floating divider. */
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer output passive level
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH     , /**< Passive level = High */
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Function list
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                      generation */
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                      generation */
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                , /**< Trap function */
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event list
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2         , /**< Event-2 */
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 trigger */
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE        , /**< Both Rising and Falling edges cause
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW      , /**< Level sensitive functions react to 
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES      , /**< 7 clock cycles */
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_INPUT
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_A  = 0U, /**< Input-A */
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_B      , /**< Input-B */
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_C      , /**< Input-C */
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_D      , /**< Input-D */
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_E      , /**< Input-E */
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_F      , /**< Input-F */
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_G      , /**< Input-G */
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_H      , /**< Input-H */
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_I      , /**< Input-I */
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_J      , /**< Input-J */
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_K      , /**< Input-K */
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_L      , /**< Input-L */
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_M      , /**< Input-M */
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_N      , /**< Input-N */
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_O      , /**< Input-O */
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_P      , /**< Input-P */
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_INPUT_t;
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR     , /**< Stops the timer and clears the TIMER register
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR     , /**< Clears the TIMER register and start the ti
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT         , /**< Clear only the OUT signal */
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Trap exit mode
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW            , /**< Clear only when acknowledged by software */
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer clear on capture
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS       , /**< Always clear the timer upon detection of any 
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 request */
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U, /**< Transfer Compare, Period ,Prescaler
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U, /**< Trap occurrence */
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3        , /**< Service Request Line-3 selected  */
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual registers for S
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * DATA STRUCTURES
 515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma push
 535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma anon_unions
 536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma warning 586
 538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   union
 547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   {
 548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     struct
 549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     {
 550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 10;
 556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 1;
 559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 8;
 562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 6;
 564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     };
 565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     uint32_t tc;
 566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   };
 567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value */
 568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   union
 582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   {
 583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     struct
 584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     {
 585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 4;
 586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 4;
 590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 3;
 593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 15;
 595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     };
 596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****     uint32_t tc;
 597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   };
 598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma pop
 605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma warning restore
 607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * API Prototypes
 610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 612:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #ifdef __cplusplus
 613:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** extern "C" {
 614:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 615:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 616:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 617:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 618:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 619:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 620:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 621:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 622:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 623:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 624:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 625:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 626:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 627:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 628:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 629:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 630:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 631:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 632:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 633:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 634:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 635:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 636:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 637:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 638:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 639:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 640:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 641:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 642:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 643:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 644:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 645:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 646:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * None.<BR>
 647:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 648:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 649:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 650:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 651:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 652:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 653:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 654:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 655:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 656:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 657:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 658:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 659:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 660:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 661:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 662:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 663:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 664:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 665:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 666:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 667:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 668:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 669:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 670:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 671:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 672:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 673:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 674:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 675:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 676:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 677:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 678:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 679:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 680:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 681:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 682:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 683:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 684:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 685:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 686:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 687:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 688:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 689:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 690:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 691:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 692:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 693:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 694:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 695:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 696:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 697:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 698:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_CHECK_MODULE_PTR(module));
 699:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
 700:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 701:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 702:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 703:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 704:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 705:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 706:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 707:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 708:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 709:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 710:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 711:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 712:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 713:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 714:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 715:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 716:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 717:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 718:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_CHECK_MODULE_PTR(module));
 719:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 720:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 721:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 722:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 723:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 724:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 725:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 726:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 727:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 728:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 729:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 730:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * module then returns as true.
 731:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 732:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 733:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 734:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 735:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 736:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 737:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_CHECK_MODULE_PTR(module
 738:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 739:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 740:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 741:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 742:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 743:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 744:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 745:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 746:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 747:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 748:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 749:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 750:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 751:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 752:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 753:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 754:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 755:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 756:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 757:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 758:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 759:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 760:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_CHECK_MODULE_PTR(modu
 761:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 762:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 763:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 764:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 765:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 766:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 767:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 768:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 769:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 770:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 771:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 772:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 773:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 774:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 775:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 776:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 777:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 778:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 779:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 780:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 781:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 782:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 783:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
  26              	 .loc 1 783 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	.LCFI2:
  40              	 .cfi_def_cfa_register 7
  41 0006 7860     	 str r0,[r7,#4]
  42 0008 0B46     	 mov r3,r1
  43 000a FB70     	 strb r3,[r7,#3]
 784:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_CHECK_MODULE_PTR(module));
 785:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 786:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 787:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
  44              	 .loc 1 787 0
  45 000c 7B68     	 ldr r3,[r7,#4]
  46 000e DA68     	 ldr r2,[r3,#12]
  47 0010 FB78     	 ldrb r3,[r7,#3]
  48 0012 0121     	 movs r1,#1
  49 0014 01FA03F3 	 lsl r3,r1,r3
  50 0018 1A43     	 orrs r2,r2,r3
  51 001a 7B68     	 ldr r3,[r7,#4]
  52 001c DA60     	 str r2,[r3,#12]
 788:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
  53              	 .loc 1 788 0
  54 001e 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0020 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0022 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0026 7047     	 bx lr
  66              	 .cfi_endproc
  67              	.LFE154:
  69              	 .section .text.XMC_CCU4_SLICE_IsTimerRunning,"ax",%progbits
  70              	 .align 2
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_CCU4_SLICE_IsTimerRunning:
  75              	.LFB159:
 789:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 790:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 791:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 792:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 793:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 794:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 795:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 796:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 797:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 798:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 799:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 800:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 801:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 802:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 803:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 804:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 805:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 806:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 807:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 808:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 809:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_CHECK_MODULE_PTR(module));
 810:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 811:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 812:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 813:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 814:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 815:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 816:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 817:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 818:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 819:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 820:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 821:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 822:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 823:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 824:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 825:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 826:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 827:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 828:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 829:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * None.
 830:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 831:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 832:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
 833:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 834:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 835:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 836:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
 837:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 838:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 839:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 840:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 841:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
 842:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
 843:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
 844:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * with appropriate mask.
 845:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 846:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 847:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
 848:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 849:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
 850:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
 851:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 852:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 853:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 854:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 855:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
 856:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
 857:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 858:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 859:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 860:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 861:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
 862:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
 863:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
 864:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 865:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 866:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 867:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 868:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
 869:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
 870:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
 871:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 872:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 873:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 874:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
 875:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
 876:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 877:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 878:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 879:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 880:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
 881:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
 882:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
 883:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 884:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 885:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 886:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 887:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
 888:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
 889:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
 890:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 891:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 892:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 893:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
 894:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 895:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 896:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 897:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 898:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
 899:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
 900:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
 901:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
 902:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 903:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 904:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 905:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 906:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
 907:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 908:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 909:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 910:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 911:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
 912:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
 913:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
 914:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
 915:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 916:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 917:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 918:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 919:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
 920:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
 921:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
 922:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
 923:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
 924:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 925:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 926:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 927:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 928:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
 929:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
 930:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
 931:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
 932:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 933:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 934:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 935:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
 936:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 937:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 938:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 939:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 940:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
 941:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
 942:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
 943:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * edges present on the \b event selected.
 944:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 945:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 946:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 947:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 948:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
 949:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 950:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 951:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 952:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
 953:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 954:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 955:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 956:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 957:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
 958:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
 959:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
 960:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 961:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 962:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 963:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 964:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
 965:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 966:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 967:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 968:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
 969:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 970:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 971:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 972:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 973:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
 974:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
 975:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
 976:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 977:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 978:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 979:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 980:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 981:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 982:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 983:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 984:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
 985:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 986:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 987:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 988:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 989:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
 990:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
 991:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
 992:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 993:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 994:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
 995:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 996:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 997:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 998:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 999:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1000:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1001:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1002:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1003:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1004:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1005:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1006:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1007:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1008:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1009:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1010:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1011:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1012:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1013:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_CHECK_SLICE
1014:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1015:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1016:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1017:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
1018:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1019:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1020:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1021:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1022:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1023:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1024:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1025:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1026:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1027:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1028:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1029:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1030:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1031:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1032:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1033:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1034:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1035:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1036:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1037:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #else
1038:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1039:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1040:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1041:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1042:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1043:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1044:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1045:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1046:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1047:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1048:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1049:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1050:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1051:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1052:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1053:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1054:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1055:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1056:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1057:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
1058:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1059:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1060:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1061:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1062:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1063:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1064:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1065:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1066:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1067:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1068:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1069:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1070:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1071:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1072:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1073:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1074:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1075:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1076:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1077:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1078:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1079:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1080:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1081:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1082:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1083:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1084:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1085:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1086:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1087:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1088:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1089:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1090:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1091:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1092:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1093:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1094:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1095:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1096:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1097:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1098:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1099:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
  76              	 .loc 1 1230 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80              	 
  81 0000 80B4     	 push {r7}
  82              	.LCFI6:
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 7,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	.LCFI7:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI8:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
1231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice)
1232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
  92              	 .loc 1 1232 0
  93 0008 7B68     	 ldr r3,[r7,#4]
  94 000a 9B68     	 ldr r3,[r3,#8]
  95 000c 03F00103 	 and r3,r3,#1
  96 0010 002B     	 cmp r3,#0
  97 0012 14BF     	 ite ne
  98 0014 0123     	 movne r3,#1
  99 0016 0023     	 moveq r3,#0
 100 0018 DBB2     	 uxtb r3,r3
1233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 101              	 .loc 1 1233 0
 102 001a 1846     	 mov r0,r3
 103 001c 0C37     	 adds r7,r7,#12
 104              	.LCFI9:
 105              	 .cfi_def_cfa_offset 4
 106 001e BD46     	 mov sp,r7
 107              	.LCFI10:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 0020 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI11:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0024 7047     	 bx lr
 115              	 .cfi_endproc
 116              	.LFE159:
 118 0026 00BF     	 .section .text.XMC_CCU4_SLICE_StartTimer,"ax",%progbits
 119              	 .align 2
 120              	 .thumb
 121              	 .thumb_func
 123              	XMC_CCU4_SLICE_StartTimer:
 124              	.LFB161:
1234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR returns the direction in which the timer is counting.
1239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice)
1251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 125              	 .loc 1 1268 0
 126              	 .cfi_startproc
 127              	 
 128              	 
 129              	 
 130 0000 80B4     	 push {r7}
 131              	.LCFI12:
 132              	 .cfi_def_cfa_offset 4
 133              	 .cfi_offset 7,-4
 134 0002 83B0     	 sub sp,sp,#12
 135              	.LCFI13:
 136              	 .cfi_def_cfa_offset 16
 137 0004 00AF     	 add r7,sp,#0
 138              	.LCFI14:
 139              	 .cfi_def_cfa_register 7
 140 0006 7860     	 str r0,[r7,#4]
1269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
 141              	 .loc 1 1270 0
 142 0008 7B68     	 ldr r3,[r7,#4]
 143 000a 0122     	 movs r2,#1
 144 000c DA60     	 str r2,[r3,#12]
1271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 145              	 .loc 1 1271 0
 146 000e 0C37     	 adds r7,r7,#12
 147              	.LCFI15:
 148              	 .cfi_def_cfa_offset 4
 149 0010 BD46     	 mov sp,r7
 150              	.LCFI16:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 0012 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI17:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0016 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE161:
 161              	 .section .text.XMC_CCU4_SLICE_StopTimer,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	XMC_CCU4_SLICE_StopTimer:
 167              	.LFB162:
1272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 168              	 .loc 1 1286 0
 169              	 .cfi_startproc
 170              	 
 171              	 
 172              	 
 173 0000 80B4     	 push {r7}
 174              	.LCFI18:
 175              	 .cfi_def_cfa_offset 4
 176              	 .cfi_offset 7,-4
 177 0002 83B0     	 sub sp,sp,#12
 178              	.LCFI19:
 179              	 .cfi_def_cfa_offset 16
 180 0004 00AF     	 add r7,sp,#0
 181              	.LCFI20:
 182              	 .cfi_def_cfa_register 7
 183 0006 7860     	 str r0,[r7,#4]
1287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCCLR |= (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
 184              	 .loc 1 1288 0
 185 0008 7B68     	 ldr r3,[r7,#4]
 186 000a 1B69     	 ldr r3,[r3,#16]
 187 000c 43F00102 	 orr r2,r3,#1
 188 0010 7B68     	 ldr r3,[r7,#4]
 189 0012 1A61     	 str r2,[r3,#16]
1289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 190              	 .loc 1 1289 0
 191 0014 0C37     	 adds r7,r7,#12
 192              	.LCFI21:
 193              	 .cfi_def_cfa_offset 4
 194 0016 BD46     	 mov sp,r7
 195              	.LCFI22:
 196              	 .cfi_def_cfa_register 13
 197              	 
 198 0018 5DF8047B 	 ldr r7,[sp],#4
 199              	.LCFI23:
 200              	 .cfi_restore 7
 201              	 .cfi_def_cfa_offset 0
 202 001c 7047     	 bx lr
 203              	 .cfi_endproc
 204              	.LFE162:
 206 001e 00BF     	 .section .text.XMC_CCU4_SLICE_ClearTimer,"ax",%progbits
 207              	 .align 2
 208              	 .thumb
 209              	 .thumb_func
 211              	XMC_CCU4_SLICE_ClearTimer:
 212              	.LFB163:
1290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 213              	 .loc 1 1305 0
 214              	 .cfi_startproc
 215              	 
 216              	 
 217              	 
 218 0000 80B4     	 push {r7}
 219              	.LCFI24:
 220              	 .cfi_def_cfa_offset 4
 221              	 .cfi_offset 7,-4
 222 0002 83B0     	 sub sp,sp,#12
 223              	.LCFI25:
 224              	 .cfi_def_cfa_offset 16
 225 0004 00AF     	 add r7,sp,#0
 226              	.LCFI26:
 227              	 .cfi_def_cfa_register 7
 228 0006 7860     	 str r0,[r7,#4]
1306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCCLR |= (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
 229              	 .loc 1 1307 0
 230 0008 7B68     	 ldr r3,[r7,#4]
 231 000a 1B69     	 ldr r3,[r3,#16]
 232 000c 43F00202 	 orr r2,r3,#2
 233 0010 7B68     	 ldr r3,[r7,#4]
 234 0012 1A61     	 str r2,[r3,#16]
1308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 235              	 .loc 1 1308 0
 236 0014 0C37     	 adds r7,r7,#12
 237              	.LCFI27:
 238              	 .cfi_def_cfa_offset 4
 239 0016 BD46     	 mov sp,r7
 240              	.LCFI28:
 241              	 .cfi_def_cfa_register 13
 242              	 
 243 0018 5DF8047B 	 ldr r7,[sp],#4
 244              	.LCFI29:
 245              	 .cfi_restore 7
 246              	 .cfi_def_cfa_offset 0
 247 001c 7047     	 bx lr
 248              	 .cfi_endproc
 249              	.LFE163:
 251 001e 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerPeriodMatch,"ax",%progbits
 252              	 .align 2
 253              	 .thumb
 254              	 .thumb_func
 256              	XMC_CCU4_SLICE_SetTimerPeriodMatch:
 257              	.LFB167:
1309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in compar
1314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * invalid.
1321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * reaching the terminal count.
1341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <br>
1350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continuou
1351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(sl
1366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * greater than the compare value.
1381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <br>
1390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned mo
1391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(
1403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param period_val Timer period value
1408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 258              	 .loc 1 1423 0
 259              	 .cfi_startproc
 260              	 
 261              	 
 262              	 
 263 0000 80B4     	 push {r7}
 264              	.LCFI30:
 265              	 .cfi_def_cfa_offset 4
 266              	 .cfi_offset 7,-4
 267 0002 83B0     	 sub sp,sp,#12
 268              	.LCFI31:
 269              	 .cfi_def_cfa_offset 16
 270 0004 00AF     	 add r7,sp,#0
 271              	.LCFI32:
 272              	 .cfi_def_cfa_register 7
 273 0006 7860     	 str r0,[r7,#4]
 274 0008 0B46     	 mov r3,r1
 275 000a 7B80     	 strh r3,[r7,#2]
1424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(s
1425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
 276              	 .loc 1 1425 0
 277 000c 7A88     	 ldrh r2,[r7,#2]
 278 000e 7B68     	 ldr r3,[r7,#4]
 279 0010 5A63     	 str r2,[r3,#52]
1426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 280              	 .loc 1 1426 0
 281 0012 0C37     	 adds r7,r7,#12
 282              	.LCFI33:
 283              	 .cfi_def_cfa_offset 4
 284 0014 BD46     	 mov sp,r7
 285              	.LCFI34:
 286              	 .cfi_def_cfa_register 13
 287              	 
 288 0016 5DF8047B 	 ldr r7,[sp],#4
 289              	.LCFI35:
 290              	 .cfi_restore 7
 291              	 .cfi_def_cfa_offset 0
 292 001a 7047     	 bx lr
 293              	 .cfi_endproc
 294              	.LFE167:
 296              	 .section .text.XMC_CCU4_SLICE_SetTimerCompareMatch,"ax",%progbits
 297              	 .align 2
 298              	 .thumb
 299              	 .thumb_func
 301              	XMC_CCU4_SLICE_SetTimerCompareMatch:
 302              	.LFB169:
1427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(s
1450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 303              	 .loc 1 1471 0
 304              	 .cfi_startproc
 305              	 
 306              	 
 307              	 
 308 0000 80B4     	 push {r7}
 309              	.LCFI36:
 310              	 .cfi_def_cfa_offset 4
 311              	 .cfi_offset 7,-4
 312 0002 83B0     	 sub sp,sp,#12
 313              	.LCFI37:
 314              	 .cfi_def_cfa_offset 16
 315 0004 00AF     	 add r7,sp,#0
 316              	.LCFI38:
 317              	 .cfi_def_cfa_register 7
 318 0006 7860     	 str r0,[r7,#4]
 319 0008 0B46     	 mov r3,r1
 320 000a 7B80     	 strh r3,[r7,#2]
1472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(
1473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
 321              	 .loc 1 1473 0
 322 000c 7A88     	 ldrh r2,[r7,#2]
 323 000e 7B68     	 ldr r3,[r7,#4]
 324 0010 DA63     	 str r2,[r3,#60]
1474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 325              	 .loc 1 1474 0
 326 0012 0C37     	 adds r7,r7,#12
 327              	.LCFI39:
 328              	 .cfi_def_cfa_offset 4
 329 0014 BD46     	 mov sp,r7
 330              	.LCFI40:
 331              	 .cfi_def_cfa_register 13
 332              	 
 333 0016 5DF8047B 	 ldr r7,[sp],#4
 334              	.LCFI41:
 335              	 .cfi_restore 7
 336              	 .cfi_def_cfa_offset 0
 337 001a 7047     	 bx lr
 338              	 .cfi_endproc
 339              	.LFE169:
 341              	 .section .text.XMC_CCU4_SLICE_GetTimerValue,"ax",%progbits
 342              	 .align 2
 343              	 .thumb
 344              	 .thumb_func
 346              	XMC_CCU4_SLICE_GetTimerValue:
 347              	.LFB171:
1475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(
1499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be succeeded by this API.
1519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t shadow_transfer_
1525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 348              	 .loc 1 1539 0
 349              	 .cfi_startproc
 350              	 
 351              	 
 352              	 
 353 0000 80B4     	 push {r7}
 354              	.LCFI42:
 355              	 .cfi_def_cfa_offset 4
 356              	 .cfi_offset 7,-4
 357 0002 83B0     	 sub sp,sp,#12
 358              	.LCFI43:
 359              	 .cfi_def_cfa_offset 16
 360 0004 00AF     	 add r7,sp,#0
 361              	.LCFI44:
 362              	 .cfi_def_cfa_register 7
 363 0006 7860     	 str r0,[r7,#4]
1540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice))
1541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
 364              	 .loc 1 1541 0
 365 0008 7B68     	 ldr r3,[r7,#4]
 366 000a 1B6F     	 ldr r3,[r3,#112]
 367 000c 9BB2     	 uxth r3,r3
1542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 368              	 .loc 1 1542 0
 369 000e 1846     	 mov r0,r3
 370 0010 0C37     	 adds r7,r7,#12
 371              	.LCFI45:
 372              	 .cfi_def_cfa_offset 4
 373 0012 BD46     	 mov sp,r7
 374              	.LCFI46:
 375              	 .cfi_def_cfa_register 13
 376              	 
 377 0014 5DF8047B 	 ldr r7,[sp],#4
 378              	.LCFI47:
 379              	 .cfi_restore 7
 380              	 .cfi_def_cfa_offset 0
 381 0018 7047     	 bx lr
 382              	 .cfi_endproc
 383              	.LFE171:
 385 001a 00BF     	 .section .text.XMC_CCU4_SLICE_EnableEvent,"ax",%progbits
 386              	 .align 2
 387              	 .thumb
 388              	 .thumb_func
 390              	XMC_CCU4_SLICE_EnableEvent:
 391              	.LFB180:
1543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice))
1562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param spread Dither compare value
1569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * to transfer the dither value.
1584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const bool period_dither,
1590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const bool duty_dither,
1591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const uint8_t spread);
1592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slic
1609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1612:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1613:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1614:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1615:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1616:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1617:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1618:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1619:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1620:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1621:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1622:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1623:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1624:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1625:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1626:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1627:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1628:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1629:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_P
1630:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1631:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1632:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1633:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1634:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1635:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1636:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1637:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1638:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1639:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1640:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1641:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1642:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1643:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1644:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1645:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1646:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1647:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1648:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_
1649:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1650:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1651:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1652:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1653:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1654:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1655:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1656:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1657:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1658:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1659:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1660:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1661:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1662:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1663:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1664:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * called with appropriate mask.
1665:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1666:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1667:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1668:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1669:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1670:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1671:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR
1672:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->DITS = comp_val;
1673:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1674:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1675:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1676:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param div_val Prescaler divider value
1677:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1678:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1679:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1680:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1681:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1682:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider, by configuring the CC4yPSC and CC4yFPC registers.
1683:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
1684:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * by calling XMC_CCU4_StopPrescaler().
1685:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1686:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1687:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue().
1688:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1689:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const uint8_t div_val);
1690:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1691:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1692:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1693:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param cmp_val Prescaler divider compare value
1694:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1695:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1696:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1697:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1698:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1699:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC4yFPCS register.\n
1700:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
1701:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
1702:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
1703:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the value, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask.
1704:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1705:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1706:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1707:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1708:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU4_SLICE_t *const slice,
1709:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                      const uint8_t cmp_val)
1710:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1711:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU4_CHEC
1712:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   /*  write to the shadow register */
1713:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->FPCS = (uint32_t) cmp_val;
1714:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1715:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1716:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1717:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1718:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1719:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1720:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1721:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the multichannel mode, by setting CC4yTC.MCME bit.<BR>\n
1722:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
1723:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
1724:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
1725:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
1726:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
1727:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1728:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1729:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultiChannelMode()<BR> XMC_CCU4_SetMultiChannelShadowTransferMode().
1730:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1731:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1732:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1733:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PT
1734:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_MCME_Msk;
1735:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1736:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1737:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1738:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1739:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1740:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1741:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1742:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1743:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the multichannel mode, by clearing CC4yTC.MCME bit.<BR>\n
1744:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would return the slices to the normal operation mode.
1745:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1746:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1747:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableMultiChannelMode().
1748:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1749:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1750:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1751:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_P
1752:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_MCME_Msk);
1753:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1754:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1755:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1756:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1757:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
1758:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                       Use ::XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
1759:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                             using a bit wise OR operation.
1760:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1761:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1762:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1763:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1764:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
1765:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
1766:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU4x.MCSS
1767:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1768:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1769:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1770:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** */
1771:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
1772:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1773:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1774:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1775:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
1776:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                Range: [0,3]
1777:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1778:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    uint32_t  Returns the Capture register value.
1779:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *              Range: [0 to 0x1FFFFF]
1780:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1781:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1782:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC4yCV[\b reg
1783:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
1784:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
1785:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
1786:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * to find out if there is a new captured value present.
1787:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1788:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1789:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetLastCapturedTimerValue().
1790:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1791:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
1792:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1793:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1794:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1795:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param set  The capture register set, which must be evaluated
1796:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
1797:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1798:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     ::XMC_CCU4_STATUS Returns XMC_CCU4_STATUS_OK if there was new value present in the capture r
1799:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   returns XMC_CCU4_STATUS_ERROR if there was no new value present in the capture
1800:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1801:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1802:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the latest captured timer value, by reading CC4yCV registers.\n\n
1803:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
1804:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 4 capt
1805:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * evaluated.\n
1806:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
1807:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * capture registers have been evaluated.
1808:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1809:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1810:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetCaptureRegisterValue().
1811:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1812:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
1813:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
1814:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                            uint32_t *val_ptr);
1815:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1816:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1817:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1818:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
1819:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1820:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1821:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1822:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1823:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC4yINTE register.\n\
1824:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
1825:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
1826:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1827:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1828:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableMultipleEvents()<BR> XMC_CCU4_SLICE_
1829:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
1830:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1831:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableEvent(XMC_CCU4_SLICE_t *const slice,
1832:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                 const XMC_CCU4_SLICE_IRQ_ID_t event)
1833:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 392              	 .loc 1 1833 0
 393              	 .cfi_startproc
 394              	 
 395              	 
 396              	 
 397 0000 80B4     	 push {r7}
 398              	.LCFI48:
 399              	 .cfi_def_cfa_offset 4
 400              	 .cfi_offset 7,-4
 401 0002 83B0     	 sub sp,sp,#12
 402              	.LCFI49:
 403              	 .cfi_def_cfa_offset 16
 404 0004 00AF     	 add r7,sp,#0
 405              	.LCFI50:
 406              	 .cfi_def_cfa_register 7
 407 0006 7860     	 str r0,[r7,#4]
 408 0008 0B46     	 mov r3,r1
 409 000a FB70     	 strb r3,[r7,#3]
1834:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1835:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
1836:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 410              	 .loc 1 1836 0
 411 000c 7B68     	 ldr r3,[r7,#4]
 412 000e D3F8A420 	 ldr r2,[r3,#164]
 413 0012 FB78     	 ldrb r3,[r7,#3]
 414 0014 0121     	 movs r1,#1
 415 0016 01FA03F3 	 lsl r3,r1,r3
 416 001a 1A43     	 orrs r2,r2,r3
 417 001c 7B68     	 ldr r3,[r7,#4]
 418 001e C3F8A420 	 str r2,[r3,#164]
1837:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 419              	 .loc 1 1837 0
 420 0022 0C37     	 adds r7,r7,#12
 421              	.LCFI51:
 422              	 .cfi_def_cfa_offset 4
 423 0024 BD46     	 mov sp,r7
 424              	.LCFI52:
 425              	 .cfi_def_cfa_register 13
 426              	 
 427 0026 5DF8047B 	 ldr r7,[sp],#4
 428              	.LCFI53:
 429              	 .cfi_restore 7
 430              	 .cfi_def_cfa_offset 0
 431 002a 7047     	 bx lr
 432              	 .cfi_endproc
 433              	.LFE180:
 435              	 .section .text.XMC_CCU4_SLICE_ClearEvent,"ax",%progbits
 436              	 .align 2
 437              	 .thumb
 438              	 .thumb_func
 440              	XMC_CCU4_SLICE_ClearEvent:
 441              	.LFB185:
1838:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1839:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1840:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1841:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param intr_mask Event mask such that multiple events can be enabled.
1842:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                  Use ::XMC_CCU4_SLICE_IRQ_ID_t enum items to create a mask of choice,
1843:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                  using a bit wise OR operation.
1844:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1845:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1846:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1847:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1848:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC4yINTE re
1849:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
1850:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
1851:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1852:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1853:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_DisableEv
1854:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
1855:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1856:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint1
1857:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1858:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(
1859:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->INTE |= (uint32_t)intr_mask;
1860:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1861:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1862:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1863:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1864:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
1865:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1866:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1867:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1868:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1869:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC4yINTE register.\n\n
1870:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Prevents the event from being asserted
1871:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1872:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1873:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
1874:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
1875:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1876:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableEvent(XMC_CCU4_SLICE_t *const slice,
1877:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                  const XMC_CCU4_SLICE_IRQ_ID_t event)
1878:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1879:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1880:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event))
1881:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
1882:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1883:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1884:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1885:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1886:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mask Event mask such that multiple events can be enabled.
1887:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             Use ::XMC_CCU4_SLICE_IRQ_ID_t enum items to create a mask of choice,
1888:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             using a bit wise OR operation.
1889:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1890:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1891:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1892:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1893:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC4yINTE reg
1894:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Prevents selected events of the slice from being asserted.
1895:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1896:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1897:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
1898:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableEvent().
1899:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1900:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultipleEvents(XMC_CCU4_SLICE_t *const slice, const uint
1901:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1902:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR
1903:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->INTE &= ~((uint32_t) mask);
1904:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1905:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1906:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1907:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1908:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
1909:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1910:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1911:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1912:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1913:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Manually asserts the requested event, by setting CC4ySWS register.\n\n
1914:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
1915:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
1916:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1917:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1918:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_EnableMul
1919:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1920:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_IR
1921:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1922:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1923:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
1924:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->SWS |= ((uint32_t) 1) << ((uint32_t) event);
1925:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1926:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1927:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1928:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1929:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Asserted event which must be acknowledged.
1930:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1931:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1932:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1933:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1934:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Acknowledges an asserted event, by setting CC4ySWR with respective event flag.\n\n
1935:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1936:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1937:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableEvent()<BR> XMC_CCU4_SLICE_SetEvent()<BR> XMC_CCU4_SLICE_GetEvent().
1938:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1939:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearEvent(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_
1940:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 442              	 .loc 1 1940 0
 443              	 .cfi_startproc
 444              	 
 445              	 
 446              	 
 447 0000 80B4     	 push {r7}
 448              	.LCFI54:
 449              	 .cfi_def_cfa_offset 4
 450              	 .cfi_offset 7,-4
 451 0002 83B0     	 sub sp,sp,#12
 452              	.LCFI55:
 453              	 .cfi_def_cfa_offset 16
 454 0004 00AF     	 add r7,sp,#0
 455              	.LCFI56:
 456              	 .cfi_def_cfa_register 7
 457 0006 7860     	 str r0,[r7,#4]
 458 0008 0B46     	 mov r3,r1
 459 000a FB70     	 strb r3,[r7,#3]
1941:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU4_CHECK_SLICE_PTR(slice));
1942:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
1943:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->SWR |= ((uint32_t) 1) << ((uint32_t) event);
 460              	 .loc 1 1943 0
 461 000c 7B68     	 ldr r3,[r7,#4]
 462 000e D3F8B020 	 ldr r2,[r3,#176]
 463 0012 FB78     	 ldrb r3,[r7,#3]
 464 0014 0121     	 movs r1,#1
 465 0016 01FA03F3 	 lsl r3,r1,r3
 466 001a 1A43     	 orrs r2,r2,r3
 467 001c 7B68     	 ldr r3,[r7,#4]
 468 001e C3F8B020 	 str r2,[r3,#176]
1944:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 469              	 .loc 1 1944 0
 470 0022 0C37     	 adds r7,r7,#12
 471              	.LCFI57:
 472              	 .cfi_def_cfa_offset 4
 473 0024 BD46     	 mov sp,r7
 474              	.LCFI58:
 475              	 .cfi_def_cfa_register 13
 476              	 
 477 0026 5DF8047B 	 ldr r7,[sp],#4
 478              	.LCFI59:
 479              	 .cfi_restore 7
 480              	 .cfi_def_cfa_offset 0
 481 002a 7047     	 bx lr
 482              	 .cfi_endproc
 483              	.LFE185:
 485              	 .section .text.TIMER_GetAppVersion,"ax",%progbits
 486              	 .align 2
 487              	 .global TIMER_GetAppVersion
 488              	 .thumb
 489              	 .thumb_func
 491              	TIMER_GetAppVersion:
 492              	.LFB188:
 493              	 .file 2 "../Dave/Generated/TIMER/timer.c"
   1:../Dave/Generated/TIMER/timer.c **** /**
   2:../Dave/Generated/TIMER/timer.c ****  * @file timer.h
   3:../Dave/Generated/TIMER/timer.c ****  * @date 2015-05-22
   4:../Dave/Generated/TIMER/timer.c ****  *
   5:../Dave/Generated/TIMER/timer.c ****  * NOTE:
   6:../Dave/Generated/TIMER/timer.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/TIMER/timer.c ****  *
   8:../Dave/Generated/TIMER/timer.c ****  * @cond
   9:../Dave/Generated/TIMER/timer.c ****  **************************************************************************************************
  10:../Dave/Generated/TIMER/timer.c ****  * TIMER v4.1.4 - Configures the properties of CCU4 or CCU8 peripheral as a timer.
  11:../Dave/Generated/TIMER/timer.c ****  *
  12:../Dave/Generated/TIMER/timer.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../Dave/Generated/TIMER/timer.c ****  * All rights reserved.
  14:../Dave/Generated/TIMER/timer.c ****  *
  15:../Dave/Generated/TIMER/timer.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/TIMER/timer.c ****  * following conditions are met:
  17:../Dave/Generated/TIMER/timer.c ****  *
  18:../Dave/Generated/TIMER/timer.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/TIMER/timer.c ****  *   disclaimer.
  20:../Dave/Generated/TIMER/timer.c ****  *
  21:../Dave/Generated/TIMER/timer.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/TIMER/timer.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/TIMER/timer.c ****  *
  24:../Dave/Generated/TIMER/timer.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/TIMER/timer.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/TIMER/timer.c ****  *
  27:../Dave/Generated/TIMER/timer.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/TIMER/timer.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/TIMER/timer.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/TIMER/timer.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/TIMER/timer.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/TIMER/timer.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/TIMER/timer.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/TIMER/timer.c ****  *
  35:../Dave/Generated/TIMER/timer.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/TIMER/timer.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/TIMER/timer.c ****  **************************************************************************************************
  38:../Dave/Generated/TIMER/timer.c ****  *
  39:../Dave/Generated/TIMER/timer.c ****  * Change History
  40:../Dave/Generated/TIMER/timer.c ****  * --------------
  41:../Dave/Generated/TIMER/timer.c ****  *
  42:../Dave/Generated/TIMER/timer.c ****  * 2015-02-16:
  43:../Dave/Generated/TIMER/timer.c ****  *     - Initial version<br>
  44:../Dave/Generated/TIMER/timer.c ****  *
  45:../Dave/Generated/TIMER/timer.c ****  * 2015-05-08:
  46:../Dave/Generated/TIMER/timer.c ****  *     - "initialized" flag is updated in local init before starting the timer<br>
  47:../Dave/Generated/TIMER/timer.c ****  *     - TIMER_GetTime() and TIMER_Clear() are added.<br>
  48:../Dave/Generated/TIMER/timer.c ****  *     - Timer clear is removed from TIMER_Stop() API<br>
  49:../Dave/Generated/TIMER/timer.c ****  *     - Additional condition check for timer state is added in TIMER_SetTimeInterval() API<br>
  50:../Dave/Generated/TIMER/timer.c ****  *     - TIMER_CCU4_lShadowTransfer(), TIMER_CCU8_lShadowTransfer() are updated to use the mask fro
  51:../Dave/Generated/TIMER/timer.c ****  *
  52:../Dave/Generated/TIMER/timer.c ****  * 2015-05-22:
  53:../Dave/Generated/TIMER/timer.c ****  *     -  API name changed
  54:../Dave/Generated/TIMER/timer.c ****  *          a. TIMER_AcknowledgeInterrupt() --> TIMER_ClearEvent()<br>
  55:../Dave/Generated/TIMER/timer.c ****  *
  56:../Dave/Generated/TIMER/timer.c ****  * @endcond
  57:../Dave/Generated/TIMER/timer.c ****  *
  58:../Dave/Generated/TIMER/timer.c ****  */
  59:../Dave/Generated/TIMER/timer.c **** 
  60:../Dave/Generated/TIMER/timer.c **** /**************************************************************************************************
  61:../Dave/Generated/TIMER/timer.c ****  * HEADER FILES
  62:../Dave/Generated/TIMER/timer.c ****  **************************************************************************************************
  63:../Dave/Generated/TIMER/timer.c **** #include "timer.h"
  64:../Dave/Generated/TIMER/timer.c **** 
  65:../Dave/Generated/TIMER/timer.c **** /**************************************************************************************************
  66:../Dave/Generated/TIMER/timer.c ****  * MACROS
  67:../Dave/Generated/TIMER/timer.c ****  **************************************************************************************************
  68:../Dave/Generated/TIMER/timer.c **** #define TIMER_CMP_100_DUTY             ((uint16_t)0) /* Compare value for 100% duty cycle */
  69:../Dave/Generated/TIMER/timer.c **** #define TIMER_RESOLUTION_SEC_TO_MICRO  (100000000U)  /* Convert the resolution from sec to usec, by
  70:../Dave/Generated/TIMER/timer.c ****                                                       scale factor */
  71:../Dave/Generated/TIMER/timer.c **** #define TIMER_PRESCALER_MAX            (15U)      /* Maximum prescaler values allowed */
  72:../Dave/Generated/TIMER/timer.c **** #define TIMER_PERIOD_16BIT_MAX         (0xFFFFU)  /* Maximum period value */
  73:../Dave/Generated/TIMER/timer.c **** #define TIMER_PERIOD_MIN               (0x1U)     /* Minimum period value */
  74:../Dave/Generated/TIMER/timer.c **** #define TIMER_CLK_SCALE_FACTOR         (32U)      /* Scale factor used during calculation of the "T
  75:../Dave/Generated/TIMER/timer.c **** 
  76:../Dave/Generated/TIMER/timer.c **** /**************************************************************************************************
  77:../Dave/Generated/TIMER/timer.c ****  * LOCAL DATA
  78:../Dave/Generated/TIMER/timer.c ****  **************************************************************************************************
  79:../Dave/Generated/TIMER/timer.c **** 
  80:../Dave/Generated/TIMER/timer.c **** /**************************************************************************************************
  81:../Dave/Generated/TIMER/timer.c ****  * LOCAL ROUTINES
  82:../Dave/Generated/TIMER/timer.c ****  **************************************************************************************************
  83:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
  84:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_CCU4_lInit(TIMER_t* const handle_ptr);
  85:../Dave/Generated/TIMER/timer.c **** void TIMER_CCU4_lShadowTransfer(TIMER_t* const handle_ptr);
  86:../Dave/Generated/TIMER/timer.c **** #endif
  87:../Dave/Generated/TIMER/timer.c **** 
  88:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
  89:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_CCU8_lInit(TIMER_t* const handle_ptr);
  90:../Dave/Generated/TIMER/timer.c **** void TIMER_CCU8_lShadowTransfer(TIMER_t* const handle_ptr);
  91:../Dave/Generated/TIMER/timer.c **** #endif
  92:../Dave/Generated/TIMER/timer.c **** 
  93:../Dave/Generated/TIMER/timer.c ****  /*************************************************************************************************
  94:../Dave/Generated/TIMER/timer.c ****  * API IMPLEMENTATION
  95:../Dave/Generated/TIMER/timer.c ****  **************************************************************************************************
  96:../Dave/Generated/TIMER/timer.c ****  /* Returns the version of the TIMER APP.
  97:../Dave/Generated/TIMER/timer.c ****  */
  98:../Dave/Generated/TIMER/timer.c **** DAVE_APP_VERSION_t TIMER_GetAppVersion(void)
  99:../Dave/Generated/TIMER/timer.c **** {
 494              	 .loc 2 99 0
 495              	 .cfi_startproc
 496              	 
 497              	 
 498              	 
 499 0000 80B4     	 push {r7}
 500              	.LCFI60:
 501              	 .cfi_def_cfa_offset 4
 502              	 .cfi_offset 7,-4
 503 0002 83B0     	 sub sp,sp,#12
 504              	.LCFI61:
 505              	 .cfi_def_cfa_offset 16
 506 0004 00AF     	 add r7,sp,#0
 507              	.LCFI62:
 508              	 .cfi_def_cfa_register 7
 100:../Dave/Generated/TIMER/timer.c ****   DAVE_APP_VERSION_t version;
 101:../Dave/Generated/TIMER/timer.c **** 
 102:../Dave/Generated/TIMER/timer.c ****   version.major = TIMER_MAJOR_VERSION;
 509              	 .loc 2 102 0
 510 0006 0423     	 movs r3,#4
 511 0008 3B70     	 strb r3,[r7]
 103:../Dave/Generated/TIMER/timer.c ****   version.minor = TIMER_MINOR_VERSION;
 512              	 .loc 2 103 0
 513 000a 0123     	 movs r3,#1
 514 000c 7B70     	 strb r3,[r7,#1]
 104:../Dave/Generated/TIMER/timer.c ****   version.patch = TIMER_PATCH_VERSION;
 515              	 .loc 2 104 0
 516 000e 0423     	 movs r3,#4
 517 0010 BB70     	 strb r3,[r7,#2]
 105:../Dave/Generated/TIMER/timer.c **** 
 106:../Dave/Generated/TIMER/timer.c ****   return version;
 518              	 .loc 2 106 0
 519 0012 3B1D     	 adds r3,r7,#4
 520 0014 3A46     	 mov r2,r7
 521 0016 1268     	 ldr r2,[r2]
 522 0018 1146     	 mov r1,r2
 523 001a 1980     	 strh r1,[r3]
 524 001c 0233     	 adds r3,r3,#2
 525 001e 120C     	 lsrs r2,r2,#16
 526 0020 1A70     	 strb r2,[r3]
 527 0022 0023     	 movs r3,#0
 528 0024 3A79     	 ldrb r2,[r7,#4]
 529 0026 62F30703 	 bfi r3,r2,#0,#8
 530 002a 7A79     	 ldrb r2,[r7,#5]
 531 002c 62F30F23 	 bfi r3,r2,#8,#8
 532 0030 BA79     	 ldrb r2,[r7,#6]
 533 0032 62F31743 	 bfi r3,r2,#16,#8
 107:../Dave/Generated/TIMER/timer.c **** }
 534              	 .loc 2 107 0
 535 0036 1846     	 mov r0,r3
 536 0038 0C37     	 adds r7,r7,#12
 537              	.LCFI63:
 538              	 .cfi_def_cfa_offset 4
 539 003a BD46     	 mov sp,r7
 540              	.LCFI64:
 541              	 .cfi_def_cfa_register 13
 542              	 
 543 003c 5DF8047B 	 ldr r7,[sp],#4
 544              	.LCFI65:
 545              	 .cfi_restore 7
 546              	 .cfi_def_cfa_offset 0
 547 0040 7047     	 bx lr
 548              	 .cfi_endproc
 549              	.LFE188:
 551 0042 00BF     	 .section .text.TIMER_Init,"ax",%progbits
 552              	 .align 2
 553              	 .global TIMER_Init
 554              	 .thumb
 555              	 .thumb_func
 557              	TIMER_Init:
 558              	.LFB189:
 108:../Dave/Generated/TIMER/timer.c **** 
 109:../Dave/Generated/TIMER/timer.c **** /*
 110:../Dave/Generated/TIMER/timer.c ****  * This function initializes a TIMER APP based on user configuration.
 111:../Dave/Generated/TIMER/timer.c ****  *
 112:../Dave/Generated/TIMER/timer.c ****  */
 113:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_Init(TIMER_t* const handle_ptr)
 114:../Dave/Generated/TIMER/timer.c **** {
 559              	 .loc 2 114 0
 560              	 .cfi_startproc
 561              	 
 562              	 
 563 0000 80B5     	 push {r7,lr}
 564              	.LCFI66:
 565              	 .cfi_def_cfa_offset 8
 566              	 .cfi_offset 7,-8
 567              	 .cfi_offset 14,-4
 568 0002 84B0     	 sub sp,sp,#16
 569              	.LCFI67:
 570              	 .cfi_def_cfa_offset 24
 571 0004 00AF     	 add r7,sp,#0
 572              	.LCFI68:
 573              	 .cfi_def_cfa_register 7
 574 0006 7860     	 str r0,[r7,#4]
 115:../Dave/Generated/TIMER/timer.c ****   TIMER_STATUS_t status;
 116:../Dave/Generated/TIMER/timer.c **** 
 117:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_Init:handle_ptr NULL" , (handle_ptr != NULL));
 118:../Dave/Generated/TIMER/timer.c **** 
 119:../Dave/Generated/TIMER/timer.c ****   status = TIMER_STATUS_SUCCESS;
 575              	 .loc 2 119 0
 576 0008 0023     	 movs r3,#0
 577 000a FB73     	 strb r3,[r7,#15]
 120:../Dave/Generated/TIMER/timer.c ****   /* Check for APP instance is initialized or not */
 121:../Dave/Generated/TIMER/timer.c ****   if (false == handle_ptr->initialized)
 578              	 .loc 2 121 0
 579 000c 7B68     	 ldr r3,[r7,#4]
 580 000e 93F82630 	 ldrb r3,[r3,#38]
 581 0012 83F00103 	 eor r3,r3,#1
 582 0016 DBB2     	 uxtb r3,r3
 583 0018 002B     	 cmp r3,#0
 584 001a 09D0     	 beq .L16
 122:../Dave/Generated/TIMER/timer.c ****   {
 123:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 124:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 585              	 .loc 2 124 0
 586 001c 7B68     	 ldr r3,[r7,#4]
 587 001e 93F82130 	 ldrb r3,[r3,#33]
 588 0022 002B     	 cmp r3,#0
 589 0024 04D1     	 bne .L16
 125:../Dave/Generated/TIMER/timer.c ****     {
 126:../Dave/Generated/TIMER/timer.c ****       /* Configure CCU4 timer for the required time tick settings */
 127:../Dave/Generated/TIMER/timer.c ****       status = TIMER_CCU4_lInit(handle_ptr);
 590              	 .loc 2 127 0
 591 0026 7868     	 ldr r0,[r7,#4]
 592 0028 FFF7FEFF 	 bl TIMER_CCU4_lInit
 593 002c 0346     	 mov r3,r0
 594 002e FB73     	 strb r3,[r7,#15]
 595              	.L16:
 128:../Dave/Generated/TIMER/timer.c ****     }
 129:../Dave/Generated/TIMER/timer.c **** #endif
 130:../Dave/Generated/TIMER/timer.c **** 
 131:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 132:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 133:../Dave/Generated/TIMER/timer.c ****     {
 134:../Dave/Generated/TIMER/timer.c ****       /* Configure CCU8 timer for the required time tick settings */
 135:../Dave/Generated/TIMER/timer.c ****       status = TIMER_CCU8_lInit(handle_ptr);
 136:../Dave/Generated/TIMER/timer.c ****     }
 137:../Dave/Generated/TIMER/timer.c **** #endif
 138:../Dave/Generated/TIMER/timer.c ****   }
 139:../Dave/Generated/TIMER/timer.c **** 
 140:../Dave/Generated/TIMER/timer.c ****   return (status);
 596              	 .loc 2 140 0
 597 0030 FB7B     	 ldrb r3,[r7,#15]
 141:../Dave/Generated/TIMER/timer.c **** }
 598              	 .loc 2 141 0
 599 0032 1846     	 mov r0,r3
 600 0034 1037     	 adds r7,r7,#16
 601              	.LCFI69:
 602              	 .cfi_def_cfa_offset 8
 603 0036 BD46     	 mov sp,r7
 604              	.LCFI70:
 605              	 .cfi_def_cfa_register 13
 606              	 
 607 0038 80BD     	 pop {r7,pc}
 608              	 .cfi_endproc
 609              	.LFE189:
 611 003a 00BF     	 .section .text.TIMER_Start,"ax",%progbits
 612              	 .align 2
 613              	 .global TIMER_Start
 614              	 .thumb
 615              	 .thumb_func
 617              	TIMER_Start:
 618              	.LFB190:
 142:../Dave/Generated/TIMER/timer.c **** 
 143:../Dave/Generated/TIMER/timer.c **** /*
 144:../Dave/Generated/TIMER/timer.c ****  * This function starts the timer to generate the events for the specified time_interval value
 145:../Dave/Generated/TIMER/timer.c ****  */
 146:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_Start(TIMER_t  *const handle_ptr)
 147:../Dave/Generated/TIMER/timer.c **** {
 619              	 .loc 2 147 0
 620              	 .cfi_startproc
 621              	 
 622              	 
 623 0000 80B5     	 push {r7,lr}
 624              	.LCFI71:
 625              	 .cfi_def_cfa_offset 8
 626              	 .cfi_offset 7,-8
 627              	 .cfi_offset 14,-4
 628 0002 84B0     	 sub sp,sp,#16
 629              	.LCFI72:
 630              	 .cfi_def_cfa_offset 24
 631 0004 00AF     	 add r7,sp,#0
 632              	.LCFI73:
 633              	 .cfi_def_cfa_register 7
 634 0006 7860     	 str r0,[r7,#4]
 148:../Dave/Generated/TIMER/timer.c ****   TIMER_STATUS_t status;
 149:../Dave/Generated/TIMER/timer.c **** 
 150:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_Start:handle_ptr NULL" , (handle_ptr != NULL));
 151:../Dave/Generated/TIMER/timer.c **** 
 152:../Dave/Generated/TIMER/timer.c ****   /* Check for APP instance is initialized or not */
 153:../Dave/Generated/TIMER/timer.c ****   if (true == handle_ptr->initialized)
 635              	 .loc 2 153 0
 636 0008 7B68     	 ldr r3,[r7,#4]
 637 000a 93F82630 	 ldrb r3,[r3,#38]
 638 000e 002B     	 cmp r3,#0
 639 0010 0CD0     	 beq .L19
 154:../Dave/Generated/TIMER/timer.c ****   {
 155:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 156:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 640              	 .loc 2 156 0
 641 0012 7B68     	 ldr r3,[r7,#4]
 642 0014 93F82130 	 ldrb r3,[r3,#33]
 643 0018 002B     	 cmp r3,#0
 644 001a 04D1     	 bne .L20
 157:../Dave/Generated/TIMER/timer.c ****     {
 158:../Dave/Generated/TIMER/timer.c ****       /* Start the timer manually */
 159:../Dave/Generated/TIMER/timer.c ****       XMC_CCU4_SLICE_StartTimer(handle_ptr->ccu4_slice_ptr);
 645              	 .loc 2 159 0
 646 001c 7B68     	 ldr r3,[r7,#4]
 647 001e 5B69     	 ldr r3,[r3,#20]
 648 0020 1846     	 mov r0,r3
 649 0022 FFF7FEFF 	 bl XMC_CCU4_SLICE_StartTimer
 650              	.L20:
 160:../Dave/Generated/TIMER/timer.c ****     }
 161:../Dave/Generated/TIMER/timer.c **** #endif
 162:../Dave/Generated/TIMER/timer.c **** 
 163:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 164:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 165:../Dave/Generated/TIMER/timer.c ****        {
 166:../Dave/Generated/TIMER/timer.c ****       /* Start the timer manually */
 167:../Dave/Generated/TIMER/timer.c ****       XMC_CCU8_SLICE_StartTimer(handle_ptr->ccu8_slice_ptr);
 168:../Dave/Generated/TIMER/timer.c ****        }
 169:../Dave/Generated/TIMER/timer.c **** #endif
 170:../Dave/Generated/TIMER/timer.c ****     status = TIMER_STATUS_SUCCESS;
 651              	 .loc 2 170 0
 652 0026 0023     	 movs r3,#0
 653 0028 FB73     	 strb r3,[r7,#15]
 654 002a 01E0     	 b .L21
 655              	.L19:
 171:../Dave/Generated/TIMER/timer.c ****   }
 172:../Dave/Generated/TIMER/timer.c ****   else
 173:../Dave/Generated/TIMER/timer.c ****   {
 174:../Dave/Generated/TIMER/timer.c ****     status = TIMER_STATUS_FAILURE;
 656              	 .loc 2 174 0
 657 002c 0123     	 movs r3,#1
 658 002e FB73     	 strb r3,[r7,#15]
 659              	.L21:
 175:../Dave/Generated/TIMER/timer.c ****   }
 176:../Dave/Generated/TIMER/timer.c **** 
 177:../Dave/Generated/TIMER/timer.c ****   return (status);
 660              	 .loc 2 177 0
 661 0030 FB7B     	 ldrb r3,[r7,#15]
 178:../Dave/Generated/TIMER/timer.c **** }
 662              	 .loc 2 178 0
 663 0032 1846     	 mov r0,r3
 664 0034 1037     	 adds r7,r7,#16
 665              	.LCFI74:
 666              	 .cfi_def_cfa_offset 8
 667 0036 BD46     	 mov sp,r7
 668              	.LCFI75:
 669              	 .cfi_def_cfa_register 13
 670              	 
 671 0038 80BD     	 pop {r7,pc}
 672              	 .cfi_endproc
 673              	.LFE190:
 675 003a 00BF     	 .section .text.TIMER_Stop,"ax",%progbits
 676              	 .align 2
 677              	 .global TIMER_Stop
 678              	 .thumb
 679              	 .thumb_func
 681              	TIMER_Stop:
 682              	.LFB191:
 179:../Dave/Generated/TIMER/timer.c **** 
 180:../Dave/Generated/TIMER/timer.c **** /*
 181:../Dave/Generated/TIMER/timer.c ****  * This function stops and clears the timer
 182:../Dave/Generated/TIMER/timer.c ****  */
 183:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_Stop(TIMER_t  *const handle_ptr)
 184:../Dave/Generated/TIMER/timer.c **** {
 683              	 .loc 2 184 0
 684              	 .cfi_startproc
 685              	 
 686              	 
 687 0000 80B5     	 push {r7,lr}
 688              	.LCFI76:
 689              	 .cfi_def_cfa_offset 8
 690              	 .cfi_offset 7,-8
 691              	 .cfi_offset 14,-4
 692 0002 84B0     	 sub sp,sp,#16
 693              	.LCFI77:
 694              	 .cfi_def_cfa_offset 24
 695 0004 00AF     	 add r7,sp,#0
 696              	.LCFI78:
 697              	 .cfi_def_cfa_register 7
 698 0006 7860     	 str r0,[r7,#4]
 185:../Dave/Generated/TIMER/timer.c ****   TIMER_STATUS_t status;
 186:../Dave/Generated/TIMER/timer.c **** 
 187:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_Stop:handle_ptr NULL" , (handle_ptr != NULL));
 188:../Dave/Generated/TIMER/timer.c **** 
 189:../Dave/Generated/TIMER/timer.c ****   /* Check whether timer is initialized and in running state */
 190:../Dave/Generated/TIMER/timer.c ****   if ((TIMER_GetTimerStatus(handle_ptr)) && (true == handle_ptr->initialized))
 699              	 .loc 2 190 0
 700 0008 7868     	 ldr r0,[r7,#4]
 701 000a FFF7FEFF 	 bl TIMER_GetTimerStatus
 702 000e 0346     	 mov r3,r0
 703 0010 002B     	 cmp r3,#0
 704 0012 11D0     	 beq .L24
 705              	 .loc 2 190 0 is_stmt 0 discriminator 1
 706 0014 7B68     	 ldr r3,[r7,#4]
 707 0016 93F82630 	 ldrb r3,[r3,#38]
 708 001a 002B     	 cmp r3,#0
 709 001c 0CD0     	 beq .L24
 191:../Dave/Generated/TIMER/timer.c ****   {
 192:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 193:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 710              	 .loc 2 193 0 is_stmt 1
 711 001e 7B68     	 ldr r3,[r7,#4]
 712 0020 93F82130 	 ldrb r3,[r3,#33]
 713 0024 002B     	 cmp r3,#0
 714 0026 04D1     	 bne .L25
 194:../Dave/Generated/TIMER/timer.c ****     {
 195:../Dave/Generated/TIMER/timer.c ****       /* Stops the timer */
 196:../Dave/Generated/TIMER/timer.c ****       XMC_CCU4_SLICE_StopTimer(handle_ptr->ccu4_slice_ptr);
 715              	 .loc 2 196 0
 716 0028 7B68     	 ldr r3,[r7,#4]
 717 002a 5B69     	 ldr r3,[r3,#20]
 718 002c 1846     	 mov r0,r3
 719 002e FFF7FEFF 	 bl XMC_CCU4_SLICE_StopTimer
 720              	.L25:
 197:../Dave/Generated/TIMER/timer.c ****     }
 198:../Dave/Generated/TIMER/timer.c **** #endif
 199:../Dave/Generated/TIMER/timer.c **** 
 200:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 201:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 202:../Dave/Generated/TIMER/timer.c ****        {
 203:../Dave/Generated/TIMER/timer.c ****       /* Stops the timer */
 204:../Dave/Generated/TIMER/timer.c ****       XMC_CCU8_SLICE_StopTimer(handle_ptr->ccu8_slice_ptr);
 205:../Dave/Generated/TIMER/timer.c ****        }
 206:../Dave/Generated/TIMER/timer.c **** #endif
 207:../Dave/Generated/TIMER/timer.c ****     status = TIMER_STATUS_SUCCESS;
 721              	 .loc 2 207 0
 722 0032 0023     	 movs r3,#0
 723 0034 FB73     	 strb r3,[r7,#15]
 724 0036 01E0     	 b .L26
 725              	.L24:
 208:../Dave/Generated/TIMER/timer.c ****   }
 209:../Dave/Generated/TIMER/timer.c ****   else
 210:../Dave/Generated/TIMER/timer.c ****   {
 211:../Dave/Generated/TIMER/timer.c ****     status = TIMER_STATUS_FAILURE;
 726              	 .loc 2 211 0
 727 0038 0123     	 movs r3,#1
 728 003a FB73     	 strb r3,[r7,#15]
 729              	.L26:
 212:../Dave/Generated/TIMER/timer.c ****   }
 213:../Dave/Generated/TIMER/timer.c **** 
 214:../Dave/Generated/TIMER/timer.c ****   return (status);
 730              	 .loc 2 214 0
 731 003c FB7B     	 ldrb r3,[r7,#15]
 215:../Dave/Generated/TIMER/timer.c **** }
 732              	 .loc 2 215 0
 733 003e 1846     	 mov r0,r3
 734 0040 1037     	 adds r7,r7,#16
 735              	.LCFI79:
 736              	 .cfi_def_cfa_offset 8
 737 0042 BD46     	 mov sp,r7
 738              	.LCFI80:
 739              	 .cfi_def_cfa_register 13
 740              	 
 741 0044 80BD     	 pop {r7,pc}
 742              	 .cfi_endproc
 743              	.LFE191:
 745 0046 00BF     	 .section .text.TIMER_GetTimerStatus,"ax",%progbits
 746              	 .align 2
 747              	 .global TIMER_GetTimerStatus
 748              	 .thumb
 749              	 .thumb_func
 751              	TIMER_GetTimerStatus:
 752              	.LFB192:
 216:../Dave/Generated/TIMER/timer.c **** 
 217:../Dave/Generated/TIMER/timer.c **** /*
 218:../Dave/Generated/TIMER/timer.c ****  * This function returns the status of the timer
 219:../Dave/Generated/TIMER/timer.c ****  */
 220:../Dave/Generated/TIMER/timer.c **** bool TIMER_GetTimerStatus(TIMER_t  *const handle_ptr)
 221:../Dave/Generated/TIMER/timer.c **** {
 753              	 .loc 2 221 0
 754              	 .cfi_startproc
 755              	 
 756              	 
 757 0000 80B5     	 push {r7,lr}
 758              	.LCFI81:
 759              	 .cfi_def_cfa_offset 8
 760              	 .cfi_offset 7,-8
 761              	 .cfi_offset 14,-4
 762 0002 84B0     	 sub sp,sp,#16
 763              	.LCFI82:
 764              	 .cfi_def_cfa_offset 24
 765 0004 00AF     	 add r7,sp,#0
 766              	.LCFI83:
 767              	 .cfi_def_cfa_register 7
 768 0006 7860     	 str r0,[r7,#4]
 222:../Dave/Generated/TIMER/timer.c ****   bool status;
 223:../Dave/Generated/TIMER/timer.c **** 
 224:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_GetTimerStatus:handle_ptr NULL" , (handle_ptr != NULL));
 225:../Dave/Generated/TIMER/timer.c **** 
 226:../Dave/Generated/TIMER/timer.c ****   status = false;
 769              	 .loc 2 226 0
 770 0008 0023     	 movs r3,#0
 771 000a FB73     	 strb r3,[r7,#15]
 227:../Dave/Generated/TIMER/timer.c **** 
 228:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 229:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 772              	 .loc 2 229 0
 773 000c 7B68     	 ldr r3,[r7,#4]
 774 000e 93F82130 	 ldrb r3,[r3,#33]
 775 0012 002B     	 cmp r3,#0
 776 0014 06D1     	 bne .L29
 230:../Dave/Generated/TIMER/timer.c ****   {
 231:../Dave/Generated/TIMER/timer.c ****     /* Returns the current status of the timer */
 232:../Dave/Generated/TIMER/timer.c ****     status = XMC_CCU4_SLICE_IsTimerRunning(handle_ptr->ccu4_slice_ptr);
 777              	 .loc 2 232 0
 778 0016 7B68     	 ldr r3,[r7,#4]
 779 0018 5B69     	 ldr r3,[r3,#20]
 780 001a 1846     	 mov r0,r3
 781 001c FFF7FEFF 	 bl XMC_CCU4_SLICE_IsTimerRunning
 782 0020 0346     	 mov r3,r0
 783 0022 FB73     	 strb r3,[r7,#15]
 784              	.L29:
 233:../Dave/Generated/TIMER/timer.c ****   }
 234:../Dave/Generated/TIMER/timer.c **** #endif
 235:../Dave/Generated/TIMER/timer.c **** 
 236:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 237:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 238:../Dave/Generated/TIMER/timer.c ****   {
 239:../Dave/Generated/TIMER/timer.c ****     /* Returns the current status of the timer */
 240:../Dave/Generated/TIMER/timer.c ****     status = XMC_CCU8_SLICE_IsTimerRunning(handle_ptr->ccu8_slice_ptr);
 241:../Dave/Generated/TIMER/timer.c ****   }
 242:../Dave/Generated/TIMER/timer.c **** #endif
 243:../Dave/Generated/TIMER/timer.c **** 
 244:../Dave/Generated/TIMER/timer.c ****   return (status);
 785              	 .loc 2 244 0
 786 0024 FB7B     	 ldrb r3,[r7,#15]
 245:../Dave/Generated/TIMER/timer.c **** }
 787              	 .loc 2 245 0
 788 0026 1846     	 mov r0,r3
 789 0028 1037     	 adds r7,r7,#16
 790              	.LCFI84:
 791              	 .cfi_def_cfa_offset 8
 792 002a BD46     	 mov sp,r7
 793              	.LCFI85:
 794              	 .cfi_def_cfa_register 13
 795              	 
 796 002c 80BD     	 pop {r7,pc}
 797              	 .cfi_endproc
 798              	.LFE192:
 800              	 .global __aeabi_uldivmod
 801 002e 00BF     	 .section .text.TIMER_SetTimeInterval,"ax",%progbits
 802              	 .align 2
 803              	 .global TIMER_SetTimeInterval
 804              	 .thumb
 805              	 .thumb_func
 807              	TIMER_SetTimeInterval:
 808              	.LFB193:
 246:../Dave/Generated/TIMER/timer.c **** 
 247:../Dave/Generated/TIMER/timer.c **** /*
 248:../Dave/Generated/TIMER/timer.c ****  * This function changes the PWM period which in turn changes the time tick interval value by check
 249:../Dave/Generated/TIMER/timer.c ****  * the given time tick value is within supported range.
 250:../Dave/Generated/TIMER/timer.c ****  */
 251:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_SetTimeInterval(TIMER_t  *const handle_ptr, uint32_t time_interval)
 252:../Dave/Generated/TIMER/timer.c **** {
 809              	 .loc 2 252 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 814              	.LCFI86:
 815              	 .cfi_def_cfa_offset 20
 816              	 .cfi_offset 4,-20
 817              	 .cfi_offset 5,-16
 818              	 .cfi_offset 6,-12
 819              	 .cfi_offset 7,-8
 820              	 .cfi_offset 14,-4
 821 0002 87B0     	 sub sp,sp,#28
 822              	.LCFI87:
 823              	 .cfi_def_cfa_offset 48
 824 0004 00AF     	 add r7,sp,#0
 825              	.LCFI88:
 826              	 .cfi_def_cfa_register 7
 827 0006 7860     	 str r0,[r7,#4]
 828 0008 3960     	 str r1,[r7]
 253:../Dave/Generated/TIMER/timer.c ****   TIMER_STATUS_t status;
 254:../Dave/Generated/TIMER/timer.c ****   uint32_t lfrequency;
 255:../Dave/Generated/TIMER/timer.c ****   uint32_t lprescaler;
 256:../Dave/Generated/TIMER/timer.c **** 
 257:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_SetTimeInterval:handle_ptr NULL" , (handle_ptr != NULL));
 258:../Dave/Generated/TIMER/timer.c **** 
 259:../Dave/Generated/TIMER/timer.c ****   status = TIMER_STATUS_FAILURE;
 829              	 .loc 2 259 0
 830 000a 0123     	 movs r3,#1
 831 000c FB75     	 strb r3,[r7,#23]
 260:../Dave/Generated/TIMER/timer.c **** 
 261:../Dave/Generated/TIMER/timer.c ****   if (false == TIMER_GetTimerStatus(handle_ptr))
 832              	 .loc 2 261 0
 833 000e 7868     	 ldr r0,[r7,#4]
 834 0010 FFF7FEFF 	 bl TIMER_GetTimerStatus
 835 0014 0346     	 mov r3,r0
 836 0016 83F00103 	 eor r3,r3,#1
 837 001a DBB2     	 uxtb r3,r3
 838 001c 002B     	 cmp r3,#0
 839 001e 79D0     	 beq .L32
 262:../Dave/Generated/TIMER/timer.c ****   {
 263:../Dave/Generated/TIMER/timer.c ****     /* check for time_interval range */
 264:../Dave/Generated/TIMER/timer.c ****     if ((time_interval >= handle_ptr->timer_min_value_us) && (time_interval <= handle_ptr->timer_ma
 840              	 .loc 2 264 0
 841 0020 7B68     	 ldr r3,[r7,#4]
 842 0022 9A68     	 ldr r2,[r3,#8]
 843 0024 3B68     	 ldr r3,[r7]
 844 0026 9A42     	 cmp r2,r3
 845 0028 74D8     	 bhi .L32
 846              	 .loc 2 264 0 is_stmt 0 discriminator 1
 847 002a 7B68     	 ldr r3,[r7,#4]
 848 002c 5A68     	 ldr r2,[r3,#4]
 849 002e 3B68     	 ldr r3,[r7]
 850 0030 9A42     	 cmp r2,r3
 851 0032 6FD3     	 bcc .L32
 265:../Dave/Generated/TIMER/timer.c ****     {
 266:../Dave/Generated/TIMER/timer.c ****       /* Initialize the prescaler */
 267:../Dave/Generated/TIMER/timer.c ****       lprescaler = 0U;
 852              	 .loc 2 267 0 is_stmt 1
 853 0034 0023     	 movs r3,#0
 854 0036 3B61     	 str r3,[r7,#16]
 268:../Dave/Generated/TIMER/timer.c ****       while (time_interval > (handle_ptr->timer_max_value_us >> (TIMER_PRESCALER_MAX - lprescaler))
 855              	 .loc 2 268 0
 856 0038 02E0     	 b .L33
 857              	.L34:
 269:../Dave/Generated/TIMER/timer.c ****       {
 270:../Dave/Generated/TIMER/timer.c ****         lprescaler++;
 858              	 .loc 2 270 0
 859 003a 3B69     	 ldr r3,[r7,#16]
 860 003c 0133     	 adds r3,r3,#1
 861 003e 3B61     	 str r3,[r7,#16]
 862              	.L33:
 268:../Dave/Generated/TIMER/timer.c ****       while (time_interval > (handle_ptr->timer_max_value_us >> (TIMER_PRESCALER_MAX - lprescaler))
 863              	 .loc 2 268 0
 864 0040 7B68     	 ldr r3,[r7,#4]
 865 0042 5B68     	 ldr r3,[r3,#4]
 866 0044 3A69     	 ldr r2,[r7,#16]
 867 0046 C2F10F02 	 rsb r2,r2,#15
 868 004a 23FA02F2 	 lsr r2,r3,r2
 869 004e 3B68     	 ldr r3,[r7]
 870 0050 9A42     	 cmp r2,r3
 871 0052 F2D3     	 bcc .L34
 271:../Dave/Generated/TIMER/timer.c ****       }
 272:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 273:../Dave/Generated/TIMER/timer.c ****       if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 872              	 .loc 2 273 0
 873 0054 7B68     	 ldr r3,[r7,#4]
 874 0056 93F82130 	 ldrb r3,[r3,#33]
 875 005a 002B     	 cmp r3,#0
 876 005c 5AD1     	 bne .L32
 274:../Dave/Generated/TIMER/timer.c ****       {
 275:../Dave/Generated/TIMER/timer.c ****         lfrequency = handle_ptr->global_ccu4_handler->module_frequency;
 877              	 .loc 2 275 0
 878 005e 7B68     	 ldr r3,[r7,#4]
 879 0060 1B69     	 ldr r3,[r3,#16]
 880 0062 1B68     	 ldr r3,[r3]
 881 0064 FB60     	 str r3,[r7,#12]
 276:../Dave/Generated/TIMER/timer.c ****         handle_ptr->ccu4_slice_config_ptr->prescaler_initval = lprescaler;
 882              	 .loc 2 276 0
 883 0066 7B68     	 ldr r3,[r7,#4]
 884 0068 DA69     	 ldr r2,[r3,#28]
 885 006a 3B69     	 ldr r3,[r7,#16]
 886 006c DBB2     	 uxtb r3,r3
 887 006e 03F00F03 	 and r3,r3,#15
 888 0072 D9B2     	 uxtb r1,r3
 889 0074 1379     	 ldrb r3,[r2,#4]
 890 0076 61F30303 	 bfi r3,r1,#0,#4
 891 007a 1371     	 strb r3,[r2,#4]
 277:../Dave/Generated/TIMER/timer.c ****         /* Calculate the period register for the required time_interval value */
 278:../Dave/Generated/TIMER/timer.c ****         handle_ptr->period_value = (uint16_t)((((uint64_t)time_interval * lfrequency) >> \
 892              	 .loc 2 278 0
 893 007c 3B68     	 ldr r3,[r7]
 894 007e 1846     	 mov r0,r3
 895 0080 4FF00001 	 mov r1,#0
 896 0084 FB68     	 ldr r3,[r7,#12]
 897 0086 1A46     	 mov r2,r3
 898 0088 4FF00003 	 mov r3,#0
 899 008c 02FB01FE 	 mul lr,r2,r1
 900 0090 00FB03F6 	 mul r6,r0,r3
 901 0094 7644     	 add r6,r6,lr
 902 0096 A0FB0223 	 umull r2,r3,r0,r2
 903 009a F118     	 adds r1,r6,r3
 904 009c 0B46     	 mov r3,r1
 279:../Dave/Generated/TIMER/timer.c ****                                                handle_ptr->ccu4_slice_config_ptr->prescaler_initval
 905              	 .loc 2 279 0
 906 009e 7968     	 ldr r1,[r7,#4]
 907 00a0 C969     	 ldr r1,[r1,#28]
 908 00a2 0979     	 ldrb r1,[r1,#4]
 909 00a4 C1F30301 	 ubfx r1,r1,#0,#4
 910 00a8 C9B2     	 uxtb r1,r1
 278:../Dave/Generated/TIMER/timer.c ****                                                handle_ptr->ccu4_slice_config_ptr->prescaler_initval
 911              	 .loc 2 278 0
 912 00aa C1F12006 	 rsb r6,r1,#32
 913 00ae A1F12000 	 sub r0,r1,#32
 914 00b2 22FA01F4 	 lsr r4,r2,r1
 915 00b6 03FA06F6 	 lsl r6,r3,r6
 916 00ba 3443     	 orrs r4,r4,r6
 917 00bc 23FA00F0 	 lsr r0,r3,r0
 918 00c0 0443     	 orrs r4,r4,r0
 919 00c2 23FA01F5 	 lsr r5,r3,r1
 920              	 .loc 2 279 0
 921 00c6 2046     	 mov r0,r4
 922 00c8 2946     	 mov r1,r5
 923 00ca 15A3     	 adr r3,.L37
 924 00cc D3E90023 	 ldrd r2,[r3]
 925 00d0 FFF7FEFF 	 bl __aeabi_uldivmod
 926 00d4 0246     	 mov r2,r0
 927 00d6 0B46     	 mov r3,r1
 278:../Dave/Generated/TIMER/timer.c ****                                                handle_ptr->ccu4_slice_config_ptr->prescaler_initval
 928              	 .loc 2 278 0
 929 00d8 92B2     	 uxth r2,r2
 930 00da 7B68     	 ldr r3,[r7,#4]
 931 00dc 5A84     	 strh r2,[r3,#34]
 280:../Dave/Generated/TIMER/timer.c ****                                               TIMER_RESOLUTION_SEC_TO_MICRO);
 281:../Dave/Generated/TIMER/timer.c ****         /* Actual timer period values is Period_reg_val+1U */
 282:../Dave/Generated/TIMER/timer.c ****         if (handle_ptr->period_value > TIMER_PERIOD_MIN)
 932              	 .loc 2 282 0
 933 00de 7B68     	 ldr r3,[r7,#4]
 934 00e0 5B8C     	 ldrh r3,[r3,#34]
 935 00e2 012B     	 cmp r3,#1
 936 00e4 05D9     	 bls .L35
 283:../Dave/Generated/TIMER/timer.c ****         {
 284:../Dave/Generated/TIMER/timer.c ****           (handle_ptr->period_value)--;
 937              	 .loc 2 284 0
 938 00e6 7B68     	 ldr r3,[r7,#4]
 939 00e8 5B8C     	 ldrh r3,[r3,#34]
 940 00ea 013B     	 subs r3,r3,#1
 941 00ec 9AB2     	 uxth r2,r3
 942 00ee 7B68     	 ldr r3,[r7,#4]
 943 00f0 5A84     	 strh r2,[r3,#34]
 944              	.L35:
 285:../Dave/Generated/TIMER/timer.c ****         }
 286:../Dave/Generated/TIMER/timer.c ****         /* Update the prescaler */
 287:../Dave/Generated/TIMER/timer.c ****         XMC_CCU4_SLICE_SetPrescaler(handle_ptr->ccu4_slice_ptr, handle_ptr->ccu4_slice_config_ptr->
 945              	 .loc 2 287 0
 946 00f2 7B68     	 ldr r3,[r7,#4]
 947 00f4 5A69     	 ldr r2,[r3,#20]
 948 00f6 7B68     	 ldr r3,[r7,#4]
 949 00f8 DB69     	 ldr r3,[r3,#28]
 950 00fa 1B79     	 ldrb r3,[r3,#4]
 951 00fc C3F30303 	 ubfx r3,r3,#0,#4
 952 0100 DBB2     	 uxtb r3,r3
 953 0102 1046     	 mov r0,r2
 954 0104 1946     	 mov r1,r3
 955 0106 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetPrescaler
 288:../Dave/Generated/TIMER/timer.c ****         /* update period, compare and prescaler values */
 289:../Dave/Generated/TIMER/timer.c ****         TIMER_CCU4_lShadowTransfer(handle_ptr);
 956              	 .loc 2 289 0
 957 010a 7868     	 ldr r0,[r7,#4]
 958 010c FFF7FEFF 	 bl TIMER_CCU4_lShadowTransfer
 290:../Dave/Generated/TIMER/timer.c ****         /* Update the status */
 291:../Dave/Generated/TIMER/timer.c ****         status = TIMER_STATUS_SUCCESS;
 959              	 .loc 2 291 0
 960 0110 0023     	 movs r3,#0
 961 0112 FB75     	 strb r3,[r7,#23]
 962              	.L32:
 292:../Dave/Generated/TIMER/timer.c ****       }
 293:../Dave/Generated/TIMER/timer.c **** #endif
 294:../Dave/Generated/TIMER/timer.c **** 
 295:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 296:../Dave/Generated/TIMER/timer.c ****       if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 297:../Dave/Generated/TIMER/timer.c ****       {
 298:../Dave/Generated/TIMER/timer.c ****         handle_ptr->ccu8_slice_config_ptr->prescaler_initval = lprescaler;
 299:../Dave/Generated/TIMER/timer.c ****         lfrequency = handle_ptr->global_ccu8_handler->module_frequency;
 300:../Dave/Generated/TIMER/timer.c ****         /* Calculate the period register for the required time_interval value */
 301:../Dave/Generated/TIMER/timer.c ****         handle_ptr->period_value = (uint16_t)((((uint64_t)time_interval * lfrequency) >> \
 302:../Dave/Generated/TIMER/timer.c ****                                                handle_ptr->ccu8_slice_config_ptr->prescaler_initval
 303:../Dave/Generated/TIMER/timer.c ****                                               TIMER_RESOLUTION_SEC_TO_MICRO);
 304:../Dave/Generated/TIMER/timer.c ****         /* Actual timer period values is Period_reg_val+1U */
 305:../Dave/Generated/TIMER/timer.c ****         if (handle_ptr->period_value > TIMER_PERIOD_MIN)
 306:../Dave/Generated/TIMER/timer.c ****         {
 307:../Dave/Generated/TIMER/timer.c ****           (handle_ptr->period_value)--;
 308:../Dave/Generated/TIMER/timer.c ****         }
 309:../Dave/Generated/TIMER/timer.c ****         /* Update the prescaler */
 310:../Dave/Generated/TIMER/timer.c ****         XMC_CCU8_SLICE_SetPrescaler(handle_ptr->ccu8_slice_ptr, handle_ptr->ccu8_slice_config_ptr->
 311:../Dave/Generated/TIMER/timer.c ****         /* update period, compare and prescaler values */
 312:../Dave/Generated/TIMER/timer.c ****         TIMER_CCU8_lShadowTransfer(handle_ptr);
 313:../Dave/Generated/TIMER/timer.c ****         /* Update the status */
 314:../Dave/Generated/TIMER/timer.c ****         status = TIMER_STATUS_SUCCESS;
 315:../Dave/Generated/TIMER/timer.c ****       }
 316:../Dave/Generated/TIMER/timer.c **** #endif
 317:../Dave/Generated/TIMER/timer.c ****     }
 318:../Dave/Generated/TIMER/timer.c ****   }
 319:../Dave/Generated/TIMER/timer.c ****   return (status);
 963              	 .loc 2 319 0
 964 0114 FB7D     	 ldrb r3,[r7,#23]
 320:../Dave/Generated/TIMER/timer.c **** }
 965              	 .loc 2 320 0
 966 0116 1846     	 mov r0,r3
 967 0118 1C37     	 adds r7,r7,#28
 968              	.LCFI89:
 969              	 .cfi_def_cfa_offset 20
 970 011a BD46     	 mov sp,r7
 971              	.LCFI90:
 972              	 .cfi_def_cfa_register 13
 973              	 
 974 011c F0BD     	 pop {r4,r5,r6,r7,pc}
 975              	.L38:
 976 011e 00BF     	 .align 3
 977              	.L37:
 978 0120 00E1F505 	 .word 100000000
 979 0124 00000000 	 .word 0
 980              	 .cfi_endproc
 981              	.LFE193:
 983              	 .section .text.TIMER_GetInterruptStatus,"ax",%progbits
 984              	 .align 2
 985              	 .global TIMER_GetInterruptStatus
 986              	 .thumb
 987              	 .thumb_func
 989              	TIMER_GetInterruptStatus:
 990              	.LFB194:
 321:../Dave/Generated/TIMER/timer.c **** 
 322:../Dave/Generated/TIMER/timer.c **** /*
 323:../Dave/Generated/TIMER/timer.c ****  * This function reads the timer event(period match interrupt) status of the given timer
 324:../Dave/Generated/TIMER/timer.c ****  */
 325:../Dave/Generated/TIMER/timer.c **** bool TIMER_GetInterruptStatus(TIMER_t * const handle_ptr)
 326:../Dave/Generated/TIMER/timer.c **** {
 991              	 .loc 2 326 0
 992              	 .cfi_startproc
 993              	 
 994              	 
 995 0000 80B5     	 push {r7,lr}
 996              	.LCFI91:
 997              	 .cfi_def_cfa_offset 8
 998              	 .cfi_offset 7,-8
 999              	 .cfi_offset 14,-4
 1000 0002 84B0     	 sub sp,sp,#16
 1001              	.LCFI92:
 1002              	 .cfi_def_cfa_offset 24
 1003 0004 00AF     	 add r7,sp,#0
 1004              	.LCFI93:
 1005              	 .cfi_def_cfa_register 7
 1006 0006 7860     	 str r0,[r7,#4]
 327:../Dave/Generated/TIMER/timer.c ****   bool status;
 328:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_GetInterruptStatus:handle_ptr NULL" , (handle_ptr != NULL));
 329:../Dave/Generated/TIMER/timer.c ****   status = false;
 1007              	 .loc 2 329 0
 1008 0008 0023     	 movs r3,#0
 1009 000a FB73     	 strb r3,[r7,#15]
 330:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 331:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 1010              	 .loc 2 331 0
 1011 000c 7B68     	 ldr r3,[r7,#4]
 1012 000e 93F82130 	 ldrb r3,[r3,#33]
 1013 0012 002B     	 cmp r3,#0
 1014 0014 07D1     	 bne .L40
 332:../Dave/Generated/TIMER/timer.c ****   {
 333:../Dave/Generated/TIMER/timer.c ****     /* Reads the interrupt status */
 334:../Dave/Generated/TIMER/timer.c ****     status = XMC_CCU4_SLICE_GetEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH
 1015              	 .loc 2 334 0
 1016 0016 7B68     	 ldr r3,[r7,#4]
 1017 0018 5B69     	 ldr r3,[r3,#20]
 1018 001a 1846     	 mov r0,r3
 1019 001c 0021     	 movs r1,#0
 1020 001e FFF7FEFF 	 bl XMC_CCU4_SLICE_GetEvent
 1021 0022 0346     	 mov r3,r0
 1022 0024 FB73     	 strb r3,[r7,#15]
 1023              	.L40:
 335:../Dave/Generated/TIMER/timer.c ****   }
 336:../Dave/Generated/TIMER/timer.c **** #endif
 337:../Dave/Generated/TIMER/timer.c **** 
 338:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 339:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 340:../Dave/Generated/TIMER/timer.c ****   {
 341:../Dave/Generated/TIMER/timer.c ****     /* Reads the interrupt status */
 342:../Dave/Generated/TIMER/timer.c ****     status = XMC_CCU8_SLICE_GetEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH
 343:../Dave/Generated/TIMER/timer.c ****   }
 344:../Dave/Generated/TIMER/timer.c **** #endif
 345:../Dave/Generated/TIMER/timer.c ****   return (status);
 1024              	 .loc 2 345 0
 1025 0026 FB7B     	 ldrb r3,[r7,#15]
 346:../Dave/Generated/TIMER/timer.c **** }
 1026              	 .loc 2 346 0
 1027 0028 1846     	 mov r0,r3
 1028 002a 1037     	 adds r7,r7,#16
 1029              	.LCFI94:
 1030              	 .cfi_def_cfa_offset 8
 1031 002c BD46     	 mov sp,r7
 1032              	.LCFI95:
 1033              	 .cfi_def_cfa_register 13
 1034              	 
 1035 002e 80BD     	 pop {r7,pc}
 1036              	 .cfi_endproc
 1037              	.LFE194:
 1039              	 .section .text.TIMER_ClearEvent,"ax",%progbits
 1040              	 .align 2
 1041              	 .global TIMER_ClearEvent
 1042              	 .thumb
 1043              	 .thumb_func
 1045              	TIMER_ClearEvent:
 1046              	.LFB195:
 347:../Dave/Generated/TIMER/timer.c **** 
 348:../Dave/Generated/TIMER/timer.c **** /*
 349:../Dave/Generated/TIMER/timer.c ****  * This function clears the period match interrupt status of the given timer.
 350:../Dave/Generated/TIMER/timer.c ****  */
 351:../Dave/Generated/TIMER/timer.c **** void TIMER_ClearEvent(TIMER_t *const handle_ptr)
 352:../Dave/Generated/TIMER/timer.c **** {
 1047              	 .loc 2 352 0
 1048              	 .cfi_startproc
 1049              	 
 1050              	 
 1051 0000 80B5     	 push {r7,lr}
 1052              	.LCFI96:
 1053              	 .cfi_def_cfa_offset 8
 1054              	 .cfi_offset 7,-8
 1055              	 .cfi_offset 14,-4
 1056 0002 82B0     	 sub sp,sp,#8
 1057              	.LCFI97:
 1058              	 .cfi_def_cfa_offset 16
 1059 0004 00AF     	 add r7,sp,#0
 1060              	.LCFI98:
 1061              	 .cfi_def_cfa_register 7
 1062 0006 7860     	 str r0,[r7,#4]
 353:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIME_CCU_AcknowledgeInterrupt:handle_ptr NULL" , (handle_ptr != NULL));
 354:../Dave/Generated/TIMER/timer.c **** 
 355:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 356:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 1063              	 .loc 2 356 0
 1064 0008 7B68     	 ldr r3,[r7,#4]
 1065 000a 93F82130 	 ldrb r3,[r3,#33]
 1066 000e 002B     	 cmp r3,#0
 1067 0010 05D1     	 bne .L42
 357:../Dave/Generated/TIMER/timer.c ****   {
 358:../Dave/Generated/TIMER/timer.c ****     /* clears the timer event(period match interrupt) */
 359:../Dave/Generated/TIMER/timer.c ****     XMC_CCU4_SLICE_ClearEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH);
 1068              	 .loc 2 359 0
 1069 0012 7B68     	 ldr r3,[r7,#4]
 1070 0014 5B69     	 ldr r3,[r3,#20]
 1071 0016 1846     	 mov r0,r3
 1072 0018 0021     	 movs r1,#0
 1073 001a FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearEvent
 1074              	.L42:
 360:../Dave/Generated/TIMER/timer.c ****   }
 361:../Dave/Generated/TIMER/timer.c **** #endif
 362:../Dave/Generated/TIMER/timer.c **** 
 363:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 364:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 365:../Dave/Generated/TIMER/timer.c ****   {
 366:../Dave/Generated/TIMER/timer.c ****     /* clears the timer event(period match interrupt) */
 367:../Dave/Generated/TIMER/timer.c ****     XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 368:../Dave/Generated/TIMER/timer.c ****   }
 369:../Dave/Generated/TIMER/timer.c **** #endif
 370:../Dave/Generated/TIMER/timer.c **** }
 1075              	 .loc 2 370 0
 1076 001e 0837     	 adds r7,r7,#8
 1077              	.LCFI99:
 1078              	 .cfi_def_cfa_offset 8
 1079 0020 BD46     	 mov sp,r7
 1080              	.LCFI100:
 1081              	 .cfi_def_cfa_register 13
 1082              	 
 1083 0022 80BD     	 pop {r7,pc}
 1084              	 .cfi_endproc
 1085              	.LFE195:
 1087              	 .section .text.TIMER_GetTime,"ax",%progbits
 1088              	 .align 2
 1089              	 .global TIMER_GetTime
 1090              	 .thumb
 1091              	 .thumb_func
 1093              	TIMER_GetTime:
 1094              	.LFB196:
 371:../Dave/Generated/TIMER/timer.c **** 
 372:../Dave/Generated/TIMER/timer.c **** /*
 373:../Dave/Generated/TIMER/timer.c ****  * This function returns the current time value
 374:../Dave/Generated/TIMER/timer.c ****  */
 375:../Dave/Generated/TIMER/timer.c **** uint32_t TIMER_GetTime(TIMER_t *const handle_ptr)
 376:../Dave/Generated/TIMER/timer.c **** {
 1095              	 .loc 2 376 0
 1096              	 .cfi_startproc
 1097              	 
 1098              	 
 1099 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1100              	.LCFI101:
 1101              	 .cfi_def_cfa_offset 36
 1102              	 .cfi_offset 4,-36
 1103              	 .cfi_offset 5,-32
 1104              	 .cfi_offset 6,-28
 1105              	 .cfi_offset 7,-24
 1106              	 .cfi_offset 8,-20
 1107              	 .cfi_offset 9,-16
 1108              	 .cfi_offset 10,-12
 1109              	 .cfi_offset 11,-8
 1110              	 .cfi_offset 14,-4
 1111 0004 87B0     	 sub sp,sp,#28
 1112              	.LCFI102:
 1113              	 .cfi_def_cfa_offset 64
 1114 0006 00AF     	 add r7,sp,#0
 1115              	.LCFI103:
 1116              	 .cfi_def_cfa_register 7
 1117 0008 7860     	 str r0,[r7,#4]
 377:../Dave/Generated/TIMER/timer.c ****   uint32_t ltimer_val;
 378:../Dave/Generated/TIMER/timer.c ****   uint32_t lprescaler;
 379:../Dave/Generated/TIMER/timer.c ****   uint32_t ltime_val;
 380:../Dave/Generated/TIMER/timer.c **** 
 381:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_GetTimerStatus:handle_ptr NULL" , (handle_ptr != NULL));
 382:../Dave/Generated/TIMER/timer.c ****   ltime_val = 0U;
 1118              	 .loc 2 382 0
 1119 000a 0023     	 movs r3,#0
 1120 000c 7B61     	 str r3,[r7,#20]
 383:../Dave/Generated/TIMER/timer.c **** 
 384:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 385:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 1121              	 .loc 2 385 0
 1122 000e 7B68     	 ldr r3,[r7,#4]
 1123 0010 93F82130 	 ldrb r3,[r3,#33]
 1124 0014 002B     	 cmp r3,#0
 1125 0016 37D1     	 bne .L45
 386:../Dave/Generated/TIMER/timer.c ****   {
 387:../Dave/Generated/TIMER/timer.c ****     /* Added one to according to the edge aligned mode */
 388:../Dave/Generated/TIMER/timer.c ****     ltimer_val = (uint32_t)XMC_CCU4_SLICE_GetTimerValue(handle_ptr->ccu4_slice_ptr) + 1U;
 1126              	 .loc 2 388 0
 1127 0018 7B68     	 ldr r3,[r7,#4]
 1128 001a 5B69     	 ldr r3,[r3,#20]
 1129 001c 1846     	 mov r0,r3
 1130 001e FFF7FEFF 	 bl XMC_CCU4_SLICE_GetTimerValue
 1131 0022 0346     	 mov r3,r0
 1132 0024 0133     	 adds r3,r3,#1
 1133 0026 3B61     	 str r3,[r7,#16]
 389:../Dave/Generated/TIMER/timer.c ****     lprescaler = handle_ptr->ccu4_slice_config_ptr->prescaler_initval;
 1134              	 .loc 2 389 0
 1135 0028 7B68     	 ldr r3,[r7,#4]
 1136 002a DB69     	 ldr r3,[r3,#28]
 1137 002c 1B79     	 ldrb r3,[r3,#4]
 1138 002e C3F30303 	 ubfx r3,r3,#0,#4
 1139 0032 DBB2     	 uxtb r3,r3
 1140 0034 FB60     	 str r3,[r7,#12]
 390:../Dave/Generated/TIMER/timer.c **** 
 391:../Dave/Generated/TIMER/timer.c ****     /* calculate the time value in micro seconds and scaled with 100 */
 392:../Dave/Generated/TIMER/timer.c ****     ltime_val = (uint32_t)((uint64_t)((uint64_t)ltimer_val * (uint64_t)TIMER_CLK_CONST_SCALED) >> \
 1141              	 .loc 2 392 0
 1142 0036 3B69     	 ldr r3,[r7,#16]
 1143 0038 1A46     	 mov r2,r3
 1144 003a 4FF00003 	 mov r3,#0
 1145 003e 4FEA837B 	 lsl fp,r3,#30
 1146 0042 4BEA920B 	 orr fp,fp,r2,lsr#2
 1147 0046 4FEA827A 	 lsl r10,r2,#30
 1148 004a 5246     	 mov r2,r10
 1149 004c 5B46     	 mov r3,fp
 1150 004e 4FEA8309 	 lsl r9,r3,#2
 1151 0052 49EA9279 	 orr r9,r9,r2,lsr#30
 1152 0056 4FEA8208 	 lsl r8,r2,#2
 1153 005a 12EB0802 	 adds r2,r2,r8
 1154 005e 43EB0903 	 adc r3,r3,r9
 393:../Dave/Generated/TIMER/timer.c ****                            (TIMER_CLK_SCALE_FACTOR - lprescaler));
 1155              	 .loc 2 393 0
 1156 0062 F968     	 ldr r1,[r7,#12]
 1157 0064 C1F12001 	 rsb r1,r1,#32
 392:../Dave/Generated/TIMER/timer.c ****                            (TIMER_CLK_SCALE_FACTOR - lprescaler));
 1158              	 .loc 2 392 0
 1159 0068 C1F12006 	 rsb r6,r1,#32
 1160 006c A1F12000 	 sub r0,r1,#32
 1161 0070 22FA01F4 	 lsr r4,r2,r1
 1162 0074 03FA06F6 	 lsl r6,r3,r6
 1163 0078 3443     	 orrs r4,r4,r6
 1164 007a 23FA00F0 	 lsr r0,r3,r0
 1165 007e 0443     	 orrs r4,r4,r0
 1166 0080 23FA01F5 	 lsr r5,r3,r1
 1167 0084 2346     	 mov r3,r4
 1168 0086 7B61     	 str r3,[r7,#20]
 1169              	.L45:
 394:../Dave/Generated/TIMER/timer.c ****   }
 395:../Dave/Generated/TIMER/timer.c **** #endif
 396:../Dave/Generated/TIMER/timer.c **** 
 397:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 398:../Dave/Generated/TIMER/timer.c ****   if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 399:../Dave/Generated/TIMER/timer.c ****   {
 400:../Dave/Generated/TIMER/timer.c ****     /* Added one to according to the edge aligned mode */
 401:../Dave/Generated/TIMER/timer.c ****     ltimer_val = (uint32_t)XMC_CCU8_SLICE_GetTimerValue(handle_ptr->ccu8_slice_ptr) + 1U;
 402:../Dave/Generated/TIMER/timer.c ****     lprescaler = handle_ptr->ccu8_slice_config_ptr->prescaler_initval;
 403:../Dave/Generated/TIMER/timer.c **** 
 404:../Dave/Generated/TIMER/timer.c ****     /* calculate the time value in micro seconds and scaled with 100 */
 405:../Dave/Generated/TIMER/timer.c ****     ltime_val = (uint32_t)((uint64_t)((uint64_t)ltimer_val * (uint64_t)TIMER_CLK_CONST_SCALED) >> \
 406:../Dave/Generated/TIMER/timer.c ****                            (TIMER_CLK_SCALE_FACTOR - lprescaler));
 407:../Dave/Generated/TIMER/timer.c ****   }
 408:../Dave/Generated/TIMER/timer.c **** #endif
 409:../Dave/Generated/TIMER/timer.c **** 
 410:../Dave/Generated/TIMER/timer.c ****   return ltime_val;
 1170              	 .loc 2 410 0
 1171 0088 7B69     	 ldr r3,[r7,#20]
 411:../Dave/Generated/TIMER/timer.c **** }
 1172              	 .loc 2 411 0
 1173 008a 1846     	 mov r0,r3
 1174 008c 1C37     	 adds r7,r7,#28
 1175              	.LCFI104:
 1176              	 .cfi_def_cfa_offset 36
 1177 008e BD46     	 mov sp,r7
 1178              	.LCFI105:
 1179              	 .cfi_def_cfa_register 13
 1180              	 
 1181 0090 BDE8F08F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,pc}
 1182              	 .cfi_endproc
 1183              	.LFE196:
 1185              	 .section .text.TIMER_Clear,"ax",%progbits
 1186              	 .align 2
 1187              	 .global TIMER_Clear
 1188              	 .thumb
 1189              	 .thumb_func
 1191              	TIMER_Clear:
 1192              	.LFB197:
 412:../Dave/Generated/TIMER/timer.c **** 
 413:../Dave/Generated/TIMER/timer.c **** /*
 414:../Dave/Generated/TIMER/timer.c ****  * Clear the timer
 415:../Dave/Generated/TIMER/timer.c ****  */
 416:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_Clear(TIMER_t *const handle_ptr)
 417:../Dave/Generated/TIMER/timer.c **** {
 1193              	 .loc 2 417 0
 1194              	 .cfi_startproc
 1195              	 
 1196              	 
 1197 0000 80B5     	 push {r7,lr}
 1198              	.LCFI106:
 1199              	 .cfi_def_cfa_offset 8
 1200              	 .cfi_offset 7,-8
 1201              	 .cfi_offset 14,-4
 1202 0002 84B0     	 sub sp,sp,#16
 1203              	.LCFI107:
 1204              	 .cfi_def_cfa_offset 24
 1205 0004 00AF     	 add r7,sp,#0
 1206              	.LCFI108:
 1207              	 .cfi_def_cfa_register 7
 1208 0006 7860     	 str r0,[r7,#4]
 418:../Dave/Generated/TIMER/timer.c ****   TIMER_STATUS_t status;
 419:../Dave/Generated/TIMER/timer.c **** 
 420:../Dave/Generated/TIMER/timer.c ****   XMC_ASSERT("TIMER_Clear:handle_ptr NULL" , (handle_ptr != NULL));
 421:../Dave/Generated/TIMER/timer.c **** 
 422:../Dave/Generated/TIMER/timer.c ****   /* Check for APP instance is initialized or not */
 423:../Dave/Generated/TIMER/timer.c ****   if (true == handle_ptr->initialized)
 1209              	 .loc 2 423 0
 1210 0008 7B68     	 ldr r3,[r7,#4]
 1211 000a 93F82630 	 ldrb r3,[r3,#38]
 1212 000e 002B     	 cmp r3,#0
 1213 0010 0CD0     	 beq .L48
 424:../Dave/Generated/TIMER/timer.c ****   {
 425:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 426:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU4 == handle_ptr->timer_module)
 1214              	 .loc 2 426 0
 1215 0012 7B68     	 ldr r3,[r7,#4]
 1216 0014 93F82130 	 ldrb r3,[r3,#33]
 1217 0018 002B     	 cmp r3,#0
 1218 001a 04D1     	 bne .L49
 427:../Dave/Generated/TIMER/timer.c ****     {
 428:../Dave/Generated/TIMER/timer.c ****       /* Clear the timer register */
 429:../Dave/Generated/TIMER/timer.c ****       XMC_CCU4_SLICE_ClearTimer(handle_ptr->ccu4_slice_ptr);
 1219              	 .loc 2 429 0
 1220 001c 7B68     	 ldr r3,[r7,#4]
 1221 001e 5B69     	 ldr r3,[r3,#20]
 1222 0020 1846     	 mov r0,r3
 1223 0022 FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearTimer
 1224              	.L49:
 430:../Dave/Generated/TIMER/timer.c ****     }
 431:../Dave/Generated/TIMER/timer.c **** #endif
 432:../Dave/Generated/TIMER/timer.c **** 
 433:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU8_USED
 434:../Dave/Generated/TIMER/timer.c ****     if (TIMER_MODULE_CCU8 == handle_ptr->timer_module)
 435:../Dave/Generated/TIMER/timer.c ****     {
 436:../Dave/Generated/TIMER/timer.c ****       /* Clear the timer register */
 437:../Dave/Generated/TIMER/timer.c ****       XMC_CCU8_SLICE_ClearTimer(handle_ptr->ccu8_slice_ptr);
 438:../Dave/Generated/TIMER/timer.c ****     }
 439:../Dave/Generated/TIMER/timer.c **** #endif
 440:../Dave/Generated/TIMER/timer.c ****     status = TIMER_STATUS_SUCCESS;
 1225              	 .loc 2 440 0
 1226 0026 0023     	 movs r3,#0
 1227 0028 FB73     	 strb r3,[r7,#15]
 1228 002a 01E0     	 b .L50
 1229              	.L48:
 441:../Dave/Generated/TIMER/timer.c ****   }
 442:../Dave/Generated/TIMER/timer.c ****   else
 443:../Dave/Generated/TIMER/timer.c ****   {
 444:../Dave/Generated/TIMER/timer.c ****     status = TIMER_STATUS_FAILURE;
 1230              	 .loc 2 444 0
 1231 002c 0123     	 movs r3,#1
 1232 002e FB73     	 strb r3,[r7,#15]
 1233              	.L50:
 445:../Dave/Generated/TIMER/timer.c ****   }
 446:../Dave/Generated/TIMER/timer.c **** 
 447:../Dave/Generated/TIMER/timer.c ****   return (status);
 1234              	 .loc 2 447 0
 1235 0030 FB7B     	 ldrb r3,[r7,#15]
 448:../Dave/Generated/TIMER/timer.c **** }
 1236              	 .loc 2 448 0
 1237 0032 1846     	 mov r0,r3
 1238 0034 1037     	 adds r7,r7,#16
 1239              	.LCFI109:
 1240              	 .cfi_def_cfa_offset 8
 1241 0036 BD46     	 mov sp,r7
 1242              	.LCFI110:
 1243              	 .cfi_def_cfa_register 13
 1244              	 
 1245 0038 80BD     	 pop {r7,pc}
 1246              	 .cfi_endproc
 1247              	.LFE197:
 1249 003a 00BF     	 .section .text.TIMER_CCU4_lInit,"ax",%progbits
 1250              	 .align 2
 1251              	 .global TIMER_CCU4_lInit
 1252              	 .thumb
 1253              	 .thumb_func
 1255              	TIMER_CCU4_lInit:
 1256              	.LFB198:
 449:../Dave/Generated/TIMER/timer.c **** 
 450:../Dave/Generated/TIMER/timer.c **** /******************************************** PRIVATE FUNCTION DEFINITIONS ************************
 451:../Dave/Generated/TIMER/timer.c **** #ifdef TIMER_CCU4_USED
 452:../Dave/Generated/TIMER/timer.c **** /*
 453:../Dave/Generated/TIMER/timer.c ****  * This function configures timer ccu4 timer with required time tick value
 454:../Dave/Generated/TIMER/timer.c ****  */
 455:../Dave/Generated/TIMER/timer.c **** TIMER_STATUS_t TIMER_CCU4_lInit(TIMER_t* const handle_ptr)
 456:../Dave/Generated/TIMER/timer.c **** {
 1257              	 .loc 2 456 0
 1258              	 .cfi_startproc
 1259              	 
 1260              	 
 1261 0000 80B5     	 push {r7,lr}
 1262              	.LCFI111:
 1263              	 .cfi_def_cfa_offset 8
 1264              	 .cfi_offset 7,-8
 1265              	 .cfi_offset 14,-4
 1266 0002 84B0     	 sub sp,sp,#16
 1267              	.LCFI112:
 1268              	 .cfi_def_cfa_offset 24
 1269 0004 00AF     	 add r7,sp,#0
 1270              	.LCFI113:
 1271              	 .cfi_def_cfa_register 7
 1272 0006 7860     	 str r0,[r7,#4]
 457:../Dave/Generated/TIMER/timer.c ****   TIMER_STATUS_t status;
 458:../Dave/Generated/TIMER/timer.c ****   /* Initialize the global registers */
 459:../Dave/Generated/TIMER/timer.c ****   status = (TIMER_STATUS_t)GLOBAL_CCU4_Init(handle_ptr->global_ccu4_handler);
 1273              	 .loc 2 459 0
 1274 0008 7B68     	 ldr r3,[r7,#4]
 1275 000a 1B69     	 ldr r3,[r3,#16]
 1276 000c 1846     	 mov r0,r3
 1277 000e FFF7FEFF 	 bl GLOBAL_CCU4_Init
 1278 0012 0346     	 mov r3,r0
 1279 0014 FB73     	 strb r3,[r7,#15]
 460:../Dave/Generated/TIMER/timer.c **** 
 461:../Dave/Generated/TIMER/timer.c ****   /* Enable the clock for selected timer */
 462:../Dave/Generated/TIMER/timer.c ****   XMC_CCU4_EnableClock(handle_ptr->global_ccu4_handler->module_ptr, handle_ptr->ccu4_slice_number);
 1280              	 .loc 2 462 0
 1281 0016 7B68     	 ldr r3,[r7,#4]
 1282 0018 1B69     	 ldr r3,[r3,#16]
 1283 001a 9A68     	 ldr r2,[r3,#8]
 1284 001c 7B68     	 ldr r3,[r7,#4]
 1285 001e 1B7E     	 ldrb r3,[r3,#24]
 1286 0020 1046     	 mov r0,r2
 1287 0022 1946     	 mov r1,r3
 1288 0024 FFF7FEFF 	 bl XMC_CCU4_EnableClock
 463:../Dave/Generated/TIMER/timer.c ****   /* Configure the timer with required settings */
 464:../Dave/Generated/TIMER/timer.c ****   XMC_CCU4_SLICE_CompareInit(handle_ptr->ccu4_slice_ptr, handle_ptr->ccu4_slice_config_ptr);
 1289              	 .loc 2 464 0
 1290 0028 7B68     	 ldr r3,[r7,#4]
 1291 002a 5A69     	 ldr r2,[r3,#20]
 1292 002c 7B68     	 ldr r3,[r7,#4]
 1293 002e DB69     	 ldr r3,[r3,#28]
 1294 0030 1046     	 mov r0,r2
 1295 0032 1946     	 mov r1,r3
 1296 0034 FFF7FEFF 	 bl XMC_CCU4_SLICE_CompareInit
 465:../Dave/Generated/TIMER/timer.c ****   /* programs the timer period and compare register according to time interval value and do the sha
 466:../Dave/Generated/TIMER/timer.c ****   TIMER_CCU4_lShadowTransfer(handle_ptr);
 1297              	 .loc 2 466 0
 1298 0038 7868     	 ldr r0,[r7,#4]
 1299 003a FFF7FEFF 	 bl TIMER_CCU4_lShadowTransfer
 467:../Dave/Generated/TIMER/timer.c **** 
 468:../Dave/Generated/TIMER/timer.c **** #ifdef  TIMER_INTERRUPT
 469:../Dave/Generated/TIMER/timer.c ****   if (true == handle_ptr->period_match_enable)
 1300              	 .loc 2 469 0
 1301 003e 7B68     	 ldr r3,[r7,#4]
 1302 0040 93F82530 	 ldrb r3,[r3,#37]
 1303 0044 002B     	 cmp r3,#0
 1304 0046 0FD0     	 beq .L53
 470:../Dave/Generated/TIMER/timer.c ****   {
 471:../Dave/Generated/TIMER/timer.c ****     /* Binds a period match event to an NVIC node  */
 472:../Dave/Generated/TIMER/timer.c ****     XMC_CCU4_SLICE_SetInterruptNode(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH,
 1305              	 .loc 2 472 0
 1306 0048 7B68     	 ldr r3,[r7,#4]
 1307 004a 5A69     	 ldr r2,[r3,#20]
 1308 004c 7B68     	 ldr r3,[r7,#4]
 1309 004e 93F82030 	 ldrb r3,[r3,#32]
 1310 0052 1046     	 mov r0,r2
 1311 0054 0021     	 movs r1,#0
 1312 0056 1A46     	 mov r2,r3
 1313 0058 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 473:../Dave/Generated/TIMER/timer.c ****                                     handle_ptr->ccu4_period_match_node);
 474:../Dave/Generated/TIMER/timer.c ****     /* Enables a timer(period match) event  */
 475:../Dave/Generated/TIMER/timer.c ****     XMC_CCU4_SLICE_EnableEvent(handle_ptr->ccu4_slice_ptr, XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH);
 1314              	 .loc 2 475 0
 1315 005c 7B68     	 ldr r3,[r7,#4]
 1316 005e 5B69     	 ldr r3,[r3,#20]
 1317 0060 1846     	 mov r0,r3
 1318 0062 0021     	 movs r1,#0
 1319 0064 FFF7FEFF 	 bl XMC_CCU4_SLICE_EnableEvent
 1320              	.L53:
 476:../Dave/Generated/TIMER/timer.c ****   }
 477:../Dave/Generated/TIMER/timer.c **** #endif
 478:../Dave/Generated/TIMER/timer.c ****   /* Clears the timer register */
 479:../Dave/Generated/TIMER/timer.c ****   XMC_CCU4_SLICE_ClearTimer(handle_ptr->ccu4_slice_ptr);
 1321              	 .loc 2 479 0
 1322 0068 7B68     	 ldr r3,[r7,#4]
 1323 006a 5B69     	 ldr r3,[r3,#20]
 1324 006c 1846     	 mov r0,r3
 1325 006e FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearTimer
 480:../Dave/Generated/TIMER/timer.c **** 
 481:../Dave/Generated/TIMER/timer.c ****   /* update the initialization flag as true for particular instance*/
 482:../Dave/Generated/TIMER/timer.c ****   handle_ptr->initialized = true;
 1326              	 .loc 2 482 0
 1327 0072 7B68     	 ldr r3,[r7,#4]
 1328 0074 0122     	 movs r2,#1
 1329 0076 83F82620 	 strb r2,[r3,#38]
 483:../Dave/Generated/TIMER/timer.c **** 
 484:../Dave/Generated/TIMER/timer.c ****   /* Check whether the start of the timer is enabled during initialization or not */
 485:../Dave/Generated/TIMER/timer.c ****   if (handle_ptr->start_control == true)
 1330              	 .loc 2 485 0
 1331 007a 7B68     	 ldr r3,[r7,#4]
 1332 007c 93F82430 	 ldrb r3,[r3,#36]
 1333 0080 002B     	 cmp r3,#0
 1334 0082 04D0     	 beq .L54
 486:../Dave/Generated/TIMER/timer.c ****   {
 487:../Dave/Generated/TIMER/timer.c ****     /* Start the timer */
 488:../Dave/Generated/TIMER/timer.c ****     XMC_CCU4_SLICE_StartTimer(handle_ptr->ccu4_slice_ptr);
 1335              	 .loc 2 488 0
 1336 0084 7B68     	 ldr r3,[r7,#4]
 1337 0086 5B69     	 ldr r3,[r3,#20]
 1338 0088 1846     	 mov r0,r3
 1339 008a FFF7FEFF 	 bl XMC_CCU4_SLICE_StartTimer
 1340              	.L54:
 489:../Dave/Generated/TIMER/timer.c ****   }
 490:../Dave/Generated/TIMER/timer.c **** 
 491:../Dave/Generated/TIMER/timer.c ****   return (status);
 1341              	 .loc 2 491 0
 1342 008e FB7B     	 ldrb r3,[r7,#15]
 492:../Dave/Generated/TIMER/timer.c **** }
 1343              	 .loc 2 492 0
 1344 0090 1846     	 mov r0,r3
 1345 0092 1037     	 adds r7,r7,#16
 1346              	.LCFI114:
 1347              	 .cfi_def_cfa_offset 8
 1348 0094 BD46     	 mov sp,r7
 1349              	.LCFI115:
 1350              	 .cfi_def_cfa_register 13
 1351              	 
 1352 0096 80BD     	 pop {r7,pc}
 1353              	 .cfi_endproc
 1354              	.LFE198:
 1356              	 .section .text.TIMER_CCU4_lShadowTransfer,"ax",%progbits
 1357              	 .align 2
 1358              	 .global TIMER_CCU4_lShadowTransfer
 1359              	 .thumb
 1360              	 .thumb_func
 1362              	TIMER_CCU4_lShadowTransfer:
 1363              	.LFB199:
 493:../Dave/Generated/TIMER/timer.c **** 
 494:../Dave/Generated/TIMER/timer.c **** /*
 495:../Dave/Generated/TIMER/timer.c ****  * This function configures timer period and compare values and triggers the shadow transfer operat
 496:../Dave/Generated/TIMER/timer.c ****  */
 497:../Dave/Generated/TIMER/timer.c **** void TIMER_CCU4_lShadowTransfer(TIMER_t* const handle_ptr)
 498:../Dave/Generated/TIMER/timer.c **** {
 1364              	 .loc 2 498 0
 1365              	 .cfi_startproc
 1366              	 
 1367              	 
 1368 0000 80B5     	 push {r7,lr}
 1369              	.LCFI116:
 1370              	 .cfi_def_cfa_offset 8
 1371              	 .cfi_offset 7,-8
 1372              	 .cfi_offset 14,-4
 1373 0002 82B0     	 sub sp,sp,#8
 1374              	.LCFI117:
 1375              	 .cfi_def_cfa_offset 16
 1376 0004 00AF     	 add r7,sp,#0
 1377              	.LCFI118:
 1378              	 .cfi_def_cfa_register 7
 1379 0006 7860     	 str r0,[r7,#4]
 499:../Dave/Generated/TIMER/timer.c ****   /* programs the timer period register according to time interval value */
 500:../Dave/Generated/TIMER/timer.c ****   XMC_CCU4_SLICE_SetTimerPeriodMatch(handle_ptr->ccu4_slice_ptr, handle_ptr->period_value);
 1380              	 .loc 2 500 0
 1381 0008 7B68     	 ldr r3,[r7,#4]
 1382 000a 5A69     	 ldr r2,[r3,#20]
 1383 000c 7B68     	 ldr r3,[r7,#4]
 1384 000e 5B8C     	 ldrh r3,[r3,#34]
 1385 0010 1046     	 mov r0,r2
 1386 0012 1946     	 mov r1,r3
 1387 0014 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 501:../Dave/Generated/TIMER/timer.c ****   /* programs the timer compare register for 50% duty cycle */
 502:../Dave/Generated/TIMER/timer.c ****   XMC_CCU4_SLICE_SetTimerCompareMatch(handle_ptr->ccu4_slice_ptr, TIMER_CMP_100_DUTY);
 1388              	 .loc 2 502 0
 1389 0018 7B68     	 ldr r3,[r7,#4]
 1390 001a 5B69     	 ldr r3,[r3,#20]
 1391 001c 1846     	 mov r0,r3
 1392 001e 0021     	 movs r1,#0
 1393 0020 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerCompareMatch
 503:../Dave/Generated/TIMER/timer.c ****   /* Transfers value from shadow timer registers to actual timer registers */
 504:../Dave/Generated/TIMER/timer.c ****   XMC_CCU4_EnableShadowTransfer(handle_ptr->global_ccu4_handler->module_ptr, handle_ptr->shadow_mas
 1394              	 .loc 2 504 0
 1395 0024 7B68     	 ldr r3,[r7,#4]
 1396 0026 1B69     	 ldr r3,[r3,#16]
 1397 0028 9A68     	 ldr r2,[r3,#8]
 1398 002a 7B68     	 ldr r3,[r7,#4]
 1399 002c DB68     	 ldr r3,[r3,#12]
 1400 002e 1046     	 mov r0,r2
 1401 0030 1946     	 mov r1,r3
 1402 0032 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 505:../Dave/Generated/TIMER/timer.c **** }
 1403              	 .loc 2 505 0
 1404 0036 0837     	 adds r7,r7,#8
 1405              	.LCFI119:
 1406              	 .cfi_def_cfa_offset 8
 1407 0038 BD46     	 mov sp,r7
 1408              	.LCFI120:
 1409              	 .cfi_def_cfa_register 13
 1410              	 
 1411 003a 80BD     	 pop {r7,pc}
 1412              	 .cfi_endproc
 1413              	.LFE199:
 1415              	 .text
 1416              	.Letext0:
 1417              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1418              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1419              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1420              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 1421              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/DAVE_Common.h"
 1422              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/GLOBAL_CCU4/global_ccu4.h"
 1423              	 .file 9 "../Dave/Generated/TIMER/timer.h"
 1424              	 .file 10 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 1425              	 .file 11 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
    {standard input}:19     .text.XMC_CCU4_EnableClock:00000000 $t
    {standard input}:23     .text.XMC_CCU4_EnableClock:00000000 XMC_CCU4_EnableClock
    {standard input}:70     .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 $t
    {standard input}:74     .text.XMC_CCU4_SLICE_IsTimerRunning:00000000 XMC_CCU4_SLICE_IsTimerRunning
    {standard input}:119    .text.XMC_CCU4_SLICE_StartTimer:00000000 $t
    {standard input}:123    .text.XMC_CCU4_SLICE_StartTimer:00000000 XMC_CCU4_SLICE_StartTimer
    {standard input}:162    .text.XMC_CCU4_SLICE_StopTimer:00000000 $t
    {standard input}:166    .text.XMC_CCU4_SLICE_StopTimer:00000000 XMC_CCU4_SLICE_StopTimer
    {standard input}:207    .text.XMC_CCU4_SLICE_ClearTimer:00000000 $t
    {standard input}:211    .text.XMC_CCU4_SLICE_ClearTimer:00000000 XMC_CCU4_SLICE_ClearTimer
    {standard input}:252    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:256    .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU4_SLICE_SetTimerPeriodMatch
    {standard input}:297    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:301    .text.XMC_CCU4_SLICE_SetTimerCompareMatch:00000000 XMC_CCU4_SLICE_SetTimerCompareMatch
    {standard input}:342    .text.XMC_CCU4_SLICE_GetTimerValue:00000000 $t
    {standard input}:346    .text.XMC_CCU4_SLICE_GetTimerValue:00000000 XMC_CCU4_SLICE_GetTimerValue
    {standard input}:386    .text.XMC_CCU4_SLICE_EnableEvent:00000000 $t
    {standard input}:390    .text.XMC_CCU4_SLICE_EnableEvent:00000000 XMC_CCU4_SLICE_EnableEvent
    {standard input}:436    .text.XMC_CCU4_SLICE_ClearEvent:00000000 $t
    {standard input}:440    .text.XMC_CCU4_SLICE_ClearEvent:00000000 XMC_CCU4_SLICE_ClearEvent
    {standard input}:486    .text.TIMER_GetAppVersion:00000000 $t
    {standard input}:491    .text.TIMER_GetAppVersion:00000000 TIMER_GetAppVersion
    {standard input}:552    .text.TIMER_Init:00000000 $t
    {standard input}:557    .text.TIMER_Init:00000000 TIMER_Init
    {standard input}:1255   .text.TIMER_CCU4_lInit:00000000 TIMER_CCU4_lInit
    {standard input}:612    .text.TIMER_Start:00000000 $t
    {standard input}:617    .text.TIMER_Start:00000000 TIMER_Start
    {standard input}:676    .text.TIMER_Stop:00000000 $t
    {standard input}:681    .text.TIMER_Stop:00000000 TIMER_Stop
    {standard input}:751    .text.TIMER_GetTimerStatus:00000000 TIMER_GetTimerStatus
    {standard input}:746    .text.TIMER_GetTimerStatus:00000000 $t
    {standard input}:802    .text.TIMER_SetTimeInterval:00000000 $t
    {standard input}:807    .text.TIMER_SetTimeInterval:00000000 TIMER_SetTimeInterval
    {standard input}:1362   .text.TIMER_CCU4_lShadowTransfer:00000000 TIMER_CCU4_lShadowTransfer
    {standard input}:978    .text.TIMER_SetTimeInterval:00000120 $d
    {standard input}:984    .text.TIMER_GetInterruptStatus:00000000 $t
    {standard input}:989    .text.TIMER_GetInterruptStatus:00000000 TIMER_GetInterruptStatus
    {standard input}:1040   .text.TIMER_ClearEvent:00000000 $t
    {standard input}:1045   .text.TIMER_ClearEvent:00000000 TIMER_ClearEvent
    {standard input}:1088   .text.TIMER_GetTime:00000000 $t
    {standard input}:1093   .text.TIMER_GetTime:00000000 TIMER_GetTime
    {standard input}:1186   .text.TIMER_Clear:00000000 $t
    {standard input}:1191   .text.TIMER_Clear:00000000 TIMER_Clear
    {standard input}:1250   .text.TIMER_CCU4_lInit:00000000 $t
    {standard input}:1357   .text.TIMER_CCU4_lShadowTransfer:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
XMC_CCU4_SLICE_SetPrescaler
XMC_CCU4_SLICE_GetEvent
GLOBAL_CCU4_Init
XMC_CCU4_SLICE_CompareInit
XMC_CCU4_SLICE_SetInterruptNode
XMC_CCU4_EnableShadowTransfer
