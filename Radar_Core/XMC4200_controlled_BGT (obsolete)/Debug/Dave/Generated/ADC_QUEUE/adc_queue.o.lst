   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "adc_queue.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.NVIC_GetPriorityGrouping,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	NVIC_GetPriorityGrouping:
  25              	.LFB107:
  26              	 .file 1 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include/core_cm4.h"
   1:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V4.00
   5:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  * @date     22. August 2014
   6:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  *
   7:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  * @note
   8:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  *
   9:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  10:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  12:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    All rights reserved.
  13:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      to endorse or promote products derived from this software without
  22:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      specific prior written permission.
  23:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    *
  24:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  37:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  38:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __ICCARM__ )
  39:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
  41:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  42:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  45:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  46:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  47:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
  48:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  49:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  52:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  55:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  57:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  58:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
  61:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  62:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  63:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  64:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  65:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  66:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup Cortex_M4
  67:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
  68:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
  69:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  70:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*  CMSIS CM4 definitions */
  71:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  76:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  78:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  79:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __CC_ARM )
  80:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  84:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
  85:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  89:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
  90:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  94:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
  95:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
  98:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
  99:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 103:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 104:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __packed
 105:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 109:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 110:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 111:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** */
 114:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
 115:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1
 118:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #else
 119:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0
 121:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 122:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #else
 123:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0
 124:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 125:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 126:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 127:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1
 130:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #else
 131:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0
 133:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 134:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #else
 135:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0
 136:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 137:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 138:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 139:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 140:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1
 142:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #else
 143:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0
 145:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 146:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #else
 147:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0
 148:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 149:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 150:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 151:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1
 154:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #else
 155:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0
 157:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 158:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #else
 159:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0
 160:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 161:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 162:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 163:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 164:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1
 166:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #else
 167:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0
 169:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 170:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #else
 171:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0
 172:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 173:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 174:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1
 178:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #else
 179:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0
 181:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 182:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #else
 183:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0
 184:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 185:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 186:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 187:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 192:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 193:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
 194:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 195:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 196:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 198:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 200:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 203:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 204:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 205:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 206:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 207:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 208:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 210:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000
 211:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 213:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 214:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 215:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0
 216:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 218:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 219:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 220:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0
 221:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 223:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 224:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 228:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 233:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 234:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 235:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /**
 237:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 239:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 241:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** */
 243:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 244:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #else
 246:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 248:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 251:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 252:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 253:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 254:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 255:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 256:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 257:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 258:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 259:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 260:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 261:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 262:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 263:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 264:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 265:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 266:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** */
 269:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 270:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief  Core Register type definitions.
 273:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 274:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 275:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 276:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 278:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 279:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 280:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   struct
 281:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   {
 282:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if (__CORTEX_M != 0x04)
 283:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 284:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #else
 285:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 286:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 287:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 288:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 289:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 290:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 291:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 292:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 293:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 294:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 295:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 296:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 297:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 298:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 299:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 300:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 301:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 302:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 303:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   struct
 304:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   {
 305:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 306:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 307:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 308:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 309:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 310:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 311:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 312:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 313:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 314:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 315:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 316:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   struct
 317:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   {
 318:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 319:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if (__CORTEX_M != 0x04)
 320:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 321:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #else
 322:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 323:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 324:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 325:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
 326:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 327:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 328:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 329:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 330:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 331:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 332:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 333:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 334:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 335:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 336:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 337:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 338:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 339:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 340:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 341:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 342:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   struct
 343:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   {
 344:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 345:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 346:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 347:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 348:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 351:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 352:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 353:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 354:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 355:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup    CMSIS_core_register
 356:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 357:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 358:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 359:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 360:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 361:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 362:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 363:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 364:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 365:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 366:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED0[24];
 367:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 368:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RSERVED1[24];
 369:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 370:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED2[24];
 371:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 372:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED3[24];
 373:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 374:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED4[56];
 375:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 376:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED5[644];
 377:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 378:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 379:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 380:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 381:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 382:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 383:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 384:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 385:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 386:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 387:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 388:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 389:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 390:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 391:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 392:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 393:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 394:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 395:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 396:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 397:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 398:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 399:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 400:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 401:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 402:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 403:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 404:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 405:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 406:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 407:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 408:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 409:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 410:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 411:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 412:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 413:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 414:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 415:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 416:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED0[5];
 417:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 418:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 419:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 420:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 421:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 422:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 423:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 424:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 425:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 426:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 427:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 428:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 429:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 430:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 431:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 432:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 433:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 434:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 435:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 436:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 437:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 438:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 439:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 440:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 441:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 442:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 443:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 444:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 445:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 446:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 447:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 448:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 449:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 450:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 451:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 452:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 453:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 454:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 455:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 456:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 457:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 458:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 459:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 460:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 461:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 462:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 463:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 464:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 465:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 466:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 467:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 468:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 469:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 470:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 471:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 472:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 473:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 474:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 475:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 476:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 477:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 478:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 479:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 480:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 481:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 482:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 483:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 484:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 485:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 486:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 487:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 488:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 489:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 490:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 491:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 492:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 493:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 494:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 495:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 496:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 497:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 498:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 499:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 500:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 501:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 502:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 503:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 504:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 505:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 506:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 507:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 508:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 509:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 510:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 511:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 512:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 513:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 514:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 515:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 516:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 517:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 518:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 519:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 520:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 521:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 522:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 523:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 524:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 525:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 526:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 527:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 528:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 529:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 530:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 531:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 532:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 533:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 534:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 535:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 536:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 537:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 538:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 539:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 540:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 541:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 542:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 543:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 544:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 545:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 546:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 547:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 548:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 549:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 550:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 551:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 552:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 553:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 554:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 555:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 556:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 557:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 558:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 559:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 560:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 561:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 562:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 563:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 564:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 565:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 566:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 567:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 568:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 569:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 570:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 571:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 572:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 573:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 574:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 575:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 576:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 577:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 578:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 579:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 580:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 581:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 582:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 583:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 584:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 585:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 586:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 587:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 588:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 589:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 590:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 591:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 592:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 593:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 594:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 595:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 596:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 597:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 598:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 599:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 600:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 601:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 602:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 603:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 604:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 605:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 606:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 607:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 608:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 609:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 610:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 611:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 612:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 613:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 614:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED0[1];
 615:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 616:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 617:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 618:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 619:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 620:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 621:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 622:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 623:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 624:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 625:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 626:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 627:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 628:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 629:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 630:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 631:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 632:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 633:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 634:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 635:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 636:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 637:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 638:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 639:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 640:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 641:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 642:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 643:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 644:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 645:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 646:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 647:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 648:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 649:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 650:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 651:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 652:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 653:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 654:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 655:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 656:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 657:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 658:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 659:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 660:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 661:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 662:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 663:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 664:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 665:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 666:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 667:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 668:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 669:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 670:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 671:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 672:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 673:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 674:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 675:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 676:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 677:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 678:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 679:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 680:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 681:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 682:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 683:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 684:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 685:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 686:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 687:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_CALIB_TENMS_Pos)        /*!< SysT
 688:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 689:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 690:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 691:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 692:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 693:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 694:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 695:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 696:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 697:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 698:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 699:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 700:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 701:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 702:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __O  union
 703:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   {
 704:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 705:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 706:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 707:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 708:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED0[864];
 709:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 710:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED1[15];
 711:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 712:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED2[15];
 713:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 714:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED3[29];
 715:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 716:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 717:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 718:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED4[43];
 719:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 720:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
 721:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED5[6];
 722:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 723:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 724:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 725:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 726:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 727:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 728:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 729:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 730:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 731:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 732:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 733:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 734:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 735:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 736:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 737:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 738:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)                /*!< ITM 
 739:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 740:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 741:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 742:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 743:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 744:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 745:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 746:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 747:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 748:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 749:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 750:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 751:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 752:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 753:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 754:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 755:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 756:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 757:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 758:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 759:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 760:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 761:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 762:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 763:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 764:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 765:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 766:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                    /*!< ITM 
 767:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 768:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Write Register Definitions */
 769:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 770:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL << ITM_IWR_ATVALIDM_Pos)                  /*!< ITM 
 771:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 772:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Read Register Definitions */
 773:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 774:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL << ITM_IRR_ATREADYM_Pos)                  /*!< ITM 
 775:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 776:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 777:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
 778:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL << ITM_IMCR_INTEGRATION_Pos)              /*!< ITM 
 779:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 780:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 781:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 782:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 783:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 784:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 785:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 786:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 787:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 788:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL << ITM_LSR_Present_Pos)                   /*!< ITM 
 789:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 790:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 791:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 792:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 793:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 794:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 795:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 796:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 797:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 798:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 799:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 800:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 801:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 802:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 803:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 804:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 805:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 806:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 807:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 808:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 809:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 810:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 811:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 812:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 813:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 814:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED0[1];
 815:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 816:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 817:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 818:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED1[1];
 819:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 820:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 821:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 822:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED2[1];
 823:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 824:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 825:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 826:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 827:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 828:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 829:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 830:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 831:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 832:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 833:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 834:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 835:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 836:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 837:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 838:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 839:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 840:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 841:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 842:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 843:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 844:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 845:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 846:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 847:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 848:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 849:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 850:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 851:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 852:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 853:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 854:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 855:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 856:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 857:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 858:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 859:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 860:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 861:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 862:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 863:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 864:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 865:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 866:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 867:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 868:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 869:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 870:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 871:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 872:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 873:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 874:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 875:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 876:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 877:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 878:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 879:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 880:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 881:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL << DWT_CTRL_CYCCNTENA_Pos)           /*!< DWT CTR
 882:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 883:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 884:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 885:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL << DWT_CPICNT_CPICNT_Pos)           /*!< DWT CPI
 886:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 887:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 888:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 889:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL << DWT_EXCCNT_EXCCNT_Pos)           /*!< DWT EXC
 890:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 891:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 892:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 893:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL << DWT_SLEEPCNT_SLEEPCNT_Pos)       /*!< DWT SLE
 894:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 895:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 896:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 897:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL << DWT_LSUCNT_LSUCNT_Pos)           /*!< DWT LSU
 898:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 899:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 900:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 901:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL << DWT_FOLDCNT_FOLDCNT_Pos)         /*!< DWT FOL
 902:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 903:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 904:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 905:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL << DWT_MASK_MASK_Pos)               /*!< DWT MAS
 906:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 907:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
 908:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 909:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 910:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 911:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 912:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 913:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 914:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 915:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 916:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 917:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 918:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 919:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 920:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 921:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 922:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 923:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 924:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 925:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 926:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 927:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 928:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 929:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 930:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 931:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 932:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 933:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL << DWT_FUNCTION_FUNCTION_Pos)        /*!< DWT FUN
 934:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 935:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 936:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 937:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 938:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 939:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 940:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 941:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
 942:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 943:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 944:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 945:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
 946:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 947:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 948:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 949:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 950:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED0[2];
 951:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 952:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED1[55];
 953:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 954:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED2[131];
 955:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 956:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 957:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 958:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED3[759];
 959:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 960:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 961:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 962:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED4[1];
 963:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 964:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 965:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 966:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED5[39];
 967:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 968:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 969:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED7[8];
 970:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 971:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 972:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
 973:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 974:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 975:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
 976:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL << TPI_ACPR_PRESCALER_Pos)        /*!< TPI ACP
 977:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 978:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
 979:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
 980:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL << TPI_SPPR_TXMODE_Pos)              /*!< TPI SPP
 981:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 982:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
 983:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
 984:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 985:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 986:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
 987:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 988:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 989:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
 990:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 991:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 992:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
 993:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL << TPI_FFSR_FlInProg_Pos)            /*!< TPI FFS
 994:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 995:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
 996:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
 997:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 998:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
 999:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1000:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1001:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1002:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1003:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1004:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL << TPI_TRIGGER_TRIGGER_Pos)          /*!< TPI TRI
1005:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1006:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1007:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1008:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1009:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1010:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1011:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1012:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1013:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1014:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1015:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1016:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1017:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1018:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1019:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1020:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1021:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1022:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1023:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1024:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1025:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1026:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL << TPI_FIFO0_ETM0_Pos)              /*!< TPI FIF
1027:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1028:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1029:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1030:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL << TPI_ITATBCTR2_ATREADY_Pos)        /*!< TPI ITA
1031:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1032:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1033:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1034:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1035:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1036:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1037:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1038:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1039:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1040:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1041:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1042:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1043:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1044:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1045:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1046:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1047:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1048:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1049:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1050:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1051:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1052:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL << TPI_FIFO1_ITM0_Pos)              /*!< TPI FIF
1053:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1054:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1055:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1056:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL << TPI_ITATBCTR0_ATREADY_Pos)        /*!< TPI ITA
1057:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1058:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1059:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1060:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL << TPI_ITCTRL_Mode_Pos)              /*!< TPI ITC
1061:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1062:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1063:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1064:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1065:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1066:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1067:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1068:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1069:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1070:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1071:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1072:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1073:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1074:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1075:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1076:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1077:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1078:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1079:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL << TPI_DEVID_NrTraceInput_Pos)      /*!< TPI DEV
1080:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1081:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1082:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1083:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL << TPI_DEVTYPE_SubType_Pos)          /*!< TPI DEV
1084:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1085:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1086:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1087:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1088:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1089:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1090:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1091:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1)
1092:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
1093:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1094:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1095:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
1096:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1097:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1098:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1099:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1100:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1101:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1102:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1103:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1104:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1105:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1106:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1107:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1108:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1109:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1110:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1111:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1112:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1113:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1114:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1115:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register */
1116:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1117:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1118:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1119:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
1120:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1121:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1122:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1123:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
1124:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1125:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register */
1126:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1127:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1128:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1129:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1130:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1131:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1132:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1133:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
1134:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1135:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register */
1136:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1137:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
1138:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1139:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register */
1140:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1141:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1142:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1143:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1144:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1145:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1146:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1147:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
1148:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1149:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register */
1150:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1151:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1152:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1153:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1154:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1155:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1156:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1157:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1158:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1159:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1160:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1161:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1162:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1163:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1164:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1165:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1166:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1167:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1168:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1169:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1170:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1171:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1172:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1173:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1174:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1175:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1176:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1177:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1178:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
1179:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1180:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1181:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
1182:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1183:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1184:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1)
1185:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
1186:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1187:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1188:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
1189:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1190:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1191:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1192:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1193:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1194:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1195:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****        uint32_t RESERVED0[1];
1196:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1197:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1198:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1199:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1200:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1201:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1202:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1203:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register */
1204:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1205:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1206:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1207:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1208:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1209:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1210:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1211:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1212:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1213:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1214:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1215:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1216:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1217:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1218:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1219:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1220:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1221:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1222:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1223:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1224:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1225:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1226:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1227:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1228:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1229:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
1230:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1231:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register */
1232:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1233:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1234:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1235:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register */
1236:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1237:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1238:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1239:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1240:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1241:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1242:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1243:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1244:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1245:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1246:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1247:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1248:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 */
1249:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1250:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1251:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1252:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1253:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1254:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1255:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1256:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1257:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1258:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1259:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1260:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1261:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1262:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1263:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1264:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1265:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1266:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1267:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1268:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1269:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1270:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1271:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
1272:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1273:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 */
1274:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1275:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1276:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1277:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1278:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1279:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1280:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1281:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1282:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1283:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1284:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
1285:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1286:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1287:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
1288:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1289:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1290:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
1291:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1292:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1293:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
1294:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1295:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1296:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1297:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1298:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1299:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1300:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1301:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1302:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1303:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1304:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1305:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1306:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register */
1307:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1308:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1309:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1310:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1311:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1312:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1313:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1314:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1315:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1316:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1317:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1318:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1319:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1320:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1321:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1322:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1323:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1324:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1325:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1326:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1327:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1328:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1329:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1330:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1331:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1332:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1333:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1334:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1335:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1336:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1337:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1338:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1339:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1340:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1341:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
1342:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1343:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register */
1344:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1345:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1346:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1347:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
1348:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
1349:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1350:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register */
1351:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1352:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1353:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1354:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1355:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1356:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1357:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1358:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1359:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1360:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1361:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1362:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1363:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1364:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1365:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1366:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1367:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1368:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1369:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1370:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1371:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1372:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1373:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1374:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1375:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1376:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1377:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1378:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1379:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1380:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1381:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1382:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1383:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1384:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1385:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1386:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1387:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1388:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
1389:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1390:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1391:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1392:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1393:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup    CMSIS_core_register
1394:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1395:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1396:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   @{
1397:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1398:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1399:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1400:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1401:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1402:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1403:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1404:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1405:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1406:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1407:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1408:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1409:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1410:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1411:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1412:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1413:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1414:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1415:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1416:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1417:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1418:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1)
1419:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1420:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1421:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
1422:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1423:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1)
1424:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1425:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1426:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** #endif
1427:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1428:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1429:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1430:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1431:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1432:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1433:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1434:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1435:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1436:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1437:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1438:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1439:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1440:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1441:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** */
1442:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1443:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1444:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1445:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1446:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1447:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1448:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1449:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     @{
1450:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1451:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1452:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Set Priority Grouping
1453:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1454:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1455:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1456:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   Only values from 0..7 are used.
1457:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   In case of a conflict between priority grouping and available
1458:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1459:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1460:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1461:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1462:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1463:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1464:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1465:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1466:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1467:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1468:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1469:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                 |
1470:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1471:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1472:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1473:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
1474:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1475:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1476:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Get Priority Grouping
1477:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1478:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1479:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1480:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1481:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1482:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1483:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1483 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1484:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
  39              	 .loc 1 1484 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 DB68     	 ldr r3,[r3,#12]
  42 0008 03F4E063 	 and r3,r3,#1792
  43 000c 1B0A     	 lsrs r3,r3,#8
1485:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
  44              	 .loc 1 1485 0
  45 000e 1846     	 mov r0,r3
  46 0010 BD46     	 mov sp,r7
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 13
  49              	 
  50 0012 5DF8047B 	 ldr r7,[sp],#4
  51              	.LCFI3:
  52              	 .cfi_restore 7
  53              	 .cfi_def_cfa_offset 0
  54 0016 7047     	 bx lr
  55              	.L4:
  56              	 .align 2
  57              	.L3:
  58 0018 00ED00E0 	 .word -536810240
  59              	 .cfi_endproc
  60              	.LFE107:
  62              	 .section .text.NVIC_EnableIRQ,"ax",%progbits
  63              	 .align 2
  64              	 .thumb
  65              	 .thumb_func
  67              	NVIC_EnableIRQ:
  68              	.LFB108:
1486:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1487:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1488:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Enable External Interrupt
1489:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1490:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1491:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1492:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1493:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1494:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1495:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
  69              	 .loc 1 1495 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI4:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	.LCFI5:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 7
  84 0006 0346     	 mov r3,r0
  85 0008 FB71     	 strb r3,[r7,#7]
1496:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1497:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
  86              	 .loc 1 1497 0
  87 000a 0849     	 ldr r1,.L6
  88 000c 97F90730 	 ldrsb r3,[r7,#7]
  89 0010 5B09     	 lsrs r3,r3,#5
  90 0012 FA79     	 ldrb r2,[r7,#7]
  91 0014 02F01F02 	 and r2,r2,#31
  92 0018 0120     	 movs r0,#1
  93 001a 00FA02F2 	 lsl r2,r0,r2
  94 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1498:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
  95              	 .loc 1 1498 0
  96 0022 0C37     	 adds r7,r7,#12
  97              	.LCFI7:
  98              	 .cfi_def_cfa_offset 4
  99 0024 BD46     	 mov sp,r7
 100              	.LCFI8:
 101              	 .cfi_def_cfa_register 13
 102              	 
 103 0026 5DF8047B 	 ldr r7,[sp],#4
 104              	.LCFI9:
 105              	 .cfi_restore 7
 106              	 .cfi_def_cfa_offset 0
 107 002a 7047     	 bx lr
 108              	.L7:
 109              	 .align 2
 110              	.L6:
 111 002c 00E100E0 	 .word -536813312
 112              	 .cfi_endproc
 113              	.LFE108:
 115              	 .section .text.NVIC_SetPriority,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	NVIC_SetPriority:
 121              	.LFB114:
1499:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1500:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1501:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Disable External Interrupt
1502:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1503:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1504:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1505:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1506:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1507:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1508:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1509:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1510:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
1511:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1512:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1513:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Get Pending Interrupt
1514:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1515:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1516:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     for the specified interrupt.
1517:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1518:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1519:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1520:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \return             0  Interrupt status is not pending.
1521:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \return             1  Interrupt status is pending.
1522:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1523:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1524:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1525:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1526:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
1527:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1528:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1529:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Set Pending Interrupt
1530:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1531:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function sets the pending bit of an external interrupt.
1532:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1533:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1534:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1535:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1536:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1537:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1538:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
1539:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1540:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1541:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Clear Pending Interrupt
1542:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1543:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function clears the pending bit of an external interrupt.
1544:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1545:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1547:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1548:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1549:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1550:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
1551:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1552:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1553:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Get Active Interrupt
1554:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1555:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1556:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1557:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1558:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1559:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \return             0  Interrupt status is not active.
1560:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \return             1  Interrupt status is active.
1561:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1562:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1563:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1564:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1565:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
1566:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1567:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1568:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Set Interrupt Priority
1569:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1570:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function sets the priority of an interrupt.
1571:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1572:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1573:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1574:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1575:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]  priority  Priority to set.
1576:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1577:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1578:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 122              	 .loc 1 1578 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126              	 
 127 0000 80B4     	 push {r7}
 128              	.LCFI10:
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	.LCFI11:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI12:
 136              	 .cfi_def_cfa_register 7
 137 0006 0346     	 mov r3,r0
 138 0008 3960     	 str r1,[r7]
 139 000a FB71     	 strb r3,[r7,#7]
1579:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   if(IRQn < 0) {
 140              	 .loc 1 1579 0
 141 000c 97F90730 	 ldrsb r3,[r7,#7]
 142 0010 002B     	 cmp r3,#0
 143 0012 0BDA     	 bge .L9
1580:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
 144              	 .loc 1 1580 0
 145 0014 0D49     	 ldr r1,.L11
 146 0016 FB79     	 ldrb r3,[r7,#7]
 147 0018 03F00F03 	 and r3,r3,#15
 148 001c 043B     	 subs r3,r3,#4
 149 001e 3A68     	 ldr r2,[r7]
 150 0020 D2B2     	 uxtb r2,r2
 151 0022 9200     	 lsls r2,r2,#2
 152 0024 D2B2     	 uxtb r2,r2
 153 0026 0B44     	 add r3,r3,r1
 154 0028 1A76     	 strb r2,[r3,#24]
 155 002a 09E0     	 b .L8
 156              	.L9:
1581:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   else {
1582:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
 157              	 .loc 1 1582 0
 158 002c 0849     	 ldr r1,.L11+4
 159 002e 97F90730 	 ldrsb r3,[r7,#7]
 160 0032 3A68     	 ldr r2,[r7]
 161 0034 D2B2     	 uxtb r2,r2
 162 0036 9200     	 lsls r2,r2,#2
 163 0038 D2B2     	 uxtb r2,r2
 164 003a 0B44     	 add r3,r3,r1
 165 003c 83F80023 	 strb r2,[r3,#768]
 166              	.L8:
1583:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
 167              	 .loc 1 1583 0
 168 0040 0C37     	 adds r7,r7,#12
 169              	.LCFI13:
 170              	 .cfi_def_cfa_offset 4
 171 0042 BD46     	 mov sp,r7
 172              	.LCFI14:
 173              	 .cfi_def_cfa_register 13
 174              	 
 175 0044 5DF8047B 	 ldr r7,[sp],#4
 176              	.LCFI15:
 177              	 .cfi_restore 7
 178              	 .cfi_def_cfa_offset 0
 179 0048 7047     	 bx lr
 180              	.L12:
 181 004a 00BF     	 .align 2
 182              	.L11:
 183 004c 00ED00E0 	 .word -536810240
 184 0050 00E100E0 	 .word -536813312
 185              	 .cfi_endproc
 186              	.LFE114:
 188              	 .section .text.NVIC_EncodePriority,"ax",%progbits
 189              	 .align 2
 190              	 .thumb
 191              	 .thumb_func
 193              	NVIC_EncodePriority:
 194              	.LFB116:
1584:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1585:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1586:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Get Interrupt Priority
1587:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1588:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1589:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     number can be positive to specify an external (device specific)
1590:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1591:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1592:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1593:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]   IRQn  Interrupt number.
1594:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1595:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****                         priority bits of the microcontroller.
1596:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1597:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1598:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
1599:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1600:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   if(IRQn < 0) {
1601:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1602:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   else {
1603:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1604:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
1605:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1606:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1607:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Encode Priority
1608:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1609:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1610:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     preemptive priority value, and subpriority value.
1611:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     In case of a conflict between priority grouping and available
1612:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1613:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1614:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1615:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1616:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1617:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1618:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****  */
1619:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1620:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** {
 195              	 .loc 1 1620 0
 196              	 .cfi_startproc
 197              	 
 198              	 
 199              	 
 200 0000 80B4     	 push {r7}
 201              	.LCFI16:
 202              	 .cfi_def_cfa_offset 4
 203              	 .cfi_offset 7,-4
 204 0002 89B0     	 sub sp,sp,#36
 205              	.LCFI17:
 206              	 .cfi_def_cfa_offset 40
 207 0004 00AF     	 add r7,sp,#0
 208              	.LCFI18:
 209              	 .cfi_def_cfa_register 7
 210 0006 F860     	 str r0,[r7,#12]
 211 0008 B960     	 str r1,[r7,#8]
 212 000a 7A60     	 str r2,[r7,#4]
1621:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
 213              	 .loc 1 1621 0
 214 000c FB68     	 ldr r3,[r7,#12]
 215 000e 03F00703 	 and r3,r3,#7
 216 0012 FB61     	 str r3,[r7,#28]
1622:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PreemptPriorityBits;
1623:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t SubPriorityBits;
1624:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1625:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
 217              	 .loc 1 1625 0
 218 0014 FB69     	 ldr r3,[r7,#28]
 219 0016 C3F10703 	 rsb r3,r3,#7
 220 001a 062B     	 cmp r3,#6
 221 001c 28BF     	 it cs
 222 001e 0623     	 movcs r3,#6
 223 0020 BB61     	 str r3,[r7,#24]
1626:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
 224              	 .loc 1 1626 0
 225 0022 FB69     	 ldr r3,[r7,#28]
 226 0024 0633     	 adds r3,r3,#6
 227 0026 062B     	 cmp r3,#6
 228 0028 02D9     	 bls .L14
 229              	 .loc 1 1626 0 is_stmt 0 discriminator 1
 230 002a FB69     	 ldr r3,[r7,#28]
 231 002c 013B     	 subs r3,r3,#1
 232 002e 00E0     	 b .L15
 233              	.L14:
 234              	 .loc 1 1626 0 discriminator 2
 235 0030 0023     	 movs r3,#0
 236              	.L15:
 237              	 .loc 1 1626 0 discriminator 4
 238 0032 7B61     	 str r3,[r7,#20]
1627:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** 
1628:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****   return (
1629:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 239              	 .loc 1 1629 0 is_stmt 1 discriminator 4
 240 0034 BB69     	 ldr r3,[r7,#24]
 241 0036 0122     	 movs r2,#1
 242 0038 02FA03F3 	 lsl r3,r2,r3
 243 003c 013B     	 subs r3,r3,#1
 244 003e 1A46     	 mov r2,r3
 245 0040 BB68     	 ldr r3,[r7,#8]
 246 0042 1A40     	 ands r2,r2,r3
 247 0044 7B69     	 ldr r3,[r7,#20]
 248 0046 9A40     	 lsls r2,r2,r3
1630:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
 249              	 .loc 1 1630 0 discriminator 4
 250 0048 7B69     	 ldr r3,[r7,#20]
 251 004a 0121     	 movs r1,#1
 252 004c 01FA03F3 	 lsl r3,r1,r3
 253 0050 013B     	 subs r3,r3,#1
 254 0052 1946     	 mov r1,r3
 255 0054 7B68     	 ldr r3,[r7,#4]
 256 0056 0B40     	 ands r3,r3,r1
1628:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
 257              	 .loc 1 1628 0 discriminator 4
 258 0058 1343     	 orrs r3,r3,r2
1631:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h ****          );
1632:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003/Libraries/CMSIS/Include\core_cm4.h **** }
 259              	 .loc 1 1632 0 discriminator 4
 260 005a 1846     	 mov r0,r3
 261 005c 2437     	 adds r7,r7,#36
 262              	.LCFI19:
 263              	 .cfi_def_cfa_offset 4
 264 005e BD46     	 mov sp,r7
 265              	.LCFI20:
 266              	 .cfi_def_cfa_register 13
 267              	 
 268 0060 5DF8047B 	 ldr r7,[sp],#4
 269              	.LCFI21:
 270              	 .cfi_restore 7
 271              	 .cfi_def_cfa_offset 0
 272 0064 7047     	 bx lr
 273              	 .cfi_endproc
 274              	.LFE116:
 276 0066 00BF     	 .section .text.XMC_VADC_GROUP_QueueSetGatingMode,"ax",%progbits
 277              	 .align 2
 278              	 .thumb
 279              	 .thumb_func
 281              	XMC_VADC_GROUP_QueueSetGatingMode:
 282              	.LFB195:
 283              	 .file 2 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003\\Libraries\\XMCLib\\inc/xmc_vadc.h"
   1:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
   2:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @date 2015-06-25 
   4:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
   5:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @cond
   6:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** ***************************************************************************************************
   7:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
   9:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * All rights reserved.                        
  11:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                             
  12:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * following conditions are met:   
  14:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                                                              
  15:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * disclaimer.                        
  17:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * 
  18:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * 
  21:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                                                              
  24:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                                                              
  32:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
  35:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  36:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Change History
  37:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * --------------
  38:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  39:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-02-15:
  40:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Initial <br>
  41:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *      
  42:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-02-20:
  43:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  44:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   
  45:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-04-27:
  46:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  47:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  48:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  51:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-06-20:
  52:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  54:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-06-25:
  55:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  56:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  57:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @endcond 
  58:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  59:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
  60:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
  61:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #ifndef XMC_VADC_H
  62:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_H
  63:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
  64:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
  65:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * HEADER FILES
  66:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
  67:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #include <xmc_common.h>
  68:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #include <xmc_scu.h>
  69:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #include <xmc_vadc_map.h>
  70:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
  71:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
  72:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
  73:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @{
  74:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
  75:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
  76:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
  77:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @addtogroup VADC
  78:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
  79:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  80:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
  81:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
  82:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to discrete digital values.
  83:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \if XMC1
  84:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
  85:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * converter.
  86:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \endif
  87:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  88:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
  89:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
  90:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
  91:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  92:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
  93:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
  94:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
  95:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * which together build separate groups.
  96:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  97:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \if XMC4
  98:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image html vadc_overview_xmc4x.png
  99:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image latex ../images/vadc_overview_xmc4x.png 
 100:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \else
 101:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image html vadc_overview_xmc1x.png
 102:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image latex ../images/vadc_overview_xmc1x.png
 103:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \endif
 104:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
 105:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 106:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 107:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <UL>
 108:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 109:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 110:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 111:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 112:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 113:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 114:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 115:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 116:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 117:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * </UL><BR>
 118:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
 119:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 120:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <UL>
 121:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 122:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 123:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 124:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 125:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 126:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 127:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 128:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 129:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 130:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * </UL><BR>
 131:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @{
 132:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 133:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
 134:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
 135:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * MACROS
 136:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
 137:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 138:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41))
 139:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 140:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 141:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 142:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 143:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 144:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 145:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 146:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 147:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 148:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (1U) /*  Defines the need to de-assert the reset to enable
 149:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 150:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 151:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 152:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 153:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 154:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 155:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 156:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC44)
 157:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 158:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 159:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 160:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 161:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 162:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 163:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 164:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 165:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 166:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (1U) /*  Defines the need to de-assert the reset to enable
 167:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 168:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 169:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 170:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 171:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 172:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 173:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 174:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 175:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 176:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 177:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 178:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 179:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 180:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 181:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 182:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 183:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 184:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (1U) /*  Defines the need to de-assert the reset to enable
 185:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (0U) /*  Defines the need to un-gate of clock for peripher
 186:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 187:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 188:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 189:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 190:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 191:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 192:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC13)
 193:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 194:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 195:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 196:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 197:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 198:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 199:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 200:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 201:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 202:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (0U) /*  Defines the need to de-assert the reset to enable
 203:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 204:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 205:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 206:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 207:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 208:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 209:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 210:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC12)
 211:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 212:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 213:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 214:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 215:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 216:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 217:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 218:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 219:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 220:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (0U) /*  Defines the need to de-assert the reset to enable
 221:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 222:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 223:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 224:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 225:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 226:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 227:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 228:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 229:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 230:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 231:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 232:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 233:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 234:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 235:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 236:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 237:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 238:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 239:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     XMC1100 devices */
 240:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (0U) /*  Defines the need to de-assert the reset to enable
 241:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 242:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 243:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/ 
 244:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 245:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 246:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 247:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 248:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 249:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 250:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 251:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 252:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 253:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 254:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 255:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 256:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 257:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
 258:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * ENUMS
 259:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
 260:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 261:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 262:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                              type to VADC type*/
 263:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 264:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 265:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 266:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                              type to VADC Group type*/
 267:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 268:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 269:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 270:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 271:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 272:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 273:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 274:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 275:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 276:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 277:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 278:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 279:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 280:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 281:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 282:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 283:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 284:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  enumeration.
 285:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 286:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 287:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 288:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 289:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 290:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 291:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 292:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 293:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 294:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 295:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 296:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 297:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 298:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 299:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 300:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 301:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 302:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 303:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 304:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 305:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 306:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 307:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 308:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 309:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 310:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 311:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 312:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 313:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 314:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 315:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 316:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 317:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 318:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 319:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 320:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 321:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 322:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 323:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 324:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 325:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 326:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 327:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 328:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 329:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 330:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 331:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 332:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 333:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 334:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 335:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 336:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 337:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 338:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 339:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 340:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 341:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 342:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 343:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 344:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 345:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   
 346:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 347:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 348:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 349:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 350:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 351:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 352:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 353:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 354:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 355:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 356:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 357:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 358:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 359:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 360:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 361:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 362:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 363:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 364:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 365:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 366:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 367:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 368:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 369:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 370:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 371:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 372:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   
 373:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 374:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 375:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 376:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 377:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 378:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 379:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 380:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 381:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 382:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 383:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 384:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 385:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 386:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 387:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 388:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 389:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 390:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 391:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 392:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 393:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 394:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 395:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 396:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 397:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 398:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 399:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 400:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 401:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 402:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 403:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 404:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 405:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 406:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 407:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 408:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 409:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 410:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 411:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 412:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  this enumeration.
 413:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 414:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 415:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 416:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 417:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH ,   /**< Input higher than than programmed reference */
 418:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 419:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 420:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
 421:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 422:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 423:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 424:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 425:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 426:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 427:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 428:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 429:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 430:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 431:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 432:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 433:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 434:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 435:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 436:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 437:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          awaiting conversion */
 438:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 439:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          previous set */
 440:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 441:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 442:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 443:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 444:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 445:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 446:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 447:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 448:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 449:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 450:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 451:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 452:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 453:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 454:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 455:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 456:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 457:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 458:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 459:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 460:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 461:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 462:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 463:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 464:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 465:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 466:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 467:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 468:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 469:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 470:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 471:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 472:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 473:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 474:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 475:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 476:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 477:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 478:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 479:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 480:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 481:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 482:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 483:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 484:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 485:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 486:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 487:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 488:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 489:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 490:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 491:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 492:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 493:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 494:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 495:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 496:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 497:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 498:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 499:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 500:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
 501:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 502:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 503:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * enumeration.
 504:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 505:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 506:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 507:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 508:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 509:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 510:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
 511:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 512:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 513:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * enumeration.
 514:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 515:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 516:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 517:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 518:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 519:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 520:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
 521:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 522:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 523:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 524:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 525:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 526:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 527:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 528:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 529:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 530:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 531:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 532:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 533:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 534:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 535:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 536:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 537:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 538:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 539:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 540:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 541:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 542:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 543:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  enumeration.
 544:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 545:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 546:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 547:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 548:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 549:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 550:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 551:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 552:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 553:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 554:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 555:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 556:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 557:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 558:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                           request sources */
 559:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 560:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 561:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 562:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 563:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 564:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 565:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 566:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 567:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 568:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 569:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 570:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 571:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 572:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 573:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 574:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 575:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 576:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 577:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 578:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 579:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 580:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 581:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 582:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 583:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 584:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 585:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 586:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 587:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 588:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 589:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 590:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 591:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 592:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 593:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 594:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 595:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 596:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 597:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 598:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 599:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 600:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 601:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 602:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 603:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 604:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 605:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 606:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 607:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 608:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GROUP_RS_PRIORITY_t;
 609:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 610:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 611:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 612:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 613:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 614:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 615:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 616:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 617:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level
 618:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level
 619:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 620:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 621:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 622:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 623:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 624:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 625:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 626:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 627:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 628:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 629:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_SELECT_t;
 630:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 631:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 632:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 633:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 634:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 635:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 636:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 637:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_0   = 0,
 638:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_1,
 639:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2)
 640:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_2,
 641:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_3
 642:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 643:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GROUP_INDEX_t;
 644:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 645:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 646:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** * Defines channel alias.
 647:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 648:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** */
 649:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 650:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 651:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 652:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 653:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 654:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 655:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 656:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 657:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 658:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 659:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 660:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 661:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 662:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 663:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 664:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 665:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 666:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 667:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 668:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 669:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 670:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 671:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 672:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_SHS_GAIN_LEVEL_t;
 673:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 674:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 675:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 676:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 677:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 678:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 679:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 680:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 681:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_SHS_LOOP_CH_t;
 682:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 683:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 684:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 685:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 686:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 687:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 688:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 689:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 690:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 691:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 692:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 693:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 694:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 695:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 696:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 697:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 698:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 699:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 700:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 701:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 702:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 703:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 704:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 705:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 706:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 707:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_NODE_t;
 708:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 709:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
 710:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * DATA STRUCTURES
 711:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
 712:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 713:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if defined(__CC_ARM)
 714:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma push
 715:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma anon_unions
 716:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #elif defined(__TASKING__)
 717:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma warning 586
 718:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 719:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 720:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 721:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 722:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 723:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 724:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 725:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 726:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 727:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 728:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion
 729:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 730:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 731:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 732:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 733:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 734:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 735:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 736:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as 
 737:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 738:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 739:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 740:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 741:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 742:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 743:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 744:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 745:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 746:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 747:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 748:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 749:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 750:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 751:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 8;
 752:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant s
 753:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       activated or not.*/
 754:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 3;
 755:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 756:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t asctrl;
 757:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 758:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 759:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 760:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 761:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 762:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                    : 2;
 763:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trig
 764:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conv
 765:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion
 766:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 767:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_L
 768:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                    : 26;
 769:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 770:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t asmr;
 771:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 772:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 773:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 774:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 775:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 776:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                  structure for background Request S
 777:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 778:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 779:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 780:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 781:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 782:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 783:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 784:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 785:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 786:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 787:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t input_class                : 2;  /**< Input conversion class selection.
 788:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 789:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                            : 2;
 790:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bo
 791:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 792:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bo
 793:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 794:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 795:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 796:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the con
 797:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either V
 798:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 799:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                            : 4;
 800:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t result_reg_number          : 4;  /**< Group result register number */
 801:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t use_global_result          : 1;  /**< Use global result register for background 
 802:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t result_alignment           : 1;  /**< Alignment of the results read in the resul
 803:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 804:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                            : 6;
 805:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor 
 806:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 807:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacito
 808:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 809:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t chctr;
 810:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 811:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 812:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 813:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 814:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 815:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 8;
 816:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 817:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should
 818:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 819:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should
 820:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 821:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should
 822:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 823:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should
 824:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 825:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 826:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 4;
 827:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 828:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 4;
 829:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 830:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 831:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 832:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 833:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 834:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 835:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 836:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the speci
 837:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the speci
 838:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the speci
 839:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the speci
 840:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 841:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 12;
 842:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 843:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t bfl;
 844:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 845:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 846:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 847:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 848:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 849:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 850:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 
 851:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 852:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 
 853:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 854:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 
 855:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 856:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 
 857:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 858:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t                           : 16;
 859:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 860:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t bflc;
 861:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 862:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 863:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     bool    channel_priority;  /**< Only non priority channels can be converted by Background Reque
 864:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (whi
 865:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 866:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 867:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 868:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 869:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 870:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 871:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 872:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 873:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 874:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 875:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 876:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 877:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 878:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<B
 879:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back in
 880:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 881:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trig
 882:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                    : 24;
 883:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 884:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 885:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t qinr0;
 886:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 887:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 888:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 889:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 890:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 891:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 892:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 893:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 894:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 895:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 896:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 897:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC
 898:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 899:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 900:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 901:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 902:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 903:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as
 904:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 905:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 906:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 907:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 908:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 909:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 910:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 911:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
 912:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 913:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
 914:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
 915:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 916:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 917:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
 918:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 8;
 919:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be
 920:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 3;
 921:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 922:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t qctrl0;
 923:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 924:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 925:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 926:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 927:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 928:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                   : 2;
 929:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
 930:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                   : 29;
 931:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 932:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t qmr0;
 933:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 934:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
 935:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 936:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 937:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 938:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
 939:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  conversion Mode.
 940:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 941:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
 942:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 943:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 944:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 945:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 946:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 947:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
 948:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 949:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
 950:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
 951:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 952:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
 953:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 954:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
 955:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 956:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
 957:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
 958:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 959:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
 960:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 961:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 16;
 962:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 963:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 964:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globiclass;
 965:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 966:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
 967:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 968:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
 969:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 970:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
 971:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 972:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
 973:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 974:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 975:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 976:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 977:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 978:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 979:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 
 980:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 2;
 981:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter 
 982:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Ra
 983:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 5;
 984:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 17;
 985:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 986:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globcfg;
 987:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 988:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
 989:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 990:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 991:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
 992:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 993:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
 994:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 995:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
 996:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 997:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 998:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 999:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1000:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1001:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1002:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1003:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1004:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1005:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1006:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globbound;
1007:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1008:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1009:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1010:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1011:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0
1012:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1
1013:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1014:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1015:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1016:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1017:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 16;
1018:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1019:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
1020:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be ov
1021:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       result register until the previous value is r
1022:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 6;
1023:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1024:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1025:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globrcr;
1026:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1027:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1028:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1029:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1030:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1031:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1032:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                             : 2;
1033:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sl
1034:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                             : 28;
1035:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1036:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t clc;
1037:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1038:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1039:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1040:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1041:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1042:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1043:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  conversion Mode.
1044:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1045:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1046:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1047:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1048:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1049:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1050:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1051:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1052:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1053:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
1054:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1055:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1056:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
1057:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1058:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1059:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
1060:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1061:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1062:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
1063:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1064:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_iclass0;
1065:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1066:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1067:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1068:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1069:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1070:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1071:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1072:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1073:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1074:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1075:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1076:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1077:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1078:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC w
1079:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1080:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1081:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 13;
1082:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1083:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected.
1084:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
1085:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected.
1086:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 5;
1087:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1088:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Ste
1089:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1090:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC
1091:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external
1092:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1093:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b con
1094:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1095:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 1;
1096:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
1097:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 2;
1098:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1099:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1100:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_emuxctr;
1101:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1102:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1103:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1104:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1105:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1106:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1107:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1108:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1109:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1110:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1111:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1112:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[
1113:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[
1114:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1115:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1116:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1117:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1118:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1119:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1120:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1121:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1122:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1123:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_bound;
1124:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1125:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1126:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1127:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1128:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1129:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 4;
1130:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1131:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 1;
1132:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode
1133:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1134:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 24;
1135:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1136:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_arbcfg;
1137:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1138:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1139:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1140:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1141:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1142:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1143:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1144:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1145:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1146:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1147:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1148:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1149:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1150:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 16;
1151:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1152:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_V
1153:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       For normal operation select
1154:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1155:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1156:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 2;
1157:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous resu
1158:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIF
1159:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
1160:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1161:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1162:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_rcr;
1163:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1164:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1165:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1166:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1167:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1168:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1169:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1170:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1171:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1172:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   union
1173:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   {
1174:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     struct
1175:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1176:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step0            :3;  /**< Select a Sample and hold unit for the stepper's s
1177:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1178:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step0             :1;  /**< Should the step be added to the sequence */
1179:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step1            :3;  /**< Select a Sample and hold unit for the stepper's s
1180:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1181:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step1             :1;  /**< Should the step be added to the sequence */
1182:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step2            :3;  /**< Select a Sample and hold unit for the stepper's s
1183:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1184:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step2             :1;  /**< Should the step be added to the sequence */
1185:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step3            :3;  /**< Select a Sample and hold unit for the stepper's s
1186:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1187:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step3             :1;  /**< Should the step be added to the sequence */
1188:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step4            :3;  /**< Select a Sample and hold unit for the stepper's s
1189:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1190:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step4             :1;  /**< Should the step be added to the sequence */
1191:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step5            :3;  /**< Select a Sample and hold unit for the stepper's s
1192:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1193:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step5             :1;  /**< Should the step be added to the sequence */
1194:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step6            :3;  /**< Select a Sample and hold unit for the stepper's s
1195:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1196:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step6             :1;  /**< Should the step be added to the sequence */
1197:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step7            :3;  /**< Select a Sample and hold unit for the stepper's s
1198:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1199:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step7             :1;  /**< Should the step be added to the sequence */
1200:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1201:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1202:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t stepcfg;
1203:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   };
1204:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1205:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1206:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1207:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1208:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1209:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1210:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1211:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   union
1212:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   {
1213:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     struct
1214:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1215:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t shs_clock_divider        :4; /**< The divider value for the SHS clock. Range: [0x0 t
1216:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t                          :6;
1217:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t analog_reference_select  :2; /**< It is possible to different reference voltage for 
1218:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                  Accepts ::XMC_VADC_GLOBAL_SHS_AREF_t */
1219:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t                          :20;
1220:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1221:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t shscfg;
1222:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   };
1223:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1224:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1225:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1226:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CONFIG_t;
1227:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1228:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1229:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1230:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if defined(__CC_ARM)
1231:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma pop
1232:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #elif defined(__TASKING__)
1233:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma warning restore
1234:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1235:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
1236:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * static inline functions
1237:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
1238:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1239:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U) 
1240:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1241:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1242:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1243:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr =
1244:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #else
1245:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1246:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1247:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1248:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1249:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
1250:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * API Prototypes
1251:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
1252:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1253:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #ifdef __cplusplus
1254:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** extern "C" {
1255:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1256:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1257:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1258:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param None
1259:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1260:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1261:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1262:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1263:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1264:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1265:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1266:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1267:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1268:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1269:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1270:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1271:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1272:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1273:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1274:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1275:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param None
1276:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1277:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1278:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1279:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1280:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1281:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1282:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1283:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1284:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1285:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1286:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1287:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1288:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1289:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1290:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1291:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1292:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1293:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1294:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1295:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1296:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1297:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1298:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1299:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1300:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1301:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1302:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the configurations later in the program.
1303:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1304:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1305:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1306:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1307:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1308:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1309:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1310:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1311:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1312:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1313:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1314:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1315:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1316:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1317:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * register to enable.
1318:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1319:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1320:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1321:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1322:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1323:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1324:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1325:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1326:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1327:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1328:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1329:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1330:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1331:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1332:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1333:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1334:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1335:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1336:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1337:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1338:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1339:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1340:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1341:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1342:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1343:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1344:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1345:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1346:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1347:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1348:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1349:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1350:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1351:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1352:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1353:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1354:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1355:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1356:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1357:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1358:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1359:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1360:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1361:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1362:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1363:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1364:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1365:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1366:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1367:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1368:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1369:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1370:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1371:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1372:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1373:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1374:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1375:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1376:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1377:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1378:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1379:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1380:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1381:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1382:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1383:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1384:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1385:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1386:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1387:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1388:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1389:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1390:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1391:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1392:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1393:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1394:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1395:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1396:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1397:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1398:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1399:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1400:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1401:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1402:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1403:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1404:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1405:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1406:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1407:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1408:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1409:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1410:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1411:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1412:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1413:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1414:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1415:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1416:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1417:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1418:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1419:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1420:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1421:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1422:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1423:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1424:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1425:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1426:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1427:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1428:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1429:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1430:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1431:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1432:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1433:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1434:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1435:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
1436:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1437:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1438:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1439:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1440:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1441:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1442:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1443:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1444:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1445:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1446:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1447:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1448:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1449:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1450:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1451:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1452:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1453:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1454:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1455:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1456:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
1457:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  {
1458:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1459:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1460:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1461:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1462:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  }
1463:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  
1464:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1465:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1466:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1467:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1468:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1469:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1470:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1471:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1472:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1473:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1474:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1475:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1476:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1477:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1478:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1479:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1480:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1481:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1482:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1483:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1484:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1485:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1486:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1487:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1488:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1489:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1490:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1491:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1492:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1493:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * calibration feature at runtime.
1494:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1495:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1496:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1497:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1498:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1499:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1500:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1501:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1502:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1503:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1504:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1505:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1506:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1507:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1508:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1509:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1510:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1511:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1512:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1513:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1514:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1515:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1516:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1517:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1518:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1519:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1520:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1521:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1522:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1523:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1524:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1525:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1526:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1527:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1528:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1529:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1530:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1531:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1532:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1533:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1534:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1535:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1536:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1537:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1538:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1539:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1540:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1541:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1542:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1543:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1544:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1545:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1546:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1547:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1548:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1549:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1550:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1551:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1552:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1553:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1554:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1555:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1556:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1557:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1558:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1559:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1560:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1561:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1562:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1563:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1564:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1565:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1566:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1567:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1568:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1569:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1570:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
1571:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1572:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1573:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1574:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1575:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1576:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1577:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1578:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1579:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1580:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1581:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1582:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1583:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1584:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1585:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1586:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1587:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1588:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1589:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1590:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1591:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1592:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1593:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1594:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1595:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \b emuxif.
1596:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1597:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1598:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1599:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1600:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1601:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1602:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1603:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1604:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1605:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1606:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1607:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1608:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1609:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1610:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1611:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1612:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1613:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1614:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1615:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1616:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1617:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1618:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1619:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1620:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1621:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  return(global_ptr->GLOBRES);
1622:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1623:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1624:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1625:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1626:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1627:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1628:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return XMC_VADC_RESULT_SIZE_t 16 bit result register value.<BR>
1629:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *         Range[0x0 - 0X0FFF]
1630:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1631:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1632:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Retrieves the conversion result from the global result register associated with the \a global_pt
1633:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * lightweight version of XMC_VADC_GLOBAL_GetDetailedResult(). The behavior is exactly the same, ju
1634:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * only the 16 bit numeric result returned back to the application instead of the complete GLOBRES 
1635:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1636:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1637:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetDetailedResult()
1638:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1639:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GLOBAL_GetResult(XMC_VADC_GLOBAL_t *const global_pt
1640:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1641:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetResult:Wrong Module Pointer", (global_ptr == VADC))
1642:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1643:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)global_ptr->GLOBRES);
1644:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1645:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1646:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1647:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1648:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1649:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param compare_val Compare value which the result of a conversion will be compared against.
1650:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *         <BR>Range[0x0 - 0X0FFF]
1651:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1652:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1653:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1654:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1655:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Set compare value in the global result register for fast compare mode.\n\n The result of a conve
1656:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * be compared to the compare value entered as part of \a compare_val. The prerequisite is that the
1657:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * with this global register must select an ICLASS which has the conversion mode configured as fast
1658:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @ref XMC_VADC_GLOBAL_GetCompareResult() after this API to
1659:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1660:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1661:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1662:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1663:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
1664:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1665:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1666:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1667:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1668:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return compare high or low. Refer @ref XMC_VADC_FAST_COMPARE_t enum
1669:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1670:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1671:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1672:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1673:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines the result of fast compare operation.\n\n This API returns the result of fast compare
1674:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the valid flag in the global result register GLOBRES is set.
1675:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1676:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1677:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1678:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1679:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr);
1680:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1681:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1682:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1683:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr         Constant pointer to the VADC module
1684:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param event_type   Desired event that must be manually asserted
1685:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1686:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1687:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1688:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1689:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts an event that can lead to an interrupt.\n\n This API manually asserts the reque
1690:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * (Background request source event or a global result event) by setting the GLOBEVFLAG register wi
1691:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \a event_type.
1692:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1693:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1694:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1695:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1696:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1697:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_TriggerEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32
1698:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1699:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Module Pointer", (global_ptr == VADC))
1700:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Global Event", 
1701:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1702:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1703:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= event_type;
1704:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1705:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1706:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1707:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1708:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1709:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param event_type Event that must be acknowledged
1710:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1711:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1712:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1713:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1714:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1715:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges an event that has been asserted manually or automatically.\n\n This API acknowledge
1716:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * by clearing GLOBEFLAG sticky flag.
1717:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1718:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1719:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1720:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1721:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClearEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t
1722:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1723:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Module Pointer", (global_ptr == VADC))
1724:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Global Event", 
1725:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1726:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1727:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= ((uint32_t)(event_type << (uint32_t)16));
1728:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1729:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1730:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1731:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1732:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1733:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr The service request to which the global result event is connected. Refer @ref XMC_VADC
1734:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1735:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1736:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1737:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1738:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Binds the global result event to one of the 4 shared service requests.\n\n This API binds the g
1739:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  to one of the 4 module wide shared service requests .Sets GLOBEVNP register with the correspond
1740:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1741:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1742:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode()
1743:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1744:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
1745:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1746:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1747:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1748:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1749:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr The service request to which the global request source event is connected. Refer @ref 
1750:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1751:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1752:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1753:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1754:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Binds the background request source event to one of the 4 shared service requests.\n\n This API 
1755:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request source event to one of the 4 module wide shared service requests. Sets GLOBEVNP register
1756:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * corresponding \a sr line.
1757:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1758:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1759:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SetResultEventInterruptNode()
1760:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1761:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
1762:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1763:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1764:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1765:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1766:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  config Struct consisting of various SHS related configurations.
1767:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1768:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1769:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1770:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1771:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure the basic SHS parameters.<BR>\n
1772:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would initialize the clock divider configuration, the analog reference selection and
1773:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the calibration order for the Sample and Hold unit.
1774:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1775:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1776:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1777:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1778:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONF
1779:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1780:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  /**
1781:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1782:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * @param  config Struct consisting of various step configurations.
1783:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1784:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * @return None
1785:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1786:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1787:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * Configures the stepper sequence for the converter.<BR>\n
1788:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * Stepper of the SHS can be configured to take up a specific sequence of groups for conversion.
1789:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * The stepper sequence is configured using this API.
1790:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1791:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1792:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * None.
1793:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   */
1794:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetStepperSequence(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1795:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                              const XMC_VADC_GLOBAL_SHS_STEP_CONFIG_
1796:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  {
1797:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1798:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1799:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong config pointer",
1800:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (config == (XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t*)NULL))
1801:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1802:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->STEPCFG = (uint32_t) config->stepcfg;
1803:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  }
1804:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1805:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1806:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  /**
1807:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1808:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1809:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * @return bool returns true if the analog converter is operable
1810:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   *              returns false if the analog converter is powered down
1811:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1812:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1813:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * Returns the converter status.<BR>\n
1814:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * Returns the ANRDY bit field of the SHSCFG register.
1815:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1816:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1817:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * None.
1818:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   */
1819:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  __STATIC_INLINE bool XMC_VADC_GLOBAL_SHS_IsConverterReady(XMC_VADC_GLOBAL_SHS_t *const shs_ptr)
1820:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  {
1821:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_IsConverterReady:Wrong SHS Pointer",(shs_ptr == (XMC_VADC_GLOBAL_
1822:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1823:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return((bool)((shs_ptr->STEPCFG >> (uint32_t)SHS_SHSCFG_ANRDY_Pos) & (uint32_t)0x1));
1824:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  }
1825:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1826:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1827:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1828:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1829:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
1830:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1831:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1832:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1833:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1834:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1835:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
1836:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * this mode the ADC module will convert the input depending on the value stored in the SST bit of 
1837:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would configure the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1838:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1839:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1840:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1841:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1842:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP_
1843:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1844:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1845:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1846:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be disabled.<BR>Range: [0x
1847:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1848:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1849:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1850:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1851:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1852:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is needed when a switch from accelerated mode to compatible mode of conversion is neede
1853:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would clear the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1854:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1855:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1856:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1857:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1858:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP
1859:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1860:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1861:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1862:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
1863:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sst_value Value of short sample time that needs to be configured.<BR>
1864:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                  Range: [0x0 to 0x3F]
1865:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1866:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1867:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1868:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1869:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the Accelerated timing mode sample time.<BR>\n
1870:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
1871:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Accelerated mode the ADC module will convert the input depending on the value stored in the SST 
1872:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  SHS0_TIMCFGx. This API would configure the shot sample time either in SHS0_TIMCFG0.SST or SHS0_
1873:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1874:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1875:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1876:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1877:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1878:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                             XMC_VADC_GROUP_INDEX_t group_num,
1879:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                             uint8_t sst_value);
1880:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1881:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1882:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1883:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1884:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  divs_value The clock divider value that is possible
1885:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    <BR>Range:[0x0 to 0xF]
1886:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1887:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1888:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1889:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure Sample and hold clock divider value.<BR>\n
1890:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would initialize the clock divider configuration. This determines the frequency of conversio
1891:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * of the Sample and hold converter.
1892:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1893:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1894:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1895:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1896:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetClockDivider(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, uint
1897:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1898:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong SHS Pointer",
1899:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1900:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong divide factor selected",
1901:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (divs_value < (uint32_t)0x10))
1902:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1903:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->SHSCFG =  (shs_ptr->SHSCFG & (~(uint32_t)SHS_SHSCFG_DIVS_Msk)) | (uint32_t)SHS_SHSCFG_SC
1904:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  ((uint32_t)divs_value << SHS_SHSCFG_DIVS_Pos) | (uint32_t)SHS_SHSCFG_SCWC_Msk
1905:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1906:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1907:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1908:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1909:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  gain_value gain value possible
1910:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    Range:[0x0 to 0x3]
1911:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1912:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  ch_num The channel number for which the gain has to be configured
1913:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1914:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1915:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1916:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure the gain value for SHS.<BR>\n
1917:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would set the gain factor for a selected channel.
1918:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1919:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1920:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1921:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1922:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1923:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                        uint8_t gain_value,
1924:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                        XMC_VADC_GROUP_INDEX_t group_num,
1925:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                        uint8_t ch_num);
1926:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1927:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1928:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1929:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1930:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  max_calibration_time calibration time
1931:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                              Range:[0x0 to 0x3F]
1932:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1933:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1934:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1935:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure the Maximum calibration timing.<BR>\n
1936:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would initialize the Maximum time after which the calibration should occur. If no adc conver
1937:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * occur during this duration then the calibration would run irrespective of conversions. The max t
1938:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * converter can go without a calibration is set in this API.
1939:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1940:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1941:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1942:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1943:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetMaxCalTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1944:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                        uint32_t max_calibration_time)
1945:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
1946:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetMaxCalTime:Wrong SHS Pointer",
1947:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1948:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1949:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALMAX_Msk);
1950:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->CALCTR |=  ((uint32_t)max_calibration_time << SHS_CALCTR_CALMAX_Pos);
1951:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
1952:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1953:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1954:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1955:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1956:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1957:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1958:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1959:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1960:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enable the Gain and offset calibration.<BR>\n
1961:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enable the gain and offset calibration for all the Sample and hold units.
1962:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1963:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1964:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()<BR>.
1965:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1966:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1967:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          XMC_VADC_GROUP_INDEX_t group_num);
1968:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1969:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1970:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1971:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1972:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1973:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1974:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1975:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the Gain and offset calibration.<BR>\n
1976:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the gain and offset calibration for all the Sample and hold units.
1977:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1978:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1979:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
1980:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1981:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1982:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                           XMC_VADC_GROUP_INDEX_t group_num);
1983:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
1984:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1985:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1986:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1987:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
1988:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1989:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1990:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1991:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Read the calibration value for the selected gain level.<BR>\n
1992:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would return the offset calibration val
1993:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * selected gain level. This is applicable for all the channels in the group that use the particula
1994:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1995:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1996:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()<BR>.
1997:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1998:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1999:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
2000:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level);
2001:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2002:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2003:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2004:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2005:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2006:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  offset_calibration_value The offset calibration value to be set.
2007:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2008:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2009:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2010:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Set the calibration value for the selected gain level.<BR>\n
2011:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would set the offset value of the selec
2012:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2013:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2014:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()<BR>.
2015:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2016:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2017:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
2018:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
2019:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                    uint8_t offset_calibration_value);
2020:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2021:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2022:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2023:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  XMC_VADC_GROUP_INDEX_t The Group number for which the configurations applies
2024:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2025:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  ch_num Channel number for which the configurations applies
2026:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2027:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2028:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2029:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the delta sigma loop of the SHS.<BR>\n
2030:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * There are 2 Delta-Sigma loops that can be configured. This API would configure the loop (loop_se
2031:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * with the appropriate group_num and channel_num.
2032:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the SHS_LOOP bit fields.
2033:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2034:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2035:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()<BR>.
2036:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2037:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2038:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                            XMC_VADC_GROUP_INDEX_t group_num,
2039:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
2040:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                            uint8_t ch_num);
2041:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2042:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2043:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2044:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2045:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2046:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2047:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2048:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enable the selected Delta-Sigma loop.<BR>\n
2049:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2050:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2051:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2052:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2053:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2054:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2055:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2056:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               XMC_VADC_SHS_LOOP_CH_t loop_select)
2057:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2058:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong SHS Pointer",
2059:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2060:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2061:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2062:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2063:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->LOOP |= (uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select;
2064:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2065:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2066:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2067:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2068:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2069:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2070:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2071:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2072:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the selected delta sigma loop.<BR>\n
2073:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2074:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2075:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2076:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2077:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2078:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2079:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr
2080:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                XMC_VADC_SHS_LOOP_CH_t loop_select)
2081:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2082:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong SHS Pointer",
2083:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2084:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2085:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2086:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2087:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->LOOP &= ~((uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select);
2088:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2089:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2090:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2091:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2092:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2093:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2094:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2095:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group.
2096:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config Pointer to the initialization data structure
2097:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2098:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2099:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2100:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2101:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the VADC group module with the associated configuration structure pointed by \a conf
2102:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * initializes the group specified as part of the \group_ptr. It initializes group conversion class
2103:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * configuration , boundary configuration by setting GxICLASS,GxARBCFG,GxBOUND, registers. It also
2104:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * configures the EMUX control register if applicable. Refer related API's to change the configurat
2105:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  program.
2106:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2107:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2108:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_InputClassInit()<BR>
2109:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetPowerMode()<BR>
2110:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetBoundaries()<BR>
2111:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ExternalMuxControlInit()<BR>
2112:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2113:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_Init(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config);
2114:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2115:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2116:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2117:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group.
2118:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  group related conversion class parameter structure
2119:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param conv_type Use direct channels or EMUX channels. Refer @ref XMC_VADC_GROUP_CONV_t enum
2120:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
2121:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                Range[0x0, 0x1]
2122:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2123:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2124:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2125:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2126:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc group resource associated with \a config structure. It 
2127:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
2128:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the G_ICLASS register specified by \a set_num with the required settings.
2129:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2130:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2131:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2132:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_Init()
2133:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2134:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2135:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
2136:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
2137:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2138:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2139:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2140:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC Group which must be set as a slave
2141:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param master_grp The master group number<BR>
2142:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2143:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param slave_group The slave group number<BR>
2144:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2145:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2146:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2147:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2148:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2149:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures a VADC Group as a slave group.\n\n Conversion of identically numbered channels across
2150:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2151:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is the
2152:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * master group while Groups-0 and 3 are the slave groups. It uses the SYNCCTR register for the con
2153:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2154:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2155:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetSyncMaster()<BR>
2156:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR>
2157:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableChannelSyncRequest()<BR>
2158:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2159:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2160:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
2161:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2162:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2163:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2164:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2165:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param power_mode  Desired power mode
2166:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2167:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2168:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2169:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2170:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the power mode of a VADC group.\n\n For a VADC group to actually convert an analog si
2171:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * converter must be turned on.
2172:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2173:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2174:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2175:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2176:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
2177:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2178:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2179:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2180:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2181:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2182:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2183:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2184:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2185:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures a VADC Group as a master group.<BR>\n
2186:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Conversion of identically numbered channels across groups can be
2187:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2188:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is therefore the mast
2189:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Groups-0 and 3 are the slave groups.
2190:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2191:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2192:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2193:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2194:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr);
2195:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2196:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2197:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2198:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2199:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2200:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0x3]
2201:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2202:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2203:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2204:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the ready signal for master group.<BR>\n
2205:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would read the \b slave_group number and determine which EVAL configuration to apply fo
2206:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * slave set. Checks the readiness of slaves in synchronized conversions. Conversion of identically
2207:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * across groups can be synchronized. For example, when the trigger to convert CH-1 of Group-2 is r
2208:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * possible to simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this ex
2209:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * therefore the master group while Groups-0 and 3 are the slave groups. Before the master can requ
2210:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * for synchronized conversion, it has the option of checking the readiness of the slaves.
2211:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2212:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2213:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()
2214:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2215:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2216:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2217:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2218:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2219:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the master VADC Group
2220:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2221:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2222:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2223:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2224:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Clears the ready signal for master group.<BR>\n
2225:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Ignores the readiness of slaves in synchronized conversions.This API would read the \b slave_gro
2226:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * determine which EVAL configuration to apply for the given master slave set. Then clears the conf
2227:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is called when the master should issue the conversion request without waiting for the s
2228:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * assert a ready signal. The ready signal is asserted by the slave group(s) when the conversion is
2229:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * in these channels.
2230:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2231:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2232:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()<BR>
2233:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2234:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2235:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2236:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2237:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2238:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the master VADC Group
2239:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num  Channel whose conversion triggers conversion in slave groups
2240:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2241:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2242:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2243:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up a channel for synchronized conversion.\n\n Conversion of identically numbered channels a
2244:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * can be synchronized. For example, when the trigger to
2245:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * convert CH-1 of Group-2 is received, it is possible to simultaneously request conversion of CH-1
2246:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Group-3. Group-2 in this example is therefore the master group while Groups-0 and 3 are the slav
2247:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Before the master can request its slaves for synchronized conversion, it has the option of check
2248:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * of the slaves.
2249:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2250:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2251:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2252:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2253:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
2254:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2255:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2256:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2257:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2258:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     Channel whose conversion triggers conversion in slave groups
2259:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2260:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2261:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2262:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the synchronization request for the particular channel specified as ch_num. To enable th
2263:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * call the API @ref XMC_VADC_GROUP_EnableChannelSyncRequest().
2264:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2265:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2266:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2267:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2268:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
2269:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2270:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2271:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2272:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2273:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2274:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return retuns IDLE if converter is free else returns busy. Refer @ref XMC_VADC_GROUP_STATE_t en
2275:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2276:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2277:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Checks the live status of the analog to digital converter. The converter can either idle doing n
2278:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sampling + converting.
2279:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2280:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2281:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2282:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2283:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr);
2284:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2285:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2286:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2287:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group whose global boundary registers are to be pr
2288:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>
2289:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2290:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>
2291:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2292:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2293:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2294:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2295:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2296:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
2297:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
2298:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
2299:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
2300:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * G_BOUND1 who will derive their values from this palette.
2301:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2302:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2303:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2304:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2305:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2306:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, 
2307:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                   const uint32_t boundary0, 
2308:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                   const uint32_t boundary1);
2309:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2310:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2311:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2312:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr_num   The service request number (0 through 3)
2313:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param type     IRQ type (Kernel specific interrupt vs Module wide shared interrupt )
2314:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2315:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2316:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2317:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Activates a Service Request line(manually trigger).<BR>\n
2318:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * VADC provides few SR lines for each group and a few more which is shared across all the groups.
2319:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * These SR lines can be connected to an NVIC node which in-turn would generate an interrupt.
2320:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would manually trigger the given SR line. Could be used for evaluation and testing purp
2321:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2322:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2323:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2324:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2325:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr, 
2326:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                           const uint32_t sr_num, 
2327:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_IRQ_t type);
2328:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2329:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2330:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2331:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
2332:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param emux_cfg   EMUX configuration structure
2333:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2334:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2335:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2336:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures group EMUX parameters associated with the \a emux_cfg configuration structure.\n\n An
2337:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * interface allows additional channels to be connected to a VADC group. The conversion properties
2338:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * of such channels can be different from the standard channels which are directly connected to the
2339:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API configures conversion properties of channels connected via EMUX interface.
2340:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2341:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2342:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2343:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2344:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ExternalMuxControlInit(XMC_VADC_GROUP_t *const group_ptr,
2345:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                            const XMC_VADC_GROUP_EMUXCFG_t emux_cfg)
2346:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2347:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   uint32_t   emux_config;
2348:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2349:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ExternalMuxControlInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2350:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2351:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.starting_external_channel << (uint32_t)VADC_G_EMUXCTR_EMUXSET_P
2352:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
2353:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2354:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->EMUXCTR  = emux_config;
2355:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
2356:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.emux_mode  << (uint32_t)VADC_G_EMUXCTR_EMUXMODE_Pos)|
2357:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
2358:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2359:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
2360:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config |= ((uint32_t)emux_cfg.emux_channel_select_style << (uint32_t)VADC_G_EMUXCTR_EMXCSS_P
2361:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2362:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->EMUXCTR  |= (emux_config | ((uint32_t)VADC_G_EMUXCTR_EMXWC_Msk)) ;
2363:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2364:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2365:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
2366:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2367:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2368:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2369:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr    Service Request Id
2370:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary_flag_num The Boundary flag for which the interrupt node needs to be configured.
2371:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                          Range: [0x0 to 0x3]
2372:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2373:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2374:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2375:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2376:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Connects the boundary event to the SR line of VADC or to a common boundary flag.<BR>\n
2377:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a boundary event. Hence to get a interrupt o
2378:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2379:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * field GxBFLNP.BFLxNP.
2380:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2381:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2382:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2383:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2384:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
2385:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                   const uint8_t boundary_flag_num,
2386:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                   const XMC_VADC_BOUNDARY_NODE_t node);
2387:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif /* XMC_VADC_BOUNDARY_FLAG_SELECT */
2388:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2389:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif /* XMC_VADC_GROUP_AVAILABLE */
2390:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2391:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
2392:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2393:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
2394:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config     Pointer to Scan configuration
2395:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2396:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2397:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2398:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the VADC SCAN functional block.<BR>\n
2399:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The GROUP SCAN request source functional block converts channels sequentially starting with the 
2400:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * channel to the lowest. Channels must register themselves as being part of the the scan sequence.
2401:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_ScanEnableA
2402:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
2403:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_ScanDisableArbi
2404:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxASCTRL, GxASMR needed scan request s
2405:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2406:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2407:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR> XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2408:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanSelectGating()<BR>
2409:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2410:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
2411:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2412:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2413:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2414:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2415:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2416:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2417:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2418:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables arbitration slot of the scan request source.<BR>\n
2419:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2420:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2421:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the scan slot. Thus this must be enabled if any conversion need to take place.
2422:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2423:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2424:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2425:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2426:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2427:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2428:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2429:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2430:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN1_Msk;
2431:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2432:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2433:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2434:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2435:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2436:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2437:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2438:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2439:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables arbitration slot of the scan request source.<BR>\n
2440:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2441:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2442:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the scan slot.A call to this API will lead to all conversions request by scan to be blocked.
2443:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2444:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2445:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2446:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR>
2447:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2448:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2449:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2450:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2451:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN1_Msk);
2452:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2453:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2454:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2455:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2456:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_input  Choice of the input earmarked as a trigger line
2457:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2458:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2459:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2460:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2461:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal for scan request source.<BR>\n
2462:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2463:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2464:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2465:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2466:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTSEL.
2467:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2468:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2469:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectGating()<BR> XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2470:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2471:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
2472:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2473:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2474:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2475:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2476:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_edge  Trigger edge selection
2477:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2478:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2479:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2480:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2481:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the trigger edge for scan request source.<BR>\n
2482:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2483:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible trigger edges. This is
2484:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2485:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTMODE.
2486:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2487:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2488:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2489:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2490:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
2491:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2492:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2493:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2494:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param gating_input  Module input signal meant to be selected as gating input
2495:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2496:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2497:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2498:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2499:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Gating signal for scan request source.<BR>\n
2500:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2501:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the scan request source o
2502:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxASMR.ENGT has to be config
2503:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxAS
2504:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2505:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2506:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2507:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2508:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
2509:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2510:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2511:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2512:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the scan request source
2513:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2514:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2515:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2516:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2517:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the gating mode of scan request source.<BR>\n
2518:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2519:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2520:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2521:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2522:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2523:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectGating();
2524:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2525:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_G
2526:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2527:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2528:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMODE
2529:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2530:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2531:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR &= (uint32_t) (~((uint32_t)VADC_G_ASMR_ENGT_Msk));
2532:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Set the new gating mode */
2533:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)((uint32_t)mode_sel << VADC_G_ASMR_ENGT_Pos);
2534:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2535:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2536:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2537:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2538:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2539:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2540:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2541:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2542:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2543:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2544:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2545:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2546:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2547:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. Every request source event will cause a load event to occur. A call to this API would 
2548:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2549:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2550:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2551:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableContinuousMode()<BR>
2552:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2553:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2554:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2555:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2556:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_SCAN_Msk;
2557:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2558:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2559:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2560:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2561:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2562:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2563:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2564:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2565:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
2566:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2567:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2568:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2569:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2570:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. By invoking this feature the Autoscan mode of operations is disabled. A call to this A
2571:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2572:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2573:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2574:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableContinuousMode()<BR>
2575:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2576:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2577:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2578:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2579:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_SCAN_Msk);
2580:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2581:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2582:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2583:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2584:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2585:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2586:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2587:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2588:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
2589:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
2590:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the s
2591:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxASMR.LD
2592:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2593:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2594:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2595:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2596:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
2597:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2598:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
2599:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_LDEV_Msk;
2600:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2601:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2602:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2603:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2604:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2605:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2606:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2607:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2608:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Aborts an ongoing scan sequence conversion.<BR>\n
2609:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
2610:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
2611:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
2612:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxASMR, GxASCTRL, GxARBPR to achieve the sequen
2613:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2614:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2615:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2616:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2617:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr);
2618:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2619:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2620:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2621:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The channel meant to be added to scan sequence
2622:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2623:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2624:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2625:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2626:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2627:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds a channel to the scan sequence.<BR>\n
2628:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the scan request source. This will be added to
2629:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
2630:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2631:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2632:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2633:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddMultipleChannels()<BR>
2634:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2635:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddChannelToSequence(XMC_VADC_GROUP_t *const group_ptr, con
2636:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2637:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("VADC_GSCAN_AddSingleChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
2638:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddChannelToSequence:Wrong Channel Number", 
2639:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
2640:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASSEL |= (uint32_t)((uint32_t)1 << ch_num);
2641:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2642:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2643:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2644:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2645:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
2646:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
2647:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
2648:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the selected channels
2649:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
2650:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2651:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2652:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2653:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2654:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
2655:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
2656:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
2657:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2658:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2659:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2660:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddChannelToSequence()<BR>
2661:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2662:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddMultipleChannels(XMC_VADC_GROUP_t *const group_ptr, cons
2663:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2664:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddMultipleChannels:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
2665:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASSEL = ch_mask;
2666:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2667:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2668:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2669:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2670:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
2671:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2672:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2673:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
2674:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2675:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2676:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determine if the channel is pending for conversion.<BR>\n
2677:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
2678:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
2679:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
2680:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the channel is found in the pending register (GxASPND).
2681:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2682:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2683:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanGetNumChannelsPending()<BR>
2684:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2685:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsChannelPending(XMC_VADC_GROUP_t *const group_ptr, const u
2686:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2687:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2688:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
2689:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_C
2690:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2691:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return( (bool)((uint32_t)(group_ptr->ASPND >> ch_num) & 1U));
2692:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2693:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2694:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2695:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_ptr     Constant pointer to the VADC group
2696:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return  <BR>
2697:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
2698:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to 0x8]
2699:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2700:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2701:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Returns the total number of pending channels.<BR>\n
2702:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
2703:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
2704:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
2705:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * return the total number of channels pending (GxASPND).
2706:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2707:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2708:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanIsChannelPending()<BR>
2709:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2710:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr);
2711:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2712:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2713:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2714:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2715:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2716:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2717:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2718:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
2719:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will set the request source event for scan. This will trigger a interrupt if the
2720:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
2721:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
2722:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2723:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2724:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
2725:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2726:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
2727:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2728:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2729:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->SEFLAG    |= (uint32_t)VADC_G_SEFLAG_SEV1_Msk;
2730:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2731:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2732:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2733:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2734:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2735:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2736:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2737:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2738:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges the scan conversion complete request source event.<BR>\n
2739:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
2740:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
2741:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2742:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2743:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanTriggerReqSrcEvent()<BR>
2744:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2745:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
2746:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2747:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
2748:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV1_Msk;
2749:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2750:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2751:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2752:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2753:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2754:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
2755:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
2756:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2757:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2758:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
2759:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will get the status of the scan request source event. Will return a true
2760:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the event has occurred for scan. A call to this API would access the register bit field GxSEF
2761:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2762:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2763:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2764:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2765:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
2766:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2767:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GSCAN_GetRSEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2768:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return( (bool)(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV1_Msk));
2769:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2770:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2771:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2772:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2773:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr    Service Request Id
2774:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2775:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2776:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2777:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2778:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Connects the scan request source event to the SR line of VADC.<BR>\n
2779:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a scan request source event. Hence to get a 
2780:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2781:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * field GxSEVNP.SEV1NP .
2782:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2783:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2784:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2785:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2786:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
2787:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2788:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2789:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2790:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2791:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2792:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2793:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2794:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the trigger for scan request source.<BR>\n
2795:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API, the trigger signal will be activated for the scan request source. The trigger
2796:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * edge will be selected from the ASCTRL register. The Selection of a input will be done by
2797:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectTrigger(). A call to this API would configure the register bit field Gx
2798:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2799:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2800:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanDisableExternalTrigger()<BR>
2801:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2802:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
2803:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2804:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2805:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2806:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_ENTR_Msk;
2807:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2808:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2809:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2810:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2811:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2812:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2813:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2814:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2815:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the trigger for scan request source.<BR>
2816:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the scan request source.
2817:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the scan request source. If any configuration were
2818:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to select the trigger input in GxASCTRL, it will be not be effected by this API.
2819:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENTR.
2820:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2821:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2822:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2823:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2824:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
2825:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2826:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2827:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2828:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENTR_Msk);
2829:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2830:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2831:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2832:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2833:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Pointer to the VADC module
2834:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
2835:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2836:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2837:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the Background scan functional block.<BR>\n
2838:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The BACKGROUND SCAN request source functional block converts channels of all VADC groups that ha
2839:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * been assigned as a priority channel (priority channels can be converted only by queue and scan).
2840:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request source converts the unprioritized channels. Unprioritized channels however can also be u
2841:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * and scan. But a channel which is prioritized can not be used with background request source.
2842:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2843:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2844:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR> XMC_VADC_GROUP_BackgroundDisableArbitratio
2845:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundSelectGating()<BR>
2846:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2847:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
2848:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2849:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2850:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2851:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group which may receive a
2852:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                  conversion request from background request source
2853:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2854:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2855:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2856:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2857:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2858:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables arbitration slot of the Background request source.<BR>\n
2859:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
2860:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
2861:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * comes to the Background slot. Thus this must be enabled if any conversion need to take place.
2862:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2.
2863:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2864:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2865:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableArbitrationSlot()<BR>
2866:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2867:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_p
2868:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2869:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK_
2870:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN2_Msk;
2871:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2872:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2873:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2874:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group which may receive a conversion request
2875:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                     from background request source
2876:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2877:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2878:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2879:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2880:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables arbitration slot of the Background request source.<BR>\n
2881:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
2882:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
2883:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * comes to the Background slot.A call to this API will lead to all conversions request by Backgrou
2884:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2
2885:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2886:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2887:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR>
2888:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2889:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_
2890:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2891:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK
2892:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN2_Msk);
2893:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2894:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2895:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2896:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2897:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2898:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
2899:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_TRIGGER_INPUT_SELECT_t
2900:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2901:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2902:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2903:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2904:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal for Background request source.<BR>\n
2905:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
2906:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2907:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
2908:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2909:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTSEL.
2910:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2911:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2912:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
2913:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2914:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
2915:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2916:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2917:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2918:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2919:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_edge  Select the trigger edge
2920:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2921:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2922:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2923:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2924:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger edge for Background request source.<BR>\n
2925:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
2926:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible values for the trigger 
2927:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
2928:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTMODE.
2929:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2930:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2931:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
2932:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2933:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
2934:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2935:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2936:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2937:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Module input signal meant to be selected as gating input
2938:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_GATE_INPUT_SELECT_t
2939:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2940:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2941:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2942:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2943:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Gating signal for Background request source.<BR>\n
2944:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2945:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the Background request so
2946:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxBRSMR.ENGT has to be confi
2947:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field BRSC
2948:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2949:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2950:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR>
2951:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2952:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
2953:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2954:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2955:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2956:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the background scan request source
2957:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2958:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2959:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2960:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <b>Details of function</b><br>
2961:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the gating mode of background request source.<BR>\n
2962:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2963:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2964:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2965:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENGT.
2966:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2967:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2968:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectGating();
2969:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2970:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundSetGatingMode(XMC_VADC_GLOBAL_t *const global_ptr,
2971:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                             XMC_VADC_GATEMODE_t mode_sel)
2972:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
2973:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong Module Pointer", (global_ptr == VADC))
2974:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_G
2975:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2976:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2977:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR &= (uint32_t)(~((uint32_t)VADC_BRSMR_ENGT_Msk));
2978:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Configure the new gating mode*/
2979:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)((uint32_t)mode_sel << VADC_BRSMR_ENGT_Pos);
2980:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
2981:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2982:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
2983:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2984:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2985:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2986:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2987:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2988:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2989:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2990:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
2991:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is needed. Using autoscan (continuous conversion)feature it is possible to start the con
2992:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * once and allow the sequence to repeat without any further triggers. Once all channels belonging 
2993:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request source have been converted, a request source completion event is generated. Generation o
2994:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * can restart the Background configure sequence. Every request source event will cause a load even
2995:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would access the register bit field BRSMR.SCAN.
2996:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2997:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2998:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableContinuousMode()<BR>
2999:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3000:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableContinuousMode(XMC_VADC_GLOBAL_t *const global
3001:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3002:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableContinuousMode:Wrong Module Pointer", (global_ptr == 
3003:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_SCAN_Msk;
3004:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3005:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3006:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3007:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3008:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3009:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3010:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3011:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3012:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
3013:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3014:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
3015:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a Background req
3016:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
3017:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. By invoking this API the Autoscan mode of operations is disabled. A call to this API w
3018:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * register bit field BRSMR.SCAN.
3019:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3020:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3021:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableContinuousMode()<BR>
3022:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3023:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableContinuousMode(XMC_VADC_GLOBAL_t *const globa
3024:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3025:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableContinuousMode:Wrong Module Pointer", (global_ptr ==
3026:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_SCAN_Msk);
3027:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3028:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3029:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3030:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3031:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3032:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3033:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3034:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3035:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
3036:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3037:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the b
3038:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * has already been filled up with entries. A call to this API would set the register bit field BRS
3039:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3040:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3041:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3042:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3043:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_pt
3044:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3045:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VAD
3046:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
3047:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3048:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3049:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3050:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3051:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3052:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3053:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3054:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3055:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Aborts an ongoing background scan conversion(sequence).<BR>\n
3056:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
3057:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
3058:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
3059:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers BRSMR, BRSCTRL, GxARBPR(if group is available) 
3060:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * current scan sequence.
3061:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3062:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3063:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3064:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3065:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr);
3066:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3067:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3068:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3069:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3070:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Request source
3071:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3072:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3073:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3074:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3075:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3076:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3077:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds a channel to the background scan sequence.<BR>\n
3078:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3079:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3080:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3081:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3082:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3083:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
3084:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3085:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global
3086:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                     const uint32_t grp_num,
3087:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                     const uint32_t ch_num)
3088:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3089:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3090:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3091:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3092:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3093:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3094:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
3095:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3096:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3097:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3098:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3099:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3100:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3101:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3102:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3103:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3104:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3105:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3106:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3107:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3108:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3109:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3110:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3111:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3112:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3113:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3114:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3115:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3116:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3117:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndAddMultipleChannels(XMC_VADC_GLOBAL_t *const global_ptr
3118:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3119:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t ch_mask)
3120:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3121:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3122:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3123:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= ch_mask;
3124:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3125:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3126:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3127:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3128:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3129:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3130:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3131:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3132:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3133:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3134:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3135:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determine if the channel is pending.<BR>\n
3136:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3137:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3138:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3139:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the channel is found in the pending register (BRSPND[\b grp_num]).
3140:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3141:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3142:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending()<BR>
3143:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3144:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundIsChannelPending(XMC_VADC_GLOBAL_t *const global_ptr
3145:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3146:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t ch_num)
3147:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3148:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Module Pointer", (global_ptr == VADC
3149:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Group Number",   ((grp_num) < XMC_VA
3150:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Channel Number",
3151:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3152:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3153:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return( (bool)(global_ptr->BRSPND[grp_num] & (uint32_t)((uint32_t)1 << ch_num)));
3154:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3155:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3156:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3157:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3158:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * @return  <BR>
3159:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3160:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to (0x8*number of groups)]
3161:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3162:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3163:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Returns the number of pending channels.<BR>\n
3164:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3165:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3166:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3167:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * return the total number of channels pending (BRSPND[\b grp_num]).
3168:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3169:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3170:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundIsChannelPending()<BR>
3171:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3172:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr);
3173:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3174:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3175:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3176:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3177:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3178:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3179:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3180:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3181:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will set the request source event for background scan. This will trigger a interrupt if
3182:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3183:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB.
3184:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3185:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3186:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
3187:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3188:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent(XMC_VADC_GLOBAL_t *const global_p
3189:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3190:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent:Wrong Module Pointer", (global_ptr == VA
3191:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk;
3192:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3193:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3194:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3195:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3196:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3197:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3198:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3199:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3200:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges the background scan conversion complete request source event.<BR>\n
3201:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3202:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB
3203:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3204:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3205:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent()<BR>
3206:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3207:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent(XMC_VADC_GLOBAL_t *const global_ptr
3208:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3209:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent:Wrong Module Pointer", (global_ptr == VADC
3210:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLBCLR_Msk;
3211:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3212:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3213:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3214:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3215:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3216:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3217:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3218:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3219:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3220:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3221:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will get the status of the background scan request source event. Will return a true
3222:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the event has occurred for background scan. A call to this API would configure the register
3223:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit field GLOBEFLAG.SEVGLB.
3224:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3225:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3226:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3227:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3228:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus(XMC_VADC_GLOBAL_t *const global
3229:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3230:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus:Wrong Module Pointer", (global_ptr == 
3231:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return((bool)(global_ptr->GLOBEFLAG & (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk));
3232:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3233:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3234:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3235:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3236:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3237:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3238:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3239:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3240:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the trigger for background scan request source.<BR>\n
3241:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the scan request source. The trigger signal 
3242:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * edge will be selected from the BRSCTRL register. The Selection of a input will be done by
3243:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectTrigger(). A call to this API would configure the register bit f
3244:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3245:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3246:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(
3247:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3248:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger(XMC_VADC_GLOBAL_t *const globa
3249:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3250:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger:Wrong Group Pointer", (global_ptr == 
3251:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3252:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_ENTR_Msk;
3253:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3254:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3255:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3256:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3257:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3258:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3259:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3260:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3261:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the trigger for background scan request source.<BR>
3262:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the background scan request source.
3263:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the background scan request source. If any configu
3264:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to select the trigger input in BRSCTRL will be not be effected. A call to this API would configu
3265:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit field BRSMR.ENTR.
3266:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3267:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><br>
3268:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<BR>
3269:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3270:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(XMC_VADC_GLOBAL_t *const glob
3271:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3272:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger:Wrong Group Pointer", (global_ptr ==
3273:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3274:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENTR_Msk);
3275:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3276:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3277:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
3278:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3279:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
3280:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3281:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3282:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3283:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3284:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3285:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes VADC QUEUE functional block.<BR>\n
3286:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The QUEUE request source functional block converts channels stored in a queue. The first channel
3287:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * queue is converted first. A channel once converted, can be placed back into the queue if desired
3288:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_QueueEnable
3289:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
3290:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_QueueDisableArb
3291:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxQCTRL0, GxQMR0 to configure the queu
3292:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * source.
3293:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3294:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3295:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR> XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR
3296:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueSelectGating()<BR>
3297:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3298:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
3299:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3300:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3301:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3302:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3303:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3304:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3305:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3306:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables arbitration slot of the queue request source.<BR>\n
3307:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3308:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3309:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the queue slot. Thus this must be enabled if any conversion need to take place.
3310:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3311:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3312:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3313:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR>
3314:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3315:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3316:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3317:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3318:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)1 << VADC_G_ARBPR_ASEN0_Pos);
3319:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3320:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3321:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3322:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3323:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3324:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3325:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3326:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3327:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables arbitration slot of the queue request source.<BR>\n
3328:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3329:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3330:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the queue slot.A call to this API will lead to all conversions request by queue to be blocked
3331:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3332:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3333:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3334:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR>
3335:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3336:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3337:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3338:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3339:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN0_Msk);
3340:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3341:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3342:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3343:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3344:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3345:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3346:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3347:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3348:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3349:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal for queue request source.<BR>\n
3350:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3351:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3352:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3353:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3354:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTSEL.
3355:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3356:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3357:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3358:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3359:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, 
3360:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num);
3361:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3362:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3363:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3364:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_edge  Choice of the trigger edge
3365:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3366:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3367:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3368:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3369:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal edge for queue request source.<BR>\n
3370:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3371:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 trigger edges. This is
3372:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3373:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3374:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTMODE.
3375:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3376:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3377:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3378:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3379:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
3380:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3381:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3382:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3383:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as the gating line
3384:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3385:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3386:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3387:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3388:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Gating signal for queue request source.<BR>\n
3389:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3390:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the queue request source 
3391:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxQMR0.ENGT has to be config
3392:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxQC
3393:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3394:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3395:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR>
3396:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3397:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
3398:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3399:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3400:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3401:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the queue request source
3402:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3403:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3404:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3405:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3406:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the gating mode of queue request source.<BR>\n
3407:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3408:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3409:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3410:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQMR0.ENGT.
3411:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3412:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3413:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectGating();
3414:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3415:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_
3416:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 284              	 .loc 2 3416 0
 285              	 .cfi_startproc
 286              	 
 287              	 
 288              	 
 289 0000 80B4     	 push {r7}
 290              	.LCFI22:
 291              	 .cfi_def_cfa_offset 4
 292              	 .cfi_offset 7,-4
 293 0002 83B0     	 sub sp,sp,#12
 294              	.LCFI23:
 295              	 .cfi_def_cfa_offset 16
 296 0004 00AF     	 add r7,sp,#0
 297              	.LCFI24:
 298              	 .cfi_def_cfa_register 7
 299 0006 7860     	 str r0,[r7,#4]
 300 0008 0B46     	 mov r3,r1
 301 000a FB70     	 strb r3,[r7,#3]
3417:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3418:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMOD
3419:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3420:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3421:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 &= (uint32_t)(~((uint32_t) VADC_G_QMR0_ENGT_Msk));
 302              	 .loc 2 3421 0
 303 000c 7B68     	 ldr r3,[r7,#4]
 304 000e D3F80431 	 ldr r3,[r3,#260]
 305 0012 23F00302 	 bic r2,r3,#3
 306 0016 7B68     	 ldr r3,[r7,#4]
 307 0018 C3F80421 	 str r2,[r3,#260]
3422:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Set the new gating mode */
3423:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)mode_sel << VADC_G_QMR0_ENGT_Pos);
 308              	 .loc 2 3423 0
 309 001c 7B68     	 ldr r3,[r7,#4]
 310 001e D3F80421 	 ldr r2,[r3,#260]
 311 0022 FB78     	 ldrb r3,[r7,#3]
 312 0024 1A43     	 orrs r2,r2,r3
 313 0026 7B68     	 ldr r3,[r7,#4]
 314 0028 C3F80421 	 str r2,[r3,#260]
3424:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
 315              	 .loc 2 3424 0
 316 002c 0C37     	 adds r7,r7,#12
 317              	.LCFI25:
 318              	 .cfi_def_cfa_offset 4
 319 002e BD46     	 mov sp,r7
 320              	.LCFI26:
 321              	 .cfi_def_cfa_register 13
 322              	 
 323 0030 5DF8047B 	 ldr r7,[sp],#4
 324              	.LCFI27:
 325              	 .cfi_restore 7
 326              	 .cfi_def_cfa_offset 0
 327 0034 7047     	 bx lr
 328              	 .cfi_endproc
 329              	.LFE195:
 331 0036 00BF     	 .section .text.XMC_VADC_GROUP_QueueFlushEntries,"ax",%progbits
 332              	 .align 2
 333              	 .thumb
 334              	 .thumb_func
 336              	XMC_VADC_GROUP_QueueFlushEntries:
 337              	.LFB197:
3425:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3426:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3427:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3428:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3429:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3430:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3431:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3432:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3433:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>
3434:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3435:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the queue unit to generate a conversion request to the analog converter. It is assumed that the 
3436:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxQMR0.TR
3437:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3438:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3439:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The conversion of queue entry will start immediately after the entry has been loaded into GxQINR
3440:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This happens only if the queue entry has been loaded into the register without the need for the 
3441:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If a H/W Trigger is selected while loading the entry, the conversion will occur in one of the 2 
3442:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI> The H/W generates a trigger needed for the queue request source.
3443:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI> The Conversion is triggered manually by calling this API.
3444:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3445:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3446:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3447:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3448:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
3449:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3450:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3451:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_TREV_Pos);
3452:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3453:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3454:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3455:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3456:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3457:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    uint32_t returns the total number of channels.
3458:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3459:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3460:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3461:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Returns the number of channels present in the queue.<BR>\n
3462:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will return the queue buffer size. This buffer will be consisting of valid queue entrie
3463:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * will be converted when a trigger event occurs. All the entries that are loaded onto the GxQINR0 
3464:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * be added to the queue buffer. Hence if an application needs to get the number of valid queue ent
3465:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * this API would provide the interface. A call to this API would access the registers GxQBUR0, GxQ
3466:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to determine the queue length.
3467:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3468:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3469:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3470:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3471:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr);
3472:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3473:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3474:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3475:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3476:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3477:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3478:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3479:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Aborts an ongoing conversion by flushing the queue.<BR>\n
3480:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will flush the queue buffer. Ongoing conversion of the Queue request source will
3481:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3482:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to abort
3483:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the queue sequence.
3484:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3485:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3486:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueFlushEntries() <BR>
3487:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3488:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr);
3489:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3490:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3491:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3492:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3493:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3494:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3495:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3496:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Flushing the queue Entry.<BR>\n
3497:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will flush one entry in the queue buffer. Ongoing conversion of the Queue request sourc
3498:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3499:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers  GxQMR0. This is a Blocking API, i.e will only 
3500:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * all the entries are removed from the queue.
3501:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3502:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3503:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueAbortSequence(0<BR>
3504:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3505:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueFlushEntries(XMC_VADC_GROUP_t *const group_ptr)
3506:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 338              	 .loc 2 3506 0
 339              	 .cfi_startproc
 340              	 
 341              	 
 342              	 
 343 0000 80B4     	 push {r7}
 344              	.LCFI28:
 345              	 .cfi_def_cfa_offset 4
 346              	 .cfi_offset 7,-4
 347 0002 83B0     	 sub sp,sp,#12
 348              	.LCFI29:
 349              	 .cfi_def_cfa_offset 16
 350 0004 00AF     	 add r7,sp,#0
 351              	.LCFI30:
 352              	 .cfi_def_cfa_register 7
 353 0006 7860     	 str r0,[r7,#4]
3507:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Initiate flushing of the queue */
3508:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_FLUSH_Msk;
 354              	 .loc 2 3508 0
 355 0008 7B68     	 ldr r3,[r7,#4]
 356 000a D3F80431 	 ldr r3,[r3,#260]
 357 000e 43F48062 	 orr r2,r3,#1024
 358 0012 7B68     	 ldr r3,[r7,#4]
 359 0014 C3F80421 	 str r2,[r3,#260]
3509:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3510:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   while( !((group_ptr->QSR0)& (uint32_t)VADC_G_QSR0_EMPTY_Msk))
 360              	 .loc 2 3510 0
 361 0018 00BF     	 nop
 362              	.L19:
 363              	 .loc 2 3510 0 is_stmt 0 discriminator 1
 364 001a 7B68     	 ldr r3,[r7,#4]
 365 001c D3F80831 	 ldr r3,[r3,#264]
 366 0020 03F02003 	 and r3,r3,#32
 367 0024 002B     	 cmp r3,#0
 368 0026 F8D0     	 beq .L19
3511:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   {
3512:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****     /* Wait until the queue is indeed flushed */
3513:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   }
3514:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
 369              	 .loc 2 3514 0 is_stmt 1
 370 0028 0C37     	 adds r7,r7,#12
 371              	.LCFI31:
 372              	 .cfi_def_cfa_offset 4
 373 002a BD46     	 mov sp,r7
 374              	.LCFI32:
 375              	 .cfi_def_cfa_register 13
 376              	 
 377 002c 5DF8047B 	 ldr r7,[sp],#4
 378              	.LCFI33:
 379              	 .cfi_restore 7
 380              	 .cfi_def_cfa_offset 0
 381 0030 7047     	 bx lr
 382              	 .cfi_endproc
 383              	.LFE197:
 385 0032 00BF     	 .section .text.XMC_VADC_GROUP_QueueInsertChannel,"ax",%progbits
 386              	 .align 2
 387              	 .thumb
 388              	 .thumb_func
 390              	XMC_VADC_GROUP_QueueInsertChannel:
 391              	.LFB198:
3515:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3516:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3517:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3518:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3519:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3520:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3521:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3522:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3523:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Clears the next valid channel in the queue buffer.<BR>\n
3524:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A queue entry lined up for conversion can be removed and replaced by its successor. The call to 
3525:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * first check if a valid queue entry is present in the queue backup register if present would clea
3526:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If no valid queue entries are present in the backup then the first channel
3527:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * present in the queue buffer would be cleared.
3528:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to clear a
3529:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * channel from the queue.
3530:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3531:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3532:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3533:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3534:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueRemoveChannel(XMC_VADC_GROUP_t *const group_ptr);
3535:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3536:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3537:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3538:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3539:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param entry      Details of the node being added
3540:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3541:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3542:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3543:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3544:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Inserts a queue entry to the tail of the queue buffer.<BR>\n
3545:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will insert a new channel into the queue buffer. The Queue will start conversion of
3546:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the channels from the head of the buffer. This Insert will place the entry after the last valid 
3547:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If no valid entries are present then this API will place the Queue entry at the head of the buff
3548:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Then the successive call to the insert will place the new entry after the last entry.
3549:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register GxQINR0 for a single queue entry.
3550:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3551:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3552:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR>
3553:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3554:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueInsertChannel(XMC_VADC_GROUP_t *const group_ptr,
3555:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                                        const XMC_VADC_QUEUE_ENTRY_t entry)
3556:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 392              	 .loc 2 3556 0
 393              	 .cfi_startproc
 394              	 
 395              	 
 396              	 
 397 0000 80B4     	 push {r7}
 398              	.LCFI34:
 399              	 .cfi_def_cfa_offset 4
 400              	 .cfi_offset 7,-4
 401 0002 83B0     	 sub sp,sp,#12
 402              	.LCFI35:
 403              	 .cfi_def_cfa_offset 16
 404 0004 00AF     	 add r7,sp,#0
 405              	.LCFI36:
 406              	 .cfi_def_cfa_register 7
 407 0006 7860     	 str r0,[r7,#4]
 408 0008 3960     	 str r1,[r7]
3557:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueInsertChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3558:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Insert the channel physically and get the length of the queue*/
3559:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QINR0 = entry.qinr0;
 409              	 .loc 2 3559 0
 410 000a 3A68     	 ldr r2,[r7]
 411 000c 7B68     	 ldr r3,[r7,#4]
 412 000e C3F81021 	 str r2,[r3,#272]
3560:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
 413              	 .loc 2 3560 0
 414 0012 0C37     	 adds r7,r7,#12
 415              	.LCFI37:
 416              	 .cfi_def_cfa_offset 4
 417 0014 BD46     	 mov sp,r7
 418              	.LCFI38:
 419              	 .cfi_def_cfa_register 13
 420              	 
 421 0016 5DF8047B 	 ldr r7,[sp],#4
 422              	.LCFI39:
 423              	 .cfi_restore 7
 424              	 .cfi_def_cfa_offset 0
 425 001a 7047     	 bx lr
 426              	 .cfi_endproc
 427              	.LFE198:
 429              	 .section .text.XMC_VADC_GROUP_QueueClearReqSrcEvent,"ax",%progbits
 430              	 .align 2
 431              	 .thumb
 432              	 .thumb_func
 434              	XMC_VADC_GROUP_QueueClearReqSrcEvent:
 435              	.LFB200:
3561:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3562:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3563:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3564:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3565:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     int32_t Returns -1 if there are no channels for conversion
3566:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *             Else would return the next valid channel for conversion.
3567:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3568:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3569:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3570:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Returns the next entry in the queue request source for conversion.<BR>\n
3571:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Identifies the channel in the queue lined up for conversion next.
3572:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * API will return a valid queue entry from the queue buffer. First checks for the valid channel en
3573:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * in the backup register and returns if present. If the valid entry has not been found in the back
3574:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * then the queue buffer is searched for a valid entry. A call to this API would access the registe
3575:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * GxQBUR0 to determine the next channel.
3576:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3577:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3578:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueInsertChannel()<BR>
3579:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3580:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** int32_t XMC_VADC_GROUP_QueueGetNextChannel(XMC_VADC_GROUP_t *const group_ptr);
3581:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3582:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3583:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3584:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3585:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *     int32_t Returns -1 if there is no channel that have been interrupted.
3586:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *             Else would return the channel that is interrupted.
3587:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3588:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3589:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3590:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Identifies the channel whose conversion was suspended.<BR>\n
3591:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When using cancel inject repeat mode the canceled conversion will be placed in the backup regist
3592:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will return the valid queue channel number from the backup register. This happens when 
3593:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * there is a high priority conversion interrupts the conversion of queue request source. This forc
3594:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to goto the backup register. A call to this API would access the register GxQBUR0 to determine t
3595:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * interrupted channel.
3596:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3597:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3598:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3599:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3600:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** int32_t XMC_VADC_GROUP_QueueGetInterruptedChannel(XMC_VADC_GROUP_t *const group_ptr);
3601:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3602:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3603:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3604:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3605:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3606:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3607:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3608:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3609:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will set the request source event for queue. This will trigger a interrupt if the
3610:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3611:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV0.
3612:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3613:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3614:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueClearReqSrcEvent()<BR>
3615:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3616:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3617:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3618:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
3619:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->SEFLAG |= 1U;
3620:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3621:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3622:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3623:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3624:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3625:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3626:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3627:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3628:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges the conversion complete request source event.<BR>\n
3629:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3630:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFCLR.SEV0.
3631:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3632:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3633:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueTriggerReqSrcEvent()<BR>
3634:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3635:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3636:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 436              	 .loc 2 3636 0
 437              	 .cfi_startproc
 438              	 
 439              	 
 440              	 
 441 0000 80B4     	 push {r7}
 442              	.LCFI40:
 443              	 .cfi_def_cfa_offset 4
 444              	 .cfi_offset 7,-4
 445 0002 83B0     	 sub sp,sp,#12
 446              	.LCFI41:
 447              	 .cfi_def_cfa_offset 16
 448 0004 00AF     	 add r7,sp,#0
 449              	.LCFI42:
 450              	 .cfi_def_cfa_register 7
 451 0006 7860     	 str r0,[r7,#4]
3637:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
3638:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV0_Msk;
 452              	 .loc 2 3638 0
 453 0008 7B68     	 ldr r3,[r7,#4]
 454 000a D3F89831 	 ldr r3,[r3,#408]
 455 000e 43F00102 	 orr r2,r3,#1
 456 0012 7B68     	 ldr r3,[r7,#4]
 457 0014 C3F89821 	 str r2,[r3,#408]
3639:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
 458              	 .loc 2 3639 0
 459 0018 0C37     	 adds r7,r7,#12
 460              	.LCFI43:
 461              	 .cfi_def_cfa_offset 4
 462 001a BD46     	 mov sp,r7
 463              	.LCFI44:
 464              	 .cfi_def_cfa_register 13
 465              	 
 466 001c 5DF8047B 	 ldr r7,[sp],#4
 467              	.LCFI45:
 468              	 .cfi_restore 7
 469              	 .cfi_def_cfa_offset 0
 470 0020 7047     	 bx lr
 471              	 .cfi_endproc
 472              	.LFE200:
 474 0022 00BF     	 .section .text.XMC_VADC_GROUP_ChannelClearEvent,"ax",%progbits
 475              	 .align 2
 476              	 .thumb
 477              	 .thumb_func
 479              	XMC_VADC_GROUP_ChannelClearEvent:
 480              	.LFB204:
3640:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3641:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3642:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3643:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3644:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3645:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3646:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3647:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3648:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3649:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will get the status of the queue request source event. Will return a true
3650:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the event has occurred for queue. A call to this API would acces the register bit field  GxSE
3651:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3652:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3653:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3654:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3655:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_QueueGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
3656:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3657:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3658:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetReqSrcEventStatus:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
3659:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   return(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV0_Msk);
3660:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3661:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3662:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3663:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3664:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr     The service request line (Common SR lines, Group specific SR lines)
3665:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3666:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3667:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3668:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3669:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Connects the event to the SR line of VADC.<BR>\n
3670:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a queue request source event. Hence to get a
3671:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node. A call to this API would configur
3672:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit field GxSEVNP.SEVNP0.
3673:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3674:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3675:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3676:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3677:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_V
3678:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3679:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3680:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3681:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3682:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3683:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3684:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3685:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the trigger for queue request source.<BR>\n
3686:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the queue request source. The trigger signal
3687:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * edge will be selected from the QCTRL register. The Selection of a input will be done by
3688:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectTrigger(). A call to this API would configure the register bit field G
3689:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3690:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3691:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueDisableExternalTrigger()<BR>
3692:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3693:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3694:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3695:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3696:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3697:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_ENTR_Msk;
3698:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3699:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3700:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3701:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3702:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3703:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3704:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3705:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3706:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the trigger for queue request source.<BR>
3707:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the queue request source.
3708:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the queue request source. If any configuration was
3709:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to select the trigger input in GxQCTRL0 will be not be effected.  A call to this API would confi
3710:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * register bit field GxQMR0.ENTR
3711:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3712:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3713:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3714:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3715:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3716:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
3717:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3718:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3719:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 &= ~((uint32_t)VADC_G_QMR0_ENTR_Msk);
3720:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
3721:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
3722:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3723:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
3724:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3725:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
3726:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num  The channel being initialized
3727:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
3728:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  Pointer to initialization data
3729:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3730:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3731:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3732:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3733:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the ADC channel for conversion.<BR>\n
3734:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will do the channel related initializations. This includes configuration of the CHCTR s
3735:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * and boundary flag settings. This must be called in the application in order to enable the conver
3736:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * a channel. After a request source has been initialized this API has to be called for each channe
3737:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * has to be converted.  A call to this API would configure the registers GxCHCTR GxBFL GxALIAS GxC
3738:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * GxBFLC(depending on device) in order to configure the channel.
3739:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3740:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3741:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3742:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3743:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelInit(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num,
3744:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                         const XMC_VADC_CHANNEL_CONFIG_t *config);
3745:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3746:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3747:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr    Constant pointer to the VADC group
3748:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param src_ch_num   Channel which will be converted by \b alias_ch_num, when called by the reque
3749:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                     <BR>Range:[0x0 to 0x7]
3750:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param alias_ch_num This is the alias channel (Ch-0 or Ch-1)
3751:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                     <BR>Range:[0x0, 0x1]
3752:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3753:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3754:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3755:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3756:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets the Alias channel(\b alias_ch_num) to convert from the source channel(\b src_ch_num).<BR>\n
3757:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a alias configuration takes place the request source(queue/scan/background) will not call c
3758:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The Request sources will call the channel \b alias_ch_num , this would invoke the conversion of
3759:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the pin associated with \b src_ch_num. The configuration of the alias channel (\b alias_ch_num) 
3760:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * for the conversion.\n
3761:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When an alias channel (Ch-0 or Ch-1) receives a trigger, it converts the aliased channel (\b src
3762:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * The properties of Ch-0 or Ch-1 (as indicated in \b alias_ch_num ) apply when \b src_ch_num is co
3763:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  A call to this API would configure the register GxALIAS.
3764:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3765:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3766:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Alias Channel (\b alias_ch_num) and the source channel (\b src_ch_num) cannot be the same.
3767:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * If they are, that alias feature is not used for the conversion. In order to Reset the alias
3768:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * feature that was previously selected this method can be used.
3769:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3770:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3771:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3772:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3773:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetChannelAlias(XMC_VADC_GROUP_t *const group_ptr,
3774:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                     const uint32_t src_ch_num,
3775:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                     const uint32_t alias_ch_num);
3776:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3777:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3778:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr    Constant pointer to the VADC group
3779:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num  Channel whose input was converted
3780:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
3781:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3782:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *   bool  Returns true if there was violation w.r.t the specified boundaries.
3783:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3784:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3785:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines if the result of the channel confines with the specified boundaries.<BR>\n
3786:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * An application may not necessarily always need to know the exact value of the converted result, 
3787:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * an indication if the generated result is within stipulated boundaries. Generation of Channel eve
3788:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * to channel event generation criteria (Generate always, Never generate, Generate if result is out
3789:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Generate if result is within bounds). When interrupts are not enabled, this API can be used to d
3790:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * nature of the result.  A call to this API would access the registers GxCHCTR and GxCEFLAG in ord
3791:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * if a violation has occured.
3792:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3793:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3794:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
3795:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3796:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** bool XMC_VADC_GROUP_ChannelIsResultOutOfBounds(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch
3797:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3798:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3799:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr    Constant pointer to the VADC group
3800:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num  Channel whose input is to be converted
3801:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
3802:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ref     Reference voltage
3803:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3804:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3805:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3806:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3807:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the reference voltage for conversion.<BR>\n
3808:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * An internal voltage reference (VARef) or an external voltage reference fed to Ch-0 can serve as 
3809:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * for conversions.  A call to this API would configure the register bit field GxCHCTR.REFSEL.
3810:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3811:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3812:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
3813:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3814:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelSetInputReference(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
3815:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                            const XMC_VADC_CHANNEL_REF_t ref);
3816:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3817:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3818:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3819:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num   Channel whose i/p is to be converted
3820:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
3821:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param result_reg_num  Result Register associated with this channel
3822:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3823:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3824:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3825:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3826:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the target result register.<BR>\n
3827:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * There are upto 16 result registers which a channel can choose from to store the results of conve
3828:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * This selects only the group related result registers. A call to this API would configure the reg
3829:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit field GxCHCTR.RESREG.
3830:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3831:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3832:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
3833:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3834:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelSetResultRegister(XMC_VADC_GROUP_t *const group_ptr,
3835:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                              const uint32_t ch_num,
3836:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****                                              const uint32_t result_reg_num);
3837:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3838:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3839:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3840:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3841:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num   Channel whose associated result register is to be found
3842:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
3843:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3844:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  uint8_t  returns the Group result register to which it is linked to.
3845:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *           <BR>Range: [0x0 to 0xF]
3846:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3847:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3848:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Returns the result register associated with this channel.<br>\n
3849:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  There are upto 16 result registers which a channel can choose from to store the results of conv
3850:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *  This returns only the group related result registers.  A call to this API would access the regi
3851:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit field GxCHCTR.RESREG.
3852:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3853:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3854:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
3855:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3856:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** uint8_t XMC_VADC_GROUP_ChannelGetResultRegister(XMC_VADC_GROUP_t *const group_ptr, const uint32_t c
3857:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3858:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3859:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3860:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num   Channel whose channel event is to be asserted
3861:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
3862:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3863:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3864:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3865:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3866:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts a Channel event.<BR>\n
3867:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * It is merely the channel event which is asserted. For this asserted event to lead to an interrup
3868:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * have been bound to an SR and that SR must have been enabled. It can potentially lead to an inter
3869:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * SR line is connected to an NVIC node.  A call to this API would configure the register bit field
3870:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3871:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3872:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelClearEvent().
3873:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3874:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ChannelTriggerEvent(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num);
3875:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3876:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3877:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3878:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num   Channel whose channel event is to be acknowledged
3879:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *                <BR>Range: [0x0 to 0x7]
3880:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3881:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3882:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3883:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3884:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges a Channel event.<BR>\n
3885:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a channel event is raised after the conversion of that channel, it has to be cleared. This 
3886:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * the Channel event of a particular channel if it has occurred.  A call to this API would configur
3887:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit fields of GxCEFCLR.
3888:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3889:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3890:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ChannelTriggerEvent().
3891:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3892:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ChannelClearEvent(XMC_VADC_GROUP_t *const group_ptr, const uint
3893:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** {
 481              	 .loc 2 3893 0
 482              	 .cfi_startproc
 483              	 
 484              	 
 485              	 
 486 0000 80B4     	 push {r7}
 487              	.LCFI46:
 488              	 .cfi_def_cfa_offset 4
 489              	 .cfi_offset 7,-4
 490 0002 83B0     	 sub sp,sp,#12
 491              	.LCFI47:
 492              	 .cfi_def_cfa_offset 16
 493 0004 00AF     	 add r7,sp,#0
 494              	.LCFI48:
 495              	 .cfi_def_cfa_register 7
 496 0006 7860     	 str r0,[r7,#4]
 497 0008 3960     	 str r1,[r7]
3894:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** 
3895:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelClearEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
3896:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelClearEvent:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CHAN
3897:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->CEFCLR |= (uint32_t)((uint32_t)1 << ch_num);
 498              	 .loc 2 3897 0
 499 000a 7B68     	 ldr r3,[r7,#4]
 500 000c D3F89021 	 ldr r2,[r3,#400]
 501 0010 3B68     	 ldr r3,[r7]
 502 0012 0121     	 movs r1,#1
 503 0014 01FA03F3 	 lsl r3,r1,r3
 504 0018 1A43     	 orrs r2,r2,r3
 505 001a 7B68     	 ldr r3,[r7,#4]
 506 001c C3F89021 	 str r2,[r3,#400]
3898:C:\Workspaces\DAVE-4.1\S2G2_MD_SA_W002\S2GTWO_MD_SA_T003\Libraries\XMCLib\inc\xmc_vadc.h **** }
 507              	 .loc 2 3898 0
 508 0020 0C37     	 adds r7,r7,#12
 509              	.LCFI49:
 510              	 .cfi_def_cfa_offset 4
 511 0022 BD46     	 mov sp,r7
 512              	.LCFI50:
 513              	 .cfi_def_cfa_register 13
 514              	 
 515 0024 5DF8047B 	 ldr r7,[sp],#4
 516              	.LCFI51:
 517              	 .cfi_restore 7
 518              	 .cfi_def_cfa_offset 0
 519 0028 7047     	 bx lr
 520              	 .cfi_endproc
 521              	.LFE204:
 523              	 .comm adc_queue_list_ptrs,16,4
 524 002a 00BF     	 .section .text.ADC_QUEUE_GetAppVersion,"ax",%progbits
 525              	 .align 2
 526              	 .global ADC_QUEUE_GetAppVersion
 527              	 .thumb
 528              	 .thumb_func
 530              	ADC_QUEUE_GetAppVersion:
 531              	.LFB213:
 532              	 .file 3 "../Dave/Generated/ADC_QUEUE/adc_queue.c"
   1:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**
   2:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * @file adc_queue.c
   3:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * @date 2015-07-09
   4:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
   5:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * NOTE:
   6:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
   8:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * @cond
   9:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  **************************************************************************************************
  10:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * ADC_QUEUE v4.0.8 - Provides configurations for queue request source of VADC
  11:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  12:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * All rights reserved.
  14:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  15:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * following conditions are met:
  17:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  18:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *   disclaimer.
  20:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  21:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  24:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  27:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  35:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  **************************************************************************************************
  38:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  39:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * Change History
  40:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * --------------
  41:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  42:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * 2015-02-16:
  43:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *     - Initial version for DAVEv4.<BR>
  44:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  45:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * 2015-04-27:
  46:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *     - Optimized the ADC_QUEUE_AllEntriesInserted.<BR>
  47:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  48:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * 2015-06-20:
  49:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *     - Updated the copyright section.<BR>
  50:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  51:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * 2015-06-26:
  52:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *     - Added flushing of all the queue entries before inserting to the Hardware buffer.<BR>
  53:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  54:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * 2015-07-09:
  55:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *     - Documentation updated.<BR>
  56:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  57:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * @endcond
  58:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  *
  59:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  */
  60:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
  61:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**************************************************************************************************
  62:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * HEADER FILES
  63:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  **************************************************************************************************
  64:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
  65:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /** Inclusion of header file */
  66:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #include "adc_queue.h"
  67:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
  68:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**************************************************************************************************
  69:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * MACROS
  70:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  **************************************************************************************************
  71:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #define ADC_QUEUE_INVALID_CHANNEL ((uint8_t)0xff)
  72:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
  73:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**************************************************************************************************
  74:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * LOCAL DATA
  75:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  **************************************************************************************************
  76:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**
  77:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * @ingroup ADC_QUEUE_datastructures
  78:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * @{
  79:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  */
  80:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**
  81:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * This is a 2D array of queue entry lists. There are two lists maintained for each of the groups. 
  82:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * contains entries which can be indexed using channel numbers. This is needed during interrupt pro
  83:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * list contains the same set of entries which can now be indexed by means of queue position entrie
  84:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * for submitting the queue entries in the correct order to the LLD.
  85:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  */
  86:../Dave/Generated/ADC_QUEUE/adc_queue.c **** ADC_QUEUE_ENTRY_t *adc_queue_list_ptrs[ADC_QUEUE_NUM_GROUPS][ADC_QUEUE_NUM_LISTS];
  87:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**
  88:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * @}
  89:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  */
  90:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**************************************************************************************************
  91:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * LOCAL ROUTINES
  92:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  **************************************************************************************************
  93:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /** This function populates the ADC_QUEUE list of pointers and called from ADC_QUEUE_Init().
  94:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * ADC_QUEUE_ResetListContents() is in turn called from the API.
  95:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * This API will just initialize the data structure adc_queue_list_ptrs with the appropriate pointe
  96:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  * This would also reset the values in these lists to defaults.*/
  97:../Dave/Generated/ADC_QUEUE/adc_queue.c **** void ADC_QUEUE_lInitializeListToDefaults(uint8_t instance_num);
  98:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
  99:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* Declaration for the memcpy library function*/
 100:../Dave/Generated/ADC_QUEUE/adc_queue.c **** void *memcpy(void *str1, const void *str2, size_t n);
 101:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 102:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /**************************************************************************************************
 103:../Dave/Generated/ADC_QUEUE/adc_queue.c **** * API IMPLEMENTATION
 104:../Dave/Generated/ADC_QUEUE/adc_queue.c **** ***************************************************************************************************
 105:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /*This function returns the version of the ADC_QUEUE APP*/
 106:../Dave/Generated/ADC_QUEUE/adc_queue.c **** DAVE_APP_VERSION_t ADC_QUEUE_GetAppVersion(void)
 107:../Dave/Generated/ADC_QUEUE/adc_queue.c **** {
 533              	 .loc 3 107 0
 534              	 .cfi_startproc
 535              	 
 536              	 
 537              	 
 538 0000 80B4     	 push {r7}
 539              	.LCFI52:
 540              	 .cfi_def_cfa_offset 4
 541              	 .cfi_offset 7,-4
 542 0002 83B0     	 sub sp,sp,#12
 543              	.LCFI53:
 544              	 .cfi_def_cfa_offset 16
 545 0004 00AF     	 add r7,sp,#0
 546              	.LCFI54:
 547              	 .cfi_def_cfa_register 7
 108:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   DAVE_APP_VERSION_t version;
 109:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 110:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   version.major = (uint8_t) ADC_QUEUE_MAJOR_VERSION;
 548              	 .loc 3 110 0
 549 0006 0423     	 movs r3,#4
 550 0008 3B70     	 strb r3,[r7]
 111:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   version.minor = (uint8_t) ADC_QUEUE_MINOR_VERSION;
 551              	 .loc 3 111 0
 552 000a 0023     	 movs r3,#0
 553 000c 7B70     	 strb r3,[r7,#1]
 112:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   version.patch = (uint8_t) ADC_QUEUE_PATCH_VERSION;
 554              	 .loc 3 112 0
 555 000e 0823     	 movs r3,#8
 556 0010 BB70     	 strb r3,[r7,#2]
 113:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 114:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   return version;
 557              	 .loc 3 114 0
 558 0012 3B1D     	 adds r3,r7,#4
 559 0014 3A46     	 mov r2,r7
 560 0016 1268     	 ldr r2,[r2]
 561 0018 1146     	 mov r1,r2
 562 001a 1980     	 strh r1,[r3]
 563 001c 0233     	 adds r3,r3,#2
 564 001e 120C     	 lsrs r2,r2,#16
 565 0020 1A70     	 strb r2,[r3]
 566 0022 0023     	 movs r3,#0
 567 0024 3A79     	 ldrb r2,[r7,#4]
 568 0026 62F30703 	 bfi r3,r2,#0,#8
 569 002a 7A79     	 ldrb r2,[r7,#5]
 570 002c 62F30F23 	 bfi r3,r2,#8,#8
 571 0030 BA79     	 ldrb r2,[r7,#6]
 572 0032 62F31743 	 bfi r3,r2,#16,#8
 115:../Dave/Generated/ADC_QUEUE/adc_queue.c **** }
 573              	 .loc 3 115 0
 574 0036 1846     	 mov r0,r3
 575 0038 0C37     	 adds r7,r7,#12
 576              	.LCFI55:
 577              	 .cfi_def_cfa_offset 4
 578 003a BD46     	 mov sp,r7
 579              	.LCFI56:
 580              	 .cfi_def_cfa_register 13
 581              	 
 582 003c 5DF8047B 	 ldr r7,[sp],#4
 583              	.LCFI57:
 584              	 .cfi_restore 7
 585              	 .cfi_def_cfa_offset 0
 586 0040 7047     	 bx lr
 587              	 .cfi_endproc
 588              	.LFE213:
 590 0042 00BF     	 .section .text.ADC_QUEUE_ResetListContents,"ax",%progbits
 591              	 .align 2
 592              	 .global ADC_QUEUE_ResetListContents
 593              	 .thumb
 594              	 .thumb_func
 596              	ADC_QUEUE_ResetListContents:
 597              	.LFB214:
 116:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 117:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* API to reset (De-Initialise) contents of all queue entries */
 118:../Dave/Generated/ADC_QUEUE/adc_queue.c **** void ADC_QUEUE_ResetListContents(uint8_t instance_num)
 119:../Dave/Generated/ADC_QUEUE/adc_queue.c **** {
 598              	 .loc 3 119 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602              	 
 603 0000 80B4     	 push {r7}
 604              	.LCFI58:
 605              	 .cfi_def_cfa_offset 4
 606              	 .cfi_offset 7,-4
 607 0002 87B0     	 sub sp,sp,#28
 608              	.LCFI59:
 609              	 .cfi_def_cfa_offset 32
 610 0004 00AF     	 add r7,sp,#0
 611              	.LCFI60:
 612              	 .cfi_def_cfa_register 7
 613 0006 0346     	 mov r3,r0
 614 0008 FB71     	 strb r3,[r7,#7]
 120:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   uint8_t j;
 121:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   uint8_t k;
 122:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *node;
 123:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *list_start;
 124:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 125:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_ASSERT("ADC_QUEUE_ResetListContents:Wrong Instance number",(instance_num < ADC_QUEUE_NUM_APPI
 126:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 127:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   /*
 128:../Dave/Generated/ADC_QUEUE/adc_queue.c ****    * Now reset the contents of all the lists. Application later uses ADC_QUEUE_Insert() to initiali
 129:../Dave/Generated/ADC_QUEUE/adc_queue.c ****    */
 130:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   for (j = 0U; j < ADC_QUEUE_NUM_LISTS; j++)
 615              	 .loc 3 130 0
 616 000a 0023     	 movs r3,#0
 617 000c FB75     	 strb r3,[r7,#23]
 618 000e 22E0     	 b .L26
 619              	.L30:
 131:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 132:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     for (k = 0U; k < ADC_QUEUE_NUM_CHANNELS; k++)
 620              	 .loc 3 132 0
 621 0010 0023     	 movs r3,#0
 622 0012 BB75     	 strb r3,[r7,#22]
 623 0014 19E0     	 b .L27
 624              	.L29:
 133:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 134:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       /* This points to the start of the channel related list*/
 135:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       list_start = adc_queue_list_ptrs[instance_num][j];
 625              	 .loc 3 135 0
 626 0016 FA79     	 ldrb r2,[r7,#7]
 627 0018 FB7D     	 ldrb r3,[r7,#23]
 628 001a 1349     	 ldr r1,.L31
 629 001c 5200     	 lsls r2,r2,#1
 630 001e 1344     	 add r3,r3,r2
 631 0020 51F82330 	 ldr r3,[r1,r3,lsl#2]
 632 0024 3B61     	 str r3,[r7,#16]
 136:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       if ((ADC_QUEUE_ENTRY_t *)NULL != list_start)
 633              	 .loc 3 136 0
 634 0026 3B69     	 ldr r3,[r7,#16]
 635 0028 002B     	 cmp r3,#0
 636 002a 0BD0     	 beq .L28
 137:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       {
 138:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     	/* for each channel related list which is not NULL initialize the channel to ADC_QUEUE_INVALID
 139:../Dave/Generated/ADC_QUEUE/adc_queue.c ****         node = list_start + k;
 637              	 .loc 3 139 0
 638 002c BA7D     	 ldrb r2,[r7,#22]
 639 002e 1346     	 mov r3,r2
 640 0030 5B00     	 lsls r3,r3,#1
 641 0032 1344     	 add r3,r3,r2
 642 0034 9B00     	 lsls r3,r3,#2
 643 0036 1A46     	 mov r2,r3
 644 0038 3B69     	 ldr r3,[r7,#16]
 645 003a 1344     	 add r3,r3,r2
 646 003c FB60     	 str r3,[r7,#12]
 140:../Dave/Generated/ADC_QUEUE/adc_queue.c ****         node->channel_number = ADC_QUEUE_INVALID_CHANNEL;
 647              	 .loc 3 140 0
 648 003e FB68     	 ldr r3,[r7,#12]
 649 0040 FF22     	 movs r2,#255
 650 0042 5A71     	 strb r2,[r3,#5]
 651              	.L28:
 132:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 652              	 .loc 3 132 0 discriminator 2
 653 0044 BB7D     	 ldrb r3,[r7,#22]
 654 0046 0133     	 adds r3,r3,#1
 655 0048 BB75     	 strb r3,[r7,#22]
 656              	.L27:
 132:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 657              	 .loc 3 132 0 is_stmt 0 discriminator 1
 658 004a BB7D     	 ldrb r3,[r7,#22]
 659 004c 072B     	 cmp r3,#7
 660 004e E2D9     	 bls .L29
 130:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 661              	 .loc 3 130 0 is_stmt 1 discriminator 2
 662 0050 FB7D     	 ldrb r3,[r7,#23]
 663 0052 0133     	 adds r3,r3,#1
 664 0054 FB75     	 strb r3,[r7,#23]
 665              	.L26:
 130:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 666              	 .loc 3 130 0 is_stmt 0 discriminator 1
 667 0056 FB7D     	 ldrb r3,[r7,#23]
 668 0058 012B     	 cmp r3,#1
 669 005a D9D9     	 bls .L30
 141:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       }
 142:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 143:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   }
 144:../Dave/Generated/ADC_QUEUE/adc_queue.c **** }
 670              	 .loc 3 144 0 is_stmt 1
 671 005c 1C37     	 adds r7,r7,#28
 672              	.LCFI61:
 673              	 .cfi_def_cfa_offset 4
 674 005e BD46     	 mov sp,r7
 675              	.LCFI62:
 676              	 .cfi_def_cfa_register 13
 677              	 
 678 0060 5DF8047B 	 ldr r7,[sp],#4
 679              	.LCFI63:
 680              	 .cfi_restore 7
 681              	 .cfi_def_cfa_offset 0
 682 0064 7047     	 bx lr
 683              	.L32:
 684 0066 00BF     	 .align 2
 685              	.L31:
 686 0068 00000000 	 .word adc_queue_list_ptrs
 687              	 .cfi_endproc
 688              	.LFE214:
 690              	 .section .text.ADC_QUEUE_Init,"ax",%progbits
 691              	 .align 2
 692              	 .global ADC_QUEUE_Init
 693              	 .thumb
 694              	 .thumb_func
 696              	ADC_QUEUE_Init:
 697              	.LFB215:
 145:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 146:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 147:../Dave/Generated/ADC_QUEUE/adc_queue.c **** ADC_QUEUE_STATUS_t ADC_QUEUE_Init(ADC_QUEUE_t *const handle_ptr)
 148:../Dave/Generated/ADC_QUEUE/adc_queue.c **** {
 698              	 .loc 3 148 0
 699              	 .cfi_startproc
 700              	 
 701              	 
 702 0000 90B5     	 push {r4,r7,lr}
 703              	.LCFI64:
 704              	 .cfi_def_cfa_offset 12
 705              	 .cfi_offset 4,-12
 706              	 .cfi_offset 7,-8
 707              	 .cfi_offset 14,-4
 708 0002 85B0     	 sub sp,sp,#20
 709              	.LCFI65:
 710              	 .cfi_def_cfa_offset 32
 711 0004 00AF     	 add r7,sp,#0
 712              	.LCFI66:
 713              	 .cfi_def_cfa_register 7
 714 0006 7860     	 str r0,[r7,#4]
 149:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_STATUS_t status;
 150:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 151:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_ASSERT("ADC_QUEUE_Init:Invalid handle_ptr", (handle_ptr != NULL))
 152:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 153:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   if (ADC_QUEUE_UNINITIALIZED == handle_ptr->init_status)
 715              	 .loc 3 153 0
 716 0008 7B68     	 ldr r3,[r7,#4]
 717 000a 5B7F     	 ldrb r3,[r3,#29]
 718 000c 022B     	 cmp r3,#2
 719 000e 63D1     	 bne .L34
 154:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 155:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /*Initialization of APP 'GLOBAL_ADC'*/
 156:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     status = (ADC_QUEUE_STATUS_t) GLOBAL_ADC_Init(handle_ptr->global_handle);
 720              	 .loc 3 156 0
 721 0010 7B68     	 ldr r3,[r7,#4]
 722 0012 9B68     	 ldr r3,[r3,#8]
 723 0014 1846     	 mov r0,r3
 724 0016 FFF7FEFF 	 bl GLOBAL_ADC_Init
 725 001a 0346     	 mov r3,r0
 726 001c FB73     	 strb r3,[r7,#15]
 157:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 158:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #ifdef ADC_QUEUE_CPU_1X
 159:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     if ((CPU_CTRL_XMC1_t *)NULL != handle_ptr->cpu_handle)
 160:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 161:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       status = (ADC_QUEUE_STATUS_t)((uint32_t)status + (uint32_t)CPU_CTRL_XMC1_Init(CPU_CTRL_HANDLE
 162:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 163:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #endif
 164:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #ifdef ADC_QUEUE_CPU_4X
 165:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     if ((CPU_CTRL_XMC4_t *)NULL != handle_ptr->cpu_handle)
 727              	 .loc 3 165 0
 728 001e 7B68     	 ldr r3,[r7,#4]
 729 0020 5B69     	 ldr r3,[r3,#20]
 730 0022 002B     	 cmp r3,#0
 731 0024 07D0     	 beq .L35
 166:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 167:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       status = (ADC_QUEUE_STATUS_t)((uint32_t)status + (uint32_t)CPU_CTRL_XMC4_Init(CPU_CTRL_HANDLE
 732              	 .loc 3 167 0
 733 0026 2F48     	 ldr r0,.L38
 734 0028 FFF7FEFF 	 bl CPU_CTRL_XMC4_Init
 735 002c 0346     	 mov r3,r0
 736 002e 1A46     	 mov r2,r3
 737 0030 FB7B     	 ldrb r3,[r7,#15]
 738 0032 1344     	 add r3,r3,r2
 739 0034 FB73     	 strb r3,[r7,#15]
 740              	.L35:
 168:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 169:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #endif
 170:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 171:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /*Class Configuration*/
 172:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     XMC_VADC_GROUP_InputClassInit(handle_ptr->group_handle,handle_ptr->iclass_config_handle,
 741              	 .loc 3 172 0
 742 0036 7B68     	 ldr r3,[r7,#4]
 743 0038 DA68     	 ldr r2,[r3,#12]
 173:../Dave/Generated/ADC_QUEUE/adc_queue.c ****                                   XMC_VADC_GROUP_CONV_STD,handle_ptr->iclass_num);
 744              	 .loc 3 173 0
 745 003a 7B68     	 ldr r3,[r7,#4]
 746 003c DB7F     	 ldrb r3,[r3,#31]
 172:../Dave/Generated/ADC_QUEUE/adc_queue.c ****                                   XMC_VADC_GROUP_CONV_STD,handle_ptr->iclass_num);
 747              	 .loc 3 172 0
 748 003e 1C46     	 mov r4,r3
 749 0040 7B68     	 ldr r3,[r7,#4]
 750 0042 1046     	 mov r0,r2
 751 0044 1968     	 ldr r1,[r3]
 752 0046 0022     	 movs r2,#0
 753 0048 2346     	 mov r3,r4
 754 004a FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 174:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 175:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /* Initialize the Queue hardware */
 176:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     XMC_VADC_GROUP_QueueInit(handle_ptr->group_handle,handle_ptr->queue_config_handle);
 755              	 .loc 3 176 0
 756 004e 7B68     	 ldr r3,[r7,#4]
 757 0050 DA68     	 ldr r2,[r3,#12]
 758 0052 7B68     	 ldr r3,[r7,#4]
 759 0054 5B68     	 ldr r3,[r3,#4]
 760 0056 1046     	 mov r0,r2
 761 0058 1946     	 mov r1,r3
 762 005a FFF7FEFF 	 bl XMC_VADC_GROUP_QueueInit
 177:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   
 178:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /* Configure the gating mode for queue*/
 179:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     XMC_VADC_GROUP_QueueSetGatingMode(handle_ptr->group_handle, handle_ptr->gating_mode);
 763              	 .loc 3 179 0
 764 005e 7B68     	 ldr r3,[r7,#4]
 765 0060 DA68     	 ldr r2,[r3,#12]
 766 0062 7B68     	 ldr r3,[r7,#4]
 767 0064 1B7C     	 ldrb r3,[r3,#16]
 768 0066 1046     	 mov r0,r2
 769 0068 1946     	 mov r1,r3
 770 006a FFF7FEFF 	 bl XMC_VADC_GROUP_QueueSetGatingMode
 180:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 181:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /* Clear the internal data structure of queue APP */
 182:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     ADC_QUEUE_lInitializeListToDefaults(handle_ptr->instance_number);
 771              	 .loc 3 182 0
 772 006e 7B68     	 ldr r3,[r7,#4]
 773 0070 9B7F     	 ldrb r3,[r3,#30]
 774 0072 1846     	 mov r0,r3
 775 0074 FFF7FEFF 	 bl ADC_QUEUE_lInitializeListToDefaults
 183:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   
 184:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /*Interrupt Configuration*/
 185:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     if ((bool)true == handle_ptr->rs_intr_handle->interrupt_enable)
 776              	 .loc 3 185 0
 777 0078 7B68     	 ldr r3,[r7,#4]
 778 007a 9B69     	 ldr r3,[r3,#24]
 779 007c 1B7B     	 ldrb r3,[r3,#12]
 780 007e 002B     	 cmp r3,#0
 781 0080 27D0     	 beq .L36
 186:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 187:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #if (UC_FAMILY == XMC1)
 188:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       NVIC_SetPriority((IRQn_Type)handle_ptr->rs_intr_handle->node_id, handle_ptr->rs_intr_handle->
 189:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #else
 190:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       NVIC_SetPriority((IRQn_Type)handle_ptr->rs_intr_handle->node_id,
 782              	 .loc 3 190 0
 783 0082 7B68     	 ldr r3,[r7,#4]
 784 0084 9B69     	 ldr r3,[r3,#24]
 785 0086 1B68     	 ldr r3,[r3]
 786 0088 DCB2     	 uxtb r4,r3
 787 008a FFF7FEFF 	 bl NVIC_GetPriorityGrouping
 788 008e 0146     	 mov r1,r0
 191:../Dave/Generated/ADC_QUEUE/adc_queue.c ****                         NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 192:../Dave/Generated/ADC_QUEUE/adc_queue.c ****                         handle_ptr->rs_intr_handle->priority,handle_ptr->rs_intr_handle->sub_priori
 789              	 .loc 3 192 0
 790 0090 7B68     	 ldr r3,[r7,#4]
 791 0092 9B69     	 ldr r3,[r3,#24]
 190:../Dave/Generated/ADC_QUEUE/adc_queue.c ****                         NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 792              	 .loc 3 190 0
 793 0094 5A68     	 ldr r2,[r3,#4]
 794              	 .loc 3 192 0
 795 0096 7B68     	 ldr r3,[r7,#4]
 796 0098 9B69     	 ldr r3,[r3,#24]
 190:../Dave/Generated/ADC_QUEUE/adc_queue.c ****                         NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 797              	 .loc 3 190 0
 798 009a 9B68     	 ldr r3,[r3,#8]
 799 009c 0846     	 mov r0,r1
 800 009e 1146     	 mov r1,r2
 801 00a0 1A46     	 mov r2,r3
 802 00a2 FFF7FEFF 	 bl NVIC_EncodePriority
 803 00a6 0246     	 mov r2,r0
 804 00a8 63B2     	 sxtb r3,r4
 805 00aa 1846     	 mov r0,r3
 806 00ac 1146     	 mov r1,r2
 807 00ae FFF7FEFF 	 bl NVIC_SetPriority
 193:../Dave/Generated/ADC_QUEUE/adc_queue.c **** #endif
 194:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 195:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       /* Connect RS Events to NVIC nodes */
 196:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(handle_ptr->group_handle,
 808              	 .loc 3 196 0
 809 00b2 7B68     	 ldr r3,[r7,#4]
 810 00b4 DA68     	 ldr r2,[r3,#12]
 811 00b6 7B68     	 ldr r3,[r7,#4]
 812 00b8 1B7F     	 ldrb r3,[r3,#28]
 813 00ba 1046     	 mov r0,r2
 814 00bc 1946     	 mov r1,r3
 815 00be FFF7FEFF 	 bl XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
 197:../Dave/Generated/ADC_QUEUE/adc_queue.c ****                                                       (XMC_VADC_SR_t)handle_ptr->srv_req_node);
 198:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 199:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       /* Enable Interrupt */
 200:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       NVIC_EnableIRQ((IRQn_Type)handle_ptr->rs_intr_handle->node_id);
 816              	 .loc 3 200 0
 817 00c2 7B68     	 ldr r3,[r7,#4]
 818 00c4 9B69     	 ldr r3,[r3,#24]
 819 00c6 1B68     	 ldr r3,[r3]
 820 00c8 DBB2     	 uxtb r3,r3
 821 00ca 5BB2     	 sxtb r3,r3
 822 00cc 1846     	 mov r0,r3
 823 00ce FFF7FEFF 	 bl NVIC_EnableIRQ
 824              	.L36:
 201:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 202:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     handle_ptr->init_status = status;
 825              	 .loc 3 202 0
 826 00d2 7B68     	 ldr r3,[r7,#4]
 827 00d4 FA7B     	 ldrb r2,[r7,#15]
 828 00d6 5A77     	 strb r2,[r3,#29]
 829              	.L34:
 203:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   }
 204:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   return (handle_ptr->init_status);
 830              	 .loc 3 204 0
 831 00d8 7B68     	 ldr r3,[r7,#4]
 832 00da 5B7F     	 ldrb r3,[r3,#29]
 205:../Dave/Generated/ADC_QUEUE/adc_queue.c **** }
 833              	 .loc 3 205 0
 834 00dc 1846     	 mov r0,r3
 835 00de 1437     	 adds r7,r7,#20
 836              	.LCFI67:
 837              	 .cfi_def_cfa_offset 12
 838 00e0 BD46     	 mov sp,r7
 839              	.LCFI68:
 840              	 .cfi_def_cfa_register 13
 841              	 
 842 00e2 90BD     	 pop {r4,r7,pc}
 843              	.L39:
 844              	 .align 2
 845              	.L38:
 846 00e4 00000000 	 .word CPU_CTRL_XMC4_0
 847              	 .cfi_endproc
 848              	.LFE215:
 850              	 .section .text.ADC_QUEUE_InsertQueueEntry,"ax",%progbits
 851              	 .align 2
 852              	 .global ADC_QUEUE_InsertQueueEntry
 853              	 .thumb
 854              	 .thumb_func
 856              	ADC_QUEUE_InsertQueueEntry:
 857              	.LFB216:
 206:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 207:../Dave/Generated/ADC_QUEUE/adc_queue.c **** void ADC_QUEUE_InsertQueueEntry(ADC_QUEUE_t* handle_ptr, const ADC_QUEUE_ENTRY_t *entry)
 208:../Dave/Generated/ADC_QUEUE/adc_queue.c **** {
 858              	 .loc 3 208 0
 859              	 .cfi_startproc
 860              	 
 861              	 
 862 0000 80B5     	 push {r7,lr}
 863              	.LCFI69:
 864              	 .cfi_def_cfa_offset 8
 865              	 .cfi_offset 7,-8
 866              	 .cfi_offset 14,-4
 867 0002 84B0     	 sub sp,sp,#16
 868              	.LCFI70:
 869              	 .cfi_def_cfa_offset 24
 870 0004 00AF     	 add r7,sp,#0
 871              	.LCFI71:
 872              	 .cfi_def_cfa_register 7
 873 0006 7860     	 str r0,[r7,#4]
 874 0008 3960     	 str r1,[r7]
 209:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *node;
 210:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 211:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_ASSERT("ADC_QUEUE_Insert:Invalid handle_ptr", (handle_ptr != NULL))
 212:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_ASSERT("ADC_QUEUE_Insert:Invalid queue entry", (entry != NULL))
 213:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 214:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   /* 1. Insert this entry into a list which is arranged on the basis of channel numbers */
 215:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   node = adc_queue_list_ptrs[handle_ptr->instance_number][ADC_QUEUE_CH_INDEX];
 875              	 .loc 3 215 0
 876 000a 7B68     	 ldr r3,[r7,#4]
 877 000c 9B7F     	 ldrb r3,[r3,#30]
 878 000e 1A46     	 mov r2,r3
 879 0010 164B     	 ldr r3,.L41
 880 0012 53F83230 	 ldr r3,[r3,r2,lsl#3]
 881 0016 FB60     	 str r3,[r7,#12]
 216:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   node = node + (entry->channel_number);
 882              	 .loc 3 216 0
 883 0018 3B68     	 ldr r3,[r7]
 884 001a 5B79     	 ldrb r3,[r3,#5]
 885 001c 1A46     	 mov r2,r3
 886 001e 1346     	 mov r3,r2
 887 0020 5B00     	 lsls r3,r3,#1
 888 0022 1344     	 add r3,r3,r2
 889 0024 9B00     	 lsls r3,r3,#2
 890 0026 1A46     	 mov r2,r3
 891 0028 FB68     	 ldr r3,[r7,#12]
 892 002a 1344     	 add r3,r3,r2
 893 002c FB60     	 str r3,[r7,#12]
 217:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   memcpy((void *)node, (void *)entry, sizeof(ADC_QUEUE_ENTRY_t)); 
 894              	 .loc 3 217 0
 895 002e F868     	 ldr r0,[r7,#12]
 896 0030 3968     	 ldr r1,[r7]
 897 0032 0C22     	 movs r2,#12
 898 0034 FFF7FEFF 	 bl memcpy
 218:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 219:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   /* Insert the same entry into a list which is arranged on the basis of the position of the channe
 220:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   node = adc_queue_list_ptrs[handle_ptr->instance_number][ADC_QUEUE_POS_INDEX];
 899              	 .loc 3 220 0
 900 0038 7B68     	 ldr r3,[r7,#4]
 901 003a 9B7F     	 ldrb r3,[r3,#30]
 902 003c 0B4A     	 ldr r2,.L41
 903 003e DB00     	 lsls r3,r3,#3
 904 0040 1344     	 add r3,r3,r2
 905 0042 5B68     	 ldr r3,[r3,#4]
 906 0044 FB60     	 str r3,[r7,#12]
 221:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   node = node + (entry->queue_position);
 907              	 .loc 3 221 0
 908 0046 3B68     	 ldr r3,[r7]
 909 0048 1B79     	 ldrb r3,[r3,#4]
 910 004a 1A46     	 mov r2,r3
 911 004c 1346     	 mov r3,r2
 912 004e 5B00     	 lsls r3,r3,#1
 913 0050 1344     	 add r3,r3,r2
 914 0052 9B00     	 lsls r3,r3,#2
 915 0054 1A46     	 mov r2,r3
 916 0056 FB68     	 ldr r3,[r7,#12]
 917 0058 1344     	 add r3,r3,r2
 918 005a FB60     	 str r3,[r7,#12]
 222:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   memcpy((void *)node, (void *)entry, sizeof(ADC_QUEUE_ENTRY_t));
 919              	 .loc 3 222 0
 920 005c F868     	 ldr r0,[r7,#12]
 921 005e 3968     	 ldr r1,[r7]
 922 0060 0C22     	 movs r2,#12
 923 0062 FFF7FEFF 	 bl memcpy
 223:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 224:../Dave/Generated/ADC_QUEUE/adc_queue.c **** }
 924              	 .loc 3 224 0
 925 0066 1037     	 adds r7,r7,#16
 926              	.LCFI72:
 927              	 .cfi_def_cfa_offset 8
 928 0068 BD46     	 mov sp,r7
 929              	.LCFI73:
 930              	 .cfi_def_cfa_register 13
 931              	 
 932 006a 80BD     	 pop {r7,pc}
 933              	.L42:
 934              	 .align 2
 935              	.L41:
 936 006c 00000000 	 .word adc_queue_list_ptrs
 937              	 .cfi_endproc
 938              	.LFE216:
 940              	 .section .text.ADC_QUEUE_AllEntriesInserted,"ax",%progbits
 941              	 .align 2
 942              	 .global ADC_QUEUE_AllEntriesInserted
 943              	 .thumb
 944              	 .thumb_func
 946              	ADC_QUEUE_AllEntriesInserted:
 947              	.LFB217:
 225:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 226:../Dave/Generated/ADC_QUEUE/adc_queue.c **** void ADC_QUEUE_AllEntriesInserted(ADC_QUEUE_t* handle_ptr)
 227:../Dave/Generated/ADC_QUEUE/adc_queue.c **** {
 948              	 .loc 3 227 0
 949              	 .cfi_startproc
 950              	 
 951              	 
 952 0000 80B5     	 push {r7,lr}
 953              	.LCFI74:
 954              	 .cfi_def_cfa_offset 8
 955              	 .cfi_offset 7,-8
 956              	 .cfi_offset 14,-4
 957 0002 86B0     	 sub sp,sp,#24
 958              	.LCFI75:
 959              	 .cfi_def_cfa_offset 32
 960 0004 00AF     	 add r7,sp,#0
 961              	.LCFI76:
 962              	 .cfi_def_cfa_register 7
 963 0006 7860     	 str r0,[r7,#4]
 228:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *node;
 229:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *start_node;
 230:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_VADC_QUEUE_ENTRY_t entry;
 231:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   uint32_t pos_index;
 232:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   
 233:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_ASSERT("ADC_QUEUE_AllEntriesInserted:Invalid handle_ptr", (handle_ptr != NULL))
 234:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 235:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   /* All entries have been submitted. The queue hardware may now be programmed in the right order. 
 236:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   start_node = adc_queue_list_ptrs[handle_ptr->instance_number][ADC_QUEUE_POS_INDEX];
 964              	 .loc 3 236 0
 965 0008 7B68     	 ldr r3,[r7,#4]
 966 000a 9B7F     	 ldrb r3,[r3,#30]
 967 000c 264A     	 ldr r2,.L47
 968 000e DB00     	 lsls r3,r3,#3
 969 0010 1344     	 add r3,r3,r2
 970 0012 5B68     	 ldr r3,[r3,#4]
 971 0014 3B61     	 str r3,[r7,#16]
 237:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 238:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   /* Flush any entries that are currently in the queue buffer*/
 239:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_VADC_GROUP_QueueFlushEntries(handle_ptr->group_handle);
 972              	 .loc 3 239 0
 973 0016 7B68     	 ldr r3,[r7,#4]
 974 0018 DB68     	 ldr r3,[r3,#12]
 975 001a 1846     	 mov r0,r3
 976 001c FFF7FEFF 	 bl XMC_VADC_GROUP_QueueFlushEntries
 240:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 241:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   for (pos_index = 0U; pos_index < ADC_QUEUE_NUM_CHANNELS; pos_index++)
 977              	 .loc 3 241 0
 978 0020 0023     	 movs r3,#0
 979 0022 7B61     	 str r3,[r7,#20]
 980 0024 39E0     	 b .L44
 981              	.L46:
 242:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 243:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     node = start_node +  pos_index;
 982              	 .loc 3 243 0
 983 0026 7A69     	 ldr r2,[r7,#20]
 984 0028 1346     	 mov r3,r2
 985 002a 5B00     	 lsls r3,r3,#1
 986 002c 1344     	 add r3,r3,r2
 987 002e 9B00     	 lsls r3,r3,#2
 988 0030 1A46     	 mov r2,r3
 989 0032 3B69     	 ldr r3,[r7,#16]
 990 0034 1344     	 add r3,r3,r2
 991 0036 FB60     	 str r3,[r7,#12]
 244:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     
 245:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     if (ADC_QUEUE_INVALID_CHANNEL != node->channel_number)
 992              	 .loc 3 245 0
 993 0038 FB68     	 ldr r3,[r7,#12]
 994 003a 5B79     	 ldrb r3,[r3,#5]
 995 003c FF2B     	 cmp r3,#255
 996 003e 29D0     	 beq .L45
 246:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 247:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       /* Create a queue entry object for the LLD */
 248:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       entry.channel_num   = (uint8_t) node->channel_number;
 997              	 .loc 3 248 0
 998 0040 FB68     	 ldr r3,[r7,#12]
 999 0042 5B79     	 ldrb r3,[r3,#5]
 1000 0044 03F01F03 	 and r3,r3,#31
 1001 0048 DAB2     	 uxtb r2,r3
 1002 004a 3B7A     	 ldrb r3,[r7,#8]
 1003 004c 62F30403 	 bfi r3,r2,#0,#5
 1004 0050 3B72     	 strb r3,[r7,#8]
 249:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       entry.refill_needed = (uint32_t) node->refill_needed;
 1005              	 .loc 3 249 0
 1006 0052 FB68     	 ldr r3,[r7,#12]
 1007 0054 DB79     	 ldrb r3,[r3,#7]
 1008 0056 03F00103 	 and r3,r3,#1
 1009 005a DAB2     	 uxtb r2,r3
 1010 005c 3B7A     	 ldrb r3,[r7,#8]
 1011 005e 62F34513 	 bfi r3,r2,#5,#1
 1012 0062 3B72     	 strb r3,[r7,#8]
 250:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       entry.generate_interrupt = (uint32_t) node->rs_event_notification;
 1013              	 .loc 3 250 0
 1014 0064 FB68     	 ldr r3,[r7,#12]
 1015 0066 5B7A     	 ldrb r3,[r3,#9]
 1016 0068 03F00103 	 and r3,r3,#1
 1017 006c DAB2     	 uxtb r2,r3
 1018 006e 3B7A     	 ldrb r3,[r7,#8]
 1019 0070 62F38613 	 bfi r3,r2,#6,#1
 1020 0074 3B72     	 strb r3,[r7,#8]
 251:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       entry.external_trigger   = (uint32_t)node->trigger_needed;
 1021              	 .loc 3 251 0
 1022 0076 FB68     	 ldr r3,[r7,#12]
 1023 0078 9B79     	 ldrb r3,[r3,#6]
 1024 007a 03F00103 	 and r3,r3,#1
 1025 007e DAB2     	 uxtb r2,r3
 1026 0080 3B7A     	 ldrb r3,[r7,#8]
 1027 0082 62F3C713 	 bfi r3,r2,#7,#1
 1028 0086 3B72     	 strb r3,[r7,#8]
 252:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       
 253:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       /* Request the LLD to insert the channel */
 254:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       XMC_VADC_GROUP_QueueInsertChannel(handle_ptr->group_handle, entry);
 1029              	 .loc 3 254 0
 1030 0088 7B68     	 ldr r3,[r7,#4]
 1031 008a DB68     	 ldr r3,[r3,#12]
 1032 008c 1846     	 mov r0,r3
 1033 008e B968     	 ldr r1,[r7,#8]
 1034 0090 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueInsertChannel
 1035              	.L45:
 241:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 1036              	 .loc 3 241 0 discriminator 2
 1037 0094 7B69     	 ldr r3,[r7,#20]
 1038 0096 0133     	 adds r3,r3,#1
 1039 0098 7B61     	 str r3,[r7,#20]
 1040              	.L44:
 241:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 1041              	 .loc 3 241 0 is_stmt 0 discriminator 1
 1042 009a 7B69     	 ldr r3,[r7,#20]
 1043 009c 072B     	 cmp r3,#7
 1044 009e C2D9     	 bls .L46
 255:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 256:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   }
 257:../Dave/Generated/ADC_QUEUE/adc_queue.c **** }
 1045              	 .loc 3 257 0 is_stmt 1
 1046 00a0 1837     	 adds r7,r7,#24
 1047              	.LCFI77:
 1048              	 .cfi_def_cfa_offset 8
 1049 00a2 BD46     	 mov sp,r7
 1050              	.LCFI78:
 1051              	 .cfi_def_cfa_register 13
 1052              	 
 1053 00a4 80BD     	 pop {r7,pc}
 1054              	.L48:
 1055 00a6 00BF     	 .align 2
 1056              	.L47:
 1057 00a8 00000000 	 .word adc_queue_list_ptrs
 1058              	 .cfi_endproc
 1059              	.LFE217:
 1061              	 .section .text.ADC_QUEUE_ChannelEventHandler,"ax",%progbits
 1062              	 .align 2
 1063              	 .global ADC_QUEUE_ChannelEventHandler
 1064              	 .thumb
 1065              	 .thumb_func
 1067              	ADC_QUEUE_ChannelEventHandler:
 1068              	.LFB218:
 258:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 259:../Dave/Generated/ADC_QUEUE/adc_queue.c **** void ADC_QUEUE_ChannelEventHandler(ADC_QUEUE_t* handle_ptr)
 260:../Dave/Generated/ADC_QUEUE/adc_queue.c **** {
 1069              	 .loc 3 260 0
 1070              	 .cfi_startproc
 1071              	 
 1072              	 
 1073 0000 80B5     	 push {r7,lr}
 1074              	.LCFI79:
 1075              	 .cfi_def_cfa_offset 8
 1076              	 .cfi_offset 7,-8
 1077              	 .cfi_offset 14,-4
 1078 0002 86B0     	 sub sp,sp,#24
 1079              	.LCFI80:
 1080              	 .cfi_def_cfa_offset 32
 1081 0004 00AF     	 add r7,sp,#0
 1082              	.LCFI81:
 1083              	 .cfi_def_cfa_register 7
 1084 0006 7860     	 str r0,[r7,#4]
 261:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   uint32_t ceflag;
 262:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   uint32_t ch_index;
 263:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *node;
 264:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   
 265:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_ASSERT("ADC_QUEUE_ChannelEventHandler:Invalid handle_ptr", (handle_ptr != NULL))
 266:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 267:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   /*. Identify the channel which has just been converted */
 268:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ceflag = handle_ptr->group_handle->CEFLAG;
 1085              	 .loc 3 268 0
 1086 0008 7B68     	 ldr r3,[r7,#4]
 1087 000a DB68     	 ldr r3,[r3,#12]
 1088 000c D3F88031 	 ldr r3,[r3,#384]
 1089 0010 3B61     	 str r3,[r7,#16]
 269:../Dave/Generated/ADC_QUEUE/adc_queue.c ****  
 270:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   for (ch_index = 0U; ch_index < ADC_QUEUE_NUM_CHANNELS; ch_index++)
 1090              	 .loc 3 270 0
 1091 0012 0023     	 movs r3,#0
 1092 0014 7B61     	 str r3,[r7,#20]
 1093 0016 0BE0     	 b .L50
 1094              	.L53:
 271:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 272:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     if ((ceflag >> ch_index) & 1U)
 1095              	 .loc 3 272 0
 1096 0018 7B69     	 ldr r3,[r7,#20]
 1097 001a 3A69     	 ldr r2,[r7,#16]
 1098 001c 22FA03F3 	 lsr r3,r2,r3
 1099 0020 03F00103 	 and r3,r3,#1
 1100 0024 002B     	 cmp r3,#0
 1101 0026 00D0     	 beq .L51
 273:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 274:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       break;
 1102              	 .loc 3 274 0
 1103 0028 05E0     	 b .L52
 1104              	.L51:
 270:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 1105              	 .loc 3 270 0 discriminator 2
 1106 002a 7B69     	 ldr r3,[r7,#20]
 1107 002c 0133     	 adds r3,r3,#1
 1108 002e 7B61     	 str r3,[r7,#20]
 1109              	.L50:
 270:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 1110              	 .loc 3 270 0 is_stmt 0 discriminator 1
 1111 0030 7B69     	 ldr r3,[r7,#20]
 1112 0032 072B     	 cmp r3,#7
 1113 0034 F0D9     	 bls .L53
 1114              	.L52:
 275:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 276:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   }
 277:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   
 278:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   if (ADC_QUEUE_NUM_CHANNELS != ch_index )
 1115              	 .loc 3 278 0 is_stmt 1
 1116 0036 7B69     	 ldr r3,[r7,#20]
 1117 0038 082B     	 cmp r3,#8
 1118 003a 1CD0     	 beq .L49
 279:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 280:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /* Clear the event and exit the ISR */
 281:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     XMC_VADC_GROUP_ChannelClearEvent(handle_ptr->group_handle,ch_index);
 1119              	 .loc 3 281 0
 1120 003c 7B68     	 ldr r3,[r7,#4]
 1121 003e DB68     	 ldr r3,[r3,#12]
 1122 0040 1846     	 mov r0,r3
 1123 0042 7969     	 ldr r1,[r7,#20]
 1124 0044 FFF7FEFF 	 bl XMC_VADC_GROUP_ChannelClearEvent
 282:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 283:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /* Get the list entry corresponding to this channel */
 284:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     node = adc_queue_list_ptrs[handle_ptr->instance_number][ADC_QUEUE_CH_INDEX];
 1125              	 .loc 3 284 0
 1126 0048 7B68     	 ldr r3,[r7,#4]
 1127 004a 9B7F     	 ldrb r3,[r3,#30]
 1128 004c 1A46     	 mov r2,r3
 1129 004e 0B4B     	 ldr r3,.L55
 1130 0050 53F83230 	 ldr r3,[r3,r2,lsl#3]
 1131 0054 FB60     	 str r3,[r7,#12]
 285:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     node = node + ch_index;
 1132              	 .loc 3 285 0
 1133 0056 7A69     	 ldr r2,[r7,#20]
 1134 0058 1346     	 mov r3,r2
 1135 005a 5B00     	 lsls r3,r3,#1
 1136 005c 1344     	 add r3,r3,r2
 1137 005e 9B00     	 lsls r3,r3,#2
 1138 0060 1A46     	 mov r2,r3
 1139 0062 FB68     	 ldr r3,[r7,#12]
 1140 0064 1344     	 add r3,r3,r2
 1141 0066 FB60     	 str r3,[r7,#12]
 286:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 287:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     /* Find out if application has requested for channel event notification for the channel in ques
 288:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     if ((bool)true == node->ch_event_notification)
 1142              	 .loc 3 288 0
 1143 0068 FB68     	 ldr r3,[r7,#12]
 1144 006a 1B7A     	 ldrb r3,[r3,#8]
 1145 006c 002B     	 cmp r3,#0
 1146 006e 02D0     	 beq .L49
 289:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 290:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       (node->adc_event_callback)();
 1147              	 .loc 3 290 0
 1148 0070 FB68     	 ldr r3,[r7,#12]
 1149 0072 1B68     	 ldr r3,[r3]
 1150 0074 9847     	 blx r3
 1151              	.L49:
 291:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 292:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   }
 293:../Dave/Generated/ADC_QUEUE/adc_queue.c **** }
 1152              	 .loc 3 293 0
 1153 0076 1837     	 adds r7,r7,#24
 1154              	.LCFI82:
 1155              	 .cfi_def_cfa_offset 8
 1156 0078 BD46     	 mov sp,r7
 1157              	.LCFI83:
 1158              	 .cfi_def_cfa_register 13
 1159              	 
 1160 007a 80BD     	 pop {r7,pc}
 1161              	.L56:
 1162              	 .align 2
 1163              	.L55:
 1164 007c 00000000 	 .word adc_queue_list_ptrs
 1165              	 .cfi_endproc
 1166              	.LFE218:
 1168              	 .section .text.ADC_QUEUE_ReqSrcEventHandler,"ax",%progbits
 1169              	 .align 2
 1170              	 .global ADC_QUEUE_ReqSrcEventHandler
 1171              	 .thumb
 1172              	 .thumb_func
 1174              	ADC_QUEUE_ReqSrcEventHandler:
 1175              	.LFB219:
 294:../Dave/Generated/ADC_QUEUE/adc_queue.c **** /* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 295:../Dave/Generated/ADC_QUEUE/adc_queue.c **** void ADC_QUEUE_ReqSrcEventHandler(ADC_QUEUE_t* handle_ptr)
 296:../Dave/Generated/ADC_QUEUE/adc_queue.c **** {
 1176              	 .loc 3 296 0
 1177              	 .cfi_startproc
 1178              	 
 1179              	 
 1180 0000 80B5     	 push {r7,lr}
 1181              	.LCFI84:
 1182              	 .cfi_def_cfa_offset 8
 1183              	 .cfi_offset 7,-8
 1184              	 .cfi_offset 14,-4
 1185 0002 86B0     	 sub sp,sp,#24
 1186              	.LCFI85:
 1187              	 .cfi_def_cfa_offset 32
 1188 0004 00AF     	 add r7,sp,#0
 1189              	.LCFI86:
 1190              	 .cfi_def_cfa_register 7
 1191 0006 7860     	 str r0,[r7,#4]
 297:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *start_node;
 298:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   ADC_QUEUE_ENTRY_t *node;
 299:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   uint32_t pos_index;
 300:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   
 301:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_ASSERT("ADC_QUEUE_ReqSrcEventHandler:Invalid handle_ptr", (handle_ptr != NULL))
 302:../Dave/Generated/ADC_QUEUE/adc_queue.c **** 
 303:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   XMC_VADC_GROUP_QueueClearReqSrcEvent(handle_ptr->group_handle);
 1192              	 .loc 3 303 0
 1193 0008 7B68     	 ldr r3,[r7,#4]
 1194 000a DB68     	 ldr r3,[r3,#12]
 1195 000c 1846     	 mov r0,r3
 1196 000e FFF7FEFF 	 bl XMC_VADC_GROUP_QueueClearReqSrcEvent
 304:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   
 305:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   start_node = adc_queue_list_ptrs[handle_ptr->instance_number][ADC_QUEUE_POS_INDEX];
 1197              	 .loc 3 305 0
 1198 0012 7B68     	 ldr r3,[r7,#4]
 1199 0014 9B7F     	 ldrb r3,[r3,#30]
 1200 0016 124A     	 ldr r2,.L61
 1201 0018 DB00     	 lsls r3,r3,#3
 1202 001a 1344     	 add r3,r3,r2
 1203 001c 5B68     	 ldr r3,[r3,#4]
 1204 001e 3B61     	 str r3,[r7,#16]
 306:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   /* Iterate over all the valid entries and locate entries that requested a request source notifica
 307:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   for ( pos_index = 0U; pos_index < ADC_QUEUE_NUM_CHANNELS; pos_index++)
 1205              	 .loc 3 307 0
 1206 0020 0023     	 movs r3,#0
 1207 0022 7B61     	 str r3,[r7,#20]
 1208 0024 16E0     	 b .L58
 1209              	.L60:
 308:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 309:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     node = start_node + pos_index;
 1210              	 .loc 3 309 0
 1211 0026 7A69     	 ldr r2,[r7,#20]
 1212 0028 1346     	 mov r3,r2
 1213 002a 5B00     	 lsls r3,r3,#1
 1214 002c 1344     	 add r3,r3,r2
 1215 002e 9B00     	 lsls r3,r3,#2
 1216 0030 1A46     	 mov r2,r3
 1217 0032 3B69     	 ldr r3,[r7,#16]
 1218 0034 1344     	 add r3,r3,r2
 1219 0036 FB60     	 str r3,[r7,#12]
 310:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     if (node->channel_number != ADC_QUEUE_INVALID_CHANNEL)
 1220              	 .loc 3 310 0
 1221 0038 FB68     	 ldr r3,[r7,#12]
 1222 003a 5B79     	 ldrb r3,[r3,#5]
 1223 003c FF2B     	 cmp r3,#255
 1224 003e 06D0     	 beq .L59
 311:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     {
 312:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       /*if a queue entry has requested a request source notification, invoke the callback*/
 313:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       if ((bool)true == node->rs_event_notification)
 1225              	 .loc 3 313 0
 1226 0040 FB68     	 ldr r3,[r7,#12]
 1227 0042 5B7A     	 ldrb r3,[r3,#9]
 1228 0044 002B     	 cmp r3,#0
 1229 0046 02D0     	 beq .L59
 314:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       {
 315:../Dave/Generated/ADC_QUEUE/adc_queue.c ****         (node->adc_event_callback)();
 1230              	 .loc 3 315 0
 1231 0048 FB68     	 ldr r3,[r7,#12]
 1232 004a 1B68     	 ldr r3,[r3]
 1233 004c 9847     	 blx r3
 1234              	.L59:
 307:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 1235              	 .loc 3 307 0 discriminator 2
 1236 004e 7B69     	 ldr r3,[r7,#20]
 1237 0050 0133     	 adds r3,r3,#1
 1238 0052 7B61     	 str r3,[r7,#20]
 1239              	.L58:
 307:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   {
 1240              	 .loc 3 307 0 is_stmt 0 discriminator 1
 1241 0054 7B69     	 ldr r3,[r7,#20]
 1242 0056 072B     	 cmp r3,#7
 1243 0058 E5D9     	 bls .L60
 316:../Dave/Generated/ADC_QUEUE/adc_queue.c ****       }
 317:../Dave/Generated/ADC_QUEUE/adc_queue.c ****     }
 318:../Dave/Generated/ADC_QUEUE/adc_queue.c ****   }  
 319:../Dave/Generated/ADC_QUEUE/adc_queue.c **** }
 1244              	 .loc 3 319 0 is_stmt 1
 1245 005a 1837     	 adds r7,r7,#24
 1246              	.LCFI87:
 1247              	 .cfi_def_cfa_offset 8
 1248 005c BD46     	 mov sp,r7
 1249              	.LCFI88:
 1250              	 .cfi_def_cfa_register 13
 1251              	 
 1252 005e 80BD     	 pop {r7,pc}
 1253              	.L62:
 1254              	 .align 2
 1255              	.L61:
 1256 0060 00000000 	 .word adc_queue_list_ptrs
 1257              	 .cfi_endproc
 1258              	.LFE219:
 1260              	 .text
 1261              	.Letext0:
 1262              	 .file 4 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1263              	 .file 5 "c:\\davev4\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1264              	 .file 6 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1265              	 .file 7 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003\\Dave\\Generated/DAVE_common.h"
 1266              	 .file 8 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003\\Dave\\Generated/GLOBAL_ADC/global_adc.h"
 1267              	 .file 9 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003\\Dave\\Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.h"
 1268              	 .file 10 "../Dave/Generated/ADC_QUEUE/adc_queue.h"
 1269              	 .file 11 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
 1270              	 .file 12 "C:\\Workspaces\\DAVE-4.1\\S2G2_MD_SA_W002\\S2GTWO_MD_SA_T003\\Dave\\Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 adc_queue.c
    {standard input}:20     .text.NVIC_GetPriorityGrouping:00000000 $t
    {standard input}:24     .text.NVIC_GetPriorityGrouping:00000000 NVIC_GetPriorityGrouping
    {standard input}:58     .text.NVIC_GetPriorityGrouping:00000018 $d
    {standard input}:63     .text.NVIC_EnableIRQ:00000000 $t
    {standard input}:67     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
    {standard input}:111    .text.NVIC_EnableIRQ:0000002c $d
    {standard input}:116    .text.NVIC_SetPriority:00000000 $t
    {standard input}:120    .text.NVIC_SetPriority:00000000 NVIC_SetPriority
    {standard input}:183    .text.NVIC_SetPriority:0000004c $d
    {standard input}:189    .text.NVIC_EncodePriority:00000000 $t
    {standard input}:193    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
    {standard input}:277    .text.XMC_VADC_GROUP_QueueSetGatingMode:00000000 $t
    {standard input}:281    .text.XMC_VADC_GROUP_QueueSetGatingMode:00000000 XMC_VADC_GROUP_QueueSetGatingMode
    {standard input}:332    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 $t
    {standard input}:336    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 XMC_VADC_GROUP_QueueFlushEntries
    {standard input}:386    .text.XMC_VADC_GROUP_QueueInsertChannel:00000000 $t
    {standard input}:390    .text.XMC_VADC_GROUP_QueueInsertChannel:00000000 XMC_VADC_GROUP_QueueInsertChannel
    {standard input}:430    .text.XMC_VADC_GROUP_QueueClearReqSrcEvent:00000000 $t
    {standard input}:434    .text.XMC_VADC_GROUP_QueueClearReqSrcEvent:00000000 XMC_VADC_GROUP_QueueClearReqSrcEvent
    {standard input}:475    .text.XMC_VADC_GROUP_ChannelClearEvent:00000000 $t
    {standard input}:479    .text.XMC_VADC_GROUP_ChannelClearEvent:00000000 XMC_VADC_GROUP_ChannelClearEvent
                            *COM*:00000010 adc_queue_list_ptrs
    {standard input}:525    .text.ADC_QUEUE_GetAppVersion:00000000 $t
    {standard input}:530    .text.ADC_QUEUE_GetAppVersion:00000000 ADC_QUEUE_GetAppVersion
    {standard input}:591    .text.ADC_QUEUE_ResetListContents:00000000 $t
    {standard input}:596    .text.ADC_QUEUE_ResetListContents:00000000 ADC_QUEUE_ResetListContents
    {standard input}:686    .text.ADC_QUEUE_ResetListContents:00000068 $d
    {standard input}:691    .text.ADC_QUEUE_Init:00000000 $t
    {standard input}:696    .text.ADC_QUEUE_Init:00000000 ADC_QUEUE_Init
    {standard input}:846    .text.ADC_QUEUE_Init:000000e4 $d
    {standard input}:851    .text.ADC_QUEUE_InsertQueueEntry:00000000 $t
    {standard input}:856    .text.ADC_QUEUE_InsertQueueEntry:00000000 ADC_QUEUE_InsertQueueEntry
    {standard input}:936    .text.ADC_QUEUE_InsertQueueEntry:0000006c $d
    {standard input}:941    .text.ADC_QUEUE_AllEntriesInserted:00000000 $t
    {standard input}:946    .text.ADC_QUEUE_AllEntriesInserted:00000000 ADC_QUEUE_AllEntriesInserted
    {standard input}:1057   .text.ADC_QUEUE_AllEntriesInserted:000000a8 $d
    {standard input}:1062   .text.ADC_QUEUE_ChannelEventHandler:00000000 $t
    {standard input}:1067   .text.ADC_QUEUE_ChannelEventHandler:00000000 ADC_QUEUE_ChannelEventHandler
    {standard input}:1164   .text.ADC_QUEUE_ChannelEventHandler:0000007c $d
    {standard input}:1169   .text.ADC_QUEUE_ReqSrcEventHandler:00000000 $t
    {standard input}:1174   .text.ADC_QUEUE_ReqSrcEventHandler:00000000 ADC_QUEUE_ReqSrcEventHandler
    {standard input}:1256   .text.ADC_QUEUE_ReqSrcEventHandler:00000060 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_ADC_Init
CPU_CTRL_XMC4_Init
XMC_VADC_GROUP_InputClassInit
XMC_VADC_GROUP_QueueInit
ADC_QUEUE_lInitializeListToDefaults
XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
CPU_CTRL_XMC4_0
memcpy
