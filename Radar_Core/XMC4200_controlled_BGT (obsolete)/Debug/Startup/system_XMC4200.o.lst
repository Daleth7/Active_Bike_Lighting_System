   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "system_XMC4200.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .global SystemCoreClock
  19              	 .section .no_init,"aw",%progbits
  20              	 .align 2
  23              	SystemCoreClock:
  24 0000 00000000 	 .space 4
  25              	 .global g_chipid
  26              	 .align 2
  29              	g_chipid:
  30 0004 00000000 	 .space 16
  30      00000000 
  30      00000000 
  30      00000000 
  31              	 .global g_hrpwm_char_data
  32              	 .align 2
  35              	g_hrpwm_char_data:
  36 0014 00000000 	 .space 12
  36      00000000 
  36      00000000 
  37              	 .section .text.delay,"ax",%progbits
  38              	 .align 2
  39              	 .thumb
  40              	 .thumb_func
  42              	delay:
  43              	.LFB123:
  44              	 .file 1 "../Startup/system_XMC4200.c"
   1:../Startup/system_XMC4200.c **** /******************************************************************************
   2:../Startup/system_XMC4200.c ****  * @file     system_XMC4200.c
   3:../Startup/system_XMC4200.c ****  * @brief    CMSIS Cortex-M4 Device Peripheral Access Layer Header File
   4:../Startup/system_XMC4200.c ****  *           for the Infineon XMC4200 Device Series
   5:../Startup/system_XMC4200.c ****  * @version  V3.1.0
   6:../Startup/system_XMC4200.c ****  * @date     20. Dec 2014
   7:../Startup/system_XMC4200.c ****  *
   8:../Startup/system_XMC4200.c ****  * Copyright (C) 2014 Infineon Technologies AG. All rights reserved.
   9:../Startup/system_XMC4200.c ****  *
  10:../Startup/system_XMC4200.c ****  *
  11:../Startup/system_XMC4200.c ****  * @par
  12:../Startup/system_XMC4200.c ****  * Infineon Technologies AG (Infineon) is supplying this software for use with 
  13:../Startup/system_XMC4200.c ****  * Infineon's microcontrollers.  This file can be freely distributed
  14:../Startup/system_XMC4200.c ****  * within development tools that are supporting such microcontrollers.
  15:../Startup/system_XMC4200.c ****  *
  16:../Startup/system_XMC4200.c ****  * @par
  17:../Startup/system_XMC4200.c ****  * THIS SOFTWARE IS PROVIDED AS IS.  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  18:../Startup/system_XMC4200.c ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  19:../Startup/system_XMC4200.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  20:../Startup/system_XMC4200.c ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  21:../Startup/system_XMC4200.c ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  22:../Startup/system_XMC4200.c ****  *
  23:../Startup/system_XMC4200.c ****  ******************************************************************************/
  24:../Startup/system_XMC4200.c **** 
  25:../Startup/system_XMC4200.c **** /********************** Version History ***************************************
  26:../Startup/system_XMC4200.c ****  * V3.1.0, Dec 2014, Added options to configure clock settings
  27:../Startup/system_XMC4200.c ****  ******************************************************************************/
  28:../Startup/system_XMC4200.c **** 
  29:../Startup/system_XMC4200.c **** /*******************************************************************************
  30:../Startup/system_XMC4200.c ****  * HEADER FILES
  31:../Startup/system_XMC4200.c ****  *******************************************************************************/
  32:../Startup/system_XMC4200.c **** #include <string.h>
  33:../Startup/system_XMC4200.c **** 
  34:../Startup/system_XMC4200.c **** #include <XMC4200.h>
  35:../Startup/system_XMC4200.c **** #include "system_XMC4200.h"
  36:../Startup/system_XMC4200.c **** 
  37:../Startup/system_XMC4200.c **** /*******************************************************************************
  38:../Startup/system_XMC4200.c ****  * MACROS
  39:../Startup/system_XMC4200.c ****  *******************************************************************************/
  40:../Startup/system_XMC4200.c **** 
  41:../Startup/system_XMC4200.c **** #define CHIPID_LOC ((uint8_t *)0x20000000UL)
  42:../Startup/system_XMC4200.c **** #define HRPWM_CHARDATA_LOC ((uint8_t *)0x20000084UL)
  43:../Startup/system_XMC4200.c **** /* Define WEAK attribute */
  44:../Startup/system_XMC4200.c **** #if !defined(__WEAK)
  45:../Startup/system_XMC4200.c **** #if defined ( __CC_ARM )
  46:../Startup/system_XMC4200.c **** #define __WEAK __attribute__ ((weak))
  47:../Startup/system_XMC4200.c **** #elif defined ( __ICCARM__ )
  48:../Startup/system_XMC4200.c **** #define __WEAK __weak
  49:../Startup/system_XMC4200.c **** #elif defined ( __GNUC__ )
  50:../Startup/system_XMC4200.c **** #define __WEAK __attribute__ ((weak))
  51:../Startup/system_XMC4200.c **** #elif defined ( __TASKING__ )
  52:../Startup/system_XMC4200.c **** #define __WEAK __attribute__ ((weak))
  53:../Startup/system_XMC4200.c **** #endif
  54:../Startup/system_XMC4200.c **** #endif
  55:../Startup/system_XMC4200.c **** 
  56:../Startup/system_XMC4200.c **** #define PMU_FLASH_WS          (0x2U)
  57:../Startup/system_XMC4200.c **** #define FPLL_FREQUENCY        (80000000U)
  58:../Startup/system_XMC4200.c **** #define FOSCREF               (2500000U)
  59:../Startup/system_XMC4200.c **** #define DELAY_CNT_50US_50MHZ  (2500UL)
  60:../Startup/system_XMC4200.c **** #define DELAY_CNT_150US_50MHZ (7500UL)
  61:../Startup/system_XMC4200.c **** #define DELAY_CNT_50US_60MHZ  (3000UL)
  62:../Startup/system_XMC4200.c **** #define DELAY_CNT_50US_80MHZ  (4000UL)
  63:../Startup/system_XMC4200.c **** 
  64:../Startup/system_XMC4200.c **** #define SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
  65:../Startup/system_XMC4200.c ****                                      SCU_PLL_PLLSTAT_PLLLV_Msk | \
  66:../Startup/system_XMC4200.c ****                                      SCU_PLL_PLLSTAT_PLLSP_Msk)
  67:../Startup/system_XMC4200.c **** 
  68:../Startup/system_XMC4200.c **** /*
  69:../Startup/system_XMC4200.c **** //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
  70:../Startup/system_XMC4200.c **** */
  71:../Startup/system_XMC4200.c **** 
  72:../Startup/system_XMC4200.c **** /*
  73:../Startup/system_XMC4200.c **** // <h> Clock configuration
  74:../Startup/system_XMC4200.c **** */
  75:../Startup/system_XMC4200.c **** 
  76:../Startup/system_XMC4200.c **** /*
  77:../Startup/system_XMC4200.c **** //    <o> External crystal frequency [Hz]
  78:../Startup/system_XMC4200.c **** //       <8000000=> 8MHz
  79:../Startup/system_XMC4200.c **** //       <12000000=> 12MHz
  80:../Startup/system_XMC4200.c **** //       <16000000=> 16MHz
  81:../Startup/system_XMC4200.c **** //    <i> Defines external crystal frequency
  82:../Startup/system_XMC4200.c **** //    <i> Default: 8MHz
  83:../Startup/system_XMC4200.c **** */
  84:../Startup/system_XMC4200.c **** #define OSCHP_FREQUENCY (12000000U)
  85:../Startup/system_XMC4200.c **** 
  86:../Startup/system_XMC4200.c **** #if OSCHP_FREQUENCY == 8000000U
  87:../Startup/system_XMC4200.c **** #define USB_PDIV (1U)
  88:../Startup/system_XMC4200.c **** #define USB_NDIV (95U)
  89:../Startup/system_XMC4200.c **** #define USB_DIV (3U)
  90:../Startup/system_XMC4200.c **** 
  91:../Startup/system_XMC4200.c **** #elif OSCHP_FREQUENCY == 12000000U
  92:../Startup/system_XMC4200.c **** #define USB_PDIV (1U)
  93:../Startup/system_XMC4200.c **** #define USB_NDIV (63U)
  94:../Startup/system_XMC4200.c **** #define USB_DIV (3U)
  95:../Startup/system_XMC4200.c **** 
  96:../Startup/system_XMC4200.c **** #elif OSCHP_FREQUENCY == 16000000U
  97:../Startup/system_XMC4200.c **** #define USB_PDIV (1U)
  98:../Startup/system_XMC4200.c **** #define USB_NDIV (47U)
  99:../Startup/system_XMC4200.c **** #define USB_DIV (3U)
 100:../Startup/system_XMC4200.c **** 
 101:../Startup/system_XMC4200.c **** #else
 102:../Startup/system_XMC4200.c **** #error "External crystal frequency not supported"
 103:../Startup/system_XMC4200.c **** 
 104:../Startup/system_XMC4200.c **** #endif
 105:../Startup/system_XMC4200.c **** 
 106:../Startup/system_XMC4200.c **** /*
 107:../Startup/system_XMC4200.c **** //    <o> System clock (fSYS) source selection
 108:../Startup/system_XMC4200.c **** //       <0=> Backup clock (24MHz)
 109:../Startup/system_XMC4200.c **** //       <1=> Maximum clock frequency using PLL (80MHz)
 110:../Startup/system_XMC4200.c **** //    <i> Default: Maximum clock frequency using PLL (80MHz)
 111:../Startup/system_XMC4200.c **** */
 112:../Startup/system_XMC4200.c **** #define SYS_CLOCK_SRC 1
 113:../Startup/system_XMC4200.c **** #define SYS_CLOCK_SRC_OFI 0
 114:../Startup/system_XMC4200.c **** #define SYS_CLOCK_SRC_PLL 1
 115:../Startup/system_XMC4200.c **** 
 116:../Startup/system_XMC4200.c **** /*
 117:../Startup/system_XMC4200.c **** //    <o> Backup clock calibration mode
 118:../Startup/system_XMC4200.c **** //       <0=> Factory calibration
 119:../Startup/system_XMC4200.c **** //       <1=> Automatic calibration
 120:../Startup/system_XMC4200.c **** //    <i> Default: Automatic calibration
 121:../Startup/system_XMC4200.c **** */
 122:../Startup/system_XMC4200.c **** #define FOFI_CALIBRATION_MODE 1
 123:../Startup/system_XMC4200.c **** #define FOFI_CALIBRATION_MODE_FACTORY 0
 124:../Startup/system_XMC4200.c **** #define FOFI_CALIBRATION_MODE_AUTOMATIC 1
 125:../Startup/system_XMC4200.c **** 
 126:../Startup/system_XMC4200.c **** /*
 127:../Startup/system_XMC4200.c **** //    <o> Standby clock (fSTDBY) source selection
 128:../Startup/system_XMC4200.c **** //       <0=> Internal slow oscillator (32768Hz)
 129:../Startup/system_XMC4200.c **** //       <1=> External crystal (32768Hz)
 130:../Startup/system_XMC4200.c **** //    <i> Default: Internal slow oscillator (32768Hz)
 131:../Startup/system_XMC4200.c **** */
 132:../Startup/system_XMC4200.c **** #define STDBY_CLOCK_SRC 0
 133:../Startup/system_XMC4200.c **** #define STDBY_CLOCK_SRC_OSI 0
 134:../Startup/system_XMC4200.c **** #define STDBY_CLOCK_SRC_OSCULP 1
 135:../Startup/system_XMC4200.c **** 
 136:../Startup/system_XMC4200.c **** /*
 137:../Startup/system_XMC4200.c **** //    <o> PLL clock source selection
 138:../Startup/system_XMC4200.c **** //       <0=> External crystal
 139:../Startup/system_XMC4200.c **** //       <1=> External direct input
 140:../Startup/system_XMC4200.c **** //       <2=> Internal fast oscillator
 141:../Startup/system_XMC4200.c **** //    <i> Default: External crystal
 142:../Startup/system_XMC4200.c **** */
 143:../Startup/system_XMC4200.c **** #define PLL_CLOCK_SRC 0
 144:../Startup/system_XMC4200.c **** #define PLL_CLOCK_SRC_EXT_XTAL 0
 145:../Startup/system_XMC4200.c **** #define PLL_CLOCK_SRC_EXT_DIRECT 1
 146:../Startup/system_XMC4200.c **** #define PLL_CLOCK_SRC_OFI 2
 147:../Startup/system_XMC4200.c **** 
 148:../Startup/system_XMC4200.c **** #if PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL
 149:../Startup/system_XMC4200.c **** #if OSCHP_FREQUENCY == 8000000U
 150:../Startup/system_XMC4200.c **** #define PLL_PDIV (1U)
 151:../Startup/system_XMC4200.c **** #define PLL_NDIV (79U)
 152:../Startup/system_XMC4200.c **** #define PLL_K2DIV (3U)
 153:../Startup/system_XMC4200.c **** 
 154:../Startup/system_XMC4200.c **** #elif OSCHP_FREQUENCY == 12000000U
 155:../Startup/system_XMC4200.c **** #define PLL_PDIV (2U)
 156:../Startup/system_XMC4200.c **** #define PLL_NDIV (79U)
 157:../Startup/system_XMC4200.c **** #define PLL_K2DIV (3U)
 158:../Startup/system_XMC4200.c **** 
 159:../Startup/system_XMC4200.c **** #elif OSCHP_FREQUENCY == 16000000U
 160:../Startup/system_XMC4200.c **** #define PLL_PDIV (1U)
 161:../Startup/system_XMC4200.c **** #define PLL_NDIV (39U)
 162:../Startup/system_XMC4200.c **** #define PLL_K2DIV (3U)
 163:../Startup/system_XMC4200.c **** 
 164:../Startup/system_XMC4200.c **** #else
 165:../Startup/system_XMC4200.c **** #error "External crystal frequency not supported"
 166:../Startup/system_XMC4200.c **** 
 167:../Startup/system_XMC4200.c **** #endif
 168:../Startup/system_XMC4200.c **** 
 169:../Startup/system_XMC4200.c **** #define VCO ((OSCHP_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 170:../Startup/system_XMC4200.c **** #else /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL */
 171:../Startup/system_XMC4200.c **** #define PLL_PDIV (5U)
 172:../Startup/system_XMC4200.c **** #define PLL_NDIV (79U)
 173:../Startup/system_XMC4200.c **** #define PLL_K2DIV (3U)
 174:../Startup/system_XMC4200.c **** 
 175:../Startup/system_XMC4200.c **** #define VCO ((OFI_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 176:../Startup/system_XMC4200.c **** #endif /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_OFI */
 177:../Startup/system_XMC4200.c **** 
 178:../Startup/system_XMC4200.c **** #define PLL_K2DIV_0 ((VCO / OFI_FREQUENCY) - 1UL)
 179:../Startup/system_XMC4200.c **** #define PLL_K2DIV_1 ((VCO / 60000000U) - 1UL)
 180:../Startup/system_XMC4200.c **** 
 181:../Startup/system_XMC4200.c **** #define SCU_CLK_CLKCLR_ENABLE_USBCLK SCU_CLK_CLKCLR_USBCDI_Msk
 182:../Startup/system_XMC4200.c **** #define SCU_CLK_CLKCLR_ENABLE_CCUCLK SCU_CLK_CLKCLR_CCUCDI_Msk
 183:../Startup/system_XMC4200.c **** #define SCU_CLK_CLKCLR_ENABLE_WDTCLK SCU_CLK_CLKCLR_WDTCDI_Msk
 184:../Startup/system_XMC4200.c **** 
 185:../Startup/system_XMC4200.c **** #define SCU_CLK_USBCLKCR_USBSEL_USBPLL (0U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 186:../Startup/system_XMC4200.c **** #define SCU_CLK_USBCLKCR_USBSEL_PLL    (1U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 187:../Startup/system_XMC4200.c **** 
 188:../Startup/system_XMC4200.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_OFI      (0U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 189:../Startup/system_XMC4200.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_STANDBY  (1U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 190:../Startup/system_XMC4200.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_PLL      (2U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 191:../Startup/system_XMC4200.c **** 
 192:../Startup/system_XMC4200.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_SYS      (0U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 193:../Startup/system_XMC4200.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_USBPLL   (2U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 194:../Startup/system_XMC4200.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_PLL      (3U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 195:../Startup/system_XMC4200.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_STANDBY  (4U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 196:../Startup/system_XMC4200.c **** 
 197:../Startup/system_XMC4200.c **** #define EXTCLK_PIN_P0_8  (0)
 198:../Startup/system_XMC4200.c **** #define EXTCLK_PIN_P1_15 (1)
 199:../Startup/system_XMC4200.c **** 
 200:../Startup/system_XMC4200.c **** /*
 201:../Startup/system_XMC4200.c **** //    <h> Clock tree
 202:../Startup/system_XMC4200.c **** //        <o1.0> CPU clock divider
 203:../Startup/system_XMC4200.c **** //                   <0=> fCPU = fSYS
 204:../Startup/system_XMC4200.c **** //                   <1=> fCPU = fSYS / 2
 205:../Startup/system_XMC4200.c **** //        <o2.0>  Peripheral clock divider
 206:../Startup/system_XMC4200.c **** //                     <0=> fPB	= fCPU
 207:../Startup/system_XMC4200.c **** //                     <1=> fPB	= fCPU / 2
 208:../Startup/system_XMC4200.c **** //        <e.4> Enable CCU clock
 209:../Startup/system_XMC4200.c **** //             <o3.0>  CCU clock divider
 210:../Startup/system_XMC4200.c **** //                     <0=> fCCU = fCPU
 211:../Startup/system_XMC4200.c **** //                     <1=> fCCU = fCPU / 2
 212:../Startup/system_XMC4200.c **** //        </e>
 213:../Startup/system_XMC4200.c **** //        <e.5> Enable WDT clock
 214:../Startup/system_XMC4200.c **** //             <o4.0..7>  WDT clock divider <1-256><#-1>
 215:../Startup/system_XMC4200.c **** //             <o4.16..17> WDT clock source <0=> fOFI
 216:../Startup/system_XMC4200.c **** //                                          <1=> fSTDBY
 217:../Startup/system_XMC4200.c **** //                                          <2=> fPLL
 218:../Startup/system_XMC4200.c **** //        </e>
 219:../Startup/system_XMC4200.c **** //        <e.0> Enable USB clock
 220:../Startup/system_XMC4200.c **** //             <o5.16> USB clock source <0=> USBPLL
 221:../Startup/system_XMC4200.c **** //                                      <1=> PLL
 222:../Startup/system_XMC4200.c **** //        </e>
 223:../Startup/system_XMC4200.c **** //        <e6> External Clock configuration
 224:../Startup/system_XMC4200.c **** //            <o7.0..2> External clock source selection
 225:../Startup/system_XMC4200.c **** //                  <0=> System clock
 226:../Startup/system_XMC4200.c **** //                  <2=> USB PLL clock
 227:../Startup/system_XMC4200.c **** //                  <3=> PLL clock
 228:../Startup/system_XMC4200.c **** //                  <4=> Standby clock
 229:../Startup/system_XMC4200.c **** //            <o7.16..24> External clock divider <1-512><#-1>
 230:../Startup/system_XMC4200.c **** //            <i> Only valid for USB PLL and PLL clocks
 231:../Startup/system_XMC4200.c **** //            <o8.0> External Pin Selection
 232:../Startup/system_XMC4200.c **** //                  <0=> P0.8
 233:../Startup/system_XMC4200.c **** //                  <1=> P1.15
 234:../Startup/system_XMC4200.c **** //        </e>
 235:../Startup/system_XMC4200.c **** //    </h>
 236:../Startup/system_XMC4200.c **** */
 237:../Startup/system_XMC4200.c **** #define ENABLE_SCUCLK (0U)
 238:../Startup/system_XMC4200.c **** #define CPUCLKDIV (0U)
 239:../Startup/system_XMC4200.c **** #define PBCLKDIV (0U)
 240:../Startup/system_XMC4200.c **** #define CCUCLKDIV (0U)
 241:../Startup/system_XMC4200.c **** #define WDTCLKDIV (0U | SCU_CLK_WDTCLKCR_WDTSEL_OFI)
 242:../Startup/system_XMC4200.c **** #define USBCLKDIV (0U | SCU_CLK_USBCLKCR_USBSEL_USBPLL | USB_DIV)
 243:../Startup/system_XMC4200.c **** 
 244:../Startup/system_XMC4200.c **** #define ENABLE_EXTCLK (0U)
 245:../Startup/system_XMC4200.c **** #define EXTCLKDIV (0U | SCU_CLK_EXTCLKCR_ECKSEL_SYS)
 246:../Startup/system_XMC4200.c **** #define EXTCLK_PIN (0U)
 247:../Startup/system_XMC4200.c **** 
 248:../Startup/system_XMC4200.c **** #define ENABLE_PLL \
 249:../Startup/system_XMC4200.c ****     (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL) || \
 250:../Startup/system_XMC4200.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Ms
 251:../Startup/system_XMC4200.c ****     (((ENABLE_SCUCLK & SCU_CLK_CLKSET_WDTCEN_Msk) != 0) && ((WDTCLKDIV & SCU_CLK_WDTCLKCR_WDTSEL_Ms
 252:../Startup/system_XMC4200.c **** 
 253:../Startup/system_XMC4200.c **** /*
 254:../Startup/system_XMC4200.c **** // </h>
 255:../Startup/system_XMC4200.c **** */
 256:../Startup/system_XMC4200.c **** 
 257:../Startup/system_XMC4200.c **** /*
 258:../Startup/system_XMC4200.c **** //-------- <<< end of configuration section >>> ------------------
 259:../Startup/system_XMC4200.c **** */
 260:../Startup/system_XMC4200.c **** 
 261:../Startup/system_XMC4200.c **** /*******************************************************************************
 262:../Startup/system_XMC4200.c ****  * GLOBAL VARIABLES
 263:../Startup/system_XMC4200.c ****  *******************************************************************************/
 264:../Startup/system_XMC4200.c **** #if defined ( __CC_ARM )
 265:../Startup/system_XMC4200.c **** uint32_t SystemCoreClock __attribute__((at(0x20005FC0)));
 266:../Startup/system_XMC4200.c **** uint8_t g_chipid[16] __attribute__((at(0x20005FC4)));
 267:../Startup/system_XMC4200.c **** uint32_t g_hrpwm_char_data[3] __attribute__((at(0x20005FD4)));
 268:../Startup/system_XMC4200.c **** #elif defined ( __ICCARM__ )
 269:../Startup/system_XMC4200.c **** __no_init uint32_t SystemCoreClock;
 270:../Startup/system_XMC4200.c **** __no_init uint8_t g_chipid[16];
 271:../Startup/system_XMC4200.c **** __no_init uint32_t g_hrpwm_char_data[3];
 272:../Startup/system_XMC4200.c **** #elif defined ( __GNUC__ )
 273:../Startup/system_XMC4200.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
 274:../Startup/system_XMC4200.c **** uint8_t g_chipid[16] __attribute__((section(".no_init")));
 275:../Startup/system_XMC4200.c **** uint32_t g_hrpwm_char_data[3] __attribute__((section(".no_init")));
 276:../Startup/system_XMC4200.c **** #elif defined ( __TASKING__ )
 277:../Startup/system_XMC4200.c **** uint32_t SystemCoreClock __at( 0x20005FC0 );
 278:../Startup/system_XMC4200.c **** uint8_t g_chipid[16] __at( 0x20005FC4 );
 279:../Startup/system_XMC4200.c **** uint32_t g_hrpwm_char_data[3] __at( 0x20005FD4 );
 280:../Startup/system_XMC4200.c **** #endif
 281:../Startup/system_XMC4200.c **** 
 282:../Startup/system_XMC4200.c **** extern uint32_t __Vectors;
 283:../Startup/system_XMC4200.c **** 
 284:../Startup/system_XMC4200.c **** /*******************************************************************************
 285:../Startup/system_XMC4200.c ****  * LOCAL FUNCTIONS
 286:../Startup/system_XMC4200.c ****  *******************************************************************************/
 287:../Startup/system_XMC4200.c **** static void delay(uint32_t cycles)
 288:../Startup/system_XMC4200.c **** {
  45              	 .loc 1 288 0
  46              	 .cfi_startproc
  47              	 
  48              	 
  49              	 
  50 0000 80B4     	 push {r7}
  51              	.LCFI0:
  52              	 .cfi_def_cfa_offset 4
  53              	 .cfi_offset 7,-4
  54 0002 85B0     	 sub sp,sp,#20
  55              	.LCFI1:
  56              	 .cfi_def_cfa_offset 24
  57 0004 00AF     	 add r7,sp,#0
  58              	.LCFI2:
  59              	 .cfi_def_cfa_register 7
  60 0006 7860     	 str r0,[r7,#4]
 289:../Startup/system_XMC4200.c ****   volatile uint32_t i;
 290:../Startup/system_XMC4200.c **** 
 291:../Startup/system_XMC4200.c ****   for(i = 0UL; i < cycles ;++i)
  61              	 .loc 1 291 0
  62 0008 0023     	 movs r3,#0
  63 000a FB60     	 str r3,[r7,#12]
  64 000c 03E0     	 b .L2
  65              	.L3:
  66              	.LBB10:
  67              	.LBB11:
  68              	 .file 2 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cmInstr.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /**************************************************************************//**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  * @file     core_cmInstr.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  * @version  V4.00
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  * @date     28. August 2014
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  *
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  * @note
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  ******************************************************************************/
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    All rights reserved.
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****      specific prior written permission.
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    *
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   Access to dedicated instructions
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   @{
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** */
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /* ARM armcc specific functions */
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #endif
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  No Operation
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __NOP                             __nop
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     until one of a number of events occurs.
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __WFI                             __wfi
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Event
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __WFE                             __wfe
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Send Event
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __SEV                             __sev
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     memory, after the instruction has been completed.
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Data Memory Barrier
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function reverses the byte order in integer value.
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __REV                             __rev
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   rev16 r0, r0
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   bx lr
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #endif
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   revsh r0, r0
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   bx lr
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #endif
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to rotate
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return               Rotated value
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __ROR                             __ror
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Breakpoint
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function causes the processor to enter Debug state.
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Reverse bit order of value
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function reverses the bit order of the given value.
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to reverse
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return               Reversed value
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __RBIT                            __rbit
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return          0  Function succeeded
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return          1  Function failed
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return          0  Function succeeded
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return          1  Function failed
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return          0  Function succeeded
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return          1  Function failed
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Remove the exclusive lock
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __CLREX                           __clrex
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Signed Saturate
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function saturates a signed value.
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return             Saturated value
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __SSAT                            __ssat
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Unsigned Saturate
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function saturates an unsigned value.
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to be saturated
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return             Saturated value
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __USAT                            __usat
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Count leading zeros
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return             number of leading zeros in value
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __CLZ                             __clz
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit. The carry input is shifted in at 
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    value  Value to rotate
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return               Rotated value
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   rrx r0, r0
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   bx lr
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #endif
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]  value  Value to store
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /* GNU gcc specific functions */
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #else
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** #endif
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  No Operation
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("nop");
  69              	 .loc 2 390 0 discriminator 3
  70              	
  71 000e 00BF     	 nop
  72              	
  73              	 .thumb
  74              	.LBE11:
  75              	.LBE10:
  76              	 .loc 1 291 0 discriminator 3
  77 0010 FB68     	 ldr r3,[r7,#12]
  78 0012 0133     	 adds r3,r3,#1
  79 0014 FB60     	 str r3,[r7,#12]
  80              	.L2:
  81              	 .loc 1 291 0 is_stmt 0 discriminator 1
  82 0016 FA68     	 ldr r2,[r7,#12]
  83 0018 7B68     	 ldr r3,[r7,#4]
  84 001a 9A42     	 cmp r2,r3
  85 001c F7D3     	 bcc .L3
 292:../Startup/system_XMC4200.c ****   {
 293:../Startup/system_XMC4200.c ****     __NOP();
 294:../Startup/system_XMC4200.c ****   }
 295:../Startup/system_XMC4200.c **** }
  86              	 .loc 1 295 0 is_stmt 1
  87 001e 1437     	 adds r7,r7,#20
  88              	.LCFI3:
  89              	 .cfi_def_cfa_offset 4
  90 0020 BD46     	 mov sp,r7
  91              	.LCFI4:
  92              	 .cfi_def_cfa_register 13
  93              	 
  94 0022 5DF8047B 	 ldr r7,[sp],#4
  95              	.LCFI5:
  96              	 .cfi_restore 7
  97              	 .cfi_def_cfa_offset 0
  98 0026 7047     	 bx lr
  99              	 .cfi_endproc
 100              	.LFE123:
 102              	 .section .text.SystemInit,"ax",%progbits
 103              	 .align 2
 104              	 .weak SystemInit
 105              	 .thumb
 106              	 .thumb_func
 108              	SystemInit:
 109              	.LFB124:
 296:../Startup/system_XMC4200.c **** 
 297:../Startup/system_XMC4200.c **** /*******************************************************************************
 298:../Startup/system_XMC4200.c ****  * API IMPLEMENTATION
 299:../Startup/system_XMC4200.c ****  *******************************************************************************/
 300:../Startup/system_XMC4200.c **** 
 301:../Startup/system_XMC4200.c **** __WEAK void SystemInit(void)
 302:../Startup/system_XMC4200.c **** {
 110              	 .loc 1 302 0
 111              	 .cfi_startproc
 112              	 
 113              	 
 114 0000 98B5     	 push {r3,r4,r7,lr}
 115              	.LCFI6:
 116              	 .cfi_def_cfa_offset 16
 117              	 .cfi_offset 3,-16
 118              	 .cfi_offset 4,-12
 119              	 .cfi_offset 7,-8
 120              	 .cfi_offset 14,-4
 121 0002 00AF     	 add r7,sp,#0
 122              	.LCFI7:
 123              	 .cfi_def_cfa_register 7
 303:../Startup/system_XMC4200.c ****   memcpy(g_chipid, CHIPID_LOC, 16);
 124              	 .loc 1 303 0
 125 0004 084A     	 ldr r2,.L5
 126 0006 4FF00053 	 mov r3,#536870912
 127 000a 1446     	 mov r4,r2
 128 000c 0FCB     	 ldmia r3,{r0,r1,r2,r3}
 129 000e 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 304:../Startup/system_XMC4200.c ****   memcpy(g_hrpwm_char_data, HRPWM_CHARDATA_LOC, 12);
 130              	 .loc 1 304 0
 131 0012 064B     	 ldr r3,.L5+4
 132 0014 064A     	 ldr r2,.L5+8
 133 0016 07CA     	 ldmia r2,{r0,r1,r2}
 134 0018 83E80700 	 stmia r3,{r0,r1,r2}
 305:../Startup/system_XMC4200.c **** 
 306:../Startup/system_XMC4200.c ****   SystemCoreSetup();
 135              	 .loc 1 306 0
 136 001c FFF7FEFF 	 bl SystemCoreSetup
 307:../Startup/system_XMC4200.c ****   SystemCoreClockSetup(); 
 137              	 .loc 1 307 0
 138 0020 FFF7FEFF 	 bl SystemCoreClockSetup
 308:../Startup/system_XMC4200.c **** }
 139              	 .loc 1 308 0
 140 0024 98BD     	 pop {r3,r4,r7,pc}
 141              	.L6:
 142 0026 00BF     	 .align 2
 143              	.L5:
 144 0028 00000000 	 .word g_chipid
 145 002c 00000000 	 .word g_hrpwm_char_data
 146 0030 84000020 	 .word 536871044
 147              	 .cfi_endproc
 148              	.LFE124:
 150              	 .section .text.SystemCoreSetup,"ax",%progbits
 151              	 .align 2
 152              	 .weak SystemCoreSetup
 153              	 .thumb
 154              	 .thumb_func
 156              	SystemCoreSetup:
 157              	.LFB125:
 309:../Startup/system_XMC4200.c **** 
 310:../Startup/system_XMC4200.c **** __WEAK void SystemCoreSetup(void)
 311:../Startup/system_XMC4200.c **** {
 158              	 .loc 1 311 0
 159              	 .cfi_startproc
 160              	 
 161              	 
 162              	 
 163 0000 80B4     	 push {r7}
 164              	.LCFI8:
 165              	 .cfi_def_cfa_offset 4
 166              	 .cfi_offset 7,-4
 167 0002 83B0     	 sub sp,sp,#12
 168              	.LCFI9:
 169              	 .cfi_def_cfa_offset 16
 170 0004 00AF     	 add r7,sp,#0
 171              	.LCFI10:
 172              	 .cfi_def_cfa_register 7
 173              	.LBB12:
 174              	.LBB13:
 175              	 .file 3 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cmFunc.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /**************************************************************************//**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  * @file     core_cmFunc.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  * @version  V4.00
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  * @date     28. August 2014
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  *
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  * @note
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  ******************************************************************************/
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    All rights reserved.
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    Redistribution and use in source and binary forms, with or without
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    modification, are permitted provided that the following conditions are met:
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    - Redistributions of source code must retain the above copyright
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****      notice, this list of conditions and the following disclaimer.
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    - Redistributions in binary form must reproduce the above copyright
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****      notice, this list of conditions and the following disclaimer in the
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****      documentation and/or other materials provided with the distribution.
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****      to endorse or promote products derived from this software without
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****      specific prior written permission.
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    *
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    ---------------------------------------------------------------------------*/
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #define __CORE_CMFUNC_H
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   @{
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /* ARM armcc specific functions */
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #endif
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get Control Register
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the content of the Control Register.
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               Control Register value
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_CONTROL(void)
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regControl);
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Set Control Register
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function writes the given value to the Control Register.
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \param [in]    control  Control Register value to set
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_CONTROL(uint32_t control)
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __regControl = control;
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get IPSR Register
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the content of the IPSR Register.
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               IPSR Register value
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_IPSR(void)
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regIPSR);
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get APSR Register
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the content of the APSR Register.
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               APSR Register value
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_APSR(void)
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regAPSR);
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get xPSR Register
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the content of the xPSR Register.
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               xPSR Register value
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_xPSR(void)
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regXPSR);
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               PSP Register value
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PSP(void)
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regProcessStackPointer);
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               MSP Register value
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_MSP(void)
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regMainStackPointer);
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get Priority Mask
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               Priority Mask value
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_PRIMASK(void)
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regPriMask);
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Set Priority Mask
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __regPriMask = (priMask);
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Enable FIQ
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     Can only be executed in Privileged modes.
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Disable FIQ
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     Can only be executed in Privileged modes.
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get Base Priority
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               Base Priority register value
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t  __get_BASEPRI(void)
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regBasePri);
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Set Base Priority
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get Fault Mask
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               Fault Mask register value
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regFaultMask);
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Set Fault Mask
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #if       (__CORTEX_M == 0x04) || (__CORTEX_M == 0x07)
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Get FPSCR
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \return               Floating Point Status/Control register value
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE uint32_t __get_FPSCR(void)
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   return(__regfpscr);
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #else
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****    return(0);
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #endif
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Set FPSCR
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __regfpscr = (fpscr);
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #endif
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) || (__CORTEX_M == 0x07) */
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /* GNU gcc specific functions */
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   Can only be executed in Privileged modes.
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** 
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   Can only be executed in Privileged modes.
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****  */
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** {
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 176              	 .loc 3 330 0
 177              	
 178 0006 72B6     	 cpsid i
 179              	
 180              	 .thumb
 181              	.LBE13:
 182              	.LBE12:
 312:../Startup/system_XMC4200.c ****   uint32_t temp;
 313:../Startup/system_XMC4200.c **** 
 314:../Startup/system_XMC4200.c ****   /* relocate vector table */
 315:../Startup/system_XMC4200.c ****   __disable_irq();
 316:../Startup/system_XMC4200.c ****   SCB->VTOR = (uint32_t)(&__Vectors);
 183              	 .loc 1 316 0
 184 0008 124B     	 ldr r3,.L8
 185 000a 134A     	 ldr r2,.L8+4
 186 000c 9A60     	 str r2,[r3,#8]
 187              	.LBB14:
 188              	.LBB15:
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Interrupt
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     until one of a number of events occurs.
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("wfi");
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Wait For Event
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __WFE(void)
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("wfe");
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Send Event
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __SEV(void)
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("sev");
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     memory, after the instruction has been completed.
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __ISB(void)
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("isb");
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** }
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** 
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****  */
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h **** {
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmInstr.h ****   __ASM volatile ("dsb");
 189              	 .loc 2 445 0
 190              	
 191 000e BFF34F8F 	 dsb
 192              	
 193              	 .thumb
 194              	.LBE15:
 195              	.LBE14:
 196              	.LBB16:
 197              	.LBB17:
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core/Libraries/CMSIS/Include\core_cmFunc.h **** }
 198              	 .loc 3 319 0
 199              	
 200 0012 62B6     	 cpsie i
 201              	
 202              	 .thumb
 203              	.LBE17:
 204              	.LBE16:
 317:../Startup/system_XMC4200.c ****   __DSB();
 318:../Startup/system_XMC4200.c ****   __enable_irq();
 319:../Startup/system_XMC4200.c ****   
 320:../Startup/system_XMC4200.c **** #if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
 321:../Startup/system_XMC4200.c ****   SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
 322:../Startup/system_XMC4200.c ****                  (3UL << 11*2)  );               /* set CP11 Full Access */
 323:../Startup/system_XMC4200.c **** #endif
 324:../Startup/system_XMC4200.c **** 
 325:../Startup/system_XMC4200.c ****   /* Enable unaligned memory access - SCB_CCR.UNALIGN_TRP = 0 */
 326:../Startup/system_XMC4200.c ****   SCB->CCR &= ~(SCB_CCR_UNALIGN_TRP_Msk);
 205              	 .loc 1 326 0
 206 0014 0F4A     	 ldr r2,.L8
 207 0016 0F4B     	 ldr r3,.L8
 208 0018 5B69     	 ldr r3,[r3,#20]
 209 001a 23F00803 	 bic r3,r3,#8
 210 001e 5361     	 str r3,[r2,#20]
 327:../Startup/system_XMC4200.c **** 
 328:../Startup/system_XMC4200.c ****   temp = FLASH0->FCON;
 211              	 .loc 1 328 0
 212 0020 0E4B     	 ldr r3,.L8+8
 213 0022 03F58053 	 add r3,r3,#4096
 214 0026 1433     	 adds r3,r3,#20
 215 0028 1B68     	 ldr r3,[r3]
 216 002a 7B60     	 str r3,[r7,#4]
 329:../Startup/system_XMC4200.c ****   temp &= ~FLASH_FCON_WSPFLASH_Msk;
 217              	 .loc 1 329 0
 218 002c 7B68     	 ldr r3,[r7,#4]
 219 002e 23F00F03 	 bic r3,r3,#15
 220 0032 7B60     	 str r3,[r7,#4]
 330:../Startup/system_XMC4200.c ****   temp |= PMU_FLASH_WS;
 221              	 .loc 1 330 0
 222 0034 7B68     	 ldr r3,[r7,#4]
 223 0036 43F00203 	 orr r3,r3,#2
 224 003a 7B60     	 str r3,[r7,#4]
 331:../Startup/system_XMC4200.c ****   FLASH0->FCON = temp;
 225              	 .loc 1 331 0
 226 003c 074B     	 ldr r3,.L8+8
 227 003e 03F58053 	 add r3,r3,#4096
 228 0042 1433     	 adds r3,r3,#20
 229 0044 7A68     	 ldr r2,[r7,#4]
 230 0046 1A60     	 str r2,[r3]
 332:../Startup/system_XMC4200.c **** }
 231              	 .loc 1 332 0
 232 0048 0C37     	 adds r7,r7,#12
 233              	.LCFI11:
 234              	 .cfi_def_cfa_offset 4
 235 004a BD46     	 mov sp,r7
 236              	.LCFI12:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 004c 5DF8047B 	 ldr r7,[sp],#4
 240              	.LCFI13:
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0050 7047     	 bx lr
 244              	.L9:
 245 0052 00BF     	 .align 2
 246              	.L8:
 247 0054 00ED00E0 	 .word -536810240
 248 0058 00000000 	 .word __Vectors
 249 005c 00100058 	 .word 1476399104
 250              	 .cfi_endproc
 251              	.LFE125:
 253              	 .section .text.SystemCoreClockSetup,"ax",%progbits
 254              	 .align 2
 255              	 .weak SystemCoreClockSetup
 256              	 .thumb
 257              	 .thumb_func
 259              	SystemCoreClockSetup:
 260              	.LFB126:
 333:../Startup/system_XMC4200.c **** 
 334:../Startup/system_XMC4200.c **** __WEAK void SystemCoreClockSetup(void)
 335:../Startup/system_XMC4200.c **** {
 261              	 .loc 1 335 0
 262              	 .cfi_startproc
 263              	 
 264              	 
 265 0000 80B5     	 push {r7,lr}
 266              	.LCFI14:
 267              	 .cfi_def_cfa_offset 8
 268              	 .cfi_offset 7,-8
 269              	 .cfi_offset 14,-4
 270 0002 00AF     	 add r7,sp,#0
 271              	.LCFI15:
 272              	 .cfi_def_cfa_register 7
 336:../Startup/system_XMC4200.c **** #if FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_FACTORY
 337:../Startup/system_XMC4200.c ****   /* Enable factory calibration */
 338:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FOTR_Msk;
 339:../Startup/system_XMC4200.c **** #else
 340:../Startup/system_XMC4200.c ****   /* Automatic calibration uses the fSTDBY */
 341:../Startup/system_XMC4200.c **** 
 342:../Startup/system_XMC4200.c ****   /* Enable HIB domain */
 343:../Startup/system_XMC4200.c ****   /* Power up HIB domain if and only if it is currently powered down */
 344:../Startup/system_XMC4200.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 273              	 .loc 1 344 0
 274 0004 6B4B     	 ldr r3,.L20
 275 0006 1B68     	 ldr r3,[r3]
 276 0008 03F00103 	 and r3,r3,#1
 277 000c 002B     	 cmp r3,#0
 278 000e 0CD1     	 bne .L11
 345:../Startup/system_XMC4200.c ****   {
 346:../Startup/system_XMC4200.c ****     SCU_POWER->PWRSET |= SCU_POWER_PWRSET_HIB_Msk;
 279              	 .loc 1 346 0
 280 0010 684A     	 ldr r2,.L20
 281 0012 684B     	 ldr r3,.L20
 282 0014 5B68     	 ldr r3,[r3,#4]
 283 0016 43F00103 	 orr r3,r3,#1
 284 001a 5360     	 str r3,[r2,#4]
 347:../Startup/system_XMC4200.c **** 
 348:../Startup/system_XMC4200.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 285              	 .loc 1 348 0
 286 001c 00BF     	 nop
 287              	.L12:
 288              	 .loc 1 348 0 is_stmt 0 discriminator 1
 289 001e 654B     	 ldr r3,.L20
 290 0020 1B68     	 ldr r3,[r3]
 291 0022 03F00103 	 and r3,r3,#1
 292 0026 002B     	 cmp r3,#0
 293 0028 F9D0     	 beq .L12
 294              	.L11:
 349:../Startup/system_XMC4200.c ****     {
 350:../Startup/system_XMC4200.c ****       /* wait until HIB domain is enabled */
 351:../Startup/system_XMC4200.c ****     }
 352:../Startup/system_XMC4200.c ****   }
 353:../Startup/system_XMC4200.c **** 
 354:../Startup/system_XMC4200.c ****   /* Remove the reset only if HIB domain were in a state of reset */
 355:../Startup/system_XMC4200.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 295              	 .loc 1 355 0 is_stmt 1
 296 002a 634B     	 ldr r3,.L20+4
 297 002c 1B68     	 ldr r3,[r3]
 298 002e 03F40073 	 and r3,r3,#512
 299 0032 002B     	 cmp r3,#0
 300 0034 09D0     	 beq .L13
 356:../Startup/system_XMC4200.c ****   {
 357:../Startup/system_XMC4200.c ****     SCU_RESET->RSTCLR |= SCU_RESET_RSTCLR_HIBRS_Msk;
 301              	 .loc 1 357 0
 302 0036 604A     	 ldr r2,.L20+4
 303 0038 5F4B     	 ldr r3,.L20+4
 304 003a 9B68     	 ldr r3,[r3,#8]
 305 003c 43F40073 	 orr r3,r3,#512
 306 0040 9360     	 str r3,[r2,#8]
 358:../Startup/system_XMC4200.c ****     delay(DELAY_CNT_150US_50MHZ);
 307              	 .loc 1 358 0
 308 0042 41F64C50 	 movw r0,#7500
 309 0046 FFF7FEFF 	 bl delay
 310              	.L13:
 359:../Startup/system_XMC4200.c ****   }
 360:../Startup/system_XMC4200.c **** 
 361:../Startup/system_XMC4200.c **** #if STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP
 362:../Startup/system_XMC4200.c ****   /* Enable OSC_ULP */
 363:../Startup/system_XMC4200.c ****   if ((SCU_HIBERNATE->OSCULCTRL & SCU_HIBERNATE_OSCULCTRL_MODE_Msk) != 0UL)
 364:../Startup/system_XMC4200.c ****   {
 365:../Startup/system_XMC4200.c ****     /*enable OSC_ULP*/
 366:../Startup/system_XMC4200.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 367:../Startup/system_XMC4200.c ****     {
 368:../Startup/system_XMC4200.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 369:../Startup/system_XMC4200.c ****     }
 370:../Startup/system_XMC4200.c ****     SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 371:../Startup/system_XMC4200.c **** 
 372:../Startup/system_XMC4200.c ****     /* Check if the clock is OK using OSCULP Oscillator Watchdog*/
 373:../Startup/system_XMC4200.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 374:../Startup/system_XMC4200.c ****     {
 375:../Startup/system_XMC4200.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 376:../Startup/system_XMC4200.c ****     }
 377:../Startup/system_XMC4200.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 378:../Startup/system_XMC4200.c **** 
 379:../Startup/system_XMC4200.c ****     /* wait till clock is stable */
 380:../Startup/system_XMC4200.c ****     do
 381:../Startup/system_XMC4200.c ****     {
 382:../Startup/system_XMC4200.c ****       while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 383:../Startup/system_XMC4200.c ****       {
 384:../Startup/system_XMC4200.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 385:../Startup/system_XMC4200.c ****       }
 386:../Startup/system_XMC4200.c ****       SCU_HIBERNATE->HDCLR |= SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 387:../Startup/system_XMC4200.c **** 
 388:../Startup/system_XMC4200.c ****       delay(DELAY_CNT_50US_50MHZ);
 389:../Startup/system_XMC4200.c **** 
 390:../Startup/system_XMC4200.c ****     } while ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) != 0UL);
 391:../Startup/system_XMC4200.c **** 
 392:../Startup/system_XMC4200.c ****   }
 393:../Startup/system_XMC4200.c **** 
 394:../Startup/system_XMC4200.c ****   /* now OSC_ULP is running and can be used*/
 395:../Startup/system_XMC4200.c ****   /* Select OSC_ULP as the clock source for RTC and STDBY*/
 396:../Startup/system_XMC4200.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 397:../Startup/system_XMC4200.c ****   {
 398:../Startup/system_XMC4200.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 399:../Startup/system_XMC4200.c ****   }
 400:../Startup/system_XMC4200.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_RCS_Msk | SCU_HIBERNATE_HDCR_STDBYSEL_Msk;
 401:../Startup/system_XMC4200.c **** 
 402:../Startup/system_XMC4200.c **** #endif /* STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP */
 403:../Startup/system_XMC4200.c **** 
 404:../Startup/system_XMC4200.c ****   /* Enable automatic calibration of internal fast oscillator */
 405:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_AOTREN_Msk;
 311              	 .loc 1 405 0
 312 004a 5C4A     	 ldr r2,.L20+8
 313 004c 5B4B     	 ldr r3,.L20+8
 314 004e 5B68     	 ldr r3,[r3,#4]
 315 0050 43F40023 	 orr r3,r3,#524288
 316 0054 5360     	 str r3,[r2,#4]
 406:../Startup/system_XMC4200.c **** #endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */
 407:../Startup/system_XMC4200.c **** 
 408:../Startup/system_XMC4200.c ****   delay(DELAY_CNT_50US_50MHZ);
 317              	 .loc 1 408 0
 318 0056 40F6C410 	 movw r0,#2500
 319 005a FFF7FEFF 	 bl delay
 409:../Startup/system_XMC4200.c **** 
 410:../Startup/system_XMC4200.c **** #if ENABLE_PLL
 411:../Startup/system_XMC4200.c **** 
 412:../Startup/system_XMC4200.c ****   /* enable PLL */
 413:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 320              	 .loc 1 413 0
 321 005e 574A     	 ldr r2,.L20+8
 322 0060 564B     	 ldr r3,.L20+8
 323 0062 5B68     	 ldr r3,[r3,#4]
 324 0064 23F48033 	 bic r3,r3,#65536
 325 0068 23F00203 	 bic r3,r3,#2
 326 006c 5360     	 str r3,[r2,#4]
 414:../Startup/system_XMC4200.c **** 
 415:../Startup/system_XMC4200.c **** #if PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI
 416:../Startup/system_XMC4200.c ****   /* enable OSC_HP */
 417:../Startup/system_XMC4200.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 327              	 .loc 1 417 0
 328 006e 544B     	 ldr r3,.L20+12
 329 0070 5B68     	 ldr r3,[r3,#4]
 330 0072 03F03003 	 and r3,r3,#48
 331 0076 002B     	 cmp r3,#0
 332 0078 27D0     	 beq .L14
 418:../Startup/system_XMC4200.c ****   {
 419:../Startup/system_XMC4200.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Pos);
 333              	 .loc 1 419 0
 334 007a 514A     	 ldr r2,.L20+12
 335 007c 504B     	 ldr r3,.L20+12
 336 007e 5B68     	 ldr r3,[r3,#4]
 337 0080 23F03003 	 bic r3,r3,#48
 338 0084 5360     	 str r3,[r2,#4]
 420:../Startup/system_XMC4200.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 339              	 .loc 1 420 0
 340 0086 FFF7FEFF 	 bl OSCHP_GetFrequency
 341 008a 0246     	 mov r2,r0
 342 008c 4D4B     	 ldr r3,.L20+16
 343 008e A3FB0223 	 umull r2,r3,r3,r2
 344 0092 1B0D     	 lsrs r3,r3,#20
 345 0094 013B     	 subs r3,r3,#1
 346 0096 1B04     	 lsls r3,r3,#16
 347 0098 4949     	 ldr r1,.L20+12
 348 009a 494A     	 ldr r2,.L20+12
 349 009c 5268     	 ldr r2,[r2,#4]
 350 009e 1343     	 orrs r3,r3,r2
 351 00a0 4B60     	 str r3,[r1,#4]
 421:../Startup/system_XMC4200.c **** 
 422:../Startup/system_XMC4200.c ****     /* select OSC_HP clock as PLL input */
 423:../Startup/system_XMC4200.c ****     SCU_PLL->PLLCON2 &= ~SCU_PLL_PLLCON2_PINSEL_Msk;
 352              	 .loc 1 423 0
 353 00a2 464A     	 ldr r2,.L20+8
 354 00a4 454B     	 ldr r3,.L20+8
 355 00a6 DB68     	 ldr r3,[r3,#12]
 356 00a8 23F00103 	 bic r3,r3,#1
 357 00ac D360     	 str r3,[r2,#12]
 424:../Startup/system_XMC4200.c **** 
 425:../Startup/system_XMC4200.c ****     /* restart OSC Watchdog */
 426:../Startup/system_XMC4200.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 358              	 .loc 1 426 0
 359 00ae 434A     	 ldr r2,.L20+8
 360 00b0 424B     	 ldr r3,.L20+8
 361 00b2 5B68     	 ldr r3,[r3,#4]
 362 00b4 23F40033 	 bic r3,r3,#131072
 363 00b8 5360     	 str r3,[r2,#4]
 427:../Startup/system_XMC4200.c **** 
 428:../Startup/system_XMC4200.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 364              	 .loc 1 428 0
 365 00ba 00BF     	 nop
 366              	.L15:
 367              	 .loc 1 428 0 is_stmt 0 discriminator 1
 368 00bc 3F4B     	 ldr r3,.L20+8
 369 00be 1B68     	 ldr r3,[r3]
 370 00c0 03F46073 	 and r3,r3,#896
 371 00c4 B3F5607F 	 cmp r3,#896
 372 00c8 F8D1     	 bne .L15
 373              	.L14:
 429:../Startup/system_XMC4200.c ****     {
 430:../Startup/system_XMC4200.c ****       /* wait till OSC_HP output frequency is usable */
 431:../Startup/system_XMC4200.c ****     }
 432:../Startup/system_XMC4200.c ****   }
 433:../Startup/system_XMC4200.c **** #else /* PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI */
 434:../Startup/system_XMC4200.c **** 
 435:../Startup/system_XMC4200.c ****   /* select backup clock as PLL input */
 436:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON2 |= SCU_PLL_PLLCON2_PINSEL_Msk;
 437:../Startup/system_XMC4200.c **** #endif
 438:../Startup/system_XMC4200.c **** 
 439:../Startup/system_XMC4200.c ****   /* Go to bypass the Main PLL */
 440:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_VCOBYP_Msk;
 374              	 .loc 1 440 0 is_stmt 1
 375 00ca 3C4A     	 ldr r2,.L20+8
 376 00cc 3B4B     	 ldr r3,.L20+8
 377 00ce 5B68     	 ldr r3,[r3,#4]
 378 00d0 43F00103 	 orr r3,r3,#1
 379 00d4 5360     	 str r3,[r2,#4]
 441:../Startup/system_XMC4200.c **** 
 442:../Startup/system_XMC4200.c ****   /* disconnect Oscillator from PLL */
 443:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FINDIS_Msk;
 380              	 .loc 1 443 0
 381 00d6 394A     	 ldr r2,.L20+8
 382 00d8 384B     	 ldr r3,.L20+8
 383 00da 5B68     	 ldr r3,[r3,#4]
 384 00dc 43F01003 	 orr r3,r3,#16
 385 00e0 5360     	 str r3,[r2,#4]
 444:../Startup/system_XMC4200.c **** 
 445:../Startup/system_XMC4200.c ****   /* Setup divider settings for main PLL */
 446:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 386              	 .loc 1 446 0
 387 00e2 364B     	 ldr r3,.L20+8
 388 00e4 384A     	 ldr r2,.L20+20
 389 00e6 9A60     	 str r2,[r3,#8]
 447:../Startup/system_XMC4200.c ****                       (PLL_K2DIV_0 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 448:../Startup/system_XMC4200.c ****                       (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 449:../Startup/system_XMC4200.c **** 
 450:../Startup/system_XMC4200.c ****   /* Set OSCDISCDIS */
 451:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 390              	 .loc 1 451 0
 391 00e8 344A     	 ldr r2,.L20+8
 392 00ea 344B     	 ldr r3,.L20+8
 393 00ec 5B68     	 ldr r3,[r3,#4]
 394 00ee 43F04003 	 orr r3,r3,#64
 395 00f2 5360     	 str r3,[r2,#4]
 452:../Startup/system_XMC4200.c **** 
 453:../Startup/system_XMC4200.c ****   /* connect Oscillator to PLL */
 454:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_FINDIS_Msk;
 396              	 .loc 1 454 0
 397 00f4 314A     	 ldr r2,.L20+8
 398 00f6 314B     	 ldr r3,.L20+8
 399 00f8 5B68     	 ldr r3,[r3,#4]
 400 00fa 23F01003 	 bic r3,r3,#16
 401 00fe 5360     	 str r3,[r2,#4]
 455:../Startup/system_XMC4200.c **** 
 456:../Startup/system_XMC4200.c ****   /* restart PLL Lock detection */
 457:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_RESLD_Msk;
 402              	 .loc 1 457 0
 403 0100 2E4A     	 ldr r2,.L20+8
 404 0102 2E4B     	 ldr r3,.L20+8
 405 0104 5B68     	 ldr r3,[r3,#4]
 406 0106 43F48023 	 orr r3,r3,#262144
 407 010a 5360     	 str r3,[r2,#4]
 458:../Startup/system_XMC4200.c **** 
 459:../Startup/system_XMC4200.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 408              	 .loc 1 459 0
 409 010c 00BF     	 nop
 410              	.L16:
 411              	 .loc 1 459 0 is_stmt 0 discriminator 1
 412 010e 2B4B     	 ldr r3,.L20+8
 413 0110 1B68     	 ldr r3,[r3]
 414 0112 03F00403 	 and r3,r3,#4
 415 0116 002B     	 cmp r3,#0
 416 0118 F9D0     	 beq .L16
 460:../Startup/system_XMC4200.c ****   {
 461:../Startup/system_XMC4200.c ****     /* wait for PLL Lock */
 462:../Startup/system_XMC4200.c ****   }
 463:../Startup/system_XMC4200.c **** 
 464:../Startup/system_XMC4200.c ****   /* Disable bypass- put PLL clock back */
 465:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_VCOBYP_Msk;
 417              	 .loc 1 465 0 is_stmt 1
 418 011a 284A     	 ldr r2,.L20+8
 419 011c 274B     	 ldr r3,.L20+8
 420 011e 5B68     	 ldr r3,[r3,#4]
 421 0120 23F00103 	 bic r3,r3,#1
 422 0124 5360     	 str r3,[r2,#4]
 466:../Startup/system_XMC4200.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 423              	 .loc 1 466 0
 424 0126 00BF     	 nop
 425              	.L17:
 426              	 .loc 1 466 0 is_stmt 0 discriminator 1
 427 0128 244B     	 ldr r3,.L20+8
 428 012a 1B68     	 ldr r3,[r3]
 429 012c 03F00103 	 and r3,r3,#1
 430 0130 002B     	 cmp r3,#0
 431 0132 F9D1     	 bne .L17
 467:../Startup/system_XMC4200.c ****   {
 468:../Startup/system_XMC4200.c ****     /* wait for normal mode */
 469:../Startup/system_XMC4200.c ****   }
 470:../Startup/system_XMC4200.c **** #endif /* ENABLE_PLL */
 471:../Startup/system_XMC4200.c **** 
 472:../Startup/system_XMC4200.c **** #if (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL)
 473:../Startup/system_XMC4200.c ****   /* Switch system clock to PLL */
 474:../Startup/system_XMC4200.c ****   SCU_CLK->SYSCLKCR |= SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 432              	 .loc 1 474 0 is_stmt 1
 433 0134 254A     	 ldr r2,.L20+24
 434 0136 254B     	 ldr r3,.L20+24
 435 0138 DB68     	 ldr r3,[r3,#12]
 436 013a 43F48033 	 orr r3,r3,#65536
 437 013e D360     	 str r3,[r2,#12]
 475:../Startup/system_XMC4200.c **** #else
 476:../Startup/system_XMC4200.c ****   /* Switch system clock to backup clock */
 477:../Startup/system_XMC4200.c ****   SCU_CLK->SYSCLKCR &= ~SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 478:../Startup/system_XMC4200.c **** #endif
 479:../Startup/system_XMC4200.c **** 
 480:../Startup/system_XMC4200.c ****   /* Before scaling to final frequency we need to setup the clock dividers */
 481:../Startup/system_XMC4200.c ****   SCU_CLK->PBCLKCR = PBCLKDIV;
 438              	 .loc 1 481 0
 439 0140 224B     	 ldr r3,.L20+24
 440 0142 0022     	 movs r2,#0
 441 0144 5A61     	 str r2,[r3,#20]
 482:../Startup/system_XMC4200.c ****   SCU_CLK->CPUCLKCR = CPUCLKDIV;
 442              	 .loc 1 482 0
 443 0146 214B     	 ldr r3,.L20+24
 444 0148 0022     	 movs r2,#0
 445 014a 1A61     	 str r2,[r3,#16]
 483:../Startup/system_XMC4200.c ****   SCU_CLK->CCUCLKCR = CCUCLKDIV;
 446              	 .loc 1 483 0
 447 014c 1F4B     	 ldr r3,.L20+24
 448 014e 0022     	 movs r2,#0
 449 0150 1A62     	 str r2,[r3,#32]
 484:../Startup/system_XMC4200.c ****   SCU_CLK->WDTCLKCR = WDTCLKDIV;
 450              	 .loc 1 484 0
 451 0152 1E4B     	 ldr r3,.L20+24
 452 0154 0022     	 movs r2,#0
 453 0156 5A62     	 str r2,[r3,#36]
 485:../Startup/system_XMC4200.c ****   SCU_CLK->USBCLKCR = USBCLKDIV;
 454              	 .loc 1 485 0
 455 0158 1C4B     	 ldr r3,.L20+24
 456 015a 0322     	 movs r2,#3
 457 015c 9A61     	 str r2,[r3,#24]
 486:../Startup/system_XMC4200.c **** 
 487:../Startup/system_XMC4200.c **** #if ENABLE_PLL
 488:../Startup/system_XMC4200.c ****   /* PLL frequency stepping...*/
 489:../Startup/system_XMC4200.c ****   /* Reset OSCDISCDIS */
 490:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 458              	 .loc 1 490 0
 459 015e 174A     	 ldr r2,.L20+8
 460 0160 164B     	 ldr r3,.L20+8
 461 0162 5B68     	 ldr r3,[r3,#4]
 462 0164 23F04003 	 bic r3,r3,#64
 463 0168 5360     	 str r3,[r2,#4]
 491:../Startup/system_XMC4200.c **** 
 492:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 464              	 .loc 1 492 0
 465 016a 144B     	 ldr r3,.L20+8
 466 016c 184A     	 ldr r2,.L20+28
 467 016e 9A60     	 str r2,[r3,#8]
 493:../Startup/system_XMC4200.c **** 	                    (PLL_K2DIV_1 << SCU_PLL_PLLCON1_K2DIV_Pos) |
 494:../Startup/system_XMC4200.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 495:../Startup/system_XMC4200.c **** 
 496:../Startup/system_XMC4200.c **** 
 497:../Startup/system_XMC4200.c ****   delay(DELAY_CNT_50US_60MHZ);
 468              	 .loc 1 497 0
 469 0170 40F6B830 	 movw r0,#3000
 470 0174 FFF7FEFF 	 bl delay
 498:../Startup/system_XMC4200.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 471              	 .loc 1 498 0
 472 0178 00BF     	 nop
 473              	.L18:
 474              	 .loc 1 498 0 is_stmt 0 discriminator 1
 475 017a 104B     	 ldr r3,.L20+8
 476 017c 1B68     	 ldr r3,[r3]
 477 017e 03F00403 	 and r3,r3,#4
 478 0182 002B     	 cmp r3,#0
 479 0184 F9D0     	 beq .L18
 499:../Startup/system_XMC4200.c ****   {
 500:../Startup/system_XMC4200.c ****     /* wait for PLL Lock */
 501:../Startup/system_XMC4200.c ****   }
 502:../Startup/system_XMC4200.c **** 
 503:../Startup/system_XMC4200.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 480              	 .loc 1 503 0 is_stmt 1
 481 0186 0D4B     	 ldr r3,.L20+8
 482 0188 124A     	 ldr r2,.L20+32
 483 018a 9A60     	 str r2,[r3,#8]
 504:../Startup/system_XMC4200.c **** 	                    (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
 505:../Startup/system_XMC4200.c **** 	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 506:../Startup/system_XMC4200.c **** 
 507:../Startup/system_XMC4200.c **** 
 508:../Startup/system_XMC4200.c ****   delay(DELAY_CNT_50US_80MHZ);
 484              	 .loc 1 508 0
 485 018c 4FF47A60 	 mov r0,#4000
 486 0190 FFF7FEFF 	 bl delay
 509:../Startup/system_XMC4200.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 487              	 .loc 1 509 0
 488 0194 00BF     	 nop
 489              	.L19:
 490              	 .loc 1 509 0 is_stmt 0 discriminator 1
 491 0196 094B     	 ldr r3,.L20+8
 492 0198 1B68     	 ldr r3,[r3]
 493 019a 03F00403 	 and r3,r3,#4
 494 019e 002B     	 cmp r3,#0
 495 01a0 F9D0     	 beq .L19
 510:../Startup/system_XMC4200.c ****   {
 511:../Startup/system_XMC4200.c ****     /* wait for PLL Lock */
 512:../Startup/system_XMC4200.c ****   }
 513:../Startup/system_XMC4200.c **** 
 514:../Startup/system_XMC4200.c ****   SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_SOSCWDGT_Msk | SCU_TRAP_TRAPCLR_SVCOLCKT_Msk;
 496              	 .loc 1 514 0 is_stmt 1
 497 01a2 0D4B     	 ldr r3,.L20+36
 498 01a4 0522     	 movs r2,#5
 499 01a6 DA60     	 str r2,[r3,#12]
 515:../Startup/system_XMC4200.c **** #endif /* ENABLE_PLL */
 516:../Startup/system_XMC4200.c **** 
 517:../Startup/system_XMC4200.c **** #if (((ENABLE_SCUCLK & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Ms
 518:../Startup/system_XMC4200.c ****   /* enable USB PLL first */
 519:../Startup/system_XMC4200.c ****   SCU_PLL->USBPLLCON &= ~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 520:../Startup/system_XMC4200.c **** 
 521:../Startup/system_XMC4200.c ****   /* USB PLL uses as clock input the OSC_HP */
 522:../Startup/system_XMC4200.c ****   /* check and if not already running enable OSC_HP */
 523:../Startup/system_XMC4200.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 524:../Startup/system_XMC4200.c ****   {
 525:../Startup/system_XMC4200.c ****     /* check if Main PLL is switched on for OSC WDG*/
 526:../Startup/system_XMC4200.c ****     if ((SCU_PLL->PLLCON0 &(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk)) != 0UL)
 527:../Startup/system_XMC4200.c ****     {
 528:../Startup/system_XMC4200.c ****       /* enable PLL first */
 529:../Startup/system_XMC4200.c ****       SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 530:../Startup/system_XMC4200.c ****     }
 531:../Startup/system_XMC4200.c **** 
 532:../Startup/system_XMC4200.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Pos);
 533:../Startup/system_XMC4200.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 534:../Startup/system_XMC4200.c **** 
 535:../Startup/system_XMC4200.c ****     /* restart OSC Watchdog */
 536:../Startup/system_XMC4200.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 537:../Startup/system_XMC4200.c **** 
 538:../Startup/system_XMC4200.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 539:../Startup/system_XMC4200.c ****     {
 540:../Startup/system_XMC4200.c ****       /* wait till OSC_HP output frequency is usable */
 541:../Startup/system_XMC4200.c ****     }
 542:../Startup/system_XMC4200.c ****   }
 543:../Startup/system_XMC4200.c **** 
 544:../Startup/system_XMC4200.c ****   /* Setup USB PLL */
 545:../Startup/system_XMC4200.c ****   /* Go to bypass the USB PLL */
 546:../Startup/system_XMC4200.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_VCOBYP_Msk;
 547:../Startup/system_XMC4200.c **** 
 548:../Startup/system_XMC4200.c ****   /* disconnect Oscillator from USB PLL */
 549:../Startup/system_XMC4200.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_FINDIS_Msk;
 550:../Startup/system_XMC4200.c **** 
 551:../Startup/system_XMC4200.c ****   /* Setup Divider settings for USB PLL */
 552:../Startup/system_XMC4200.c ****   SCU_PLL->USBPLLCON = ((USB_NDIV << SCU_PLL_USBPLLCON_NDIV_Pos) |
 553:../Startup/system_XMC4200.c ****                         (USB_PDIV << SCU_PLL_USBPLLCON_PDIV_Pos));
 554:../Startup/system_XMC4200.c **** 
 555:../Startup/system_XMC4200.c ****   /* Set OSCDISCDIS */
 556:../Startup/system_XMC4200.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 557:../Startup/system_XMC4200.c **** 
 558:../Startup/system_XMC4200.c ****   /* connect Oscillator to USB PLL */
 559:../Startup/system_XMC4200.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_FINDIS_Msk;
 560:../Startup/system_XMC4200.c **** 
 561:../Startup/system_XMC4200.c ****   /* restart PLL Lock detection */
 562:../Startup/system_XMC4200.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_RESLD_Msk;
 563:../Startup/system_XMC4200.c **** 
 564:../Startup/system_XMC4200.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 565:../Startup/system_XMC4200.c ****   {
 566:../Startup/system_XMC4200.c ****     /* wait for PLL Lock */
 567:../Startup/system_XMC4200.c ****   }
 568:../Startup/system_XMC4200.c **** #endif /* (USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Msk) */
 569:../Startup/system_XMC4200.c **** 
 570:../Startup/system_XMC4200.c ****   /* Enable selected clocks */
 571:../Startup/system_XMC4200.c ****   SCU_CLK->CLKSET = ENABLE_SCUCLK;
 500              	 .loc 1 571 0
 501 01a8 084B     	 ldr r3,.L20+24
 502 01aa 0022     	 movs r2,#0
 503 01ac 5A60     	 str r2,[r3,#4]
 572:../Startup/system_XMC4200.c **** 
 573:../Startup/system_XMC4200.c **** #if ENABLE_EXTCLK == 1
 574:../Startup/system_XMC4200.c ****   /* Configure external clock */
 575:../Startup/system_XMC4200.c ****   SCU_CLK->EXTCLKCR = EXTCLKDIV;
 576:../Startup/system_XMC4200.c **** 
 577:../Startup/system_XMC4200.c **** #if EXTCLK_PIN == EXTCLK_PIN_P1_15
 578:../Startup/system_XMC4200.c ****   /* P1.15 */
 579:../Startup/system_XMC4200.c ****   PORT1->PDR1 &= ~PORT1_PDR1_PD15_Msk;
 580:../Startup/system_XMC4200.c ****   PORT1->IOCR12 = (PORT1->IOCR12 & ~PORT0_IOCR12_PC15_Msk) | (0x11U << PORT0_IOCR12_PC15_Pos);
 581:../Startup/system_XMC4200.c **** #else
 582:../Startup/system_XMC4200.c ****   /* P0.8 */
 583:../Startup/system_XMC4200.c ****   PORT0->HWSEL &= ~PORT0_HWSEL_HW8_Msk;
 584:../Startup/system_XMC4200.c ****   PORT0->PDR1 &= ~PORT0_PDR1_PD8_Msk;
 585:../Startup/system_XMC4200.c ****   PORT0->IOCR8 = (PORT0->IOCR8 & ~PORT0_IOCR8_PC8_Msk) | (0x11U << PORT0_IOCR8_PC8_Pos);
 586:../Startup/system_XMC4200.c **** #endif
 587:../Startup/system_XMC4200.c **** 
 588:../Startup/system_XMC4200.c **** #endif  /* ENABLE_EXTCLK == 1  */
 589:../Startup/system_XMC4200.c **** 
 590:../Startup/system_XMC4200.c ****   SystemCoreClockUpdate();
 504              	 .loc 1 590 0
 505 01ae FFF7FEFF 	 bl SystemCoreClockUpdate
 591:../Startup/system_XMC4200.c **** }
 506              	 .loc 1 591 0
 507 01b2 80BD     	 pop {r7,pc}
 508              	.L21:
 509              	 .align 2
 510              	.L20:
 511 01b4 00420050 	 .word 1342194176
 512 01b8 00440050 	 .word 1342194688
 513 01bc 10470050 	 .word 1342195472
 514 01c0 00470050 	 .word 1342195456
 515 01c4 6BCA5F6B 	 .word 1801439851
 516 01c8 004F0C02 	 .word 34361088
 517 01cc 00460050 	 .word 1342195200
 518 01d0 004F0402 	 .word 33836800
 519 01d4 004F0302 	 .word 33771264
 520 01d8 60410050 	 .word 1342194016
 521              	 .cfi_endproc
 522              	.LFE126:
 524              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 525              	 .align 2
 526              	 .weak SystemCoreClockUpdate
 527              	 .thumb
 528              	 .thumb_func
 530              	SystemCoreClockUpdate:
 531              	.LFB127:
 592:../Startup/system_XMC4200.c **** 
 593:../Startup/system_XMC4200.c **** __WEAK void SystemCoreClockUpdate(void)
 594:../Startup/system_XMC4200.c **** {
 532              	 .loc 1 594 0
 533              	 .cfi_startproc
 534              	 
 535              	 
 536 0000 80B5     	 push {r7,lr}
 537              	.LCFI16:
 538              	 .cfi_def_cfa_offset 8
 539              	 .cfi_offset 7,-8
 540              	 .cfi_offset 14,-4
 541 0002 84B0     	 sub sp,sp,#16
 542              	.LCFI17:
 543              	 .cfi_def_cfa_offset 24
 544 0004 00AF     	 add r7,sp,#0
 545              	.LCFI18:
 546              	 .cfi_def_cfa_register 7
 595:../Startup/system_XMC4200.c ****   uint32_t pdiv;
 596:../Startup/system_XMC4200.c ****   uint32_t ndiv;
 597:../Startup/system_XMC4200.c ****   uint32_t kdiv;
 598:../Startup/system_XMC4200.c ****   uint32_t temp;
 599:../Startup/system_XMC4200.c **** 
 600:../Startup/system_XMC4200.c ****   if (SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk)
 547              	 .loc 1 600 0
 548 0006 2F4B     	 ldr r3,.L29
 549 0008 DB68     	 ldr r3,[r3,#12]
 550 000a 03F48033 	 and r3,r3,#65536
 551 000e 002B     	 cmp r3,#0
 552 0010 3ED0     	 beq .L23
 601:../Startup/system_XMC4200.c ****   {
 602:../Startup/system_XMC4200.c ****     /* fPLL is clock source for fSYS */
 603:../Startup/system_XMC4200.c ****     if(SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk)
 553              	 .loc 1 603 0
 554 0012 2D4B     	 ldr r3,.L29+4
 555 0014 DB68     	 ldr r3,[r3,#12]
 556 0016 03F00103 	 and r3,r3,#1
 557 001a 002B     	 cmp r3,#0
 558 001c 02D0     	 beq .L24
 604:../Startup/system_XMC4200.c ****     {
 605:../Startup/system_XMC4200.c ****       /* PLL input clock is the backup clock (fOFI) */
 606:../Startup/system_XMC4200.c ****       temp = OFI_FREQUENCY;
 559              	 .loc 1 606 0
 560 001e 2B4B     	 ldr r3,.L29+8
 561 0020 FB60     	 str r3,[r7,#12]
 562 0022 02E0     	 b .L25
 563              	.L24:
 607:../Startup/system_XMC4200.c ****     }
 608:../Startup/system_XMC4200.c ****     else
 609:../Startup/system_XMC4200.c ****     {
 610:../Startup/system_XMC4200.c ****       /* PLL input clock is the high performance osicllator (fOSCHP) */
 611:../Startup/system_XMC4200.c ****       temp = OSCHP_GetFrequency();
 564              	 .loc 1 611 0
 565 0024 FFF7FEFF 	 bl OSCHP_GetFrequency
 566 0028 F860     	 str r0,[r7,#12]
 567              	.L25:
 612:../Startup/system_XMC4200.c ****     }
 613:../Startup/system_XMC4200.c **** 
 614:../Startup/system_XMC4200.c ****     /* check if PLL is locked */
 615:../Startup/system_XMC4200.c ****     if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk)
 568              	 .loc 1 615 0
 569 002a 274B     	 ldr r3,.L29+4
 570 002c 1B68     	 ldr r3,[r3]
 571 002e 03F00403 	 and r3,r3,#4
 572 0032 002B     	 cmp r3,#0
 573 0034 20D0     	 beq .L26
 616:../Startup/system_XMC4200.c ****     {
 617:../Startup/system_XMC4200.c ****       /* PLL normal mode */
 618:../Startup/system_XMC4200.c ****       /* read back divider settings */
 619:../Startup/system_XMC4200.c ****       pdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Pos) + 1;
 574              	 .loc 1 619 0
 575 0036 244B     	 ldr r3,.L29+4
 576 0038 9B68     	 ldr r3,[r3,#8]
 577 003a 03F07063 	 and r3,r3,#251658240
 578 003e 1B0E     	 lsrs r3,r3,#24
 579 0040 0133     	 adds r3,r3,#1
 580 0042 BB60     	 str r3,[r7,#8]
 620:../Startup/system_XMC4200.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 581              	 .loc 1 620 0
 582 0044 204B     	 ldr r3,.L29+4
 583 0046 9B68     	 ldr r3,[r3,#8]
 584 0048 03F4FE43 	 and r3,r3,#32512
 585 004c 1B0A     	 lsrs r3,r3,#8
 586 004e 0133     	 adds r3,r3,#1
 587 0050 7B60     	 str r3,[r7,#4]
 621:../Startup/system_XMC4200.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 588              	 .loc 1 621 0
 589 0052 1D4B     	 ldr r3,.L29+4
 590 0054 9B68     	 ldr r3,[r3,#8]
 591 0056 03F4FE03 	 and r3,r3,#8323072
 592 005a 1B0C     	 lsrs r3,r3,#16
 593 005c 0133     	 adds r3,r3,#1
 594 005e 3B60     	 str r3,[r7]
 622:../Startup/system_XMC4200.c **** 
 623:../Startup/system_XMC4200.c ****       temp = (temp / (pdiv * kdiv)) * ndiv;
 595              	 .loc 1 623 0
 596 0060 BB68     	 ldr r3,[r7,#8]
 597 0062 3A68     	 ldr r2,[r7]
 598 0064 02FB03F3 	 mul r3,r2,r3
 599 0068 FA68     	 ldr r2,[r7,#12]
 600 006a B2FBF3F3 	 udiv r3,r2,r3
 601 006e 7A68     	 ldr r2,[r7,#4]
 602 0070 02FB03F3 	 mul r3,r2,r3
 603 0074 FB60     	 str r3,[r7,#12]
 604 0076 0DE0     	 b .L28
 605              	.L26:
 624:../Startup/system_XMC4200.c ****     }
 625:../Startup/system_XMC4200.c ****     else
 626:../Startup/system_XMC4200.c ****     {
 627:../Startup/system_XMC4200.c ****       /* PLL prescalar mode */
 628:../Startup/system_XMC4200.c ****       /* read back divider settings */
 629:../Startup/system_XMC4200.c ****       kdiv  = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_Pos) + 1;
 606              	 .loc 1 629 0
 607 0078 134B     	 ldr r3,.L29+4
 608 007a 9B68     	 ldr r3,[r3,#8]
 609 007c 03F07F03 	 and r3,r3,#127
 610 0080 0133     	 adds r3,r3,#1
 611 0082 3B60     	 str r3,[r7]
 630:../Startup/system_XMC4200.c ****       
 631:../Startup/system_XMC4200.c ****       temp = (temp / kdiv);
 612              	 .loc 1 631 0
 613 0084 FA68     	 ldr r2,[r7,#12]
 614 0086 3B68     	 ldr r3,[r7]
 615 0088 B2FBF3F3 	 udiv r3,r2,r3
 616 008c FB60     	 str r3,[r7,#12]
 617 008e 01E0     	 b .L28
 618              	.L23:
 632:../Startup/system_XMC4200.c ****     }
 633:../Startup/system_XMC4200.c ****   }
 634:../Startup/system_XMC4200.c ****   else
 635:../Startup/system_XMC4200.c ****   {
 636:../Startup/system_XMC4200.c ****     /* fOFI is clock source for fSYS */    
 637:../Startup/system_XMC4200.c ****     temp = OFI_FREQUENCY;
 619              	 .loc 1 637 0
 620 0090 0E4B     	 ldr r3,.L29+8
 621 0092 FB60     	 str r3,[r7,#12]
 622              	.L28:
 638:../Startup/system_XMC4200.c ****   }
 639:../Startup/system_XMC4200.c **** 
 640:../Startup/system_XMC4200.c ****   temp = temp / ((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) + 1);
 623              	 .loc 1 640 0
 624 0094 0B4B     	 ldr r3,.L29
 625 0096 DB68     	 ldr r3,[r3,#12]
 626 0098 DBB2     	 uxtb r3,r3
 627 009a 0133     	 adds r3,r3,#1
 628 009c FA68     	 ldr r2,[r7,#12]
 629 009e B2FBF3F3 	 udiv r3,r2,r3
 630 00a2 FB60     	 str r3,[r7,#12]
 641:../Startup/system_XMC4200.c ****   temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 631              	 .loc 1 641 0
 632 00a4 074B     	 ldr r3,.L29
 633 00a6 1B69     	 ldr r3,[r3,#16]
 634 00a8 03F00103 	 and r3,r3,#1
 635 00ac 0133     	 adds r3,r3,#1
 636 00ae FA68     	 ldr r2,[r7,#12]
 637 00b0 B2FBF3F3 	 udiv r3,r2,r3
 638 00b4 FB60     	 str r3,[r7,#12]
 642:../Startup/system_XMC4200.c **** 
 643:../Startup/system_XMC4200.c ****   SystemCoreClock = temp;
 639              	 .loc 1 643 0
 640 00b6 064A     	 ldr r2,.L29+12
 641 00b8 FB68     	 ldr r3,[r7,#12]
 642 00ba 1360     	 str r3,[r2]
 644:../Startup/system_XMC4200.c **** }
 643              	 .loc 1 644 0
 644 00bc 1037     	 adds r7,r7,#16
 645              	.LCFI19:
 646              	 .cfi_def_cfa_offset 8
 647 00be BD46     	 mov sp,r7
 648              	.LCFI20:
 649              	 .cfi_def_cfa_register 13
 650              	 
 651 00c0 80BD     	 pop {r7,pc}
 652              	.L30:
 653 00c2 00BF     	 .align 2
 654              	.L29:
 655 00c4 00460050 	 .word 1342195200
 656 00c8 10470050 	 .word 1342195472
 657 00cc 00366E01 	 .word 24000000
 658 00d0 00000000 	 .word SystemCoreClock
 659              	 .cfi_endproc
 660              	.LFE127:
 662              	 .section .text.OSCHP_GetFrequency,"ax",%progbits
 663              	 .align 2
 664              	 .weak OSCHP_GetFrequency
 665              	 .thumb
 666              	 .thumb_func
 668              	OSCHP_GetFrequency:
 669              	.LFB128:
 645:../Startup/system_XMC4200.c **** 
 646:../Startup/system_XMC4200.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 647:../Startup/system_XMC4200.c **** {
 670              	 .loc 1 647 0
 671              	 .cfi_startproc
 672              	 
 673              	 
 674              	 
 675 0000 80B4     	 push {r7}
 676              	.LCFI21:
 677              	 .cfi_def_cfa_offset 4
 678              	 .cfi_offset 7,-4
 679 0002 00AF     	 add r7,sp,#0
 680              	.LCFI22:
 681              	 .cfi_def_cfa_register 7
 648:../Startup/system_XMC4200.c ****   return OSCHP_FREQUENCY;
 682              	 .loc 1 648 0
 683 0004 024B     	 ldr r3,.L33
 649:../Startup/system_XMC4200.c **** }
 684              	 .loc 1 649 0
 685 0006 1846     	 mov r0,r3
 686 0008 BD46     	 mov sp,r7
 687              	.LCFI23:
 688              	 .cfi_def_cfa_register 13
 689              	 
 690 000a 5DF8047B 	 ldr r7,[sp],#4
 691              	.LCFI24:
 692              	 .cfi_restore 7
 693              	 .cfi_def_cfa_offset 0
 694 000e 7047     	 bx lr
 695              	.L34:
 696              	 .align 2
 697              	.L33:
 698 0010 001BB700 	 .word 12000000
 699              	 .cfi_endproc
 700              	.LFE128:
 702              	 .text
 703              	.Letext0:
 704              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 705              	 .file 5 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 706              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 707              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC4200.c
    {standard input}:23     .no_init:00000000 SystemCoreClock
    {standard input}:20     .no_init:00000000 $d
    {standard input}:29     .no_init:00000004 g_chipid
    {standard input}:35     .no_init:00000014 g_hrpwm_char_data
    {standard input}:38     .text.delay:00000000 $t
    {standard input}:42     .text.delay:00000000 delay
    {standard input}:103    .text.SystemInit:00000000 $t
    {standard input}:108    .text.SystemInit:00000000 SystemInit
    {standard input}:156    .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:259    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:144    .text.SystemInit:00000028 $d
    {standard input}:151    .text.SystemCoreSetup:00000000 $t
    {standard input}:247    .text.SystemCoreSetup:00000054 $d
    {standard input}:254    .text.SystemCoreClockSetup:00000000 $t
    {standard input}:668    .text.OSCHP_GetFrequency:00000000 OSCHP_GetFrequency
    {standard input}:530    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:511    .text.SystemCoreClockSetup:000001b4 $d
    {standard input}:525    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:655    .text.SystemCoreClockUpdate:000000c4 $d
    {standard input}:663    .text.OSCHP_GetFrequency:00000000 $t
    {standard input}:698    .text.OSCHP_GetFrequency:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__Vectors
