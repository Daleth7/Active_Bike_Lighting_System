   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc4_flash.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_FLASH_lResetCommand,"ax",%progbits
  19              	 .align 2
  20              	 .global XMC_FLASH_lResetCommand
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_FLASH_lResetCommand:
  25              	.LFB142:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc4_flash.c"
   1:../Libraries/XMCLib/src/xmc4_flash.c **** /**
   2:../Libraries/XMCLib/src/xmc4_flash.c ****  * @file xmc4_flash.c
   3:../Libraries/XMCLib/src/xmc4_flash.c ****  * @date 2015-06-20 
   4:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   5:../Libraries/XMCLib/src/xmc4_flash.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_flash.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc4_flash.c ****  *
   9:../Libraries/XMCLib/src/xmc4_flash.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_flash.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_flash.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_flash.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_flash.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_flash.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_flash.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_flash.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_flash.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_flash.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_flash.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_flash.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_flash.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_flash.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_flash.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_flash.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_flash.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_flash.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  36:../Libraries/XMCLib/src/xmc4_flash.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_flash.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  39:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-02-10:
  40:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  42:../Libraries/XMCLib/src/xmc4_flash.c ****  * 2015-06-20: 
  43:../Libraries/XMCLib/src/xmc4_flash.c ****  *     - Removed definition of GetDriverVersion API 
  44:../Libraries/XMCLib/src/xmc4_flash.c ****  * @endcond 
  45:../Libraries/XMCLib/src/xmc4_flash.c ****  *
  46:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  47:../Libraries/XMCLib/src/xmc4_flash.c **** 
  48:../Libraries/XMCLib/src/xmc4_flash.c **** #include "xmc_flash.h"
  49:../Libraries/XMCLib/src/xmc4_flash.c **** 
  50:../Libraries/XMCLib/src/xmc4_flash.c **** #if UC_FAMILY == XMC4
  51:../Libraries/XMCLib/src/xmc4_flash.c **** 
  52:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  53:../Libraries/XMCLib/src/xmc4_flash.c ****  * MACROS
  54:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  55:../Libraries/XMCLib/src/xmc4_flash.c **** 
  56:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIGURATION_WORDS (8UL) /* Used to upadte the assembly buffer during
  57:../Libraries/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  58:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIRMATION_OFFSET (512UL) /* Offset address for UCB page */
  59:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIRMATION_WORDS  (4UL)
  60:../Libraries/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIRMATION_CODE   (0x8AFE15C3UL)
  61:../Libraries/XMCLib/src/xmc4_flash.c **** 
  62:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  63:../Libraries/XMCLib/src/xmc4_flash.c ****  * LOCAL FUNCTIONS
  64:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  65:../Libraries/XMCLib/src/xmc4_flash.c **** /*
  66:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to reset the status of the PFLASH
  67:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  68:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lResetCommand(void)
  69:../Libraries/XMCLib/src/xmc4_flash.c **** {
  27              	 .loc 1 69 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  70:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
  71:../Libraries/XMCLib/src/xmc4_flash.c **** 
  72:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
  42              	 .loc 1 72 0
  43 0006 054B     	 ldr r3,.L2
  44 0008 7B60     	 str r3,[r7,#4]
  73:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf0U;
  45              	 .loc 1 73 0
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c F022     	 movs r2,#240
  48 000e 1A60     	 str r2,[r3]
  74:../Libraries/XMCLib/src/xmc4_flash.c **** }
  49              	 .loc 1 74 0
  50 0010 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0012 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0014 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 0018 7047     	 bx lr
  62              	.L3:
  63 001a 00BF     	 .align 2
  64              	.L2:
  65 001c 5455000C 	 .word 201348436
  66              	 .cfi_endproc
  67              	.LFE142:
  69              	 .section .text.XMC_FLASH_lEnterPageModeCommand,"ax",%progbits
  70              	 .align 2
  71              	 .global XMC_FLASH_lEnterPageModeCommand
  72              	 .thumb
  73              	 .thumb_func
  75              	XMC_FLASH_lEnterPageModeCommand:
  76              	.LFB143:
  75:../Libraries/XMCLib/src/xmc4_flash.c **** 
  76:../Libraries/XMCLib/src/xmc4_flash.c **** /*
  77:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to program the PFLASH in to page mode, so that assembly buffer is used 
  78:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  79:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void)
  80:../Libraries/XMCLib/src/xmc4_flash.c **** {
  77              	 .loc 1 80 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI6:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 83B0     	 sub sp,sp,#12
  87              	.LCFI7:
  88              	 .cfi_def_cfa_offset 16
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI8:
  91              	 .cfi_def_cfa_register 7
  81:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
  82:../Libraries/XMCLib/src/xmc4_flash.c **** 
  83:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
  92              	 .loc 1 83 0
  93 0006 054B     	 ldr r3,.L5
  94 0008 7B60     	 str r3,[r7,#4]
  84:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x50;
  95              	 .loc 1 84 0
  96 000a 7B68     	 ldr r3,[r7,#4]
  97 000c 5022     	 movs r2,#80
  98 000e 1A60     	 str r2,[r3]
  85:../Libraries/XMCLib/src/xmc4_flash.c **** }
  99              	 .loc 1 85 0
 100 0010 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 0012 BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0014 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0018 7047     	 bx lr
 112              	.L6:
 113 001a 00BF     	 .align 2
 114              	.L5:
 115 001c 5455000C 	 .word 201348436
 116              	 .cfi_endproc
 117              	.LFE143:
 119              	 .section .text.XMC_FLASH_lLoadPageCommand,"ax",%progbits
 120              	 .align 2
 121              	 .global XMC_FLASH_lLoadPageCommand
 122              	 .thumb
 123              	 .thumb_func
 125              	XMC_FLASH_lLoadPageCommand:
 126              	.LFB144:
  86:../Libraries/XMCLib/src/xmc4_flash.c **** 
  87:../Libraries/XMCLib/src/xmc4_flash.c **** /*
  88:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to load the data into the page assembly buffer 
  89:../Libraries/XMCLib/src/xmc4_flash.c ****  */
  90:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word)
  91:../Libraries/XMCLib/src/xmc4_flash.c **** {
 127              	 .loc 1 91 0
 128              	 .cfi_startproc
 129              	 
 130              	 
 131              	 
 132 0000 80B4     	 push {r7}
 133              	.LCFI12:
 134              	 .cfi_def_cfa_offset 4
 135              	 .cfi_offset 7,-4
 136 0002 85B0     	 sub sp,sp,#20
 137              	.LCFI13:
 138              	 .cfi_def_cfa_offset 24
 139 0004 00AF     	 add r7,sp,#0
 140              	.LCFI14:
 141              	 .cfi_def_cfa_register 7
 142 0006 7860     	 str r0,[r7,#4]
 143 0008 3960     	 str r1,[r7]
  92:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
  93:../Libraries/XMCLib/src/xmc4_flash.c **** 
  94:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f0U);
 144              	 .loc 1 94 0
 145 000a 074B     	 ldr r3,.L8
 146 000c FB60     	 str r3,[r7,#12]
  95:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = low_word;
 147              	 .loc 1 95 0
 148 000e FB68     	 ldr r3,[r7,#12]
 149 0010 7A68     	 ldr r2,[r7,#4]
 150 0012 1A60     	 str r2,[r3]
  96:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 151              	 .loc 1 96 0
 152 0014 054B     	 ldr r3,.L8+4
 153 0016 FB60     	 str r3,[r7,#12]
  97:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = high_word;
 154              	 .loc 1 97 0
 155 0018 FB68     	 ldr r3,[r7,#12]
 156 001a 3A68     	 ldr r2,[r7]
 157 001c 1A60     	 str r2,[r3]
  98:../Libraries/XMCLib/src/xmc4_flash.c **** }
 158              	 .loc 1 98 0
 159 001e 1437     	 adds r7,r7,#20
 160              	.LCFI15:
 161              	 .cfi_def_cfa_offset 4
 162 0020 BD46     	 mov sp,r7
 163              	.LCFI16:
 164              	 .cfi_def_cfa_register 13
 165              	 
 166 0022 5DF8047B 	 ldr r7,[sp],#4
 167              	.LCFI17:
 168              	 .cfi_restore 7
 169              	 .cfi_def_cfa_offset 0
 170 0026 7047     	 bx lr
 171              	.L9:
 172              	 .align 2
 173              	.L8:
 174 0028 F055000C 	 .word 201348592
 175 002c F455000C 	 .word 201348596
 176              	 .cfi_endproc
 177              	.LFE144:
 179              	 .section .text.XMC_FLASH_lWritePageCommand,"ax",%progbits
 180              	 .align 2
 181              	 .global XMC_FLASH_lWritePageCommand
 182              	 .thumb
 183              	 .thumb_func
 185              	XMC_FLASH_lWritePageCommand:
 186              	.LFB145:
  99:../Libraries/XMCLib/src/xmc4_flash.c **** 
 100:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 101:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of one page with data from the assembly buffer
 102:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 103:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address)
 104:../Libraries/XMCLib/src/xmc4_flash.c **** {
 187              	 .loc 1 104 0
 188              	 .cfi_startproc
 189              	 
 190              	 
 191              	 
 192 0000 80B4     	 push {r7}
 193              	.LCFI18:
 194              	 .cfi_def_cfa_offset 4
 195              	 .cfi_offset 7,-4
 196 0002 85B0     	 sub sp,sp,#20
 197              	.LCFI19:
 198              	 .cfi_def_cfa_offset 24
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI20:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 105:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 106:../Libraries/XMCLib/src/xmc4_flash.c **** 
 107:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 203              	 .loc 1 107 0
 204 0008 0C4B     	 ldr r3,.L11
 205 000a FB60     	 str r3,[r7,#12]
 108:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 206              	 .loc 1 108 0
 207 000c FB68     	 ldr r3,[r7,#12]
 208 000e AA22     	 movs r2,#170
 209 0010 1A60     	 str r2,[r3]
 109:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 210              	 .loc 1 109 0
 211 0012 0B4B     	 ldr r3,.L11+4
 212 0014 FB60     	 str r3,[r7,#12]
 110:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 213              	 .loc 1 110 0
 214 0016 FB68     	 ldr r3,[r7,#12]
 215 0018 5522     	 movs r2,#85
 216 001a 1A60     	 str r2,[r3]
 111:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 217              	 .loc 1 111 0
 218 001c 074B     	 ldr r3,.L11
 219 001e FB60     	 str r3,[r7,#12]
 112:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xa0U;
 220              	 .loc 1 112 0
 221 0020 FB68     	 ldr r3,[r7,#12]
 222 0022 A022     	 movs r2,#160
 223 0024 1A60     	 str r2,[r3]
 113:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 224              	 .loc 1 113 0
 225 0026 7B68     	 ldr r3,[r7,#4]
 226 0028 FB60     	 str r3,[r7,#12]
 114:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 227              	 .loc 1 114 0
 228 002a FB68     	 ldr r3,[r7,#12]
 229 002c AA22     	 movs r2,#170
 230 002e 1A60     	 str r2,[r3]
 115:../Libraries/XMCLib/src/xmc4_flash.c **** }
 231              	 .loc 1 115 0
 232 0030 1437     	 adds r7,r7,#20
 233              	.LCFI21:
 234              	 .cfi_def_cfa_offset 4
 235 0032 BD46     	 mov sp,r7
 236              	.LCFI22:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 0034 5DF8047B 	 ldr r7,[sp],#4
 240              	.LCFI23:
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0038 7047     	 bx lr
 244              	.L12:
 245 003a 00BF     	 .align 2
 246              	.L11:
 247 003c 5455000C 	 .word 201348436
 248 0040 A8AA000C 	 .word 201370280
 249              	 .cfi_endproc
 250              	.LFE145:
 252              	 .section .text.XMC_FLASH_lWriteUCBPageCommand,"ax",%progbits
 253              	 .align 2
 254              	 .global XMC_FLASH_lWriteUCBPageCommand
 255              	 .thumb
 256              	 .thumb_func
 258              	XMC_FLASH_lWriteUCBPageCommand:
 259              	.LFB146:
 116:../Libraries/XMCLib/src/xmc4_flash.c **** 
 117:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 118:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of UCB page with data from the assembly buffer
 119:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 120:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address)
 121:../Libraries/XMCLib/src/xmc4_flash.c **** {
 260              	 .loc 1 121 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264              	 
 265 0000 80B4     	 push {r7}
 266              	.LCFI24:
 267              	 .cfi_def_cfa_offset 4
 268              	 .cfi_offset 7,-4
 269 0002 85B0     	 sub sp,sp,#20
 270              	.LCFI25:
 271              	 .cfi_def_cfa_offset 24
 272 0004 00AF     	 add r7,sp,#0
 273              	.LCFI26:
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
 122:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 123:../Libraries/XMCLib/src/xmc4_flash.c **** 
 124:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 276              	 .loc 1 124 0
 277 0008 0C4B     	 ldr r3,.L14
 278 000a FB60     	 str r3,[r7,#12]
 125:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 279              	 .loc 1 125 0
 280 000c FB68     	 ldr r3,[r7,#12]
 281 000e AA22     	 movs r2,#170
 282 0010 1A60     	 str r2,[r3]
 126:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 283              	 .loc 1 126 0
 284 0012 0B4B     	 ldr r3,.L14+4
 285 0014 FB60     	 str r3,[r7,#12]
 127:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 286              	 .loc 1 127 0
 287 0016 FB68     	 ldr r3,[r7,#12]
 288 0018 5522     	 movs r2,#85
 289 001a 1A60     	 str r2,[r3]
 128:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 290              	 .loc 1 128 0
 291 001c 074B     	 ldr r3,.L14
 292 001e FB60     	 str r3,[r7,#12]
 129:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 293              	 .loc 1 129 0
 294 0020 FB68     	 ldr r3,[r7,#12]
 295 0022 C022     	 movs r2,#192
 296 0024 1A60     	 str r2,[r3]
 130:../Libraries/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 297              	 .loc 1 130 0
 298 0026 7B68     	 ldr r3,[r7,#4]
 299 0028 FB60     	 str r3,[r7,#12]
 131:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 300              	 .loc 1 131 0
 301 002a FB68     	 ldr r3,[r7,#12]
 302 002c AA22     	 movs r2,#170
 303 002e 1A60     	 str r2,[r3]
 132:../Libraries/XMCLib/src/xmc4_flash.c **** }
 304              	 .loc 1 132 0
 305 0030 1437     	 adds r7,r7,#20
 306              	.LCFI27:
 307              	 .cfi_def_cfa_offset 4
 308 0032 BD46     	 mov sp,r7
 309              	.LCFI28:
 310              	 .cfi_def_cfa_register 13
 311              	 
 312 0034 5DF8047B 	 ldr r7,[sp],#4
 313              	.LCFI29:
 314              	 .cfi_restore 7
 315              	 .cfi_def_cfa_offset 0
 316 0038 7047     	 bx lr
 317              	.L15:
 318 003a 00BF     	 .align 2
 319              	.L14:
 320 003c 5455000C 	 .word 201348436
 321 0040 A8AA000C 	 .word 201370280
 322              	 .cfi_endproc
 323              	.LFE146:
 325              	 .section .text.XMC_FLASH_lEraseSectorCommand,"ax",%progbits
 326              	 .align 2
 327              	 .global XMC_FLASH_lEraseSectorCommand
 328              	 .thumb
 329              	 .thumb_func
 331              	XMC_FLASH_lEraseSectorCommand:
 332              	.LFB147:
 133:../Libraries/XMCLib/src/xmc4_flash.c **** 
 134:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 135:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase sector which is starting with the specified address
 136:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 137:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address)
 138:../Libraries/XMCLib/src/xmc4_flash.c **** {
 333              	 .loc 1 138 0
 334              	 .cfi_startproc
 335              	 
 336              	 
 337              	 
 338 0000 80B4     	 push {r7}
 339              	.LCFI30:
 340              	 .cfi_def_cfa_offset 4
 341              	 .cfi_offset 7,-4
 342 0002 85B0     	 sub sp,sp,#20
 343              	.LCFI31:
 344              	 .cfi_def_cfa_offset 24
 345 0004 00AF     	 add r7,sp,#0
 346              	.LCFI32:
 347              	 .cfi_def_cfa_register 7
 348 0006 7860     	 str r0,[r7,#4]
 139:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 140:../Libraries/XMCLib/src/xmc4_flash.c **** 
 141:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 349              	 .loc 1 141 0
 350 0008 114B     	 ldr r3,.L17
 351 000a FB60     	 str r3,[r7,#12]
 142:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 352              	 .loc 1 142 0
 353 000c FB68     	 ldr r3,[r7,#12]
 354 000e AA22     	 movs r2,#170
 355 0010 1A60     	 str r2,[r3]
 143:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 356              	 .loc 1 143 0
 357 0012 104B     	 ldr r3,.L17+4
 358 0014 FB60     	 str r3,[r7,#12]
 144:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 359              	 .loc 1 144 0
 360 0016 FB68     	 ldr r3,[r7,#12]
 361 0018 5522     	 movs r2,#85
 362 001a 1A60     	 str r2,[r3]
 145:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 363              	 .loc 1 145 0
 364 001c 0C4B     	 ldr r3,.L17
 365 001e FB60     	 str r3,[r7,#12]
 146:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 366              	 .loc 1 146 0
 367 0020 FB68     	 ldr r3,[r7,#12]
 368 0022 8022     	 movs r2,#128
 369 0024 1A60     	 str r2,[r3]
 147:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 370              	 .loc 1 147 0
 371 0026 0A4B     	 ldr r3,.L17
 372 0028 FB60     	 str r3,[r7,#12]
 148:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 373              	 .loc 1 148 0
 374 002a FB68     	 ldr r3,[r7,#12]
 375 002c AA22     	 movs r2,#170
 376 002e 1A60     	 str r2,[r3]
 149:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 377              	 .loc 1 149 0
 378 0030 084B     	 ldr r3,.L17+4
 379 0032 FB60     	 str r3,[r7,#12]
 150:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 380              	 .loc 1 150 0
 381 0034 FB68     	 ldr r3,[r7,#12]
 382 0036 5522     	 movs r2,#85
 383 0038 1A60     	 str r2,[r3]
 151:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 384              	 .loc 1 151 0
 385 003a 7B68     	 ldr r3,[r7,#4]
 386 003c FB60     	 str r3,[r7,#12]
 152:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x30U;
 387              	 .loc 1 152 0
 388 003e FB68     	 ldr r3,[r7,#12]
 389 0040 3022     	 movs r2,#48
 390 0042 1A60     	 str r2,[r3]
 153:../Libraries/XMCLib/src/xmc4_flash.c **** }
 391              	 .loc 1 153 0
 392 0044 1437     	 adds r7,r7,#20
 393              	.LCFI33:
 394              	 .cfi_def_cfa_offset 4
 395 0046 BD46     	 mov sp,r7
 396              	.LCFI34:
 397              	 .cfi_def_cfa_register 13
 398              	 
 399 0048 5DF8047B 	 ldr r7,[sp],#4
 400              	.LCFI35:
 401              	 .cfi_restore 7
 402              	 .cfi_def_cfa_offset 0
 403 004c 7047     	 bx lr
 404              	.L18:
 405 004e 00BF     	 .align 2
 406              	.L17:
 407 0050 5455000C 	 .word 201348436
 408 0054 A8AA000C 	 .word 201370280
 409              	 .cfi_endproc
 410              	.LFE147:
 412              	 .section .text.XMC_FLASH_lErasePhysicalSectorCommand,"ax",%progbits
 413              	 .align 2
 414              	 .global XMC_FLASH_lErasePhysicalSectorCommand
 415              	 .thumb
 416              	 .thumb_func
 418              	XMC_FLASH_lErasePhysicalSectorCommand:
 419              	.LFB148:
 154:../Libraries/XMCLib/src/xmc4_flash.c **** 
 155:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 156:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector which is starting with the specified address
 157:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 158:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address)
 159:../Libraries/XMCLib/src/xmc4_flash.c **** {
 420              	 .loc 1 159 0
 421              	 .cfi_startproc
 422              	 
 423              	 
 424              	 
 425 0000 80B4     	 push {r7}
 426              	.LCFI36:
 427              	 .cfi_def_cfa_offset 4
 428              	 .cfi_offset 7,-4
 429 0002 85B0     	 sub sp,sp,#20
 430              	.LCFI37:
 431              	 .cfi_def_cfa_offset 24
 432 0004 00AF     	 add r7,sp,#0
 433              	.LCFI38:
 434              	 .cfi_def_cfa_register 7
 435 0006 7860     	 str r0,[r7,#4]
 160:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 161:../Libraries/XMCLib/src/xmc4_flash.c **** 
 162:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 436              	 .loc 1 162 0
 437 0008 114B     	 ldr r3,.L20
 438 000a FB60     	 str r3,[r7,#12]
 163:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 439              	 .loc 1 163 0
 440 000c FB68     	 ldr r3,[r7,#12]
 441 000e AA22     	 movs r2,#170
 442 0010 1A60     	 str r2,[r3]
 164:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 443              	 .loc 1 164 0
 444 0012 104B     	 ldr r3,.L20+4
 445 0014 FB60     	 str r3,[r7,#12]
 165:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 446              	 .loc 1 165 0
 447 0016 FB68     	 ldr r3,[r7,#12]
 448 0018 5522     	 movs r2,#85
 449 001a 1A60     	 str r2,[r3]
 166:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 450              	 .loc 1 166 0
 451 001c 0C4B     	 ldr r3,.L20
 452 001e FB60     	 str r3,[r7,#12]
 167:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 453              	 .loc 1 167 0
 454 0020 FB68     	 ldr r3,[r7,#12]
 455 0022 8022     	 movs r2,#128
 456 0024 1A60     	 str r2,[r3]
 168:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 457              	 .loc 1 168 0
 458 0026 0A4B     	 ldr r3,.L20
 459 0028 FB60     	 str r3,[r7,#12]
 169:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 460              	 .loc 1 169 0
 461 002a FB68     	 ldr r3,[r7,#12]
 462 002c AA22     	 movs r2,#170
 463 002e 1A60     	 str r2,[r3]
 170:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 464              	 .loc 1 170 0
 465 0030 084B     	 ldr r3,.L20+4
 466 0032 FB60     	 str r3,[r7,#12]
 171:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 467              	 .loc 1 171 0
 468 0034 FB68     	 ldr r3,[r7,#12]
 469 0036 5522     	 movs r2,#85
 470 0038 1A60     	 str r2,[r3]
 172:../Libraries/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 471              	 .loc 1 172 0
 472 003a 7B68     	 ldr r3,[r7,#4]
 473 003c FB60     	 str r3,[r7,#12]
 173:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 474              	 .loc 1 173 0
 475 003e FB68     	 ldr r3,[r7,#12]
 476 0040 4022     	 movs r2,#64
 477 0042 1A60     	 str r2,[r3]
 174:../Libraries/XMCLib/src/xmc4_flash.c **** }
 478              	 .loc 1 174 0
 479 0044 1437     	 adds r7,r7,#20
 480              	.LCFI39:
 481              	 .cfi_def_cfa_offset 4
 482 0046 BD46     	 mov sp,r7
 483              	.LCFI40:
 484              	 .cfi_def_cfa_register 13
 485              	 
 486 0048 5DF8047B 	 ldr r7,[sp],#4
 487              	.LCFI41:
 488              	 .cfi_restore 7
 489              	 .cfi_def_cfa_offset 0
 490 004c 7047     	 bx lr
 491              	.L21:
 492 004e 00BF     	 .align 2
 493              	.L20:
 494 0050 5455000C 	 .word 201348436
 495 0054 A8AA000C 	 .word 201370280
 496              	 .cfi_endproc
 497              	.LFE148:
 499              	 .section .text.XMC_FLASH_lEraseUCBCommand,"ax",%progbits
 500              	 .align 2
 501              	 .global XMC_FLASH_lEraseUCBCommand
 502              	 .thumb
 503              	 .thumb_func
 505              	XMC_FLASH_lEraseUCBCommand:
 506              	.LFB149:
 175:../Libraries/XMCLib/src/xmc4_flash.c **** 
 176:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 177:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to erase UCB sector which is starting with the specified address
 178:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 179:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseUCBCommand(uint32_t *ucb_sector_start_address)
 180:../Libraries/XMCLib/src/xmc4_flash.c **** {
 507              	 .loc 1 180 0
 508              	 .cfi_startproc
 509              	 
 510              	 
 511              	 
 512 0000 80B4     	 push {r7}
 513              	.LCFI42:
 514              	 .cfi_def_cfa_offset 4
 515              	 .cfi_offset 7,-4
 516 0002 85B0     	 sub sp,sp,#20
 517              	.LCFI43:
 518              	 .cfi_def_cfa_offset 24
 519 0004 00AF     	 add r7,sp,#0
 520              	.LCFI44:
 521              	 .cfi_def_cfa_register 7
 522 0006 7860     	 str r0,[r7,#4]
 181:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 182:../Libraries/XMCLib/src/xmc4_flash.c **** 
 183:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 523              	 .loc 1 183 0
 524 0008 114B     	 ldr r3,.L23
 525 000a FB60     	 str r3,[r7,#12]
 184:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 526              	 .loc 1 184 0
 527 000c FB68     	 ldr r3,[r7,#12]
 528 000e AA22     	 movs r2,#170
 529 0010 1A60     	 str r2,[r3]
 185:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 530              	 .loc 1 185 0
 531 0012 104B     	 ldr r3,.L23+4
 532 0014 FB60     	 str r3,[r7,#12]
 186:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 533              	 .loc 1 186 0
 534 0016 FB68     	 ldr r3,[r7,#12]
 535 0018 5522     	 movs r2,#85
 536 001a 1A60     	 str r2,[r3]
 187:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 537              	 .loc 1 187 0
 538 001c 0C4B     	 ldr r3,.L23
 539 001e FB60     	 str r3,[r7,#12]
 188:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 540              	 .loc 1 188 0
 541 0020 FB68     	 ldr r3,[r7,#12]
 542 0022 8022     	 movs r2,#128
 543 0024 1A60     	 str r2,[r3]
 189:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 544              	 .loc 1 189 0
 545 0026 0A4B     	 ldr r3,.L23
 546 0028 FB60     	 str r3,[r7,#12]
 190:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 547              	 .loc 1 190 0
 548 002a FB68     	 ldr r3,[r7,#12]
 549 002c AA22     	 movs r2,#170
 550 002e 1A60     	 str r2,[r3]
 191:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 551              	 .loc 1 191 0
 552 0030 084B     	 ldr r3,.L23+4
 553 0032 FB60     	 str r3,[r7,#12]
 192:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 554              	 .loc 1 192 0
 555 0034 FB68     	 ldr r3,[r7,#12]
 556 0036 5522     	 movs r2,#85
 557 0038 1A60     	 str r2,[r3]
 193:../Libraries/XMCLib/src/xmc4_flash.c ****   address = ucb_sector_start_address;
 558              	 .loc 1 193 0
 559 003a 7B68     	 ldr r3,[r7,#4]
 560 003c FB60     	 str r3,[r7,#12]
 194:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 561              	 .loc 1 194 0
 562 003e FB68     	 ldr r3,[r7,#12]
 563 0040 C022     	 movs r2,#192
 564 0042 1A60     	 str r2,[r3]
 195:../Libraries/XMCLib/src/xmc4_flash.c **** }
 565              	 .loc 1 195 0
 566 0044 1437     	 adds r7,r7,#20
 567              	.LCFI45:
 568              	 .cfi_def_cfa_offset 4
 569 0046 BD46     	 mov sp,r7
 570              	.LCFI46:
 571              	 .cfi_def_cfa_register 13
 572              	 
 573 0048 5DF8047B 	 ldr r7,[sp],#4
 574              	.LCFI47:
 575              	 .cfi_restore 7
 576              	 .cfi_def_cfa_offset 0
 577 004c 7047     	 bx lr
 578              	.L24:
 579 004e 00BF     	 .align 2
 580              	.L23:
 581 0050 5455000C 	 .word 201348436
 582 0054 A8AA000C 	 .word 201370280
 583              	 .cfi_endproc
 584              	.LFE149:
 586              	 .section .text.XMC_FLASH_lDisableSectorWriteProtectionCommand,"ax",%progbits
 587              	 .align 2
 588              	 .global XMC_FLASH_lDisableSectorWriteProtectionCommand
 589              	 .thumb
 590              	 .thumb_func
 592              	XMC_FLASH_lDisableSectorWriteProtectionCommand:
 593              	.LFB150:
 196:../Libraries/XMCLib/src/xmc4_flash.c **** 
 197:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 198:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the write protection belonging to the the USER specified, when p
 199:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 200:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 201:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 202:../Libraries/XMCLib/src/xmc4_flash.c **** {
 594              	 .loc 1 202 0
 595              	 .cfi_startproc
 596              	 
 597              	 
 598              	 
 599 0000 80B4     	 push {r7}
 600              	.LCFI48:
 601              	 .cfi_def_cfa_offset 4
 602              	 .cfi_offset 7,-4
 603 0002 87B0     	 sub sp,sp,#28
 604              	.LCFI49:
 605              	 .cfi_def_cfa_offset 32
 606 0004 00AF     	 add r7,sp,#0
 607              	.LCFI50:
 608              	 .cfi_def_cfa_register 7
 609 0006 F860     	 str r0,[r7,#12]
 610 0008 B960     	 str r1,[r7,#8]
 611 000a 7A60     	 str r2,[r7,#4]
 203:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 204:../Libraries/XMCLib/src/xmc4_flash.c **** 
 205:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 612              	 .loc 1 205 0
 613 000c 114B     	 ldr r3,.L26
 614 000e 7B61     	 str r3,[r7,#20]
 206:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 615              	 .loc 1 206 0
 616 0010 7B69     	 ldr r3,[r7,#20]
 617 0012 AA22     	 movs r2,#170
 618 0014 1A60     	 str r2,[r3]
 207:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 619              	 .loc 1 207 0
 620 0016 104B     	 ldr r3,.L26+4
 621 0018 7B61     	 str r3,[r7,#20]
 208:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 622              	 .loc 1 208 0
 623 001a 7B69     	 ldr r3,[r7,#20]
 624 001c 5522     	 movs r2,#85
 625 001e 1A60     	 str r2,[r3]
 209:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 626              	 .loc 1 209 0
 627 0020 0E4B     	 ldr r3,.L26+8
 628 0022 7B61     	 str r3,[r7,#20]
 210:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = user;
 629              	 .loc 1 210 0
 630 0024 7B69     	 ldr r3,[r7,#20]
 631 0026 FA68     	 ldr r2,[r7,#12]
 632 0028 1A60     	 str r2,[r3]
 211:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 633              	 .loc 1 211 0
 634 002a 0B4B     	 ldr r3,.L26+4
 635 002c 7B61     	 str r3,[r7,#20]
 212:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 636              	 .loc 1 212 0
 637 002e 7B69     	 ldr r3,[r7,#20]
 638 0030 BA68     	 ldr r2,[r7,#8]
 639 0032 1A60     	 str r2,[r3]
 213:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 640              	 .loc 1 213 0
 641 0034 084B     	 ldr r3,.L26+4
 642 0036 7B61     	 str r3,[r7,#20]
 214:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 643              	 .loc 1 214 0
 644 0038 7B69     	 ldr r3,[r7,#20]
 645 003a 7A68     	 ldr r2,[r7,#4]
 646 003c 1A60     	 str r2,[r3]
 215:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 647              	 .loc 1 215 0
 648 003e 084B     	 ldr r3,.L26+12
 649 0040 7B61     	 str r3,[r7,#20]
 216:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x05U;
 650              	 .loc 1 216 0
 651 0042 7B69     	 ldr r3,[r7,#20]
 652 0044 0522     	 movs r2,#5
 653 0046 1A60     	 str r2,[r3]
 217:../Libraries/XMCLib/src/xmc4_flash.c **** }
 654              	 .loc 1 217 0
 655 0048 1C37     	 adds r7,r7,#28
 656              	.LCFI51:
 657              	 .cfi_def_cfa_offset 4
 658 004a BD46     	 mov sp,r7
 659              	.LCFI52:
 660              	 .cfi_def_cfa_register 13
 661              	 
 662 004c 5DF8047B 	 ldr r7,[sp],#4
 663              	.LCFI53:
 664              	 .cfi_restore 7
 665              	 .cfi_def_cfa_offset 0
 666 0050 7047     	 bx lr
 667              	.L27:
 668 0052 00BF     	 .align 2
 669              	.L26:
 670 0054 5455000C 	 .word 201348436
 671 0058 A8AA000C 	 .word 201370280
 672 005c 3C55000C 	 .word 201348412
 673 0060 5855000C 	 .word 201348440
 674              	 .cfi_endproc
 675              	.LFE150:
 677              	 .section .text.XMC_FLASH_lDisableReadProtectionCommand,"ax",%progbits
 678              	 .align 2
 679              	 .global XMC_FLASH_lDisableReadProtectionCommand
 680              	 .thumb
 681              	 .thumb_func
 683              	XMC_FLASH_lDisableReadProtectionCommand:
 684              	.LFB151:
 218:../Libraries/XMCLib/src/xmc4_flash.c **** 
 219:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 220:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the read protection along with write protection, when passwords 
 221:../Libraries/XMCLib/src/xmc4_flash.c ****  * configured values
 222:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 223:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1)
 224:../Libraries/XMCLib/src/xmc4_flash.c **** {
 685              	 .loc 1 224 0
 686              	 .cfi_startproc
 687              	 
 688              	 
 689              	 
 690 0000 80B4     	 push {r7}
 691              	.LCFI54:
 692              	 .cfi_def_cfa_offset 4
 693              	 .cfi_offset 7,-4
 694 0002 85B0     	 sub sp,sp,#20
 695              	.LCFI55:
 696              	 .cfi_def_cfa_offset 24
 697 0004 00AF     	 add r7,sp,#0
 698              	.LCFI56:
 699              	 .cfi_def_cfa_register 7
 700 0006 7860     	 str r0,[r7,#4]
 701 0008 3960     	 str r1,[r7]
 225:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 226:../Libraries/XMCLib/src/xmc4_flash.c **** 
 227:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 702              	 .loc 1 227 0
 703 000a 114B     	 ldr r3,.L29
 704 000c FB60     	 str r3,[r7,#12]
 228:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 705              	 .loc 1 228 0
 706 000e FB68     	 ldr r3,[r7,#12]
 707 0010 AA22     	 movs r2,#170
 708 0012 1A60     	 str r2,[r3]
 229:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 709              	 .loc 1 229 0
 710 0014 0F4B     	 ldr r3,.L29+4
 711 0016 FB60     	 str r3,[r7,#12]
 230:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 712              	 .loc 1 230 0
 713 0018 FB68     	 ldr r3,[r7,#12]
 714 001a 5522     	 movs r2,#85
 715 001c 1A60     	 str r2,[r3]
 231:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 716              	 .loc 1 231 0
 717 001e 0E4B     	 ldr r3,.L29+8
 718 0020 FB60     	 str r3,[r7,#12]
 232:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x00U;
 719              	 .loc 1 232 0
 720 0022 FB68     	 ldr r3,[r7,#12]
 721 0024 0022     	 movs r2,#0
 722 0026 1A60     	 str r2,[r3]
 233:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 723              	 .loc 1 233 0
 724 0028 0A4B     	 ldr r3,.L29+4
 725 002a FB60     	 str r3,[r7,#12]
 234:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 726              	 .loc 1 234 0
 727 002c FB68     	 ldr r3,[r7,#12]
 728 002e 7A68     	 ldr r2,[r7,#4]
 729 0030 1A60     	 str r2,[r3]
 235:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 730              	 .loc 1 235 0
 731 0032 084B     	 ldr r3,.L29+4
 732 0034 FB60     	 str r3,[r7,#12]
 236:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 733              	 .loc 1 236 0
 734 0036 FB68     	 ldr r3,[r7,#12]
 735 0038 3A68     	 ldr r2,[r7]
 736 003a 1A60     	 str r2,[r3]
 237:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 737              	 .loc 1 237 0
 738 003c 074B     	 ldr r3,.L29+12
 739 003e FB60     	 str r3,[r7,#12]
 238:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x08U;
 740              	 .loc 1 238 0
 741 0040 FB68     	 ldr r3,[r7,#12]
 742 0042 0822     	 movs r2,#8
 743 0044 1A60     	 str r2,[r3]
 239:../Libraries/XMCLib/src/xmc4_flash.c **** }
 744              	 .loc 1 239 0
 745 0046 1437     	 adds r7,r7,#20
 746              	.LCFI57:
 747              	 .cfi_def_cfa_offset 4
 748 0048 BD46     	 mov sp,r7
 749              	.LCFI58:
 750              	 .cfi_def_cfa_register 13
 751              	 
 752 004a 5DF8047B 	 ldr r7,[sp],#4
 753              	.LCFI59:
 754              	 .cfi_restore 7
 755              	 .cfi_def_cfa_offset 0
 756 004e 7047     	 bx lr
 757              	.L30:
 758              	 .align 2
 759              	.L29:
 760 0050 5455000C 	 .word 201348436
 761 0054 A8AA000C 	 .word 201370280
 762 0058 3C55000C 	 .word 201348412
 763 005c 5855000C 	 .word 201348440
 764              	 .cfi_endproc
 765              	.LFE151:
 767              	 .section .text.XMC_FLASH_lResumeProtectionCommand,"ax",%progbits
 768              	 .align 2
 769              	 .global XMC_FLASH_lResumeProtectionCommand
 770              	 .thumb
 771              	 .thumb_func
 773              	XMC_FLASH_lResumeProtectionCommand:
 774              	.LFB152:
 240:../Libraries/XMCLib/src/xmc4_flash.c **** 
 241:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 242:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to enables the protection as it was configured
 243:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 244:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lResumeProtectionCommand(void)
 245:../Libraries/XMCLib/src/xmc4_flash.c **** {
 775              	 .loc 1 245 0
 776              	 .cfi_startproc
 777              	 
 778              	 
 779              	 
 780 0000 80B4     	 push {r7}
 781              	.LCFI60:
 782              	 .cfi_def_cfa_offset 4
 783              	 .cfi_offset 7,-4
 784 0002 83B0     	 sub sp,sp,#12
 785              	.LCFI61:
 786              	 .cfi_def_cfa_offset 16
 787 0004 00AF     	 add r7,sp,#0
 788              	.LCFI62:
 789              	 .cfi_def_cfa_register 7
 246:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 247:../Libraries/XMCLib/src/xmc4_flash.c **** 
 248:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 790              	 .loc 1 248 0
 791 0006 054B     	 ldr r3,.L32
 792 0008 7B60     	 str r3,[r7,#4]
 249:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0x5eU;
 793              	 .loc 1 249 0
 794 000a 7B68     	 ldr r3,[r7,#4]
 795 000c 5E22     	 movs r2,#94
 796 000e 1A60     	 str r2,[r3]
 250:../Libraries/XMCLib/src/xmc4_flash.c **** }
 797              	 .loc 1 250 0
 798 0010 0C37     	 adds r7,r7,#12
 799              	.LCFI63:
 800              	 .cfi_def_cfa_offset 4
 801 0012 BD46     	 mov sp,r7
 802              	.LCFI64:
 803              	 .cfi_def_cfa_register 13
 804              	 
 805 0014 5DF8047B 	 ldr r7,[sp],#4
 806              	.LCFI65:
 807              	 .cfi_restore 7
 808              	 .cfi_def_cfa_offset 0
 809 0018 7047     	 bx lr
 810              	.L33:
 811 001a 00BF     	 .align 2
 812              	.L32:
 813 001c 5455000C 	 .word 201348436
 814              	 .cfi_endproc
 815              	.LFE152:
 817              	 .section .text.XMC_FLASH_lClearStatusCommand,"ax",%progbits
 818              	 .align 2
 819              	 .global XMC_FLASH_lClearStatusCommand
 820              	 .thumb
 821              	 .thumb_func
 823              	XMC_FLASH_lClearStatusCommand:
 824              	.LFB153:
 251:../Libraries/XMCLib/src/xmc4_flash.c **** 
 252:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 253:../Libraries/XMCLib/src/xmc4_flash.c ****  * Command to clear FSR.PROG and FSR.ERASE and the error flags in FSR such as PFOPER, SQER, PROER, 
 254:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 255:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void)
 256:../Libraries/XMCLib/src/xmc4_flash.c **** {
 825              	 .loc 1 256 0
 826              	 .cfi_startproc
 827              	 
 828              	 
 829              	 
 830 0000 80B4     	 push {r7}
 831              	.LCFI66:
 832              	 .cfi_def_cfa_offset 4
 833              	 .cfi_offset 7,-4
 834 0002 83B0     	 sub sp,sp,#12
 835              	.LCFI67:
 836              	 .cfi_def_cfa_offset 16
 837 0004 00AF     	 add r7,sp,#0
 838              	.LCFI68:
 839              	 .cfi_def_cfa_register 7
 257:../Libraries/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 258:../Libraries/XMCLib/src/xmc4_flash.c **** 
 259:../Libraries/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 840              	 .loc 1 259 0
 841 0006 054B     	 ldr r3,.L35
 842 0008 7B60     	 str r3,[r7,#4]
 260:../Libraries/XMCLib/src/xmc4_flash.c ****   *address = 0xf5U;
 843              	 .loc 1 260 0
 844 000a 7B68     	 ldr r3,[r7,#4]
 845 000c F522     	 movs r2,#245
 846 000e 1A60     	 str r2,[r3]
 261:../Libraries/XMCLib/src/xmc4_flash.c **** }
 847              	 .loc 1 261 0
 848 0010 0C37     	 adds r7,r7,#12
 849              	.LCFI69:
 850              	 .cfi_def_cfa_offset 4
 851 0012 BD46     	 mov sp,r7
 852              	.LCFI70:
 853              	 .cfi_def_cfa_register 13
 854              	 
 855 0014 5DF8047B 	 ldr r7,[sp],#4
 856              	.LCFI71:
 857              	 .cfi_restore 7
 858              	 .cfi_def_cfa_offset 0
 859 0018 7047     	 bx lr
 860              	.L36:
 861 001a 00BF     	 .align 2
 862              	.L35:
 863 001c 5455000C 	 .word 201348436
 864              	 .cfi_endproc
 865              	.LFE153:
 867              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
 868              	 .align 2
 869              	 .global XMC_FLASH_ClearStatus
 870              	 .thumb
 871              	 .thumb_func
 873              	XMC_FLASH_ClearStatus:
 874              	.LFB154:
 262:../Libraries/XMCLib/src/xmc4_flash.c **** 
 263:../Libraries/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
 264:../Libraries/XMCLib/src/xmc4_flash.c ****  * API IMPLEMENTATION
 265:../Libraries/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
 266:../Libraries/XMCLib/src/xmc4_flash.c **** 
 267:../Libraries/XMCLib/src/xmc4_flash.c ****  /*
 268:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API shall clear Program, erase and error flags(PFOPER, SQER, PROER, PFDBER, ORIER, VER) of 
 269:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 270:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ClearStatus(void)
 271:../Libraries/XMCLib/src/xmc4_flash.c **** {
 875              	 .loc 1 271 0
 876              	 .cfi_startproc
 877              	 
 878              	 
 879 0000 80B5     	 push {r7,lr}
 880              	.LCFI72:
 881              	 .cfi_def_cfa_offset 8
 882              	 .cfi_offset 7,-8
 883              	 .cfi_offset 14,-4
 884 0002 00AF     	 add r7,sp,#0
 885              	.LCFI73:
 886              	 .cfi_def_cfa_register 7
 272:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 887              	 .loc 1 272 0
 888 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 273:../Libraries/XMCLib/src/xmc4_flash.c **** }
 889              	 .loc 1 273 0
 890 0008 80BD     	 pop {r7,pc}
 891              	 .cfi_endproc
 892              	.LFE154:
 894 000a 00BF     	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
 895              	 .align 2
 896              	 .global XMC_FLASH_GetStatus
 897              	 .thumb
 898              	 .thumb_func
 900              	XMC_FLASH_GetStatus:
 901              	.LFB155:
 274:../Libraries/XMCLib/src/xmc4_flash.c **** 
 275:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 276:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API returns the FSR register value
 277:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 278:../Libraries/XMCLib/src/xmc4_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
 279:../Libraries/XMCLib/src/xmc4_flash.c **** {
 902              	 .loc 1 279 0
 903              	 .cfi_startproc
 904              	 
 905              	 
 906              	 
 907 0000 80B4     	 push {r7}
 908              	.LCFI74:
 909              	 .cfi_def_cfa_offset 4
 910              	 .cfi_offset 7,-4
 911 0002 00AF     	 add r7,sp,#0
 912              	.LCFI75:
 913              	 .cfi_def_cfa_register 7
 280:../Libraries/XMCLib/src/xmc4_flash.c ****   return FLASH0->FSR;
 914              	 .loc 1 280 0
 915 0004 044B     	 ldr r3,.L40
 916 0006 03F58053 	 add r3,r3,#4096
 917 000a 1033     	 adds r3,r3,#16
 918 000c 1B68     	 ldr r3,[r3]
 281:../Libraries/XMCLib/src/xmc4_flash.c **** }
 919              	 .loc 1 281 0
 920 000e 1846     	 mov r0,r3
 921 0010 BD46     	 mov sp,r7
 922              	.LCFI76:
 923              	 .cfi_def_cfa_register 13
 924              	 
 925 0012 5DF8047B 	 ldr r7,[sp],#4
 926              	.LCFI77:
 927              	 .cfi_restore 7
 928              	 .cfi_def_cfa_offset 0
 929 0016 7047     	 bx lr
 930              	.L41:
 931              	 .align 2
 932              	.L40:
 933 0018 00100058 	 .word 1476399104
 934              	 .cfi_endproc
 935              	.LFE155:
 937              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
 938              	 .align 2
 939              	 .global XMC_FLASH_EnableEvent
 940              	 .thumb
 941              	 .thumb_func
 943              	XMC_FLASH_EnableEvent:
 944              	.LFB156:
 282:../Libraries/XMCLib/src/xmc4_flash.c **** 
 283:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 284:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API enables the events which required to trigger the ISR 
 285:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 286:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 287:../Libraries/XMCLib/src/xmc4_flash.c **** {
 945              	 .loc 1 287 0
 946              	 .cfi_startproc
 947              	 
 948              	 
 949              	 
 950 0000 80B4     	 push {r7}
 951              	.LCFI78:
 952              	 .cfi_def_cfa_offset 4
 953              	 .cfi_offset 7,-4
 954 0002 83B0     	 sub sp,sp,#12
 955              	.LCFI79:
 956              	 .cfi_def_cfa_offset 16
 957 0004 00AF     	 add r7,sp,#0
 958              	.LCFI80:
 959              	 .cfi_def_cfa_register 7
 960 0006 7860     	 str r0,[r7,#4]
 288:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON |= event_msk;
 961              	 .loc 1 288 0
 962 0008 0849     	 ldr r1,.L43
 963 000a 084B     	 ldr r3,.L43
 964 000c 03F58053 	 add r3,r3,#4096
 965 0010 1433     	 adds r3,r3,#20
 966 0012 1A68     	 ldr r2,[r3]
 967 0014 7B68     	 ldr r3,[r7,#4]
 968 0016 1A43     	 orrs r2,r2,r3
 969 0018 01F58053 	 add r3,r1,#4096
 970 001c 1433     	 adds r3,r3,#20
 971 001e 1A60     	 str r2,[r3]
 289:../Libraries/XMCLib/src/xmc4_flash.c **** }
 972              	 .loc 1 289 0
 973 0020 0C37     	 adds r7,r7,#12
 974              	.LCFI81:
 975              	 .cfi_def_cfa_offset 4
 976 0022 BD46     	 mov sp,r7
 977              	.LCFI82:
 978              	 .cfi_def_cfa_register 13
 979              	 
 980 0024 5DF8047B 	 ldr r7,[sp],#4
 981              	.LCFI83:
 982              	 .cfi_restore 7
 983              	 .cfi_def_cfa_offset 0
 984 0028 7047     	 bx lr
 985              	.L44:
 986 002a 00BF     	 .align 2
 987              	.L43:
 988 002c 00100058 	 .word 1476399104
 989              	 .cfi_endproc
 990              	.LFE156:
 992              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 993              	 .align 2
 994              	 .global XMC_FLASH_DisableEvent
 995              	 .thumb
 996              	 .thumb_func
 998              	XMC_FLASH_DisableEvent:
 999              	.LFB157:
 290:../Libraries/XMCLib/src/xmc4_flash.c **** 
 291:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 292:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API disables the event generation 
 293:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 294:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 295:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1000              	 .loc 1 295 0
 1001              	 .cfi_startproc
 1002              	 
 1003              	 
 1004              	 
 1005 0000 80B4     	 push {r7}
 1006              	.LCFI84:
 1007              	 .cfi_def_cfa_offset 4
 1008              	 .cfi_offset 7,-4
 1009 0002 83B0     	 sub sp,sp,#12
 1010              	.LCFI85:
 1011              	 .cfi_def_cfa_offset 16
 1012 0004 00AF     	 add r7,sp,#0
 1013              	.LCFI86:
 1014              	 .cfi_def_cfa_register 7
 1015 0006 7860     	 str r0,[r7,#4]
 296:../Libraries/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON &= ~event_msk;
 1016              	 .loc 1 296 0
 1017 0008 0849     	 ldr r1,.L46
 1018 000a 084B     	 ldr r3,.L46
 1019 000c 03F58053 	 add r3,r3,#4096
 1020 0010 1433     	 adds r3,r3,#20
 1021 0012 1A68     	 ldr r2,[r3]
 1022 0014 7B68     	 ldr r3,[r7,#4]
 1023 0016 DB43     	 mvns r3,r3
 1024 0018 1A40     	 ands r2,r2,r3
 1025 001a 01F58053 	 add r3,r1,#4096
 1026 001e 1433     	 adds r3,r3,#20
 1027 0020 1A60     	 str r2,[r3]
 297:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1028              	 .loc 1 297 0
 1029 0022 0C37     	 adds r7,r7,#12
 1030              	.LCFI87:
 1031              	 .cfi_def_cfa_offset 4
 1032 0024 BD46     	 mov sp,r7
 1033              	.LCFI88:
 1034              	 .cfi_def_cfa_register 13
 1035              	 
 1036 0026 5DF8047B 	 ldr r7,[sp],#4
 1037              	.LCFI89:
 1038              	 .cfi_restore 7
 1039              	 .cfi_def_cfa_offset 0
 1040 002a 7047     	 bx lr
 1041              	.L47:
 1042              	 .align 2
 1043              	.L46:
 1044 002c 00100058 	 .word 1476399104
 1045              	 .cfi_endproc
 1046              	.LFE157:
 1048              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 1049              	 .align 2
 1050              	 .global XMC_FLASH_ProgramPage
 1051              	 .thumb
 1052              	 .thumb_func
 1054              	XMC_FLASH_ProgramPage:
 1055              	.LFB158:
 298:../Libraries/XMCLib/src/xmc4_flash.c **** 
 299:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 300:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API write the PFLASH page
 301:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 302:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 303:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1056              	 .loc 1 303 0
 1057              	 .cfi_startproc
 1058              	 
 1059              	 
 1060 0000 80B5     	 push {r7,lr}
 1061              	.LCFI90:
 1062              	 .cfi_def_cfa_offset 8
 1063              	 .cfi_offset 7,-8
 1064              	 .cfi_offset 14,-4
 1065 0002 84B0     	 sub sp,sp,#16
 1066              	.LCFI91:
 1067              	 .cfi_def_cfa_offset 24
 1068 0004 00AF     	 add r7,sp,#0
 1069              	.LCFI92:
 1070              	 .cfi_def_cfa_register 7
 1071 0006 7860     	 str r0,[r7,#4]
 1072 0008 3960     	 str r1,[r7]
 304:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t index;
 305:../Libraries/XMCLib/src/xmc4_flash.c **** 
 306:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();  
 1073              	 .loc 1 306 0
 1074 000a FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 307:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1075              	 .loc 1 307 0
 1076 000e FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 308:../Libraries/XMCLib/src/xmc4_flash.c **** 
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   for (index = 0; index < XMC_FLASH_WORDS_PER_PAGE; index += 2)
 1077              	 .loc 1 309 0
 1078 0012 0023     	 movs r3,#0
 1079 0014 FB60     	 str r3,[r7,#12]
 1080 0016 11E0     	 b .L49
 1081              	.L50:
 310:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 311:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(data[index], data[index + 1]);
 1082              	 .loc 1 311 0 discriminator 3
 1083 0018 FB68     	 ldr r3,[r7,#12]
 1084 001a 9B00     	 lsls r3,r3,#2
 1085 001c 3A68     	 ldr r2,[r7]
 1086 001e 1344     	 add r3,r3,r2
 1087 0020 1968     	 ldr r1,[r3]
 1088 0022 FB68     	 ldr r3,[r7,#12]
 1089 0024 0133     	 adds r3,r3,#1
 1090 0026 9B00     	 lsls r3,r3,#2
 1091 0028 3A68     	 ldr r2,[r7]
 1092 002a 1344     	 add r3,r3,r2
 1093 002c 1B68     	 ldr r3,[r3]
 1094 002e 0846     	 mov r0,r1
 1095 0030 1946     	 mov r1,r3
 1096 0032 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1097              	 .loc 1 309 0 discriminator 3
 1098 0036 FB68     	 ldr r3,[r7,#12]
 1099 0038 0233     	 adds r3,r3,#2
 1100 003a FB60     	 str r3,[r7,#12]
 1101              	.L49:
 309:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1102              	 .loc 1 309 0 is_stmt 0 discriminator 1
 1103 003c FB68     	 ldr r3,[r7,#12]
 1104 003e 3F2B     	 cmp r3,#63
 1105 0040 EAD9     	 bls .L50
 312:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 313:../Libraries/XMCLib/src/xmc4_flash.c **** 
 314:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWritePageCommand(address);    
 1106              	 .loc 1 314 0 is_stmt 1
 1107 0042 7868     	 ldr r0,[r7,#4]
 1108 0044 FFF7FEFF 	 bl XMC_FLASH_lWritePageCommand
 315:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1109              	 .loc 1 315 0
 1110 0048 1037     	 adds r7,r7,#16
 1111              	.LCFI93:
 1112              	 .cfi_def_cfa_offset 8
 1113 004a BD46     	 mov sp,r7
 1114              	.LCFI94:
 1115              	 .cfi_def_cfa_register 13
 1116              	 
 1117 004c 80BD     	 pop {r7,pc}
 1118              	 .cfi_endproc
 1119              	.LFE158:
 1121 004e 00BF     	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 1122              	 .align 2
 1123              	 .global XMC_FLASH_EraseSector
 1124              	 .thumb
 1125              	 .thumb_func
 1127              	XMC_FLASH_EraseSector:
 1128              	.LFB159:
 316:../Libraries/XMCLib/src/xmc4_flash.c **** 
 317:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 318:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API erase the sector
 319:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 320:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 321:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1129              	 .loc 1 321 0
 1130              	 .cfi_startproc
 1131              	 
 1132              	 
 1133 0000 80B5     	 push {r7,lr}
 1134              	.LCFI95:
 1135              	 .cfi_def_cfa_offset 8
 1136              	 .cfi_offset 7,-8
 1137              	 .cfi_offset 14,-4
 1138 0002 82B0     	 sub sp,sp,#8
 1139              	.LCFI96:
 1140              	 .cfi_def_cfa_offset 16
 1141 0004 00AF     	 add r7,sp,#0
 1142              	.LCFI97:
 1143              	 .cfi_def_cfa_register 7
 1144 0006 7860     	 str r0,[r7,#4]
 322:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1145              	 .loc 1 322 0
 1146 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 323:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEraseSectorCommand(address);
 1147              	 .loc 1 323 0
 1148 000c 7868     	 ldr r0,[r7,#4]
 1149 000e FFF7FEFF 	 bl XMC_FLASH_lEraseSectorCommand
 324:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1150              	 .loc 1 324 0
 1151 0012 0837     	 adds r7,r7,#8
 1152              	.LCFI98:
 1153              	 .cfi_def_cfa_offset 8
 1154 0014 BD46     	 mov sp,r7
 1155              	.LCFI99:
 1156              	 .cfi_def_cfa_register 13
 1157              	 
 1158 0016 80BD     	 pop {r7,pc}
 1159              	 .cfi_endproc
 1160              	.LFE159:
 1162              	 .section .text.XMC_FLASH_InstallProtection,"ax",%progbits
 1163              	 .align 2
 1164              	 .global XMC_FLASH_InstallProtection
 1165              	 .thumb
 1166              	 .thumb_func
 1168              	XMC_FLASH_InstallProtection:
 1169              	.LFB160:
 325:../Libraries/XMCLib/src/xmc4_flash.c **** 
 326:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 327:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API install the global read and sector write protection for the specified user
 328:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 329:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallProtection(uint8_t user,
 330:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t protection_mask,
 331:../Libraries/XMCLib/src/xmc4_flash.c **** 	                               uint32_t password_0,
 332:../Libraries/XMCLib/src/xmc4_flash.c ****                                  uint32_t password_1)
 333:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1170              	 .loc 1 333 0
 1171              	 .cfi_startproc
 1172              	 
 1173              	 
 1174 0000 80B5     	 push {r7,lr}
 1175              	.LCFI100:
 1176              	 .cfi_def_cfa_offset 8
 1177              	 .cfi_offset 7,-8
 1178              	 .cfi_offset 14,-4
 1179 0002 86B0     	 sub sp,sp,#24
 1180              	.LCFI101:
 1181              	 .cfi_def_cfa_offset 32
 1182 0004 00AF     	 add r7,sp,#0
 1183              	.LCFI102:
 1184              	 .cfi_def_cfa_register 7
 1185 0006 B960     	 str r1,[r7,#8]
 1186 0008 7A60     	 str r2,[r7,#4]
 1187 000a 3B60     	 str r3,[r7]
 1188 000c 0346     	 mov r3,r0
 1189 000e FB73     	 strb r3,[r7,#15]
 334:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t index; 
 335:../Libraries/XMCLib/src/xmc4_flash.c ****   
 336:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfigureProtection: User level out of range", (user < 3U));
 337:../Libraries/XMCLib/src/xmc4_flash.c **** 
 338:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1190              	 .loc 1 338 0
 1191 0010 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 339:../Libraries/XMCLib/src/xmc4_flash.c **** 
 340:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1192              	 .loc 1 340 0
 1193 0014 B868     	 ldr r0,[r7,#8]
 1194 0016 0021     	 movs r1,#0
 1195 0018 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 341:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1196              	 .loc 1 341 0
 1197 001c B868     	 ldr r0,[r7,#8]
 1198 001e 0021     	 movs r1,#0
 1199 0020 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 342:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1200              	 .loc 1 342 0
 1201 0024 7868     	 ldr r0,[r7,#4]
 1202 0026 3968     	 ldr r1,[r7]
 1203 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 343:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1204              	 .loc 1 343 0
 1205 002c 7868     	 ldr r0,[r7,#4]
 1206 002e 3968     	 ldr r1,[r7]
 1207 0030 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 344:../Libraries/XMCLib/src/xmc4_flash.c ****   
 345:../Libraries/XMCLib/src/xmc4_flash.c ****   for (index = 0; index < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIGURATION_WORDS); in
 1208              	 .loc 1 345 0
 1209 0034 0023     	 movs r3,#0
 1210 0036 7B61     	 str r3,[r7,#20]
 1211 0038 06E0     	 b .L53
 1212              	.L54:
 346:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 347:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1213              	 .loc 1 347 0 discriminator 3
 1214 003a 0020     	 movs r0,#0
 1215 003c 0021     	 movs r1,#0
 1216 003e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 345:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1217              	 .loc 1 345 0 discriminator 3
 1218 0042 7B69     	 ldr r3,[r7,#20]
 1219 0044 0233     	 adds r3,r3,#2
 1220 0046 7B61     	 str r3,[r7,#20]
 1221              	.L53:
 345:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1222              	 .loc 1 345 0 is_stmt 0 discriminator 1
 1223 0048 7B69     	 ldr r3,[r7,#20]
 1224 004a 372B     	 cmp r3,#55
 1225 004c F5D9     	 bls .L54
 348:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 349:../Libraries/XMCLib/src/xmc4_flash.c **** 
 350:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + (user * XMC_FLASH_BYTES_PE
 1226              	 .loc 1 350 0 is_stmt 1
 1227 004e FB7B     	 ldrb r3,[r7,#15]
 1228 0050 03F54033 	 add r3,r3,#196608
 1229 0054 9B02     	 lsls r3,r3,#10
 1230 0056 1846     	 mov r0,r3
 1231 0058 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 351:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1232              	 .loc 1 351 0
 1233 005c 1837     	 adds r7,r7,#24
 1234              	.LCFI103:
 1235              	 .cfi_def_cfa_offset 8
 1236 005e BD46     	 mov sp,r7
 1237              	.LCFI104:
 1238              	 .cfi_def_cfa_register 13
 1239              	 
 1240 0060 80BD     	 pop {r7,pc}
 1241              	 .cfi_endproc
 1242              	.LFE160:
 1244 0062 00BF     	 .section .text.XMC_FLASH_ConfirmProtection,"ax",%progbits
 1245              	 .align 2
 1246              	 .global XMC_FLASH_ConfirmProtection
 1247              	 .thumb
 1248              	 .thumb_func
 1250              	XMC_FLASH_ConfirmProtection:
 1251              	.LFB161:
 352:../Libraries/XMCLib/src/xmc4_flash.c **** 
 353:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 354:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API confirm the protection. So that This sectors are locked with the specified protection.
 355:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 356:../Libraries/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ConfirmProtection(uint8_t user)
 357:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1252              	 .loc 1 357 0
 1253              	 .cfi_startproc
 1254              	 
 1255              	 
 1256 0000 80B5     	 push {r7,lr}
 1257              	.LCFI105:
 1258              	 .cfi_def_cfa_offset 8
 1259              	 .cfi_offset 7,-8
 1260              	 .cfi_offset 14,-4
 1261 0002 84B0     	 sub sp,sp,#16
 1262              	.LCFI106:
 1263              	 .cfi_def_cfa_offset 24
 1264 0004 00AF     	 add r7,sp,#0
 1265              	.LCFI107:
 1266              	 .cfi_def_cfa_register 7
 1267 0006 0346     	 mov r3,r0
 1268 0008 FB71     	 strb r3,[r7,#7]
 358:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t index;
 359:../Libraries/XMCLib/src/xmc4_flash.c **** 
 360:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfirmProtection: User level out of range", (user < 3U));
 361:../Libraries/XMCLib/src/xmc4_flash.c **** 
 362:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1269              	 .loc 1 362 0
 1270 000a FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 363:../Libraries/XMCLib/src/xmc4_flash.c **** 
 364:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROTECTION_CONFIRMATION_CODE, 0U);
 1271              	 .loc 1 364 0
 1272 000e 1048     	 ldr r0,.L58
 1273 0010 0021     	 movs r1,#0
 1274 0012 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 365:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROTECTION_CONFIRMATION_CODE, 0U);
 1275              	 .loc 1 365 0
 1276 0016 0E48     	 ldr r0,.L58
 1277 0018 0021     	 movs r1,#0
 1278 001a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 366:../Libraries/XMCLib/src/xmc4_flash.c **** 
 367:../Libraries/XMCLib/src/xmc4_flash.c ****   /* Fill the rest of page buffer with zeros*/
 368:../Libraries/XMCLib/src/xmc4_flash.c ****   for (index = 0UL; index < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIRMATION_WORDS); i
 1279              	 .loc 1 368 0
 1280 001e 0023     	 movs r3,#0
 1281 0020 FB60     	 str r3,[r7,#12]
 1282 0022 06E0     	 b .L56
 1283              	.L57:
 369:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 370:../Libraries/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1284              	 .loc 1 370 0 discriminator 3
 1285 0024 0020     	 movs r0,#0
 1286 0026 0021     	 movs r1,#0
 1287 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 368:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1288              	 .loc 1 368 0 discriminator 3
 1289 002c FB68     	 ldr r3,[r7,#12]
 1290 002e 0233     	 adds r3,r3,#2
 1291 0030 FB60     	 str r3,[r7,#12]
 1292              	.L56:
 368:../Libraries/XMCLib/src/xmc4_flash.c ****   {
 1293              	 .loc 1 368 0 is_stmt 0 discriminator 1
 1294 0032 FB68     	 ldr r3,[r7,#12]
 1295 0034 3B2B     	 cmp r3,#59
 1296 0036 F5D9     	 bls .L57
 371:../Libraries/XMCLib/src/xmc4_flash.c ****   }
 372:../Libraries/XMCLib/src/xmc4_flash.c **** 
 373:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + 
 1297              	 .loc 1 373 0 is_stmt 1
 1298 0038 FB79     	 ldrb r3,[r7,#7]
 1299 003a 03F54033 	 add r3,r3,#196608
 1300 003e 9B02     	 lsls r3,r3,#10
 374:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROTECTION_CONFIRMATI
 1301              	 .loc 1 374 0
 1302 0040 03F50073 	 add r3,r3,#512
 373:../Libraries/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROTECTION_CONFIRMATI
 1303              	 .loc 1 373 0
 1304 0044 1846     	 mov r0,r3
 1305 0046 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 375:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1306              	 .loc 1 375 0
 1307 004a 1037     	 adds r7,r7,#16
 1308              	.LCFI108:
 1309              	 .cfi_def_cfa_offset 8
 1310 004c BD46     	 mov sp,r7
 1311              	.LCFI109:
 1312              	 .cfi_def_cfa_register 13
 1313              	 
 1314 004e 80BD     	 pop {r7,pc}
 1315              	.L59:
 1316              	 .align 2
 1317              	.L58:
 1318 0050 C315FE8A 	 .word -1963059773
 1319              	 .cfi_endproc
 1320              	.LFE161:
 1322              	 .section .text.XMC_FLASH_VerifyReadProtection,"ax",%progbits
 1323              	 .align 2
 1324              	 .global XMC_FLASH_VerifyReadProtection
 1325              	 .thumb
 1326              	 .thumb_func
 1328              	XMC_FLASH_VerifyReadProtection:
 1329              	.LFB162:
 376:../Libraries/XMCLib/src/xmc4_flash.c **** 
 377:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 378:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify read protection configuration. And returns true if passwords are matching.
 379:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 380:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyReadProtection(uint32_t password_0, uint32_t password_1)
 381:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1330              	 .loc 1 381 0
 1331              	 .cfi_startproc
 1332              	 
 1333              	 
 1334 0000 80B5     	 push {r7,lr}
 1335              	.LCFI110:
 1336              	 .cfi_def_cfa_offset 8
 1337              	 .cfi_offset 7,-8
 1338              	 .cfi_offset 14,-4
 1339 0002 82B0     	 sub sp,sp,#8
 1340              	.LCFI111:
 1341              	 .cfi_def_cfa_offset 16
 1342 0004 00AF     	 add r7,sp,#0
 1343              	.LCFI112:
 1344              	 .cfi_def_cfa_register 7
 1345 0006 7860     	 str r0,[r7,#4]
 1346 0008 3960     	 str r1,[r7]
 382:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1347              	 .loc 1 382 0
 1348 000a FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 383:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lDisableReadProtectionCommand(password_0, password_1);
 1349              	 .loc 1 383 0
 1350 000e 7868     	 ldr r0,[r7,#4]
 1351 0010 3968     	 ldr r1,[r7]
 1352 0012 FFF7FEFF 	 bl XMC_FLASH_lDisableReadProtectionCommand
 384:../Libraries/XMCLib/src/xmc4_flash.c **** 
 385:../Libraries/XMCLib/src/xmc4_flash.c ****   return (bool)((XMC_FLASH_GetStatus() & XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED) && 
 1353              	 .loc 1 385 0
 1354 0016 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1355 001a 0346     	 mov r3,r0
 1356 001c 03F48023 	 and r3,r3,#262144
 1357 0020 002B     	 cmp r3,#0
 1358 0022 09D0     	 beq .L61
 386:../Libraries/XMCLib/src/xmc4_flash.c ****                 (FLASH0->PROCON0 & XMC_FLASH_PROTECTION_READ_GLOBAL));
 1359              	 .loc 1 386 0 discriminator 1
 1360 0024 084B     	 ldr r3,.L64
 1361 0026 03F58153 	 add r3,r3,#4128
 1362 002a 1B68     	 ldr r3,[r3]
 1363 002c 03F40043 	 and r3,r3,#32768
 385:../Libraries/XMCLib/src/xmc4_flash.c ****                 (FLASH0->PROCON0 & XMC_FLASH_PROTECTION_READ_GLOBAL));
 1364              	 .loc 1 385 0 discriminator 1
 1365 0030 002B     	 cmp r3,#0
 1366 0032 01D0     	 beq .L61
 385:../Libraries/XMCLib/src/xmc4_flash.c ****                 (FLASH0->PROCON0 & XMC_FLASH_PROTECTION_READ_GLOBAL));
 1367              	 .loc 1 385 0 is_stmt 0 discriminator 3
 1368 0034 0123     	 movs r3,#1
 1369 0036 00E0     	 b .L62
 1370              	.L61:
 385:../Libraries/XMCLib/src/xmc4_flash.c ****                 (FLASH0->PROCON0 & XMC_FLASH_PROTECTION_READ_GLOBAL));
 1371              	 .loc 1 385 0 discriminator 4
 1372 0038 0023     	 movs r3,#0
 1373              	.L62:
 385:../Libraries/XMCLib/src/xmc4_flash.c ****                 (FLASH0->PROCON0 & XMC_FLASH_PROTECTION_READ_GLOBAL));
 1374              	 .loc 1 385 0 discriminator 6
 1375 003a 03F00103 	 and r3,r3,#1
 1376 003e DBB2     	 uxtb r3,r3
 387:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1377              	 .loc 1 387 0 is_stmt 1 discriminator 6
 1378 0040 1846     	 mov r0,r3
 1379 0042 0837     	 adds r7,r7,#8
 1380              	.LCFI113:
 1381              	 .cfi_def_cfa_offset 8
 1382 0044 BD46     	 mov sp,r7
 1383              	.LCFI114:
 1384              	 .cfi_def_cfa_register 13
 1385              	 
 1386 0046 80BD     	 pop {r7,pc}
 1387              	.L65:
 1388              	 .align 2
 1389              	.L64:
 1390 0048 00100058 	 .word 1476399104
 1391              	 .cfi_endproc
 1392              	.LFE162:
 1394              	 .section .text.XMC_FLASH_VerifyWriteProtection,"ax",%progbits
 1395              	 .align 2
 1396              	 .global XMC_FLASH_VerifyWriteProtection
 1397              	 .thumb
 1398              	 .thumb_func
 1400              	XMC_FLASH_VerifyWriteProtection:
 1401              	.LFB163:
 388:../Libraries/XMCLib/src/xmc4_flash.c **** 
 389:../Libraries/XMCLib/src/xmc4_flash.c **** /*
 390:../Libraries/XMCLib/src/xmc4_flash.c ****  * This API verify sector write protection configuration. And returns true if passwords are matchin
 391:../Libraries/XMCLib/src/xmc4_flash.c ****  * specified user.
 392:../Libraries/XMCLib/src/xmc4_flash.c ****  */
 393:../Libraries/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyWriteProtection(uint32_t user,
 394:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t protection_mask, 
 395:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_0, 
 396:../Libraries/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_1)
 397:../Libraries/XMCLib/src/xmc4_flash.c **** {
 1402              	 .loc 1 397 0
 1403              	 .cfi_startproc
 1404              	 
 1405              	 
 1406 0000 80B5     	 push {r7,lr}
 1407              	.LCFI115:
 1408              	 .cfi_def_cfa_offset 8
 1409              	 .cfi_offset 7,-8
 1410              	 .cfi_offset 14,-4
 1411 0002 86B0     	 sub sp,sp,#24
 1412              	.LCFI116:
 1413              	 .cfi_def_cfa_offset 32
 1414 0004 00AF     	 add r7,sp,#0
 1415              	.LCFI117:
 1416              	 .cfi_def_cfa_register 7
 1417 0006 F860     	 str r0,[r7,#12]
 1418 0008 B960     	 str r1,[r7,#8]
 1419 000a 7A60     	 str r2,[r7,#4]
 1420 000c 3B60     	 str r3,[r7]
 398:../Libraries/XMCLib/src/xmc4_flash.c ****   uint32_t *flash_procon_ptr;
 399:../Libraries/XMCLib/src/xmc4_flash.c **** 
 400:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_VerifyWriteProtection: User level out of range", (user < 3U));
 401:../Libraries/XMCLib/src/xmc4_flash.c **** 
 402:../Libraries/XMCLib/src/xmc4_flash.c ****   flash_procon_ptr = (uint32_t *)(&(FLASH0->PROCON0) + user);
 1421              	 .loc 1 402 0
 1422 000e FB68     	 ldr r3,[r7,#12]
 1423 0010 9A00     	 lsls r2,r3,#2
 1424 0012 134B     	 ldr r3,.L70
 1425 0014 1344     	 add r3,r3,r2
 1426 0016 7B61     	 str r3,[r7,#20]
 403:../Libraries/XMCLib/src/xmc4_flash.c **** 
 404:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1427              	 .loc 1 404 0
 1428 0018 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 405:../Libraries/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lDisableSectorWriteProtectionCommand(user, password_0, password_1);
 1429              	 .loc 1 405 0
 1430 001c F868     	 ldr r0,[r7,#12]
 1431 001e 7968     	 ldr r1,[r7,#4]
 1432 0020 3A68     	 ldr r2,[r7]
 1433 0022 FFF7FEFF 	 bl XMC_FLASH_lDisableSectorWriteProtectionCommand
 406:../Libraries/XMCLib/src/xmc4_flash.c **** 
 407:../Libraries/XMCLib/src/xmc4_flash.c ****   return (bool)((XMC_FLASH_GetStatus() & (1U << (FLASH_FSR_WPRODIS0_Pos + user))) && 
 1434              	 .loc 1 407 0
 1435 0026 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1436 002a 0246     	 mov r2,r0
 1437 002c FB68     	 ldr r3,[r7,#12]
 1438 002e 1933     	 adds r3,r3,#25
 1439 0030 1946     	 mov r1,r3
 1440 0032 0123     	 movs r3,#1
 1441 0034 8B40     	 lsls r3,r3,r1
 1442 0036 1340     	 ands r3,r3,r2
 1443 0038 002B     	 cmp r3,#0
 1444 003a 08D0     	 beq .L67
 408:../Libraries/XMCLib/src/xmc4_flash.c ****                  (*flash_procon_ptr == (protection_mask & ~XMC_FLASH_PROTECTION_READ_GLOBAL)));
 1445              	 .loc 1 408 0 discriminator 1
 1446 003c 7B69     	 ldr r3,[r7,#20]
 1447 003e 1A68     	 ldr r2,[r3]
 1448 0040 BB68     	 ldr r3,[r7,#8]
 1449 0042 23F40043 	 bic r3,r3,#32768
 407:../Libraries/XMCLib/src/xmc4_flash.c ****                  (*flash_procon_ptr == (protection_mask & ~XMC_FLASH_PROTECTION_READ_GLOBAL)));
 1450              	 .loc 1 407 0 discriminator 1
 1451 0046 9A42     	 cmp r2,r3
 1452 0048 01D1     	 bne .L67
 407:../Libraries/XMCLib/src/xmc4_flash.c ****                  (*flash_procon_ptr == (protection_mask & ~XMC_FLASH_PROTECTION_READ_GLOBAL)));
 1453              	 .loc 1 407 0 is_stmt 0 discriminator 3
 1454 004a 0123     	 movs r3,#1
 1455 004c 00E0     	 b .L68
 1456              	.L67:
 407:../Libraries/XMCLib/src/xmc4_flash.c ****                  (*flash_procon_ptr == (protection_mask & ~XMC_FLASH_PROTECTION_READ_GLOBAL)));
 1457              	 .loc 1 407 0 discriminator 4
 1458 004e 0023     	 movs r3,#0
 1459              	.L68:
 407:../Libraries/XMCLib/src/xmc4_flash.c ****                  (*flash_procon_ptr == (protection_mask & ~XMC_FLASH_PROTECTION_READ_GLOBAL)));
 1460              	 .loc 1 407 0 discriminator 6
 1461 0050 03F00103 	 and r3,r3,#1
 1462 0054 DBB2     	 uxtb r3,r3
 409:../Libraries/XMCLib/src/xmc4_flash.c **** }
 1463              	 .loc 1 409 0 is_stmt 1 discriminator 6
 1464 0056 1846     	 mov r0,r3
 1465 0058 1837     	 adds r7,r7,#24
 1466              	.LCFI118:
 1467              	 .cfi_def_cfa_offset 8
 1468 005a BD46     	 mov sp,r7
 1469              	.LCFI119:
 1470              	 .cfi_def_cfa_register 13
 1471              	 
 1472 005c 80BD     	 pop {r7,pc}
 1473              	.L71:
 1474 005e 00BF     	 .align 2
 1475              	.L70:
 1476 0060 20200058 	 .word 1476403232
 1477              	 .cfi_endproc
 1478              	.LFE163:
 1480              	 .text
 1481              	.Letext0:
 1482              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1483              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1484              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1485              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_flash.h"
 1486              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_flash.c
    {standard input}:19     .text.XMC_FLASH_lResetCommand:00000000 $t
    {standard input}:24     .text.XMC_FLASH_lResetCommand:00000000 XMC_FLASH_lResetCommand
    {standard input}:65     .text.XMC_FLASH_lResetCommand:0000001c $d
    {standard input}:70     .text.XMC_FLASH_lEnterPageModeCommand:00000000 $t
    {standard input}:75     .text.XMC_FLASH_lEnterPageModeCommand:00000000 XMC_FLASH_lEnterPageModeCommand
    {standard input}:115    .text.XMC_FLASH_lEnterPageModeCommand:0000001c $d
    {standard input}:120    .text.XMC_FLASH_lLoadPageCommand:00000000 $t
    {standard input}:125    .text.XMC_FLASH_lLoadPageCommand:00000000 XMC_FLASH_lLoadPageCommand
    {standard input}:174    .text.XMC_FLASH_lLoadPageCommand:00000028 $d
    {standard input}:180    .text.XMC_FLASH_lWritePageCommand:00000000 $t
    {standard input}:185    .text.XMC_FLASH_lWritePageCommand:00000000 XMC_FLASH_lWritePageCommand
    {standard input}:247    .text.XMC_FLASH_lWritePageCommand:0000003c $d
    {standard input}:253    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 $t
    {standard input}:258    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 XMC_FLASH_lWriteUCBPageCommand
    {standard input}:320    .text.XMC_FLASH_lWriteUCBPageCommand:0000003c $d
    {standard input}:326    .text.XMC_FLASH_lEraseSectorCommand:00000000 $t
    {standard input}:331    .text.XMC_FLASH_lEraseSectorCommand:00000000 XMC_FLASH_lEraseSectorCommand
    {standard input}:407    .text.XMC_FLASH_lEraseSectorCommand:00000050 $d
    {standard input}:413    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 $t
    {standard input}:418    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 XMC_FLASH_lErasePhysicalSectorCommand
    {standard input}:494    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000050 $d
    {standard input}:500    .text.XMC_FLASH_lEraseUCBCommand:00000000 $t
    {standard input}:505    .text.XMC_FLASH_lEraseUCBCommand:00000000 XMC_FLASH_lEraseUCBCommand
    {standard input}:581    .text.XMC_FLASH_lEraseUCBCommand:00000050 $d
    {standard input}:587    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 $t
    {standard input}:592    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 XMC_FLASH_lDisableSectorWriteProtectionCommand
    {standard input}:670    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000054 $d
    {standard input}:678    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 $t
    {standard input}:683    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 XMC_FLASH_lDisableReadProtectionCommand
    {standard input}:760    .text.XMC_FLASH_lDisableReadProtectionCommand:00000050 $d
    {standard input}:768    .text.XMC_FLASH_lResumeProtectionCommand:00000000 $t
    {standard input}:773    .text.XMC_FLASH_lResumeProtectionCommand:00000000 XMC_FLASH_lResumeProtectionCommand
    {standard input}:813    .text.XMC_FLASH_lResumeProtectionCommand:0000001c $d
    {standard input}:818    .text.XMC_FLASH_lClearStatusCommand:00000000 $t
    {standard input}:823    .text.XMC_FLASH_lClearStatusCommand:00000000 XMC_FLASH_lClearStatusCommand
    {standard input}:863    .text.XMC_FLASH_lClearStatusCommand:0000001c $d
    {standard input}:868    .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:873    .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:895    .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:900    .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:933    .text.XMC_FLASH_GetStatus:00000018 $d
    {standard input}:938    .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:943    .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:988    .text.XMC_FLASH_EnableEvent:0000002c $d
    {standard input}:993    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:998    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:1044   .text.XMC_FLASH_DisableEvent:0000002c $d
    {standard input}:1049   .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:1054   .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
    {standard input}:1122   .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:1127   .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:1163   .text.XMC_FLASH_InstallProtection:00000000 $t
    {standard input}:1168   .text.XMC_FLASH_InstallProtection:00000000 XMC_FLASH_InstallProtection
    {standard input}:1245   .text.XMC_FLASH_ConfirmProtection:00000000 $t
    {standard input}:1250   .text.XMC_FLASH_ConfirmProtection:00000000 XMC_FLASH_ConfirmProtection
    {standard input}:1318   .text.XMC_FLASH_ConfirmProtection:00000050 $d
    {standard input}:1323   .text.XMC_FLASH_VerifyReadProtection:00000000 $t
    {standard input}:1328   .text.XMC_FLASH_VerifyReadProtection:00000000 XMC_FLASH_VerifyReadProtection
    {standard input}:1390   .text.XMC_FLASH_VerifyReadProtection:00000048 $d
    {standard input}:1395   .text.XMC_FLASH_VerifyWriteProtection:00000000 $t
    {standard input}:1400   .text.XMC_FLASH_VerifyWriteProtection:00000000 XMC_FLASH_VerifyWriteProtection
    {standard input}:1476   .text.XMC_FLASH_VerifyWriteProtection:00000060 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
