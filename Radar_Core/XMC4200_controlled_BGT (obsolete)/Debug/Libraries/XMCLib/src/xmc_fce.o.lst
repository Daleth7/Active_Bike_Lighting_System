   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_fce.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_FCE_Init,"ax",%progbits
  19              	 .align 2
  20              	 .global XMC_FCE_Init
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_FCE_Init:
  25              	.LFB166:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_fce.c"
   1:../Libraries/XMCLib/src/xmc_fce.c **** /**
   2:../Libraries/XMCLib/src/xmc_fce.c ****  * @file xmc_fce.c
   3:../Libraries/XMCLib/src/xmc_fce.c ****  * @date 2015-06-20 
   4:../Libraries/XMCLib/src/xmc_fce.c ****  *
   5:../Libraries/XMCLib/src/xmc_fce.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_fce.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_fce.c ****  *
   9:../Libraries/XMCLib/src/xmc_fce.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_fce.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_fce.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_fce.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_fce.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_fce.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_fce.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_fce.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_fce.c ****  * 
  18:../Libraries/XMCLib/src/xmc_fce.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_fce.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_fce.c ****  * 
  21:../Libraries/XMCLib/src/xmc_fce.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_fce.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_fce.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_fce.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_fce.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_fce.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_fce.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_fce.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_fce.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_fce.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_fce.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_fce.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_fce.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_fce.c ****  *
  36:../Libraries/XMCLib/src/xmc_fce.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_fce.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_fce.c ****  *
  39:../Libraries/XMCLib/src/xmc_fce.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_fce.c ****  *      
  42:../Libraries/XMCLib/src/xmc_fce.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_fce.c ****  *     - Removed GetDriverVersion API
  44:../Libraries/XMCLib/src/xmc_fce.c ****  * @endcond 
  45:../Libraries/XMCLib/src/xmc_fce.c ****  *
  46:../Libraries/XMCLib/src/xmc_fce.c ****  */
  47:../Libraries/XMCLib/src/xmc_fce.c **** 
  48:../Libraries/XMCLib/src/xmc_fce.c **** /**************************************************************************************************
  49:../Libraries/XMCLib/src/xmc_fce.c ****  * HEADER FILES
  50:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  51:../Libraries/XMCLib/src/xmc_fce.c **** #include <xmc_fce.h>
  52:../Libraries/XMCLib/src/xmc_fce.c **** 
  53:../Libraries/XMCLib/src/xmc_fce.c **** #if defined (FCE)
  54:../Libraries/XMCLib/src/xmc_fce.c **** /**************************************************************************************************
  55:../Libraries/XMCLib/src/xmc_fce.c ****  * API IMPLEMENTATION
  56:../Libraries/XMCLib/src/xmc_fce.c ****  **************************************************************************************************
  57:../Libraries/XMCLib/src/xmc_fce.c **** 
  58:../Libraries/XMCLib/src/xmc_fce.c **** /*
  59:../Libraries/XMCLib/src/xmc_fce.c ****  * Initialize the FCE peripheral:
  60:../Libraries/XMCLib/src/xmc_fce.c ****  * Update FCE configuration and initialize seed value
  61:../Libraries/XMCLib/src/xmc_fce.c ****  */
  62:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_Init(const XMC_FCE_t *const engine)
  63:../Libraries/XMCLib/src/xmc_fce.c **** {
  27              	 .loc 1 63 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  64:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CFG = engine->fce_cfg_update.regval;
  43              	 .loc 1 64 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B68     	 ldr r3,[r3]
  46 000c 7A68     	 ldr r2,[r7,#4]
  47 000e 5268     	 ldr r2,[r2,#4]
  48 0010 9A60     	 str r2,[r3,#8]
  65:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CRC = engine->seedvalue;
  49              	 .loc 1 65 0
  50 0012 7B68     	 ldr r3,[r7,#4]
  51 0014 1B68     	 ldr r3,[r3]
  52 0016 7A68     	 ldr r2,[r7,#4]
  53 0018 9268     	 ldr r2,[r2,#8]
  54 001a 9A61     	 str r2,[r3,#24]
  66:../Libraries/XMCLib/src/xmc_fce.c ****   
  67:../Libraries/XMCLib/src/xmc_fce.c ****   return XMC_FCE_STATUS_OK;
  55              	 .loc 1 67 0
  56 001c 0023     	 movs r3,#0
  68:../Libraries/XMCLib/src/xmc_fce.c **** }
  57              	 .loc 1 68 0
  58 001e 1846     	 mov r0,r3
  59 0020 0C37     	 adds r7,r7,#12
  60              	.LCFI3:
  61              	 .cfi_def_cfa_offset 4
  62 0022 BD46     	 mov sp,r7
  63              	.LCFI4:
  64              	 .cfi_def_cfa_register 13
  65              	 
  66 0024 5DF8047B 	 ldr r7,[sp],#4
  67              	.LCFI5:
  68              	 .cfi_restore 7
  69              	 .cfi_def_cfa_offset 0
  70 0028 7047     	 bx lr
  71              	 .cfi_endproc
  72              	.LFE166:
  74 002a 00BF     	 .section .text.XMC_FCE_Disable,"ax",%progbits
  75              	 .align 2
  76              	 .global XMC_FCE_Disable
  77              	 .thumb
  78              	 .thumb_func
  80              	XMC_FCE_Disable:
  81              	.LFB167:
  69:../Libraries/XMCLib/src/xmc_fce.c **** 
  70:../Libraries/XMCLib/src/xmc_fce.c **** /* Disable FCE */
  71:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_Disable(void)
  72:../Libraries/XMCLib/src/xmc_fce.c **** {
  82              	 .loc 1 72 0
  83              	 .cfi_startproc
  84              	 
  85              	 
  86 0000 80B5     	 push {r7,lr}
  87              	.LCFI6:
  88              	 .cfi_def_cfa_offset 8
  89              	 .cfi_offset 7,-8
  90              	 .cfi_offset 14,-4
  91 0002 00AF     	 add r7,sp,#0
  92              	.LCFI7:
  93              	 .cfi_def_cfa_register 7
  73:../Libraries/XMCLib/src/xmc_fce.c ****   FCE->CLC |= (uint32_t)FCE_CLC_DISR_Msk;
  94              	 .loc 1 73 0
  95 0004 044A     	 ldr r2,.L4
  96 0006 044B     	 ldr r3,.L4
  97 0008 1B68     	 ldr r3,[r3]
  98 000a 43F00103 	 orr r3,r3,#1
  99 000e 1360     	 str r3,[r2]
  74:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_FCE);
 100              	 .loc 1 74 0
 101 0010 0248     	 ldr r0,.L4+4
 102 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
  75:../Libraries/XMCLib/src/xmc_fce.c **** }
 103              	 .loc 1 75 0
 104 0016 80BD     	 pop {r7,pc}
 105              	.L5:
 106              	 .align 2
 107              	.L4:
 108 0018 00000250 	 .word 1342308352
 109 001c 40000020 	 .word 536870976
 110              	 .cfi_endproc
 111              	.LFE167:
 113              	 .section .text.XMC_FCE_Enable,"ax",%progbits
 114              	 .align 2
 115              	 .global XMC_FCE_Enable
 116              	 .thumb
 117              	 .thumb_func
 119              	XMC_FCE_Enable:
 120              	.LFB168:
  76:../Libraries/XMCLib/src/xmc_fce.c **** 
  77:../Libraries/XMCLib/src/xmc_fce.c **** /* Enable FCE */
  78:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_Enable(void)
  79:../Libraries/XMCLib/src/xmc_fce.c **** {
 121              	 .loc 1 79 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125 0000 80B5     	 push {r7,lr}
 126              	.LCFI8:
 127              	 .cfi_def_cfa_offset 8
 128              	 .cfi_offset 7,-8
 129              	 .cfi_offset 14,-4
 130 0002 00AF     	 add r7,sp,#0
 131              	.LCFI9:
 132              	 .cfi_def_cfa_register 7
  80:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_FCE);
 133              	 .loc 1 80 0
 134 0004 0448     	 ldr r0,.L7
 135 0006 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  81:../Libraries/XMCLib/src/xmc_fce.c ****   FCE->CLC &= (uint32_t)~FCE_CLC_DISR_Msk;
 136              	 .loc 1 81 0
 137 000a 044A     	 ldr r2,.L7+4
 138 000c 034B     	 ldr r3,.L7+4
 139 000e 1B68     	 ldr r3,[r3]
 140 0010 23F00103 	 bic r3,r3,#1
 141 0014 1360     	 str r3,[r2]
  82:../Libraries/XMCLib/src/xmc_fce.c **** }
 142              	 .loc 1 82 0
 143 0016 80BD     	 pop {r7,pc}
 144              	.L8:
 145              	 .align 2
 146              	.L7:
 147 0018 40000020 	 .word 536870976
 148 001c 00000250 	 .word 1342308352
 149              	 .cfi_endproc
 150              	.LFE168:
 152              	 .section .text.XMC_FCE_CalculateCRC8,"ax",%progbits
 153              	 .align 2
 154              	 .global XMC_FCE_CalculateCRC8
 155              	 .thumb
 156              	 .thumb_func
 158              	XMC_FCE_CalculateCRC8:
 159              	.LFB169:
  83:../Libraries/XMCLib/src/xmc_fce.c **** 
  84:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return the SAE J1850 CRC8 checksum */
  85:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC8(const XMC_FCE_t *const engine,
  86:../Libraries/XMCLib/src/xmc_fce.c ****                                        const uint8_t *data,
  87:../Libraries/XMCLib/src/xmc_fce.c **** 									   uint32_t length,
  88:../Libraries/XMCLib/src/xmc_fce.c **** 									   uint8_t *result)
  89:../Libraries/XMCLib/src/xmc_fce.c **** {
 160              	 .loc 1 89 0
 161              	 .cfi_startproc
 162              	 
 163              	 
 164              	 
 165 0000 80B4     	 push {r7}
 166              	.LCFI10:
 167              	 .cfi_def_cfa_offset 4
 168              	 .cfi_offset 7,-4
 169 0002 87B0     	 sub sp,sp,#28
 170              	.LCFI11:
 171              	 .cfi_def_cfa_offset 32
 172 0004 00AF     	 add r7,sp,#0
 173              	.LCFI12:
 174              	 .cfi_def_cfa_register 7
 175 0006 F860     	 str r0,[r7,#12]
 176 0008 B960     	 str r1,[r7,#8]
 177 000a 7A60     	 str r2,[r7,#4]
 178 000c 3B60     	 str r3,[r7]
  90:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 179              	 .loc 1 90 0
 180 000e 0023     	 movs r3,#0
 181 0010 FB75     	 strb r3,[r7,#23]
  91:../Libraries/XMCLib/src/xmc_fce.c **** 	
  92:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC8: Wrong FCE kernel used", (engine -> kernel_ptr == XMC_FCE_CRC8)
  93:../Libraries/XMCLib/src/xmc_fce.c **** 
  94:../Libraries/XMCLib/src/xmc_fce.c ****   if (length == 0UL)
 182              	 .loc 1 94 0
 183 0012 7B68     	 ldr r3,[r7,#4]
 184 0014 002B     	 cmp r3,#0
 185 0016 02D1     	 bne .L10
  95:../Libraries/XMCLib/src/xmc_fce.c ****   {
  96:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 186              	 .loc 1 96 0
 187 0018 0223     	 movs r3,#2
 188 001a FB75     	 strb r3,[r7,#23]
 189 001c 14E0     	 b .L11
 190              	.L10:
  97:../Libraries/XMCLib/src/xmc_fce.c ****   }
  98:../Libraries/XMCLib/src/xmc_fce.c ****   else
  99:../Libraries/XMCLib/src/xmc_fce.c ****   {
 100:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 191              	 .loc 1 100 0
 192 001e 0AE0     	 b .L12
 193              	.L13:
 101:../Libraries/XMCLib/src/xmc_fce.c ****     {
 102:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = *data;
 194              	 .loc 1 102 0
 195 0020 FB68     	 ldr r3,[r7,#12]
 196 0022 1B68     	 ldr r3,[r3]
 197 0024 BA68     	 ldr r2,[r7,#8]
 198 0026 1278     	 ldrb r2,[r2]
 199 0028 1A60     	 str r2,[r3]
 103:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 200              	 .loc 1 103 0
 201 002a BB68     	 ldr r3,[r7,#8]
 202 002c 0133     	 adds r3,r3,#1
 203 002e BB60     	 str r3,[r7,#8]
 104:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 1U;
 204              	 .loc 1 104 0
 205 0030 7B68     	 ldr r3,[r7,#4]
 206 0032 013B     	 subs r3,r3,#1
 207 0034 7B60     	 str r3,[r7,#4]
 208              	.L12:
 100:../Libraries/XMCLib/src/xmc_fce.c ****     {
 209              	 .loc 1 100 0
 210 0036 7B68     	 ldr r3,[r7,#4]
 211 0038 002B     	 cmp r3,#0
 212 003a F1D1     	 bne .L13
 105:../Libraries/XMCLib/src/xmc_fce.c ****     }
 106:../Libraries/XMCLib/src/xmc_fce.c **** 
 107:../Libraries/XMCLib/src/xmc_fce.c ****     *result = (uint8_t)engine->kernel_ptr->CRC;
 213              	 .loc 1 107 0
 214 003c FB68     	 ldr r3,[r7,#12]
 215 003e 1B68     	 ldr r3,[r3]
 216 0040 9B69     	 ldr r3,[r3,#24]
 217 0042 DAB2     	 uxtb r2,r3
 218 0044 3B68     	 ldr r3,[r7]
 219 0046 1A70     	 strb r2,[r3]
 220              	.L11:
 108:../Libraries/XMCLib/src/xmc_fce.c ****   }
 109:../Libraries/XMCLib/src/xmc_fce.c **** 
 110:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 221              	 .loc 1 110 0
 222 0048 FB7D     	 ldrb r3,[r7,#23]
 111:../Libraries/XMCLib/src/xmc_fce.c **** }
 223              	 .loc 1 111 0
 224 004a 1846     	 mov r0,r3
 225 004c 1C37     	 adds r7,r7,#28
 226              	.LCFI13:
 227              	 .cfi_def_cfa_offset 4
 228 004e BD46     	 mov sp,r7
 229              	.LCFI14:
 230              	 .cfi_def_cfa_register 13
 231              	 
 232 0050 5DF8047B 	 ldr r7,[sp],#4
 233              	.LCFI15:
 234              	 .cfi_restore 7
 235              	 .cfi_def_cfa_offset 0
 236 0054 7047     	 bx lr
 237              	 .cfi_endproc
 238              	.LFE169:
 240 0056 00BF     	 .section .text.XMC_FCE_CalculateCRC16,"ax",%progbits
 241              	 .align 2
 242              	 .global XMC_FCE_CalculateCRC16
 243              	 .thumb
 244              	 .thumb_func
 246              	XMC_FCE_CalculateCRC16:
 247              	.LFB170:
 112:../Libraries/XMCLib/src/xmc_fce.c **** 
 113:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return calculated CCITT CRC16 checksum */
 114:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC16(const XMC_FCE_t *const engine,
 115:../Libraries/XMCLib/src/xmc_fce.c ****                                         const uint16_t *data,
 116:../Libraries/XMCLib/src/xmc_fce.c **** 										uint32_t length,
 117:../Libraries/XMCLib/src/xmc_fce.c **** 										uint16_t *result)
 118:../Libraries/XMCLib/src/xmc_fce.c **** {
 248              	 .loc 1 118 0
 249              	 .cfi_startproc
 250              	 
 251              	 
 252              	 
 253 0000 80B4     	 push {r7}
 254              	.LCFI16:
 255              	 .cfi_def_cfa_offset 4
 256              	 .cfi_offset 7,-4
 257 0002 87B0     	 sub sp,sp,#28
 258              	.LCFI17:
 259              	 .cfi_def_cfa_offset 32
 260 0004 00AF     	 add r7,sp,#0
 261              	.LCFI18:
 262              	 .cfi_def_cfa_register 7
 263 0006 F860     	 str r0,[r7,#12]
 264 0008 B960     	 str r1,[r7,#8]
 265 000a 7A60     	 str r2,[r7,#4]
 266 000c 3B60     	 str r3,[r7]
 119:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 267              	 .loc 1 119 0
 268 000e 0023     	 movs r3,#0
 269 0010 FB75     	 strb r3,[r7,#23]
 120:../Libraries/XMCLib/src/xmc_fce.c **** 	
 121:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Wrong FCE kernel used", (engine -> kernel_ptr == XMC_FCE_CRC1
 122:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length field is empty", (length != 0));
 123:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Length is not aligned", ((length & 0x01) == 0));
 124:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC16: Buffer is not aligned", (((uint32_t)data % 2U) == 0));
 125:../Libraries/XMCLib/src/xmc_fce.c **** 
 126:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check if data and length are word aligned */
 127:../Libraries/XMCLib/src/xmc_fce.c ****   if (((length & 0x01U) != 0U) || (((uint32_t)length % 2U) != 0U))
 270              	 .loc 1 127 0
 271 0012 7B68     	 ldr r3,[r7,#4]
 272 0014 03F00103 	 and r3,r3,#1
 273 0018 002B     	 cmp r3,#0
 274 001a 04D1     	 bne .L16
 275              	 .loc 1 127 0 is_stmt 0 discriminator 1
 276 001c 7B68     	 ldr r3,[r7,#4]
 277 001e 03F00103 	 and r3,r3,#1
 278 0022 002B     	 cmp r3,#0
 279 0024 02D0     	 beq .L17
 280              	.L16:
 128:../Libraries/XMCLib/src/xmc_fce.c ****   {
 129:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 281              	 .loc 1 129 0 is_stmt 1
 282 0026 0223     	 movs r3,#2
 283 0028 FB75     	 strb r3,[r7,#23]
 284 002a 14E0     	 b .L18
 285              	.L17:
 130:../Libraries/XMCLib/src/xmc_fce.c ****   }
 131:../Libraries/XMCLib/src/xmc_fce.c ****   else
 132:../Libraries/XMCLib/src/xmc_fce.c ****   {
 133:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 286              	 .loc 1 133 0
 287 002c 0AE0     	 b .L19
 288              	.L20:
 134:../Libraries/XMCLib/src/xmc_fce.c ****     {
 135:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = *data;
 289              	 .loc 1 135 0
 290 002e FB68     	 ldr r3,[r7,#12]
 291 0030 1B68     	 ldr r3,[r3]
 292 0032 BA68     	 ldr r2,[r7,#8]
 293 0034 1288     	 ldrh r2,[r2]
 294 0036 1A60     	 str r2,[r3]
 136:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 295              	 .loc 1 136 0
 296 0038 BB68     	 ldr r3,[r7,#8]
 297 003a 0233     	 adds r3,r3,#2
 298 003c BB60     	 str r3,[r7,#8]
 137:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 2U;
 299              	 .loc 1 137 0
 300 003e 7B68     	 ldr r3,[r7,#4]
 301 0040 023B     	 subs r3,r3,#2
 302 0042 7B60     	 str r3,[r7,#4]
 303              	.L19:
 133:../Libraries/XMCLib/src/xmc_fce.c ****     {
 304              	 .loc 1 133 0
 305 0044 7B68     	 ldr r3,[r7,#4]
 306 0046 002B     	 cmp r3,#0
 307 0048 F1D1     	 bne .L20
 138:../Libraries/XMCLib/src/xmc_fce.c ****     }
 139:../Libraries/XMCLib/src/xmc_fce.c **** 	
 140:../Libraries/XMCLib/src/xmc_fce.c ****     *result = (uint16_t)engine->kernel_ptr->CRC;
 308              	 .loc 1 140 0
 309 004a FB68     	 ldr r3,[r7,#12]
 310 004c 1B68     	 ldr r3,[r3]
 311 004e 9B69     	 ldr r3,[r3,#24]
 312 0050 9AB2     	 uxth r2,r3
 313 0052 3B68     	 ldr r3,[r7]
 314 0054 1A80     	 strh r2,[r3]
 315              	.L18:
 141:../Libraries/XMCLib/src/xmc_fce.c ****   }
 142:../Libraries/XMCLib/src/xmc_fce.c **** 
 143:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 316              	 .loc 1 143 0
 317 0056 FB7D     	 ldrb r3,[r7,#23]
 144:../Libraries/XMCLib/src/xmc_fce.c **** }
 318              	 .loc 1 144 0
 319 0058 1846     	 mov r0,r3
 320 005a 1C37     	 adds r7,r7,#28
 321              	.LCFI19:
 322              	 .cfi_def_cfa_offset 4
 323 005c BD46     	 mov sp,r7
 324              	.LCFI20:
 325              	 .cfi_def_cfa_register 13
 326              	 
 327 005e 5DF8047B 	 ldr r7,[sp],#4
 328              	.LCFI21:
 329              	 .cfi_restore 7
 330              	 .cfi_def_cfa_offset 0
 331 0062 7047     	 bx lr
 332              	 .cfi_endproc
 333              	.LFE170:
 335              	 .section .text.XMC_FCE_CalculateCRC32,"ax",%progbits
 336              	 .align 2
 337              	 .global XMC_FCE_CalculateCRC32
 338              	 .thumb
 339              	 .thumb_func
 341              	XMC_FCE_CalculateCRC32:
 342              	.LFB171:
 145:../Libraries/XMCLib/src/xmc_fce.c **** 
 146:../Libraries/XMCLib/src/xmc_fce.c **** /* Calculate and return the IEEE 802.3 Ethernet CRC32 checksum */
 147:../Libraries/XMCLib/src/xmc_fce.c **** XMC_FCE_STATUS_t XMC_FCE_CalculateCRC32(const XMC_FCE_t *const engine,
 148:../Libraries/XMCLib/src/xmc_fce.c ****                                         const uint32_t *data,
 149:../Libraries/XMCLib/src/xmc_fce.c **** 										uint32_t length,
 150:../Libraries/XMCLib/src/xmc_fce.c **** 										uint32_t *result)
 151:../Libraries/XMCLib/src/xmc_fce.c **** {
 343              	 .loc 1 151 0
 344              	 .cfi_startproc
 345              	 
 346              	 
 347              	 
 348 0000 80B4     	 push {r7}
 349              	.LCFI22:
 350              	 .cfi_def_cfa_offset 4
 351              	 .cfi_offset 7,-4
 352 0002 87B0     	 sub sp,sp,#28
 353              	.LCFI23:
 354              	 .cfi_def_cfa_offset 32
 355 0004 00AF     	 add r7,sp,#0
 356              	.LCFI24:
 357              	 .cfi_def_cfa_register 7
 358 0006 F860     	 str r0,[r7,#12]
 359 0008 B960     	 str r1,[r7,#8]
 360 000a 7A60     	 str r2,[r7,#4]
 361 000c 3B60     	 str r3,[r7]
 152:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_FCE_STATUS_t status = XMC_FCE_STATUS_OK;
 362              	 .loc 1 152 0
 363 000e 0023     	 movs r3,#0
 364 0010 FB75     	 strb r3,[r7,#23]
 153:../Libraries/XMCLib/src/xmc_fce.c **** 	
 154:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Wrong FCE kernel used", ((engine->kernel_ptr == XMC_FCE_CRC32
 155:../Libraries/XMCLib/src/xmc_fce.c ****                                                                (engine->kernel_ptr == XMC_FCE_CRC32
 156:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length field is empty", (length != 0));
 157:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Length is not aligned", ((length & 0x03) == 0));
 158:../Libraries/XMCLib/src/xmc_fce.c ****   XMC_ASSERT("XMC_FCE_CalculateCRC32: Buffer is not aligned", (((uint32_t)data % 4U) == 0));
 159:../Libraries/XMCLib/src/xmc_fce.c **** 
 160:../Libraries/XMCLib/src/xmc_fce.c ****   /* Check if data and length are word aligned */
 161:../Libraries/XMCLib/src/xmc_fce.c ****   if (((length & 0x03U) != 0U) || (((uint32_t)length % 4U) != 0U))
 365              	 .loc 1 161 0
 366 0012 7B68     	 ldr r3,[r7,#4]
 367 0014 03F00303 	 and r3,r3,#3
 368 0018 002B     	 cmp r3,#0
 369 001a 04D1     	 bne .L23
 370              	 .loc 1 161 0 is_stmt 0 discriminator 1
 371 001c 7B68     	 ldr r3,[r7,#4]
 372 001e 03F00303 	 and r3,r3,#3
 373 0022 002B     	 cmp r3,#0
 374 0024 02D0     	 beq .L24
 375              	.L23:
 162:../Libraries/XMCLib/src/xmc_fce.c ****   {
 163:../Libraries/XMCLib/src/xmc_fce.c ****     status = XMC_FCE_STATUS_ERROR;
 376              	 .loc 1 163 0 is_stmt 1
 377 0026 0223     	 movs r3,#2
 378 0028 FB75     	 strb r3,[r7,#23]
 379 002a 13E0     	 b .L25
 380              	.L24:
 164:../Libraries/XMCLib/src/xmc_fce.c ****   }
 165:../Libraries/XMCLib/src/xmc_fce.c ****   else
 166:../Libraries/XMCLib/src/xmc_fce.c ****   {
 167:../Libraries/XMCLib/src/xmc_fce.c ****     while (0UL != length)
 381              	 .loc 1 167 0
 382 002c 0AE0     	 b .L26
 383              	.L27:
 168:../Libraries/XMCLib/src/xmc_fce.c ****     {
 169:../Libraries/XMCLib/src/xmc_fce.c ****       engine->kernel_ptr->IR = *data;
 384              	 .loc 1 169 0
 385 002e FB68     	 ldr r3,[r7,#12]
 386 0030 1B68     	 ldr r3,[r3]
 387 0032 BA68     	 ldr r2,[r7,#8]
 388 0034 1268     	 ldr r2,[r2]
 389 0036 1A60     	 str r2,[r3]
 170:../Libraries/XMCLib/src/xmc_fce.c ****       data++;
 390              	 .loc 1 170 0
 391 0038 BB68     	 ldr r3,[r7,#8]
 392 003a 0433     	 adds r3,r3,#4
 393 003c BB60     	 str r3,[r7,#8]
 171:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 4U;
 394              	 .loc 1 171 0
 395 003e 7B68     	 ldr r3,[r7,#4]
 396 0040 043B     	 subs r3,r3,#4
 397 0042 7B60     	 str r3,[r7,#4]
 398              	.L26:
 167:../Libraries/XMCLib/src/xmc_fce.c ****     {
 399              	 .loc 1 167 0
 400 0044 7B68     	 ldr r3,[r7,#4]
 401 0046 002B     	 cmp r3,#0
 402 0048 F1D1     	 bne .L27
 172:../Libraries/XMCLib/src/xmc_fce.c ****     }
 173:../Libraries/XMCLib/src/xmc_fce.c **** 
 174:../Libraries/XMCLib/src/xmc_fce.c ****     *result = engine->kernel_ptr->CRC;
 403              	 .loc 1 174 0
 404 004a FB68     	 ldr r3,[r7,#12]
 405 004c 1B68     	 ldr r3,[r3]
 406 004e 9A69     	 ldr r2,[r3,#24]
 407 0050 3B68     	 ldr r3,[r7]
 408 0052 1A60     	 str r2,[r3]
 409              	.L25:
 175:../Libraries/XMCLib/src/xmc_fce.c ****   }
 176:../Libraries/XMCLib/src/xmc_fce.c ****   
 177:../Libraries/XMCLib/src/xmc_fce.c ****   return status;
 410              	 .loc 1 177 0
 411 0054 FB7D     	 ldrb r3,[r7,#23]
 178:../Libraries/XMCLib/src/xmc_fce.c **** }
 412              	 .loc 1 178 0
 413 0056 1846     	 mov r0,r3
 414 0058 1C37     	 adds r7,r7,#28
 415              	.LCFI25:
 416              	 .cfi_def_cfa_offset 4
 417 005a BD46     	 mov sp,r7
 418              	.LCFI26:
 419              	 .cfi_def_cfa_register 13
 420              	 
 421 005c 5DF8047B 	 ldr r7,[sp],#4
 422              	.LCFI27:
 423              	 .cfi_restore 7
 424              	 .cfi_def_cfa_offset 0
 425 0060 7047     	 bx lr
 426              	 .cfi_endproc
 427              	.LFE171:
 429 0062 00BF     	 .section .text.XMC_FCE_TriggerMismatch,"ax",%progbits
 430              	 .align 2
 431              	 .global XMC_FCE_TriggerMismatch
 432              	 .thumb
 433              	 .thumb_func
 435              	XMC_FCE_TriggerMismatch:
 436              	.LFB172:
 179:../Libraries/XMCLib/src/xmc_fce.c **** 
 180:../Libraries/XMCLib/src/xmc_fce.c **** /* Trigger mismatch in the CRC registers */
 181:../Libraries/XMCLib/src/xmc_fce.c **** void XMC_FCE_TriggerMismatch(const XMC_FCE_t *const engine, XMC_FCE_CTR_TEST_t test)
 182:../Libraries/XMCLib/src/xmc_fce.c **** {
 437              	 .loc 1 182 0
 438              	 .cfi_startproc
 439              	 
 440              	 
 441              	 
 442 0000 80B4     	 push {r7}
 443              	.LCFI28:
 444              	 .cfi_def_cfa_offset 4
 445              	 .cfi_offset 7,-4
 446 0002 83B0     	 sub sp,sp,#12
 447              	.LCFI29:
 448              	 .cfi_def_cfa_offset 16
 449 0004 00AF     	 add r7,sp,#0
 450              	.LCFI30:
 451              	 .cfi_def_cfa_register 7
 452 0006 7860     	 str r0,[r7,#4]
 453 0008 0B46     	 mov r3,r1
 454 000a FB70     	 strb r3,[r7,#3]
 183:../Libraries/XMCLib/src/xmc_fce.c ****   /* Create a 0 to 1 transition and clear to 0 once it is done */
 184:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR &= ~((uint32_t)test);
 455              	 .loc 1 184 0
 456 000c 7B68     	 ldr r3,[r7,#4]
 457 000e 1B68     	 ldr r3,[r3]
 458 0010 7A68     	 ldr r2,[r7,#4]
 459 0012 1268     	 ldr r2,[r2]
 460 0014 D169     	 ldr r1,[r2,#28]
 461 0016 FA78     	 ldrb r2,[r7,#3]
 462 0018 D243     	 mvns r2,r2
 463 001a 0A40     	 ands r2,r2,r1
 464 001c DA61     	 str r2,[r3,#28]
 185:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR |= (uint32_t)test;
 465              	 .loc 1 185 0
 466 001e 7B68     	 ldr r3,[r7,#4]
 467 0020 1B68     	 ldr r3,[r3]
 468 0022 7A68     	 ldr r2,[r7,#4]
 469 0024 1268     	 ldr r2,[r2]
 470 0026 D169     	 ldr r1,[r2,#28]
 471 0028 FA78     	 ldrb r2,[r7,#3]
 472 002a 0A43     	 orrs r2,r2,r1
 473 002c DA61     	 str r2,[r3,#28]
 186:../Libraries/XMCLib/src/xmc_fce.c ****   engine->kernel_ptr->CTR &= ~((uint32_t)test);
 474              	 .loc 1 186 0
 475 002e 7B68     	 ldr r3,[r7,#4]
 476 0030 1B68     	 ldr r3,[r3]
 477 0032 7A68     	 ldr r2,[r7,#4]
 478 0034 1268     	 ldr r2,[r2]
 479 0036 D169     	 ldr r1,[r2,#28]
 480 0038 FA78     	 ldrb r2,[r7,#3]
 481 003a D243     	 mvns r2,r2
 482 003c 0A40     	 ands r2,r2,r1
 483 003e DA61     	 str r2,[r3,#28]
 187:../Libraries/XMCLib/src/xmc_fce.c **** }
 484              	 .loc 1 187 0
 485 0040 0C37     	 adds r7,r7,#12
 486              	.LCFI31:
 487              	 .cfi_def_cfa_offset 4
 488 0042 BD46     	 mov sp,r7
 489              	.LCFI32:
 490              	 .cfi_def_cfa_register 13
 491              	 
 492 0044 5DF8047B 	 ldr r7,[sp],#4
 493              	.LCFI33:
 494              	 .cfi_restore 7
 495              	 .cfi_def_cfa_offset 0
 496 0048 7047     	 bx lr
 497              	 .cfi_endproc
 498              	.LFE172:
 500 004a 00BF     	 .section .text.CRC_LittleEndian16bit,"ax",%progbits
 501              	 .align 2
 502              	 .global CRC_LittleEndian16bit
 503              	 .thumb
 504              	 .thumb_func
 506              	CRC_LittleEndian16bit:
 507              	.LFB173:
 188:../Libraries/XMCLib/src/xmc_fce.c **** 
 189:../Libraries/XMCLib/src/xmc_fce.c **** /* Change endianness of 16-bit input buffer */
 190:../Libraries/XMCLib/src/xmc_fce.c **** void CRC_LittleEndian16bit(uint8_t* inbuffer, uint16_t* outbuffer, uint16_t length)
 191:../Libraries/XMCLib/src/xmc_fce.c **** {
 508              	 .loc 1 191 0
 509              	 .cfi_startproc
 510              	 
 511              	 
 512              	 
 513 0000 80B4     	 push {r7}
 514              	.LCFI34:
 515              	 .cfi_def_cfa_offset 4
 516              	 .cfi_offset 7,-4
 517 0002 87B0     	 sub sp,sp,#28
 518              	.LCFI35:
 519              	 .cfi_def_cfa_offset 32
 520 0004 00AF     	 add r7,sp,#0
 521              	.LCFI36:
 522              	 .cfi_def_cfa_register 7
 523 0006 F860     	 str r0,[r7,#12]
 524 0008 B960     	 str r1,[r7,#8]
 525 000a 1346     	 mov r3,r2
 526 000c FB80     	 strh r3,[r7,#6]
 192:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t counter = 0U;
 527              	 .loc 1 192 0
 528 000e 0023     	 movs r3,#0
 529 0010 FB82     	 strh r3,[r7,#22]
 193:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t bytecounter = 0U;
 530              	 .loc 1 193 0
 531 0012 0023     	 movs r3,#0
 532 0014 BB82     	 strh r3,[r7,#20]
 194:../Libraries/XMCLib/src/xmc_fce.c **** 
 195:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length & 0x01U)  == 0)
 533              	 .loc 1 195 0
 534 0016 FB88     	 ldrh r3,[r7,#6]
 535 0018 03F00103 	 and r3,r3,#1
 536 001c 002B     	 cmp r3,#0
 537 001e 3AD1     	 bne .L30
 196:../Libraries/XMCLib/src/xmc_fce.c ****   {
 197:../Libraries/XMCLib/src/xmc_fce.c ****     for (counter = 0U; counter < (length >> 1); counter++)
 538              	 .loc 1 197 0
 539 0020 0023     	 movs r3,#0
 540 0022 FB82     	 strh r3,[r7,#22]
 541 0024 08E0     	 b .L32
 542              	.L33:
 198:../Libraries/XMCLib/src/xmc_fce.c ****     {
 199:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = 0U;
 543              	 .loc 1 199 0 discriminator 3
 544 0026 FB8A     	 ldrh r3,[r7,#22]
 545 0028 5B00     	 lsls r3,r3,#1
 546 002a BA68     	 ldr r2,[r7,#8]
 547 002c 1344     	 add r3,r3,r2
 548 002e 0022     	 movs r2,#0
 549 0030 1A80     	 strh r2,[r3]
 197:../Libraries/XMCLib/src/xmc_fce.c ****     {
 550              	 .loc 1 197 0 discriminator 3
 551 0032 FB8A     	 ldrh r3,[r7,#22]
 552 0034 0133     	 adds r3,r3,#1
 553 0036 FB82     	 strh r3,[r7,#22]
 554              	.L32:
 197:../Libraries/XMCLib/src/xmc_fce.c ****     {
 555              	 .loc 1 197 0 is_stmt 0 discriminator 1
 556 0038 FB88     	 ldrh r3,[r7,#6]
 557 003a 5B08     	 lsrs r3,r3,#1
 558 003c 9BB2     	 uxth r3,r3
 559 003e FA8A     	 ldrh r2,[r7,#22]
 560 0040 9A42     	 cmp r2,r3
 561 0042 F0D3     	 bcc .L33
 200:../Libraries/XMCLib/src/xmc_fce.c ****     }
 201:../Libraries/XMCLib/src/xmc_fce.c **** 
 202:../Libraries/XMCLib/src/xmc_fce.c ****     outbuffer[counter] = 0U;
 562              	 .loc 1 202 0 is_stmt 1
 563 0044 FB8A     	 ldrh r3,[r7,#22]
 564 0046 5B00     	 lsls r3,r3,#1
 565 0048 BA68     	 ldr r2,[r7,#8]
 566 004a 1344     	 add r3,r3,r2
 567 004c 0022     	 movs r2,#0
 568 004e 1A80     	 strh r2,[r3]
 203:../Libraries/XMCLib/src/xmc_fce.c ****     counter = 0U;
 569              	 .loc 1 203 0
 570 0050 0023     	 movs r3,#0
 571 0052 FB82     	 strh r3,[r7,#22]
 204:../Libraries/XMCLib/src/xmc_fce.c **** 
 205:../Libraries/XMCLib/src/xmc_fce.c ****     while (length)
 572              	 .loc 1 205 0
 573 0054 1CE0     	 b .L34
 574              	.L35:
 206:../Libraries/XMCLib/src/xmc_fce.c ****     {
 207:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = ((uint16_t)((uint16_t)inbuffer[bytecounter] << 8U) |
 575              	 .loc 1 207 0
 576 0056 FB8A     	 ldrh r3,[r7,#22]
 577 0058 5B00     	 lsls r3,r3,#1
 578 005a BA68     	 ldr r2,[r7,#8]
 579 005c 1344     	 add r3,r3,r2
 580 005e BA8A     	 ldrh r2,[r7,#20]
 581 0060 F968     	 ldr r1,[r7,#12]
 582 0062 0A44     	 add r2,r2,r1
 583 0064 1278     	 ldrb r2,[r2]
 584 0066 92B2     	 uxth r2,r2
 585 0068 1202     	 lsls r2,r2,#8
 586 006a 91B2     	 uxth r1,r2
 208:../Libraries/XMCLib/src/xmc_fce.c ****                             (inbuffer[bytecounter + 1U]));
 587              	 .loc 1 208 0
 588 006c BA8A     	 ldrh r2,[r7,#20]
 589 006e 0132     	 adds r2,r2,#1
 590 0070 F868     	 ldr r0,[r7,#12]
 591 0072 0244     	 add r2,r2,r0
 592 0074 1278     	 ldrb r2,[r2]
 207:../Libraries/XMCLib/src/xmc_fce.c ****                             (inbuffer[bytecounter + 1U]));
 593              	 .loc 1 207 0
 594 0076 92B2     	 uxth r2,r2
 595 0078 0A43     	 orrs r2,r2,r1
 596 007a 92B2     	 uxth r2,r2
 597 007c 1A80     	 strh r2,[r3]
 209:../Libraries/XMCLib/src/xmc_fce.c ****       counter += 1U;
 598              	 .loc 1 209 0
 599 007e FB8A     	 ldrh r3,[r7,#22]
 600 0080 0133     	 adds r3,r3,#1
 601 0082 FB82     	 strh r3,[r7,#22]
 210:../Libraries/XMCLib/src/xmc_fce.c ****       bytecounter += 2U;
 602              	 .loc 1 210 0
 603 0084 BB8A     	 ldrh r3,[r7,#20]
 604 0086 0233     	 adds r3,r3,#2
 605 0088 BB82     	 strh r3,[r7,#20]
 211:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 2U;
 606              	 .loc 1 211 0
 607 008a FB88     	 ldrh r3,[r7,#6]
 608 008c 023B     	 subs r3,r3,#2
 609 008e FB80     	 strh r3,[r7,#6]
 610              	.L34:
 205:../Libraries/XMCLib/src/xmc_fce.c ****     {
 611              	 .loc 1 205 0
 612 0090 FB88     	 ldrh r3,[r7,#6]
 613 0092 002B     	 cmp r3,#0
 614 0094 DFD1     	 bne .L35
 615              	.L30:
 212:../Libraries/XMCLib/src/xmc_fce.c ****     }
 213:../Libraries/XMCLib/src/xmc_fce.c ****   }
 214:../Libraries/XMCLib/src/xmc_fce.c **** }
 616              	 .loc 1 214 0
 617 0096 1C37     	 adds r7,r7,#28
 618              	.LCFI37:
 619              	 .cfi_def_cfa_offset 4
 620 0098 BD46     	 mov sp,r7
 621              	.LCFI38:
 622              	 .cfi_def_cfa_register 13
 623              	 
 624 009a 5DF8047B 	 ldr r7,[sp],#4
 625              	.LCFI39:
 626              	 .cfi_restore 7
 627              	 .cfi_def_cfa_offset 0
 628 009e 7047     	 bx lr
 629              	 .cfi_endproc
 630              	.LFE173:
 632              	 .section .text.CRC_LittleEndian32bit,"ax",%progbits
 633              	 .align 2
 634              	 .global CRC_LittleEndian32bit
 635              	 .thumb
 636              	 .thumb_func
 638              	CRC_LittleEndian32bit:
 639              	.LFB174:
 215:../Libraries/XMCLib/src/xmc_fce.c **** 
 216:../Libraries/XMCLib/src/xmc_fce.c **** /* Change endianness of 32-bit input buffer */
 217:../Libraries/XMCLib/src/xmc_fce.c **** void CRC_LittleEndian32bit(uint8_t* inbuffer, uint32_t* outbuffer, uint16_t length)
 218:../Libraries/XMCLib/src/xmc_fce.c **** {
 640              	 .loc 1 218 0
 641              	 .cfi_startproc
 642              	 
 643              	 
 644              	 
 645 0000 80B4     	 push {r7}
 646              	.LCFI40:
 647              	 .cfi_def_cfa_offset 4
 648              	 .cfi_offset 7,-4
 649 0002 87B0     	 sub sp,sp,#28
 650              	.LCFI41:
 651              	 .cfi_def_cfa_offset 32
 652 0004 00AF     	 add r7,sp,#0
 653              	.LCFI42:
 654              	 .cfi_def_cfa_register 7
 655 0006 F860     	 str r0,[r7,#12]
 656 0008 B960     	 str r1,[r7,#8]
 657 000a 1346     	 mov r3,r2
 658 000c FB80     	 strh r3,[r7,#6]
 219:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t counter = 0U;
 659              	 .loc 1 219 0
 660 000e 0023     	 movs r3,#0
 661 0010 FB82     	 strh r3,[r7,#22]
 220:../Libraries/XMCLib/src/xmc_fce.c ****   uint16_t bytecounter = 0U;
 662              	 .loc 1 220 0
 663 0012 0023     	 movs r3,#0
 664 0014 BB82     	 strh r3,[r7,#20]
 221:../Libraries/XMCLib/src/xmc_fce.c ****  
 222:../Libraries/XMCLib/src/xmc_fce.c ****   if ((length & 0x03U) == 0)
 665              	 .loc 1 222 0
 666 0016 FB88     	 ldrh r3,[r7,#6]
 667 0018 03F00303 	 and r3,r3,#3
 668 001c 002B     	 cmp r3,#0
 669 001e 44D1     	 bne .L36
 223:../Libraries/XMCLib/src/xmc_fce.c ****   {
 224:../Libraries/XMCLib/src/xmc_fce.c ****     for (counter = 0U; counter < (length >> 2U); counter++)
 670              	 .loc 1 224 0
 671 0020 0023     	 movs r3,#0
 672 0022 FB82     	 strh r3,[r7,#22]
 673 0024 08E0     	 b .L38
 674              	.L39:
 225:../Libraries/XMCLib/src/xmc_fce.c ****     {
 226:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = 0U;
 675              	 .loc 1 226 0 discriminator 3
 676 0026 FB8A     	 ldrh r3,[r7,#22]
 677 0028 9B00     	 lsls r3,r3,#2
 678 002a BA68     	 ldr r2,[r7,#8]
 679 002c 1344     	 add r3,r3,r2
 680 002e 0022     	 movs r2,#0
 681 0030 1A60     	 str r2,[r3]
 224:../Libraries/XMCLib/src/xmc_fce.c ****     {
 682              	 .loc 1 224 0 discriminator 3
 683 0032 FB8A     	 ldrh r3,[r7,#22]
 684 0034 0133     	 adds r3,r3,#1
 685 0036 FB82     	 strh r3,[r7,#22]
 686              	.L38:
 224:../Libraries/XMCLib/src/xmc_fce.c ****     {
 687              	 .loc 1 224 0 is_stmt 0 discriminator 1
 688 0038 FB88     	 ldrh r3,[r7,#6]
 689 003a 9B08     	 lsrs r3,r3,#2
 690 003c 9BB2     	 uxth r3,r3
 691 003e FA8A     	 ldrh r2,[r7,#22]
 692 0040 9A42     	 cmp r2,r3
 693 0042 F0D3     	 bcc .L39
 227:../Libraries/XMCLib/src/xmc_fce.c ****     }
 228:../Libraries/XMCLib/src/xmc_fce.c **** 
 229:../Libraries/XMCLib/src/xmc_fce.c ****     outbuffer[counter] = 0U;
 694              	 .loc 1 229 0 is_stmt 1
 695 0044 FB8A     	 ldrh r3,[r7,#22]
 696 0046 9B00     	 lsls r3,r3,#2
 697 0048 BA68     	 ldr r2,[r7,#8]
 698 004a 1344     	 add r3,r3,r2
 699 004c 0022     	 movs r2,#0
 700 004e 1A60     	 str r2,[r3]
 230:../Libraries/XMCLib/src/xmc_fce.c ****     counter = 0U;
 701              	 .loc 1 230 0
 702 0050 0023     	 movs r3,#0
 703 0052 FB82     	 strh r3,[r7,#22]
 231:../Libraries/XMCLib/src/xmc_fce.c **** 
 232:../Libraries/XMCLib/src/xmc_fce.c ****     while (length)
 704              	 .loc 1 232 0
 705 0054 26E0     	 b .L40
 706              	.L41:
 233:../Libraries/XMCLib/src/xmc_fce.c ****     {
 234:../Libraries/XMCLib/src/xmc_fce.c ****       outbuffer[counter] = ((uint32_t)inbuffer[bytecounter]      << 24U) |
 707              	 .loc 1 234 0
 708 0056 FB8A     	 ldrh r3,[r7,#22]
 709 0058 9B00     	 lsls r3,r3,#2
 710 005a BA68     	 ldr r2,[r7,#8]
 711 005c 1344     	 add r3,r3,r2
 712 005e BA8A     	 ldrh r2,[r7,#20]
 713 0060 F968     	 ldr r1,[r7,#12]
 714 0062 0A44     	 add r2,r2,r1
 715 0064 1278     	 ldrb r2,[r2]
 716 0066 1106     	 lsls r1,r2,#24
 235:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 717              	 .loc 1 235 0
 718 0068 BA8A     	 ldrh r2,[r7,#20]
 719 006a 0132     	 adds r2,r2,#1
 720 006c F868     	 ldr r0,[r7,#12]
 721 006e 0244     	 add r2,r2,r0
 722 0070 1278     	 ldrb r2,[r2]
 723 0072 1204     	 lsls r2,r2,#16
 234:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 724              	 .loc 1 234 0
 725 0074 1143     	 orrs r1,r1,r2
 236:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 2U] <<  8U) |
 726              	 .loc 1 236 0
 727 0076 BA8A     	 ldrh r2,[r7,#20]
 728 0078 0232     	 adds r2,r2,#2
 729 007a F868     	 ldr r0,[r7,#12]
 730 007c 0244     	 add r2,r2,r0
 731 007e 1278     	 ldrb r2,[r2]
 732 0080 1202     	 lsls r2,r2,#8
 235:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 733              	 .loc 1 235 0
 734 0082 0A43     	 orrs r2,r2,r1
 237:../Libraries/XMCLib/src/xmc_fce.c ****                            (inbuffer[bytecounter + 3U]);
 735              	 .loc 1 237 0
 736 0084 B98A     	 ldrh r1,[r7,#20]
 737 0086 0331     	 adds r1,r1,#3
 738 0088 F868     	 ldr r0,[r7,#12]
 739 008a 0144     	 add r1,r1,r0
 740 008c 0978     	 ldrb r1,[r1]
 236:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 2U] <<  8U) |
 741              	 .loc 1 236 0
 742 008e 0A43     	 orrs r2,r2,r1
 234:../Libraries/XMCLib/src/xmc_fce.c ****                            ((uint32_t)inbuffer[bytecounter + 1U] << 16U) |
 743              	 .loc 1 234 0
 744 0090 1A60     	 str r2,[r3]
 238:../Libraries/XMCLib/src/xmc_fce.c ****       counter += 1U;
 745              	 .loc 1 238 0
 746 0092 FB8A     	 ldrh r3,[r7,#22]
 747 0094 0133     	 adds r3,r3,#1
 748 0096 FB82     	 strh r3,[r7,#22]
 239:../Libraries/XMCLib/src/xmc_fce.c ****       bytecounter += 4U;
 749              	 .loc 1 239 0
 750 0098 BB8A     	 ldrh r3,[r7,#20]
 751 009a 0433     	 adds r3,r3,#4
 752 009c BB82     	 strh r3,[r7,#20]
 240:../Libraries/XMCLib/src/xmc_fce.c ****       length -= 4U;
 753              	 .loc 1 240 0
 754 009e FB88     	 ldrh r3,[r7,#6]
 755 00a0 043B     	 subs r3,r3,#4
 756 00a2 FB80     	 strh r3,[r7,#6]
 757              	.L40:
 232:../Libraries/XMCLib/src/xmc_fce.c ****     {
 758              	 .loc 1 232 0
 759 00a4 FB88     	 ldrh r3,[r7,#6]
 760 00a6 002B     	 cmp r3,#0
 761 00a8 D5D1     	 bne .L41
 762              	.L36:
 241:../Libraries/XMCLib/src/xmc_fce.c ****     }
 242:../Libraries/XMCLib/src/xmc_fce.c ****   }
 243:../Libraries/XMCLib/src/xmc_fce.c **** }
 763              	 .loc 1 243 0
 764 00aa 1C37     	 adds r7,r7,#28
 765              	.LCFI43:
 766              	 .cfi_def_cfa_offset 4
 767 00ac BD46     	 mov sp,r7
 768              	.LCFI44:
 769              	 .cfi_def_cfa_register 13
 770              	 
 771 00ae 5DF8047B 	 ldr r7,[sp],#4
 772              	.LCFI45:
 773              	 .cfi_restore 7
 774              	 .cfi_def_cfa_offset 0
 775 00b2 7047     	 bx lr
 776              	 .cfi_endproc
 777              	.LFE174:
 779              	 .text
 780              	.Letext0:
 781              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 782              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 783              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 784              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 785              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_fce.h"
 786              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 787              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_fce.c
    {standard input}:19     .text.XMC_FCE_Init:00000000 $t
    {standard input}:24     .text.XMC_FCE_Init:00000000 XMC_FCE_Init
    {standard input}:75     .text.XMC_FCE_Disable:00000000 $t
    {standard input}:80     .text.XMC_FCE_Disable:00000000 XMC_FCE_Disable
    {standard input}:108    .text.XMC_FCE_Disable:00000018 $d
    {standard input}:114    .text.XMC_FCE_Enable:00000000 $t
    {standard input}:119    .text.XMC_FCE_Enable:00000000 XMC_FCE_Enable
    {standard input}:147    .text.XMC_FCE_Enable:00000018 $d
    {standard input}:153    .text.XMC_FCE_CalculateCRC8:00000000 $t
    {standard input}:158    .text.XMC_FCE_CalculateCRC8:00000000 XMC_FCE_CalculateCRC8
    {standard input}:241    .text.XMC_FCE_CalculateCRC16:00000000 $t
    {standard input}:246    .text.XMC_FCE_CalculateCRC16:00000000 XMC_FCE_CalculateCRC16
    {standard input}:336    .text.XMC_FCE_CalculateCRC32:00000000 $t
    {standard input}:341    .text.XMC_FCE_CalculateCRC32:00000000 XMC_FCE_CalculateCRC32
    {standard input}:430    .text.XMC_FCE_TriggerMismatch:00000000 $t
    {standard input}:435    .text.XMC_FCE_TriggerMismatch:00000000 XMC_FCE_TriggerMismatch
    {standard input}:501    .text.CRC_LittleEndian16bit:00000000 $t
    {standard input}:506    .text.CRC_LittleEndian16bit:00000000 CRC_LittleEndian16bit
    {standard input}:633    .text.CRC_LittleEndian32bit:00000000 $t
    {standard input}:638    .text.CRC_LittleEndian32bit:00000000 CRC_LittleEndian32bit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
