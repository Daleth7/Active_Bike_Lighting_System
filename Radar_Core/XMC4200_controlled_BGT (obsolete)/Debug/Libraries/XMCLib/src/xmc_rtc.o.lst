   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_rtc.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_SCU_GetMirrorStatus:
  24              	.LFB149:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_scu.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @date 2015-06-20 
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @cond
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                             
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * following conditions are met:   
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                                                              
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * disclaimer.                        
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                                                              
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                                                              
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Change History
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * --------------
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 2015-02-20:
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Initial <br>
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 2015-05-20:
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 2015-06-20:
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *      
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @endcond 
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #ifndef XMC_SCU_H
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #define XMC_SCU_H
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * HEADER FILES
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #include <xmc_common.h>
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @{
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @addtogroup SCU
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SCU provides the following features,
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Power control
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4 
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Hibernate control 
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Reset control
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Clock control
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clock driver features:
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC1
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Reset driver features:
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC1
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif <br>
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Interrupt driver features:
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Hibernate driver features:
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Trap driver features:
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Parity driver features:
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Power driver features:
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Miscellaneous features:
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC1
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @{
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 	* MACROS
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * ENUMS
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY    ,   /**< Cannot execute the SCU related operation request because
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****                                   processing another request. */
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * DATA TYPES
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurence.
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #include <xmc1_scu.h>
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #include <xmc4_scu.h>
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #else
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #error "Unspecified chipset"
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #endif
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * API Prototypes
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #ifdef __cplusplus
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** extern "C" {
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #endif
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    combined using \a OR operation.
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the timer using this API.<BR>
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    combined using \a OR operation.
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the timer using this API.<BR>
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                parameters of clock setup.
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Disables generation of interrupt on occurence of the input event.\n\n
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the cause of reset. 
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None 
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   SCU_RESET->RSTCLR |= (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   return SystemCoreClock;
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * bit fields are handled internally.
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    to identify the peripheral.
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * peripherals that support clock gating.
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * It is recommended to use this API before
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #endif
 520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    using \a OR operation.
 527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
  26              	 .loc 1 538 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 00AF     	 add r7,sp,#0
  36              	.LCFI1:
  37              	 .cfi_def_cfa_register 7
 539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
  38              	 .loc 1 539 0
  39 0004 034B     	 ldr r3,.L3
  40 0006 D3F8C430 	 ldr r3,[r3,#196]
 540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
  41              	 .loc 1 540 0
  42 000a 1846     	 mov r0,r3
  43 000c BD46     	 mov sp,r7
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 13
  46              	 
  47 000e 5DF8047B 	 ldr r7,[sp],#4
  48              	.LCFI3:
  49              	 .cfi_restore 7
  50              	 .cfi_def_cfa_offset 0
  51 0012 7047     	 bx lr
  52              	.L4:
  53              	 .align 2
  54              	.L3:
  55 0014 00400050 	 .word 1342193664
  56              	 .cfi_endproc
  57              	.LFE149:
  59              	 .section .text.XMC_RTC_Start,"ax",%progbits
  60              	 .align 2
  61              	 .global XMC_RTC_Start
  62              	 .thumb
  63              	 .thumb_func
  65              	XMC_RTC_Start:
  66              	.LFB154:
  67              	 .file 2 "../Libraries/XMCLib/src/xmc_rtc.c"
   1:../Libraries/XMCLib/src/xmc_rtc.c **** /**
   2:../Libraries/XMCLib/src/xmc_rtc.c ****  * @file xmc_rtc.c
   3:../Libraries/XMCLib/src/xmc_rtc.c ****  * @date 2015-06-20 
   4:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   5:../Libraries/XMCLib/src/xmc_rtc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_rtc.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   9:../Libraries/XMCLib/src/xmc_rtc.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_rtc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_rtc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  18:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  21:../Libraries/XMCLib/src/xmc_rtc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_rtc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_rtc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_rtc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  36:../Libraries/XMCLib/src/xmc_rtc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_rtc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  39:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_rtc.c ****  *      
  42:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Removed GetDriverVersion API
  44:../Libraries/XMCLib/src/xmc_rtc.c ****  * @endcond 
  45:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  46:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  47:../Libraries/XMCLib/src/xmc_rtc.c **** 
  48:../Libraries/XMCLib/src/xmc_rtc.c **** /**
  49:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  50:../Libraries/XMCLib/src/xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  51:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  52:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  53:../Libraries/XMCLib/src/xmc_rtc.c **** 
  54:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  55:../Libraries/XMCLib/src/xmc_rtc.c ****  * HEADER FILES
  56:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  57:../Libraries/XMCLib/src/xmc_rtc.c ****  
  58:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_scu.h"
  59:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_rtc.h"
  60:../Libraries/XMCLib/src/xmc_rtc.c **** 
  61:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  62:../Libraries/XMCLib/src/xmc_rtc.c ****  * MACROS
  63:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_rtc.c **** 
  65:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (59U)   /**< RTC time : Maximum seconds */
  66:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (59U)   /**< RTC time : Maximum minutes */
  67:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (23U)   /**< RTC time : Maximum hours */
  68:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  69:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  70:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  71:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  72:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  73:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  74:../Libraries/XMCLib/src/xmc_rtc.c **** 
  75:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  76:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  77:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  78:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  79:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  80:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  81:../Libraries/XMCLib/src/xmc_rtc.c **** 
  82:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  83:../Libraries/XMCLib/src/xmc_rtc.c ****  * API IMPLEMENTATION
  84:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_rtc.c **** 
  86:../Libraries/XMCLib/src/xmc_rtc.c **** /*
  87:../Libraries/XMCLib/src/xmc_rtc.c ****  * Enables RTC peripheral to start counting time
  88:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  89:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Start(void)
  90:../Libraries/XMCLib/src/xmc_rtc.c **** {
  68              	 .loc 2 90 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72 0000 80B5     	 push {r7,lr}
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 7,-8
  76              	 .cfi_offset 14,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
  91:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  80              	 .loc 2 91 0
  81 0004 00BF     	 nop
  82              	.L6:
  83              	 .loc 2 91 0 is_stmt 0 discriminator 1
  84 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
  85 000a 0346     	 mov r3,r0
  86 000c 03F48073 	 and r3,r3,#256
  87 0010 002B     	 cmp r3,#0
  88 0012 F8D1     	 bne .L6
  92:../Libraries/XMCLib/src/xmc_rtc.c ****   {
  93:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
  94:../Libraries/XMCLib/src/xmc_rtc.c ****   }
  95:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
  89              	 .loc 2 95 0 is_stmt 1
  90 0014 034A     	 ldr r2,.L7
  91 0016 034B     	 ldr r3,.L7
  92 0018 5B68     	 ldr r3,[r3,#4]
  93 001a 43F00103 	 orr r3,r3,#1
  94 001e 5360     	 str r3,[r2,#4]
  96:../Libraries/XMCLib/src/xmc_rtc.c **** }
  95              	 .loc 2 96 0
  96 0020 80BD     	 pop {r7,pc}
  97              	.L8:
  98 0022 00BF     	 .align 2
  99              	.L7:
 100 0024 004A0050 	 .word 1342196224
 101              	 .cfi_endproc
 102              	.LFE154:
 104              	 .section .text.XMC_RTC_Stop,"ax",%progbits
 105              	 .align 2
 106              	 .global XMC_RTC_Stop
 107              	 .thumb
 108              	 .thumb_func
 110              	XMC_RTC_Stop:
 111              	.LFB155:
  97:../Libraries/XMCLib/src/xmc_rtc.c **** 
  98:../Libraries/XMCLib/src/xmc_rtc.c **** /*
  99:../Libraries/XMCLib/src/xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 100:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 101:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Stop(void)
 102:../Libraries/XMCLib/src/xmc_rtc.c **** {
 112              	 .loc 2 102 0
 113              	 .cfi_startproc
 114              	 
 115              	 
 116 0000 80B5     	 push {r7,lr}
 117              	.LCFI6:
 118              	 .cfi_def_cfa_offset 8
 119              	 .cfi_offset 7,-8
 120              	 .cfi_offset 14,-4
 121 0002 00AF     	 add r7,sp,#0
 122              	.LCFI7:
 123              	 .cfi_def_cfa_register 7
 103:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 124              	 .loc 2 103 0
 125 0004 00BF     	 nop
 126              	.L10:
 127              	 .loc 2 103 0 is_stmt 0 discriminator 1
 128 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 129 000a 0346     	 mov r3,r0
 130 000c 03F48073 	 and r3,r3,#256
 131 0010 002B     	 cmp r3,#0
 132 0012 F8D1     	 bne .L10
 104:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 105:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 106:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 107:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
 133              	 .loc 2 107 0 is_stmt 1
 134 0014 034A     	 ldr r2,.L11
 135 0016 034B     	 ldr r3,.L11
 136 0018 5B68     	 ldr r3,[r3,#4]
 137 001a 23F00103 	 bic r3,r3,#1
 138 001e 5360     	 str r3,[r2,#4]
 108:../Libraries/XMCLib/src/xmc_rtc.c **** }
 139              	 .loc 2 108 0
 140 0020 80BD     	 pop {r7,pc}
 141              	.L12:
 142 0022 00BF     	 .align 2
 143              	.L11:
 144 0024 004A0050 	 .word 1342196224
 145              	 .cfi_endproc
 146              	.LFE155:
 148              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 149              	 .align 2
 150              	 .global XMC_RTC_SetPrescaler
 151              	 .thumb
 152              	 .thumb_func
 154              	XMC_RTC_SetPrescaler:
 155              	.LFB156:
 109:../Libraries/XMCLib/src/xmc_rtc.c **** 
 110:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 111:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module prescaler value
 112:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 113:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 114:../Libraries/XMCLib/src/xmc_rtc.c **** {
 156              	 .loc 2 114 0
 157              	 .cfi_startproc
 158              	 
 159              	 
 160 0000 80B5     	 push {r7,lr}
 161              	.LCFI8:
 162              	 .cfi_def_cfa_offset 8
 163              	 .cfi_offset 7,-8
 164              	 .cfi_offset 14,-4
 165 0002 82B0     	 sub sp,sp,#8
 166              	.LCFI9:
 167              	 .cfi_def_cfa_offset 16
 168 0004 00AF     	 add r7,sp,#0
 169              	.LCFI10:
 170              	 .cfi_def_cfa_register 7
 171 0006 0346     	 mov r3,r0
 172 0008 FB80     	 strh r3,[r7,#6]
 115:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 116:../Libraries/XMCLib/src/xmc_rtc.c ****   
 117:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 173              	 .loc 2 117 0
 174 000a 00BF     	 nop
 175              	.L14:
 176              	 .loc 2 117 0 is_stmt 0 discriminator 1
 177 000c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 178 0010 0346     	 mov r3,r0
 179 0012 03F48073 	 and r3,r3,#256
 180 0016 002B     	 cmp r3,#0
 181 0018 F8D1     	 bne .L14
 118:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 119:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 120:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 121:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 182              	 .loc 2 121 0 is_stmt 1
 183 001a 0549     	 ldr r1,.L15
 184 001c 044B     	 ldr r3,.L15
 185 001e 5B68     	 ldr r3,[r3,#4]
 186 0020 9AB2     	 uxth r2,r3
 122:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 187              	 .loc 2 122 0
 188 0022 FB88     	 ldrh r3,[r7,#6]
 189 0024 1B04     	 lsls r3,r3,#16
 121:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 190              	 .loc 2 121 0
 191 0026 1343     	 orrs r3,r3,r2
 192 0028 4B60     	 str r3,[r1,#4]
 123:../Libraries/XMCLib/src/xmc_rtc.c **** }
 193              	 .loc 2 123 0
 194 002a 0837     	 adds r7,r7,#8
 195              	.LCFI11:
 196              	 .cfi_def_cfa_offset 8
 197 002c BD46     	 mov sp,r7
 198              	.LCFI12:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 002e 80BD     	 pop {r7,pc}
 202              	.L16:
 203              	 .align 2
 204              	.L15:
 205 0030 004A0050 	 .word 1342196224
 206              	 .cfi_endproc
 207              	.LFE156:
 209              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 210              	 .align 2
 211              	 .global XMC_RTC_SetTime
 212              	 .thumb
 213              	 .thumb_func
 215              	XMC_RTC_SetTime:
 216              	.LFB157:
 124:../Libraries/XMCLib/src/xmc_rtc.c **** 
 125:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 126:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 127:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 128:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 129:../Libraries/XMCLib/src/xmc_rtc.c **** {
 217              	 .loc 2 129 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221 0000 80B5     	 push {r7,lr}
 222              	.LCFI13:
 223              	 .cfi_def_cfa_offset 8
 224              	 .cfi_offset 7,-8
 225              	 .cfi_offset 14,-4
 226 0002 82B0     	 sub sp,sp,#8
 227              	.LCFI14:
 228              	 .cfi_def_cfa_offset 16
 229 0004 00AF     	 add r7,sp,#0
 230              	.LCFI15:
 231              	 .cfi_def_cfa_register 7
 232 0006 7860     	 str r0,[r7,#4]
 130:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 131:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 132:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 133:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month day value", ((uint32_t)time->days < XMC_RTC_MAXDAYS));
 134:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 135:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 136:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 137:../Libraries/XMCLib/src/xmc_rtc.c **** 
 138:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 139:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 233              	 .loc 2 139 0
 234 0008 00BF     	 nop
 235              	.L18:
 236              	 .loc 2 139 0 is_stmt 0 discriminator 1
 237 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 238 000e 0346     	 mov r3,r0
 239 0010 03F40063 	 and r3,r3,#2048
 240 0014 002B     	 cmp r3,#0
 241 0016 F8D1     	 bne .L18
 140:../Libraries/XMCLib/src/xmc_rtc.c ****       { 
 141:../Libraries/XMCLib/src/xmc_rtc.c ****          /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 142:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 143:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 242              	 .loc 2 143 0 is_stmt 1
 243 0018 094A     	 ldr r2,.L20
 244 001a 7B68     	 ldr r3,[r7,#4]
 245 001c 1B68     	 ldr r3,[r3]
 246 001e 1362     	 str r3,[r2,#32]
 144:../Libraries/XMCLib/src/xmc_rtc.c ****       
 145:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 247              	 .loc 2 145 0
 248 0020 00BF     	 nop
 249              	.L19:
 250              	 .loc 2 145 0 is_stmt 0 discriminator 1
 251 0022 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 252 0026 0346     	 mov r3,r0
 253 0028 03F48053 	 and r3,r3,#4096
 254 002c 002B     	 cmp r3,#0
 255 002e F8D1     	 bne .L19
 146:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 147:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 148:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 149:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	     
 256              	 .loc 2 149 0 is_stmt 1
 257 0030 034A     	 ldr r2,.L20
 258 0032 7B68     	 ldr r3,[r7,#4]
 259 0034 5B68     	 ldr r3,[r3,#4]
 260 0036 5362     	 str r3,[r2,#36]
 150:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 151:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 152:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_R
 153:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 154:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 155:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 156:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 157:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 158:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 159:../Libraries/XMCLib/src/xmc_rtc.c **** }
 261              	 .loc 2 159 0
 262 0038 0837     	 adds r7,r7,#8
 263              	.LCFI16:
 264              	 .cfi_def_cfa_offset 8
 265 003a BD46     	 mov sp,r7
 266              	.LCFI17:
 267              	 .cfi_def_cfa_register 13
 268              	 
 269 003c 80BD     	 pop {r7,pc}
 270              	.L21:
 271 003e 00BF     	 .align 2
 272              	.L20:
 273 0040 004A0050 	 .word 1342196224
 274              	 .cfi_endproc
 275              	.LFE157:
 277              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 278              	 .align 2
 279              	 .global XMC_RTC_GetTime
 280              	 .thumb
 281              	 .thumb_func
 283              	XMC_RTC_GetTime:
 284              	.LFB158:
 160:../Libraries/XMCLib/src/xmc_rtc.c **** 
 161:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 162:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time value
 163:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 164:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 165:../Libraries/XMCLib/src/xmc_rtc.c **** {
 285              	 .loc 2 165 0
 286              	 .cfi_startproc
 287              	 
 288              	 
 289              	 
 290 0000 80B4     	 push {r7}
 291              	.LCFI18:
 292              	 .cfi_def_cfa_offset 4
 293              	 .cfi_offset 7,-4
 294 0002 83B0     	 sub sp,sp,#12
 295              	.LCFI19:
 296              	 .cfi_def_cfa_offset 16
 297 0004 00AF     	 add r7,sp,#0
 298              	.LCFI20:
 299              	 .cfi_def_cfa_register 7
 300 0006 7860     	 str r0,[r7,#4]
 166:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 301              	 .loc 2 166 0
 302 0008 064B     	 ldr r3,.L23
 303 000a 1A6A     	 ldr r2,[r3,#32]
 304 000c 7B68     	 ldr r3,[r7,#4]
 305 000e 1A60     	 str r2,[r3]
 167:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 306              	 .loc 2 167 0
 307 0010 044B     	 ldr r3,.L23
 308 0012 5A6A     	 ldr r2,[r3,#36]
 309 0014 7B68     	 ldr r3,[r7,#4]
 310 0016 5A60     	 str r2,[r3,#4]
 168:../Libraries/XMCLib/src/xmc_rtc.c **** }
 311              	 .loc 2 168 0
 312 0018 0C37     	 adds r7,r7,#12
 313              	.LCFI21:
 314              	 .cfi_def_cfa_offset 4
 315 001a BD46     	 mov sp,r7
 316              	.LCFI22:
 317              	 .cfi_def_cfa_register 13
 318              	 
 319 001c 5DF8047B 	 ldr r7,[sp],#4
 320              	.LCFI23:
 321              	 .cfi_restore 7
 322              	 .cfi_def_cfa_offset 0
 323 0020 7047     	 bx lr
 324              	.L24:
 325 0022 00BF     	 .align 2
 326              	.L23:
 327 0024 004A0050 	 .word 1342196224
 328              	 .cfi_endproc
 329              	.LFE158:
 331              	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 332              	 .align 2
 333              	 .global XMC_RTC_GetTimeStdFormat
 334              	 .thumb
 335              	 .thumb_func
 337              	XMC_RTC_GetTimeStdFormat:
 338              	.LFB159:
 169:../Libraries/XMCLib/src/xmc_rtc.c **** 
 170:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 171:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time values in standard format
 172:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 173:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 174:../Libraries/XMCLib/src/xmc_rtc.c **** {
 339              	 .loc 2 174 0
 340              	 .cfi_startproc
 341              	 
 342              	 
 343              	 
 344 0000 80B4     	 push {r7}
 345              	.LCFI24:
 346              	 .cfi_def_cfa_offset 4
 347              	 .cfi_offset 7,-4
 348 0002 85B0     	 sub sp,sp,#20
 349              	.LCFI25:
 350              	 .cfi_def_cfa_offset 24
 351 0004 00AF     	 add r7,sp,#0
 352              	.LCFI26:
 353              	 .cfi_def_cfa_register 7
 354 0006 7860     	 str r0,[r7,#4]
 175:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 176:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 355              	 .loc 2 176 0
 356 0008 1C4B     	 ldr r3,.L26
 357 000a 1B6A     	 ldr r3,[r3,#32]
 358 000c BB60     	 str r3,[r7,#8]
 177:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 359              	 .loc 2 177 0
 360 000e 1B4B     	 ldr r3,.L26
 361 0010 5B6A     	 ldr r3,[r3,#36]
 362 0012 FB60     	 str r3,[r7,#12]
 178:../Libraries/XMCLib/src/xmc_rtc.c ****   
 179:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 363              	 .loc 2 179 0
 364 0014 3B7A     	 ldrb r3,[r7,#8]
 365 0016 C3F30503 	 ubfx r3,r3,#0,#6
 366 001a DBB2     	 uxtb r3,r3
 367 001c 1A46     	 mov r2,r3
 368 001e 7B68     	 ldr r3,[r7,#4]
 369 0020 1A60     	 str r2,[r3]
 180:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 370              	 .loc 2 180 0
 371 0022 7B7A     	 ldrb r3,[r7,#9]
 372 0024 C3F30503 	 ubfx r3,r3,#0,#6
 373 0028 DBB2     	 uxtb r3,r3
 374 002a 1A46     	 mov r2,r3
 375 002c 7B68     	 ldr r3,[r7,#4]
 376 002e 5A60     	 str r2,[r3,#4]
 181:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 377              	 .loc 2 181 0
 378 0030 BB7A     	 ldrb r3,[r7,#10]
 379 0032 C3F30403 	 ubfx r3,r3,#0,#5
 380 0036 DBB2     	 uxtb r3,r3
 381 0038 1A46     	 mov r2,r3
 382 003a 7B68     	 ldr r3,[r7,#4]
 383 003c 9A60     	 str r2,[r3,#8]
 182:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 384              	 .loc 2 182 0
 385 003e FB7A     	 ldrb r3,[r7,#11]
 386 0040 C3F30403 	 ubfx r3,r3,#0,#5
 387 0044 DBB2     	 uxtb r3,r3
 388 0046 5A1C     	 adds r2,r3,#1
 389 0048 7B68     	 ldr r3,[r7,#4]
 390 004a DA60     	 str r2,[r3,#12]
 183:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 391              	 .loc 2 183 0
 392 004c 7B7B     	 ldrb r3,[r7,#13]
 393 004e C3F30303 	 ubfx r3,r3,#0,#4
 394 0052 DBB2     	 uxtb r3,r3
 395 0054 1A46     	 mov r2,r3
 396 0056 7B68     	 ldr r3,[r7,#4]
 397 0058 1A61     	 str r2,[r3,#16]
 184:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 398              	 .loc 2 184 0
 399 005a FB89     	 ldrh r3,[r7,#14]
 400 005c A3F26C72 	 subw r2,r3,#1900
 401 0060 7B68     	 ldr r3,[r7,#4]
 402 0062 5A61     	 str r2,[r3,#20]
 185:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 403              	 .loc 2 185 0
 404 0064 3B7B     	 ldrb r3,[r7,#12]
 405 0066 C3F30203 	 ubfx r3,r3,#0,#3
 406 006a DBB2     	 uxtb r3,r3
 407 006c 1A46     	 mov r2,r3
 408 006e 7B68     	 ldr r3,[r7,#4]
 409 0070 9A61     	 str r2,[r3,#24]
 186:../Libraries/XMCLib/src/xmc_rtc.c **** }
 410              	 .loc 2 186 0
 411 0072 1437     	 adds r7,r7,#20
 412              	.LCFI27:
 413              	 .cfi_def_cfa_offset 4
 414 0074 BD46     	 mov sp,r7
 415              	.LCFI28:
 416              	 .cfi_def_cfa_register 13
 417              	 
 418 0076 5DF8047B 	 ldr r7,[sp],#4
 419              	.LCFI29:
 420              	 .cfi_restore 7
 421              	 .cfi_def_cfa_offset 0
 422 007a 7047     	 bx lr
 423              	.L27:
 424              	 .align 2
 425              	.L26:
 426 007c 004A0050 	 .word 1342196224
 427              	 .cfi_endproc
 428              	.LFE159:
 430              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 431              	 .align 2
 432              	 .global XMC_RTC_SetAlarm
 433              	 .thumb
 434              	 .thumb_func
 436              	XMC_RTC_SetAlarm:
 437              	.LFB160:
 187:../Libraries/XMCLib/src/xmc_rtc.c **** 
 188:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 189:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value
 190:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 191:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 192:../Libraries/XMCLib/src/xmc_rtc.c **** {
 438              	 .loc 2 192 0
 439              	 .cfi_startproc
 440              	 
 441              	 
 442 0000 80B5     	 push {r7,lr}
 443              	.LCFI30:
 444              	 .cfi_def_cfa_offset 8
 445              	 .cfi_offset 7,-8
 446              	 .cfi_offset 14,-4
 447 0002 82B0     	 sub sp,sp,#8
 448              	.LCFI31:
 449              	 .cfi_def_cfa_offset 16
 450 0004 00AF     	 add r7,sp,#0
 451              	.LCFI32:
 452              	 .cfi_def_cfa_register 7
 453 0006 7860     	 str r0,[r7,#4]
 193:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 194:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 195:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 196:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong days value", ((uint32_t)alarm->days < XMC_RTC_MAXDAYS));
 197:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 198:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 199:../Libraries/XMCLib/src/xmc_rtc.c **** 
 200:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 201:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 454              	 .loc 2 201 0
 455 0008 00BF     	 nop
 456              	.L29:
 457              	 .loc 2 201 0 is_stmt 0 discriminator 1
 458 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 459 000e 0346     	 mov r3,r0
 460 0010 03F40073 	 and r3,r3,#512
 461 0014 002B     	 cmp r3,#0
 462 0016 F8D1     	 bne .L29
 202:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 203:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 204:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 205:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 463              	 .loc 2 205 0 is_stmt 1
 464 0018 094A     	 ldr r2,.L31
 465 001a 7B68     	 ldr r3,[r7,#4]
 466 001c 1B68     	 ldr r3,[r3]
 467 001e 9361     	 str r3,[r2,#24]
 206:../Libraries/XMCLib/src/xmc_rtc.c ****       
 207:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 468              	 .loc 2 207 0
 469 0020 00BF     	 nop
 470              	.L30:
 471              	 .loc 2 207 0 is_stmt 0 discriminator 1
 472 0022 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 473 0026 0346     	 mov r3,r0
 474 0028 03F48063 	 and r3,r3,#1024
 475 002c 002B     	 cmp r3,#0
 476 002e F8D1     	 bne .L30
 208:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 209:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 210:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 211:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 477              	 .loc 2 211 0 is_stmt 1
 478 0030 034A     	 ldr r2,.L31
 479 0032 7B68     	 ldr r3,[r7,#4]
 480 0034 5B68     	 ldr r3,[r3,#4]
 481 0036 D361     	 str r3,[r2,#28]
 212:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 213:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 214:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_
 215:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 216:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 217:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 218:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 219:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 220:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 221:../Libraries/XMCLib/src/xmc_rtc.c **** }
 482              	 .loc 2 221 0
 483 0038 0837     	 adds r7,r7,#8
 484              	.LCFI33:
 485              	 .cfi_def_cfa_offset 8
 486 003a BD46     	 mov sp,r7
 487              	.LCFI34:
 488              	 .cfi_def_cfa_register 13
 489              	 
 490 003c 80BD     	 pop {r7,pc}
 491              	.L32:
 492 003e 00BF     	 .align 2
 493              	.L31:
 494 0040 004A0050 	 .word 1342196224
 495              	 .cfi_endproc
 496              	.LFE160:
 498              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 499              	 .align 2
 500              	 .global XMC_RTC_GetAlarm
 501              	 .thumb
 502              	 .thumb_func
 504              	XMC_RTC_GetAlarm:
 505              	.LFB161:
 222:../Libraries/XMCLib/src/xmc_rtc.c **** 
 223:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 224:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value
 225:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 226:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 227:../Libraries/XMCLib/src/xmc_rtc.c **** {
 506              	 .loc 2 227 0
 507              	 .cfi_startproc
 508              	 
 509              	 
 510              	 
 511 0000 80B4     	 push {r7}
 512              	.LCFI35:
 513              	 .cfi_def_cfa_offset 4
 514              	 .cfi_offset 7,-4
 515 0002 83B0     	 sub sp,sp,#12
 516              	.LCFI36:
 517              	 .cfi_def_cfa_offset 16
 518 0004 00AF     	 add r7,sp,#0
 519              	.LCFI37:
 520              	 .cfi_def_cfa_register 7
 521 0006 7860     	 str r0,[r7,#4]
 228:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 522              	 .loc 2 228 0
 523 0008 064B     	 ldr r3,.L34
 524 000a 9A69     	 ldr r2,[r3,#24]
 525 000c 7B68     	 ldr r3,[r7,#4]
 526 000e 1A60     	 str r2,[r3]
 229:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 527              	 .loc 2 229 0
 528 0010 044B     	 ldr r3,.L34
 529 0012 DA69     	 ldr r2,[r3,#28]
 530 0014 7B68     	 ldr r3,[r7,#4]
 531 0016 5A60     	 str r2,[r3,#4]
 230:../Libraries/XMCLib/src/xmc_rtc.c **** }
 532              	 .loc 2 230 0
 533 0018 0C37     	 adds r7,r7,#12
 534              	.LCFI38:
 535              	 .cfi_def_cfa_offset 4
 536 001a BD46     	 mov sp,r7
 537              	.LCFI39:
 538              	 .cfi_def_cfa_register 13
 539              	 
 540 001c 5DF8047B 	 ldr r7,[sp],#4
 541              	.LCFI40:
 542              	 .cfi_restore 7
 543              	 .cfi_def_cfa_offset 0
 544 0020 7047     	 bx lr
 545              	.L35:
 546 0022 00BF     	 .align 2
 547              	.L34:
 548 0024 004A0050 	 .word 1342196224
 549              	 .cfi_endproc
 550              	.LFE161:
 552              	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 553              	 .align 2
 554              	 .global XMC_RTC_GetAlarmStdFormat
 555              	 .thumb
 556              	 .thumb_func
 558              	XMC_RTC_GetAlarmStdFormat:
 559              	.LFB162:
 231:../Libraries/XMCLib/src/xmc_rtc.c **** 
 232:../Libraries/XMCLib/src/xmc_rtc.c **** 
 233:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 234:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 235:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 236:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 237:../Libraries/XMCLib/src/xmc_rtc.c **** {
 560              	 .loc 2 237 0
 561              	 .cfi_startproc
 562              	 
 563              	 
 564              	 
 565 0000 80B4     	 push {r7}
 566              	.LCFI41:
 567              	 .cfi_def_cfa_offset 4
 568              	 .cfi_offset 7,-4
 569 0002 85B0     	 sub sp,sp,#20
 570              	.LCFI42:
 571              	 .cfi_def_cfa_offset 24
 572 0004 00AF     	 add r7,sp,#0
 573              	.LCFI43:
 574              	 .cfi_def_cfa_register 7
 575 0006 7860     	 str r0,[r7,#4]
 238:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 239:../Libraries/XMCLib/src/xmc_rtc.c ****   
 240:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 576              	 .loc 2 240 0
 577 0008 194B     	 ldr r3,.L37
 578 000a 9B69     	 ldr r3,[r3,#24]
 579 000c BB60     	 str r3,[r7,#8]
 241:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 580              	 .loc 2 241 0
 581 000e 184B     	 ldr r3,.L37
 582 0010 DB69     	 ldr r3,[r3,#28]
 583 0012 FB60     	 str r3,[r7,#12]
 242:../Libraries/XMCLib/src/xmc_rtc.c **** 
 243:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 584              	 .loc 2 243 0
 585 0014 3B7A     	 ldrb r3,[r7,#8]
 586 0016 C3F30503 	 ubfx r3,r3,#0,#6
 587 001a DBB2     	 uxtb r3,r3
 588 001c 1A46     	 mov r2,r3
 589 001e 7B68     	 ldr r3,[r7,#4]
 590 0020 1A60     	 str r2,[r3]
 244:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 591              	 .loc 2 244 0
 592 0022 7B7A     	 ldrb r3,[r7,#9]
 593 0024 C3F30503 	 ubfx r3,r3,#0,#6
 594 0028 DBB2     	 uxtb r3,r3
 595 002a 1A46     	 mov r2,r3
 596 002c 7B68     	 ldr r3,[r7,#4]
 597 002e 5A60     	 str r2,[r3,#4]
 245:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 598              	 .loc 2 245 0
 599 0030 BB7A     	 ldrb r3,[r7,#10]
 600 0032 C3F30403 	 ubfx r3,r3,#0,#5
 601 0036 DBB2     	 uxtb r3,r3
 602 0038 1A46     	 mov r2,r3
 603 003a 7B68     	 ldr r3,[r7,#4]
 604 003c 9A60     	 str r2,[r3,#8]
 246:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 605              	 .loc 2 246 0
 606 003e FB7A     	 ldrb r3,[r7,#11]
 607 0040 C3F30403 	 ubfx r3,r3,#0,#5
 608 0044 DBB2     	 uxtb r3,r3
 609 0046 5A1C     	 adds r2,r3,#1
 610 0048 7B68     	 ldr r3,[r7,#4]
 611 004a DA60     	 str r2,[r3,#12]
 247:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 612              	 .loc 2 247 0
 613 004c 7B7B     	 ldrb r3,[r7,#13]
 614 004e C3F30303 	 ubfx r3,r3,#0,#4
 615 0052 DBB2     	 uxtb r3,r3
 616 0054 1A46     	 mov r2,r3
 617 0056 7B68     	 ldr r3,[r7,#4]
 618 0058 1A61     	 str r2,[r3,#16]
 248:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 619              	 .loc 2 248 0
 620 005a FB89     	 ldrh r3,[r7,#14]
 621 005c A3F26C72 	 subw r2,r3,#1900
 622 0060 7B68     	 ldr r3,[r7,#4]
 623 0062 5A61     	 str r2,[r3,#20]
 249:../Libraries/XMCLib/src/xmc_rtc.c **** }
 624              	 .loc 2 249 0
 625 0064 1437     	 adds r7,r7,#20
 626              	.LCFI44:
 627              	 .cfi_def_cfa_offset 4
 628 0066 BD46     	 mov sp,r7
 629              	.LCFI45:
 630              	 .cfi_def_cfa_register 13
 631              	 
 632 0068 5DF8047B 	 ldr r7,[sp],#4
 633              	.LCFI46:
 634              	 .cfi_restore 7
 635              	 .cfi_def_cfa_offset 0
 636 006c 7047     	 bx lr
 637              	.L38:
 638 006e 00BF     	 .align 2
 639              	.L37:
 640 0070 004A0050 	 .word 1342196224
 641              	 .cfi_endproc
 642              	.LFE162:
 644              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 645              	 .align 2
 646              	 .global XMC_RTC_GetEventStatus
 647              	 .thumb
 648              	 .thumb_func
 650              	XMC_RTC_GetEventStatus:
 651              	.LFB163:
 250:../Libraries/XMCLib/src/xmc_rtc.c **** 
 251:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 252:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 253:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 254:../Libraries/XMCLib/src/xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 255:../Libraries/XMCLib/src/xmc_rtc.c **** {
 652              	 .loc 2 255 0
 653              	 .cfi_startproc
 654              	 
 655              	 
 656              	 
 657 0000 80B4     	 push {r7}
 658              	.LCFI47:
 659              	 .cfi_def_cfa_offset 4
 660              	 .cfi_offset 7,-4
 661 0002 00AF     	 add r7,sp,#0
 662              	.LCFI48:
 663              	 .cfi_def_cfa_register 7
 256:../Libraries/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 664              	 .loc 2 256 0
 665 0004 034B     	 ldr r3,.L41
 666 0006 DB68     	 ldr r3,[r3,#12]
 257:../Libraries/XMCLib/src/xmc_rtc.c **** }
 667              	 .loc 2 257 0
 668 0008 1846     	 mov r0,r3
 669 000a BD46     	 mov sp,r7
 670              	.LCFI49:
 671              	 .cfi_def_cfa_register 13
 672              	 
 673 000c 5DF8047B 	 ldr r7,[sp],#4
 674              	.LCFI50:
 675              	 .cfi_restore 7
 676              	 .cfi_def_cfa_offset 0
 677 0010 7047     	 bx lr
 678              	.L42:
 679 0012 00BF     	 .align 2
 680              	.L41:
 681 0014 004A0050 	 .word 1342196224
 682              	 .cfi_endproc
 683              	.LFE163:
 685              	 .text
 686              	.Letext0:
 687              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 688              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 689              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 690              	 .file 6 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\time.h"
 691              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_rtc.h"
 692              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 693              	 .file 9 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:19     .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:23     .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:55     .text.XMC_SCU_GetMirrorStatus:00000014 $d
    {standard input}:60     .text.XMC_RTC_Start:00000000 $t
    {standard input}:65     .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:100    .text.XMC_RTC_Start:00000024 $d
    {standard input}:105    .text.XMC_RTC_Stop:00000000 $t
    {standard input}:110    .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:144    .text.XMC_RTC_Stop:00000024 $d
    {standard input}:149    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:154    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:205    .text.XMC_RTC_SetPrescaler:00000030 $d
    {standard input}:210    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:215    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:273    .text.XMC_RTC_SetTime:00000040 $d
    {standard input}:278    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:283    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:327    .text.XMC_RTC_GetTime:00000024 $d
    {standard input}:332    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:337    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:426    .text.XMC_RTC_GetTimeStdFormat:0000007c $d
    {standard input}:431    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:436    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:494    .text.XMC_RTC_SetAlarm:00000040 $d
    {standard input}:499    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:504    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:548    .text.XMC_RTC_GetAlarm:00000024 $d
    {standard input}:553    .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:558    .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:640    .text.XMC_RTC_GetAlarmStdFormat:00000070 $d
    {standard input}:645    .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:650    .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:681    .text.XMC_RTC_GetEventStatus:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
