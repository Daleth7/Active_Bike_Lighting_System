   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_vadc.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_VADC_GROUP_ExternalMuxControlInit,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_VADC_GROUP_ExternalMuxControlInit:
  24              	.LFB164:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_vadc.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @date 2015-06-25 
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @cond
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** ***************************************************************************************************
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * All rights reserved.                        
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                             
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * following conditions are met:   
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                                                              
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * disclaimer.                        
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * 
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * 
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                                                              
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                                                                              
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Change History
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * --------------
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-02-15:
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Initial <br>
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *      
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-02-20:
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-04-27:
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-06-20:
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * 2015-06-25:
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @endcond 
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #ifndef XMC_VADC_H
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_H
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * HEADER FILES
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #include <xmc_common.h>
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #include <xmc_scu.h>
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #include <xmc_vadc_map.h>
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @{
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @addtogroup VADC
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to discrete digital values.
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \if XMC1
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * converter.
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \endif
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * which together build separate groups.
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \if XMC4
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image html vadc_overview_xmc4x.png
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image latex ../images/vadc_overview_xmc4x.png 
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \else
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image html vadc_overview_xmc1x.png
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @image latex ../images/vadc_overview_xmc1x.png
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \endif
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <UL>
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * </UL><BR>
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <UL>
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * </UL><BR>
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @{
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * MACROS
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41))
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (1U) /*  Defines the need to de-assert the reset to enable
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC44)
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (1U) /*  Defines the need to de-assert the reset to enable
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (1U) /*  Defines the need to de-assert the reset to enable
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (0U) /*  Defines the need to un-gate of clock for peripher
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC13)
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (0U) /*  Defines the need to de-assert the reset to enable
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC12)
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (0U) /*  Defines the need to de-assert the reset to enable
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     device*/
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     XMC1100 devices */
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_DEASSERT_RESET_NEEDED   (0U) /*  Defines the need to de-assert the reset to enable
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CLOCK_UNGATING_NEEDED   (1U) /*  Defines the need to un-gate of clock for peripher
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/ 
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     operation for a particular device*/
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * ENUMS
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                              type to VADC type*/
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                              type to VADC Group type*/
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  enumeration.
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  this enumeration.
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH ,   /**< Input higher than than programmed reference */
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          awaiting conversion */
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          previous set */
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * enumeration.
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * enumeration.
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
 521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  enumeration.
 544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                           request sources */
 559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GROUP_RS_PRIORITY_t;
 609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 612:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 613:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 614:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 615:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 616:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 617:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level
 618:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level
 619:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 620:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 621:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 622:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 623:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 624:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 625:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 626:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 627:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 628:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 629:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_SELECT_t;
 630:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 631:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 632:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 633:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 634:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 635:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 636:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 637:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_0   = 0,
 638:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_1,
 639:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2)
 640:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_2,
 641:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_3
 642:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 643:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GROUP_INDEX_t;
 644:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 645:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 646:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** * Defines channel alias.
 647:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 648:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** */
 649:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 650:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 651:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 652:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 653:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 654:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 655:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 656:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 657:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 658:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 659:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 660:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 661:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 662:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 663:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 664:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 665:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 666:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 667:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 668:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 669:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 670:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 671:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 672:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_SHS_GAIN_LEVEL_t;
 673:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 674:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 675:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 676:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 677:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 678:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 679:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 680:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 681:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_SHS_LOOP_CH_t;
 682:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 683:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 684:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 685:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 686:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 687:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 688:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 689:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 690:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 691:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 692:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 693:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 694:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 695:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 696:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 697:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 698:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 699:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 700:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 701:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 702:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 703:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 704:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 705:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 706:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 707:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_NODE_t;
 708:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 709:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
 710:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * DATA STRUCTURES
 711:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
 712:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 713:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if defined(__CC_ARM)
 714:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma push
 715:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma anon_unions
 716:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #elif defined(__TASKING__)
 717:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma warning 586
 718:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 719:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 720:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 721:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 722:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 723:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 724:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 725:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 726:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 727:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 728:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion
 729:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 730:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 731:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 732:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 733:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 734:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 735:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 736:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as 
 737:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 738:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 739:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 740:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 741:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 742:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 743:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 744:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 745:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 746:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 747:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 748:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 749:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 750:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 751:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 8;
 752:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant s
 753:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       activated or not.*/
 754:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 3;
 755:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 756:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t asctrl;
 757:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 758:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 759:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 760:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 761:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 762:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                    : 2;
 763:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trig
 764:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conv
 765:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion
 766:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 767:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_L
 768:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                    : 26;
 769:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 770:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t asmr;
 771:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 772:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 773:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 774:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 775:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 776:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                  structure for background Request S
 777:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 778:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 779:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 780:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 781:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 782:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 783:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 784:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 785:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 786:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 787:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t input_class                : 2;  /**< Input conversion class selection.
 788:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 789:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                            : 2;
 790:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bo
 791:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 792:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bo
 793:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 794:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 795:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 796:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the con
 797:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either V
 798:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 799:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                            : 4;
 800:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t result_reg_number          : 4;  /**< Group result register number */
 801:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t use_global_result          : 1;  /**< Use global result register for background 
 802:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t result_alignment           : 1;  /**< Alignment of the results read in the resul
 803:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 804:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                            : 6;
 805:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor 
 806:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 807:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacito
 808:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 809:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t chctr;
 810:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 811:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 812:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 813:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 814:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 815:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 8;
 816:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 817:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should
 818:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 819:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should
 820:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 821:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should
 822:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 823:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should
 824:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 825:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 826:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 4;
 827:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 828:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 4;
 829:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 830:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 831:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 832:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 833:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 834:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 835:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 836:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the speci
 837:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the speci
 838:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the speci
 839:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the speci
 840:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 841:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 12;
 842:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 843:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t bfl;
 844:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 845:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 846:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 847:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 848:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 849:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 850:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 
 851:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 852:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 
 853:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 854:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 
 855:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 856:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 
 857:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 858:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****          uint32_t                           : 16;
 859:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 860:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t bflc;
 861:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 862:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 863:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     bool    channel_priority;  /**< Only non priority channels can be converted by Background Reque
 864:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (whi
 865:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 866:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 867:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 868:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 869:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 870:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 871:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 872:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 873:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 874:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 875:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 876:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 877:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 878:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<B
 879:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back in
 880:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 881:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trig
 882:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                    : 24;
 883:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 884:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 885:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t qinr0;
 886:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 887:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 888:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 889:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 890:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 891:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 892:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 893:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 894:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 895:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 896:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 897:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC
 898:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 899:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 900:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 901:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 902:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 903:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as
 904:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 905:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 906:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 907:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 908:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 909:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
 910:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 911:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
 912:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 913:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
 914:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
 915:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 1;
 916:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 917:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
 918:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 8;
 919:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be
 920:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 3;
 921:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 922:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t qctrl0;
 923:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 924:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 925:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 926:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 927:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 928:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                   : 2;
 929:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
 930:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                   : 29;
 931:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 932:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t qmr0;
 933:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 934:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
 935:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 936:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 937:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 938:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
 939:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  conversion Mode.
 940:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 941:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
 942:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 943:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 944:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 945:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 946:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 947:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
 948:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 949:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
 950:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
 951:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 952:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
 953:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 954:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
 955:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 956:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
 957:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
 958:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 959:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
 960:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
 961:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 16;
 962:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 963:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 964:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globiclass;
 965:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 966:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
 967:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 968:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
 969:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 970:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
 971:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 972:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
 973:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 974:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 975:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 976:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
 977:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
 978:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 979:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 
 980:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 2;
 981:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter 
 982:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Ra
 983:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 5;
 984:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 17;
 985:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
 986:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globcfg;
 987:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
 988:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
 989:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
 990:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 991:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
 992:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
 993:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
 994:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
 995:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
 996:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 997:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
 998:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
 999:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1000:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1001:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1002:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1003:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1004:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1005:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1006:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globbound;
1007:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1008:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1009:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1010:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1011:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0
1012:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1
1013:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1014:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1015:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1016:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1017:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 16;
1018:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1019:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
1020:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be ov
1021:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       result register until the previous value is r
1022:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 6;
1023:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1024:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1025:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t globrcr;
1026:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1027:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1028:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1029:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1030:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1031:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1032:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                             : 2;
1033:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sl
1034:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                             : 28;
1035:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1036:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t clc;
1037:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1038:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1039:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1040:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1041:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1042:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1043:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  conversion Mode.
1044:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1045:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1046:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1047:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1048:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1049:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1050:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1051:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1052:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1053:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
1054:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1055:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1056:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
1057:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1058:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1059:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 3;
1060:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1061:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1062:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                                 : 5;
1063:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1064:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_iclass0;
1065:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1066:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1067:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1068:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1069:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1070:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1071:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1072:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1073:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1074:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1075:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1076:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1077:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1078:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC w
1079:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1080:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1081:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 13;
1082:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1083:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected.
1084:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
1085:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected.
1086:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 5;
1087:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1088:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Ste
1089:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1090:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC
1091:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external
1092:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1093:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b con
1094:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1095:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 1;
1096:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
1097:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                           : 2;
1098:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1099:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_emuxctr;
1101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[
1113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[
1114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t            : 4;
1122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_bound;
1124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 4;
1130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 1;
1132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode
1133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                          : 24;
1135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_arbcfg;
1137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     union
1147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        struct
1149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        {
1150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 16;
1151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_V
1153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       For normal operation select
1154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 2;
1157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous resu
1158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIF
1159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t                         : 4;
1160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        };
1162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****        uint32_t g_rcr;
1163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   union
1173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   {
1174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     struct
1175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step0            :3;  /**< Select a Sample and hold unit for the stepper's s
1177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step0             :1;  /**< Should the step be added to the sequence */
1179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step1            :3;  /**< Select a Sample and hold unit for the stepper's s
1180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step1             :1;  /**< Should the step be added to the sequence */
1182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step2            :3;  /**< Select a Sample and hold unit for the stepper's s
1183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step2             :1;  /**< Should the step be added to the sequence */
1185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step3            :3;  /**< Select a Sample and hold unit for the stepper's s
1186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step3             :1;  /**< Should the step be added to the sequence */
1188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step4            :3;  /**< Select a Sample and hold unit for the stepper's s
1189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step4             :1;  /**< Should the step be added to the sequence */
1191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step5            :3;  /**< Select a Sample and hold unit for the stepper's s
1192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step5             :1;  /**< Should the step be added to the sequence */
1194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step6            :3;  /**< Select a Sample and hold unit for the stepper's s
1195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step6             :1;  /**< Should the step be added to the sequence */
1197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t sh_unit_step7            :3;  /**< Select a Sample and hold unit for the stepper's s
1198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t enable_step7             :1;  /**< Should the step be added to the sequence */
1200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t stepcfg;
1203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   };
1204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   union
1212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   {
1213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     struct
1214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     {
1215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t shs_clock_divider        :4; /**< The divider value for the SHS clock. Range: [0x0 t
1216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t                          :6;
1217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t analog_reference_select  :2; /**< It is possible to different reference voltage for 
1218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                  Accepts ::XMC_VADC_GLOBAL_SHS_AREF_t */
1219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****       uint32_t                          :20;
1220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     };
1221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     uint32_t shscfg;
1222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   };
1223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CONFIG_t;
1227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if defined(__CC_ARM)
1231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma pop
1232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #elif defined(__TASKING__)
1233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   #pragma warning restore
1234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
1236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * static inline functions
1237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
1238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U) 
1240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr =
1244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #else
1245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**************************************************************************************************
1250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * API Prototypes
1251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  **************************************************************************************************
1252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #ifdef __cplusplus
1254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** extern "C" {
1255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param None
1259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param None
1276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the configurations later in the program.
1303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * register to enable.
1318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
1436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
1457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  {
1458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  }
1463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  
1464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * calibration feature at runtime.
1494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
1571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \b emuxif.
1596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
1602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1612:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1613:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1614:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1615:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1616:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1617:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1618:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1619:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1620:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1621:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  return(global_ptr->GLOBRES);
1622:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1623:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1624:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1625:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1626:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1627:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1628:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return XMC_VADC_RESULT_SIZE_t 16 bit result register value.<BR>
1629:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *         Range[0x0 - 0X0FFF]
1630:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1631:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1632:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Retrieves the conversion result from the global result register associated with the \a global_pt
1633:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * lightweight version of XMC_VADC_GLOBAL_GetDetailedResult(). The behavior is exactly the same, ju
1634:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * only the 16 bit numeric result returned back to the application instead of the complete GLOBRES 
1635:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1636:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1637:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetDetailedResult()
1638:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1639:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GLOBAL_GetResult(XMC_VADC_GLOBAL_t *const global_pt
1640:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1641:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetResult:Wrong Module Pointer", (global_ptr == VADC))
1642:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1643:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)global_ptr->GLOBRES);
1644:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1645:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1646:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1647:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1648:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1649:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param compare_val Compare value which the result of a conversion will be compared against.
1650:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *         <BR>Range[0x0 - 0X0FFF]
1651:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1652:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1653:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1654:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1655:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Set compare value in the global result register for fast compare mode.\n\n The result of a conve
1656:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * be compared to the compare value entered as part of \a compare_val. The prerequisite is that the
1657:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * with this global register must select an ICLASS which has the conversion mode configured as fast
1658:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @ref XMC_VADC_GLOBAL_GetCompareResult() after this API to
1659:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1660:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1661:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1662:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1663:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
1664:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1665:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1666:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1667:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1668:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return compare high or low. Refer @ref XMC_VADC_FAST_COMPARE_t enum
1669:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1670:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1671:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1672:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1673:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines the result of fast compare operation.\n\n This API returns the result of fast compare
1674:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the valid flag in the global result register GLOBRES is set.
1675:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1676:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1677:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1678:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1679:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr);
1680:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1681:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1682:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1683:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr         Constant pointer to the VADC module
1684:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param event_type   Desired event that must be manually asserted
1685:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1686:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1687:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1688:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1689:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts an event that can lead to an interrupt.\n\n This API manually asserts the reque
1690:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * (Background request source event or a global result event) by setting the GLOBEVFLAG register wi
1691:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \a event_type.
1692:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1693:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1694:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1695:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1696:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1697:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_TriggerEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32
1698:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1699:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Module Pointer", (global_ptr == VADC))
1700:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Global Event", 
1701:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1702:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1703:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= event_type;
1704:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1705:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1706:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1707:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1708:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1709:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param event_type Event that must be acknowledged
1710:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1711:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1712:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1713:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1714:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1715:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges an event that has been asserted manually or automatically.\n\n This API acknowledge
1716:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * by clearing GLOBEFLAG sticky flag.
1717:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1718:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1719:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
1720:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1721:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClearEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t
1722:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1723:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Module Pointer", (global_ptr == VADC))
1724:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Global Event", 
1725:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1726:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1727:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= ((uint32_t)(event_type << (uint32_t)16));
1728:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1729:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1730:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1731:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1732:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1733:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr The service request to which the global result event is connected. Refer @ref XMC_VADC
1734:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1735:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1736:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1737:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1738:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  Binds the global result event to one of the 4 shared service requests.\n\n This API binds the g
1739:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  to one of the 4 module wide shared service requests .Sets GLOBEVNP register with the correspond
1740:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1741:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1742:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode()
1743:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1744:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
1745:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1746:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1747:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1748:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1749:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr The service request to which the global request source event is connected. Refer @ref 
1750:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1751:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1752:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1753:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1754:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Binds the background request source event to one of the 4 shared service requests.\n\n This API 
1755:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request source event to one of the 4 module wide shared service requests. Sets GLOBEVNP register
1756:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * corresponding \a sr line.
1757:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1758:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1759:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SetResultEventInterruptNode()
1760:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1761:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
1762:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1763:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1764:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1765:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1766:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  config Struct consisting of various SHS related configurations.
1767:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1768:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1769:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1770:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1771:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure the basic SHS parameters.<BR>\n
1772:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would initialize the clock divider configuration, the analog reference selection and
1773:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the calibration order for the Sample and Hold unit.
1774:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1775:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1776:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1777:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1778:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONF
1779:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1780:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  /**
1781:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1782:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * @param  config Struct consisting of various step configurations.
1783:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1784:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * @return None
1785:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1786:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1787:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * Configures the stepper sequence for the converter.<BR>\n
1788:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * Stepper of the SHS can be configured to take up a specific sequence of groups for conversion.
1789:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * The stepper sequence is configured using this API.
1790:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1791:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1792:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * None.
1793:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   */
1794:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetStepperSequence(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1795:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                              const XMC_VADC_GLOBAL_SHS_STEP_CONFIG_
1796:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  {
1797:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1798:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1799:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong config pointer",
1800:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (config == (XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t*)NULL))
1801:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1802:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->STEPCFG = (uint32_t) config->stepcfg;
1803:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  }
1804:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1805:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1806:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  /**
1807:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1808:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1809:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * @return bool returns true if the analog converter is operable
1810:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   *              returns false if the analog converter is powered down
1811:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1812:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1813:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * Returns the converter status.<BR>\n
1814:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * Returns the ANRDY bit field of the SHSCFG register.
1815:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   *
1816:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1817:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * None.
1818:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   */
1819:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  __STATIC_INLINE bool XMC_VADC_GLOBAL_SHS_IsConverterReady(XMC_VADC_GLOBAL_SHS_t *const shs_ptr)
1820:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  {
1821:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_IsConverterReady:Wrong SHS Pointer",(shs_ptr == (XMC_VADC_GLOBAL_
1822:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1823:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return((bool)((shs_ptr->STEPCFG >> (uint32_t)SHS_SHSCFG_ANRDY_Pos) & (uint32_t)0x1));
1824:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  }
1825:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1826:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1827:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1828:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1829:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
1830:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1831:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1832:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1833:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1834:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1835:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
1836:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * this mode the ADC module will convert the input depending on the value stored in the SST bit of 
1837:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would configure the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1838:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1839:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1840:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1841:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1842:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP_
1843:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1844:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1845:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1846:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be disabled.<BR>Range: [0x
1847:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1848:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1849:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1850:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1851:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1852:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is needed when a switch from accelerated mode to compatible mode of conversion is neede
1853:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would clear the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1854:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1855:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1856:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1857:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1858:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP
1859:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1860:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1861:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1862:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
1863:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sst_value Value of short sample time that needs to be configured.<BR>
1864:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                  Range: [0x0 to 0x3F]
1865:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1866:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1867:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1868:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1869:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the Accelerated timing mode sample time.<BR>\n
1870:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
1871:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Accelerated mode the ADC module will convert the input depending on the value stored in the SST 
1872:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  SHS0_TIMCFGx. This API would configure the shot sample time either in SHS0_TIMCFG0.SST or SHS0_
1873:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1874:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1875:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1876:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1877:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1878:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                             XMC_VADC_GROUP_INDEX_t group_num,
1879:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                             uint8_t sst_value);
1880:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1881:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1882:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1883:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1884:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  divs_value The clock divider value that is possible
1885:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    <BR>Range:[0x0 to 0xF]
1886:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1887:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1888:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1889:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure Sample and hold clock divider value.<BR>\n
1890:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would initialize the clock divider configuration. This determines the frequency of conversio
1891:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * of the Sample and hold converter.
1892:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1893:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1894:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1895:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1896:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetClockDivider(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, uint
1897:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1898:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong SHS Pointer",
1899:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1900:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong divide factor selected",
1901:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (divs_value < (uint32_t)0x10))
1902:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1903:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->SHSCFG =  (shs_ptr->SHSCFG & (~(uint32_t)SHS_SHSCFG_DIVS_Msk)) | (uint32_t)SHS_SHSCFG_SC
1904:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  ((uint32_t)divs_value << SHS_SHSCFG_DIVS_Pos) | (uint32_t)SHS_SHSCFG_SCWC_Msk
1905:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1906:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1907:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1908:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1909:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  gain_value gain value possible
1910:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                    Range:[0x0 to 0x3]
1911:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1912:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  ch_num The channel number for which the gain has to be configured
1913:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1914:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1915:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1916:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure the gain value for SHS.<BR>\n
1917:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would set the gain factor for a selected channel.
1918:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1919:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1920:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1921:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1922:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1923:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                        uint8_t gain_value,
1924:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                        XMC_VADC_GROUP_INDEX_t group_num,
1925:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                        uint8_t ch_num);
1926:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1927:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1928:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1929:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1930:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  max_calibration_time calibration time
1931:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                              Range:[0x0 to 0x3F]
1932:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1933:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1934:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1935:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configure the Maximum calibration timing.<BR>\n
1936:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * API would initialize the Maximum time after which the calibration should occur. If no adc conver
1937:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * occur during this duration then the calibration would run irrespective of conversions. The max t
1938:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * converter can go without a calibration is set in this API.
1939:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1940:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1941:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
1942:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1943:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetMaxCalTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1944:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                        uint32_t max_calibration_time)
1945:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
1946:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetMaxCalTime:Wrong SHS Pointer",
1947:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1948:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1949:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALMAX_Msk);
1950:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->CALCTR |=  ((uint32_t)max_calibration_time << SHS_CALCTR_CALMAX_Pos);
1951:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
1952:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1953:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1954:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1955:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1956:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1957:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1958:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1959:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1960:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enable the Gain and offset calibration.<BR>\n
1961:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enable the gain and offset calibration for all the Sample and hold units.
1962:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1963:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1964:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()<BR>.
1965:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1966:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1967:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                          XMC_VADC_GROUP_INDEX_t group_num);
1968:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1969:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1970:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1971:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1972:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1973:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1974:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1975:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the Gain and offset calibration.<BR>\n
1976:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the gain and offset calibration for all the Sample and hold units.
1977:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1978:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1979:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
1980:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1981:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1982:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                           XMC_VADC_GROUP_INDEX_t group_num);
1983:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
1984:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
1985:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1986:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1987:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
1988:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
1989:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1990:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1991:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Read the calibration value for the selected gain level.<BR>\n
1992:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would return the offset calibration val
1993:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * selected gain level. This is applicable for all the channels in the group that use the particula
1994:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
1995:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1996:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()<BR>.
1997:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
1998:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1999:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
2000:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level);
2001:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2002:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2003:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2004:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2005:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2006:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  offset_calibration_value The offset calibration value to be set.
2007:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2008:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2009:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2010:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Set the calibration value for the selected gain level.<BR>\n
2011:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would set the offset value of the selec
2012:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2013:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2014:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()<BR>.
2015:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2016:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2017:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
2018:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
2019:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                    uint8_t offset_calibration_value);
2020:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2021:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2022:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2023:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  XMC_VADC_GROUP_INDEX_t The Group number for which the configurations applies
2024:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2025:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  ch_num Channel number for which the configurations applies
2026:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2027:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2028:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2029:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the delta sigma loop of the SHS.<BR>\n
2030:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * There are 2 Delta-Sigma loops that can be configured. This API would configure the loop (loop_se
2031:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * with the appropriate group_num and channel_num.
2032:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the SHS_LOOP bit fields.
2033:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2034:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2035:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()<BR>.
2036:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2037:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2038:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                            XMC_VADC_GROUP_INDEX_t group_num,
2039:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
2040:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                            uint8_t ch_num);
2041:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2042:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2043:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2044:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2045:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2046:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2047:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2048:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enable the selected Delta-Sigma loop.<BR>\n
2049:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2050:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2051:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2052:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2053:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2054:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2055:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2056:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                               XMC_VADC_SHS_LOOP_CH_t loop_select)
2057:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2058:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong SHS Pointer",
2059:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2060:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2061:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2062:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2063:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->LOOP |= (uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select;
2064:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2065:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2066:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2067:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2068:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2069:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2070:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2071:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2072:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the selected delta sigma loop.<BR>\n
2073:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2074:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2075:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2076:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2077:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2078:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2079:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr
2080:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                XMC_VADC_SHS_LOOP_CH_t loop_select)
2081:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2082:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong SHS Pointer",
2083:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2084:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2085:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2086:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2087:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   shs_ptr->LOOP &= ~((uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select);
2088:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2089:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2090:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2091:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2092:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2093:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2094:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2095:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group.
2096:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config Pointer to the initialization data structure
2097:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2098:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2099:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the VADC group module with the associated configuration structure pointed by \a conf
2102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * initializes the group specified as part of the \group_ptr. It initializes group conversion class
2103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * configuration , boundary configuration by setting GxICLASS,GxARBCFG,GxBOUND, registers. It also
2104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * configures the EMUX control register if applicable. Refer related API's to change the configurat
2105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  program.
2106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_InputClassInit()<BR>
2109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetPowerMode()<BR>
2110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetBoundaries()<BR>
2111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ExternalMuxControlInit()<BR>
2112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_Init(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config);
2114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group.
2118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config  group related conversion class parameter structure
2119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param conv_type Use direct channels or EMUX channels. Refer @ref XMC_VADC_GROUP_CONV_t enum
2120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
2121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                Range[0x0, 0x1]
2122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc group resource associated with \a config structure. It 
2127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
2128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the G_ICLASS register specified by \a set_num with the required settings.
2129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_Init()
2133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
2136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
2137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC Group which must be set as a slave
2141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param master_grp The master group number<BR>
2142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param slave_group The slave group number<BR>
2144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures a VADC Group as a slave group.\n\n Conversion of identically numbered channels across
2150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is the
2152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * master group while Groups-0 and 3 are the slave groups. It uses the SYNCCTR register for the con
2153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetSyncMaster()<BR>
2156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR>
2157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableChannelSyncRequest()<BR>
2158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
2161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param power_mode  Desired power mode
2166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the power mode of a VADC group.\n\n For a VADC group to actually convert an analog si
2171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * converter must be turned on.
2172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
2177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures a VADC Group as a master group.<BR>\n
2186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Conversion of identically numbered channels across groups can be
2187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is therefore the mast
2189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Groups-0 and 3 are the slave groups.
2190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr);
2195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0x3]
2201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures the ready signal for master group.<BR>\n
2205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would read the \b slave_group number and determine which EVAL configuration to apply fo
2206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * slave set. Checks the readiness of slaves in synchronized conversions. Conversion of identically
2207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * across groups can be synchronized. For example, when the trigger to convert CH-1 of Group-2 is r
2208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * possible to simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this ex
2209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * therefore the master group while Groups-0 and 3 are the slave groups. Before the master can requ
2210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * for synchronized conversion, it has the option of checking the readiness of the slaves.
2211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()
2214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the master VADC Group
2220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Clears the ready signal for master group.<BR>\n
2225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Ignores the readiness of slaves in synchronized conversions.This API would read the \b slave_gro
2226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * determine which EVAL configuration to apply for the given master slave set. Then clears the conf
2227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API is called when the master should issue the conversion request without waiting for the s
2228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * assert a ready signal. The ready signal is asserted by the slave group(s) when the conversion is
2229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * in these channels.
2230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()<BR>
2233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the master VADC Group
2239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num  Channel whose conversion triggers conversion in slave groups
2240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Sets up a channel for synchronized conversion.\n\n Conversion of identically numbered channels a
2244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * can be synchronized. For example, when the trigger to
2245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * convert CH-1 of Group-2 is received, it is possible to simultaneously request conversion of CH-1
2246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Group-3. Group-2 in this example is therefore the master group while Groups-0 and 3 are the slav
2247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Before the master can request its slaves for synchronized conversion, it has the option of check
2248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * of the slaves.
2249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
2254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     Channel whose conversion triggers conversion in slave groups
2259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disable the synchronization request for the particular channel specified as ch_num. To enable th
2263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * call the API @ref XMC_VADC_GROUP_EnableChannelSyncRequest().
2264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
2269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return retuns IDLE if converter is free else returns busy. Refer @ref XMC_VADC_GROUP_STATE_t en
2275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Checks the live status of the analog to digital converter. The converter can either idle doing n
2278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sampling + converting.
2279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr);
2284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group whose global boundary registers are to be pr
2288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>
2289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>
2291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
2297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
2298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
2299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
2300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * G_BOUND1 who will derive their values from this palette.
2301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, 
2307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                   const uint32_t boundary0, 
2308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                   const uint32_t boundary1);
2309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr_num   The service request number (0 through 3)
2313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param type     IRQ type (Kernel specific interrupt vs Module wide shared interrupt )
2314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Activates a Service Request line(manually trigger).<BR>\n
2318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * VADC provides few SR lines for each group and a few more which is shared across all the groups.
2319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * These SR lines can be connected to an NVIC node which in-turn would generate an interrupt.
2320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API would manually trigger the given SR line. Could be used for evaluation and testing purp
2321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr, 
2326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                           const uint32_t sr_num, 
2327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_IRQ_t type);
2328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
2332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param emux_cfg   EMUX configuration structure
2333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Configures group EMUX parameters associated with the \a emux_cfg configuration structure.\n\n An
2337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * interface allows additional channels to be connected to a VADC group. The conversion properties
2338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * of such channels can be different from the standard channels which are directly connected to the
2339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API configures conversion properties of channels connected via EMUX interface.
2340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None
2343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ExternalMuxControlInit(XMC_VADC_GROUP_t *const group_ptr,
2345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                            const XMC_VADC_GROUP_EMUXCFG_t emux_cfg)
2346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
  26              	 .loc 1 2346 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 85B0     	 sub sp,sp,#20
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 24
  38 0004 00AF     	 add r7,sp,#0
  39              	.LCFI2:
  40              	 .cfi_def_cfa_register 7
  41 0006 7860     	 str r0,[r7,#4]
  42 0008 3960     	 str r1,[r7]
2347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   uint32_t   emux_config;
2348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ExternalMuxControlInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.starting_external_channel << (uint32_t)VADC_G_EMUXCTR_EMUXSET_P
  43              	 .loc 1 2351 0
  44 000a 3B78     	 ldrb r3,[r7]
  45 000c C3F30203 	 ubfx r3,r3,#0,#3
  46 0010 DBB2     	 uxtb r3,r3
  47 0012 1A46     	 mov r2,r3
2352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  48              	 .loc 1 2352 0
  49 0014 7B88     	 ldrh r3,[r7,#2]
  50 0016 C3F30903 	 ubfx r3,r3,#0,#10
  51 001a 9BB2     	 uxth r3,r3
  52 001c 1B04     	 lsls r3,r3,#16
2351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  53              	 .loc 1 2351 0
  54 001e 1343     	 orrs r3,r3,r2
  55 0020 FB60     	 str r3,[r7,#12]
2353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->EMUXCTR  = emux_config;
  56              	 .loc 1 2354 0
  57 0022 7B68     	 ldr r3,[r7,#4]
  58 0024 FA68     	 ldr r2,[r7,#12]
  59 0026 C3F8F021 	 str r2,[r3,#496]
2355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  60              	 .loc 1 2355 0
  61 002a FB78     	 ldrb r3,[r7,#3]
  62 002c C3F30013 	 ubfx r3,r3,#4,#1
  63 0030 DBB2     	 uxtb r3,r3
  64 0032 1A07     	 lsls r2,r3,#28
2356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.emux_mode  << (uint32_t)VADC_G_EMUXCTR_EMUXMODE_Pos)|
  65              	 .loc 1 2356 0
  66 0034 FB78     	 ldrb r3,[r7,#3]
  67 0036 C3F38103 	 ubfx r3,r3,#2,#2
  68 003a DBB2     	 uxtb r3,r3
  69 003c 9B06     	 lsls r3,r3,#26
2355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  70              	 .loc 1 2355 0
  71 003e 1A43     	 orrs r2,r2,r3
2357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
  72              	 .loc 1 2357 0
  73 0040 FB78     	 ldrb r3,[r7,#3]
  74 0042 C3F34013 	 ubfx r3,r3,#5,#1
  75 0046 DBB2     	 uxtb r3,r3
  76 0048 5B07     	 lsls r3,r3,#29
2355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  77              	 .loc 1 2355 0
  78 004a 1343     	 orrs r3,r3,r2
  79 004c FB60     	 str r3,[r7,#12]
2358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
2360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   emux_config |= ((uint32_t)emux_cfg.emux_channel_select_style << (uint32_t)VADC_G_EMUXCTR_EMXCSS_P
  80              	 .loc 1 2360 0
  81 004e FB78     	 ldrb r3,[r7,#3]
  82 0050 C3F38013 	 ubfx r3,r3,#6,#1
  83 0054 DBB2     	 uxtb r3,r3
  84 0056 9B07     	 lsls r3,r3,#30
  85 0058 FA68     	 ldr r2,[r7,#12]
  86 005a 1343     	 orrs r3,r3,r2
  87 005c FB60     	 str r3,[r7,#12]
2361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->EMUXCTR  |= (emux_config | ((uint32_t)VADC_G_EMUXCTR_EMXWC_Msk)) ;
  88              	 .loc 1 2362 0
  89 005e 7B68     	 ldr r3,[r7,#4]
  90 0060 D3F8F021 	 ldr r2,[r3,#496]
  91 0064 FB68     	 ldr r3,[r7,#12]
  92 0066 1343     	 orrs r3,r3,r2
  93 0068 43F00042 	 orr r2,r3,#-2147483648
  94 006c 7B68     	 ldr r3,[r7,#4]
  95 006e C3F8F021 	 str r2,[r3,#496]
2363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
  96              	 .loc 1 2363 0
  97 0072 1437     	 adds r7,r7,#20
  98              	.LCFI3:
  99              	 .cfi_def_cfa_offset 4
 100 0074 BD46     	 mov sp,r7
 101              	.LCFI4:
 102              	 .cfi_def_cfa_register 13
 103              	 
 104 0076 5DF8047B 	 ldr r7,[sp],#4
 105              	.LCFI5:
 106              	 .cfi_restore 7
 107              	 .cfi_def_cfa_offset 0
 108 007a 7047     	 bx lr
 109              	 .cfi_endproc
 110              	.LFE164:
 112              	 .section .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot,"ax",%progbits
 113              	 .align 2
 114              	 .thumb
 115              	 .thumb_func
 117              	XMC_VADC_GROUP_ScanEnableArbitrationSlot:
 118              	.LFB165:
2364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
2366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr    Service Request Id
2370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param boundary_flag_num The Boundary flag for which the interrupt node needs to be configured.
2371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                          Range: [0x0 to 0x3]
2372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Connects the boundary event to the SR line of VADC or to a common boundary flag.<BR>\n
2377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a boundary event. Hence to get a interrupt o
2378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * field GxBFLNP.BFLxNP.
2380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
2385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                   const uint8_t boundary_flag_num,
2386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                   const XMC_VADC_BOUNDARY_NODE_t node);
2387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif /* XMC_VADC_BOUNDARY_FLAG_SELECT */
2388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif /* XMC_VADC_GROUP_AVAILABLE */
2390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
2392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
2394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config     Pointer to Scan configuration
2395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return None
2396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the VADC SCAN functional block.<BR>\n
2399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The GROUP SCAN request source functional block converts channels sequentially starting with the 
2400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * channel to the lowest. Channels must register themselves as being part of the the scan sequence.
2401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_ScanEnableA
2402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
2403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_ScanDisableArbi
2404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxASCTRL, GxASMR needed scan request s
2405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR> XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanSelectGating()<BR>
2409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
2411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables arbitration slot of the scan request source.<BR>\n
2419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the scan slot. Thus this must be enabled if any conversion need to take place.
2422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 119              	 .loc 1 2428 0
 120              	 .cfi_startproc
 121              	 
 122              	 
 123              	 
 124 0000 80B4     	 push {r7}
 125              	.LCFI6:
 126              	 .cfi_def_cfa_offset 4
 127              	 .cfi_offset 7,-4
 128 0002 83B0     	 sub sp,sp,#12
 129              	.LCFI7:
 130              	 .cfi_def_cfa_offset 16
 131 0004 00AF     	 add r7,sp,#0
 132              	.LCFI8:
 133              	 .cfi_def_cfa_register 7
 134 0006 7860     	 str r0,[r7,#4]
2429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN1_Msk;
 135              	 .loc 1 2430 0
 136 0008 7B68     	 ldr r3,[r7,#4]
 137 000a D3F88430 	 ldr r3,[r3,#132]
 138 000e 43F00072 	 orr r2,r3,#33554432
 139 0012 7B68     	 ldr r3,[r7,#4]
 140 0014 C3F88420 	 str r2,[r3,#132]
2431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
 141              	 .loc 1 2431 0
 142 0018 0C37     	 adds r7,r7,#12
 143              	.LCFI9:
 144              	 .cfi_def_cfa_offset 4
 145 001a BD46     	 mov sp,r7
 146              	.LCFI10:
 147              	 .cfi_def_cfa_register 13
 148              	 
 149 001c 5DF8047B 	 ldr r7,[sp],#4
 150              	.LCFI11:
 151              	 .cfi_restore 7
 152              	 .cfi_def_cfa_offset 0
 153 0020 7047     	 bx lr
 154              	 .cfi_endproc
 155              	.LFE165:
 157 0022 00BF     	 .section .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot,"ax",%progbits
 158              	 .align 2
 159              	 .thumb
 160              	 .thumb_func
 162              	XMC_VADC_GROUP_ScanDisableArbitrationSlot:
 163              	.LFB166:
2432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables arbitration slot of the scan request source.<BR>\n
2440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the scan slot.A call to this API will lead to all conversions request by scan to be blocked.
2443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR>
2447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 164              	 .loc 1 2449 0
 165              	 .cfi_startproc
 166              	 
 167              	 
 168              	 
 169 0000 80B4     	 push {r7}
 170              	.LCFI12:
 171              	 .cfi_def_cfa_offset 4
 172              	 .cfi_offset 7,-4
 173 0002 83B0     	 sub sp,sp,#12
 174              	.LCFI13:
 175              	 .cfi_def_cfa_offset 16
 176 0004 00AF     	 add r7,sp,#0
 177              	.LCFI14:
 178              	 .cfi_def_cfa_register 7
 179 0006 7860     	 str r0,[r7,#4]
2450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN1_Msk);
 180              	 .loc 1 2451 0
 181 0008 7B68     	 ldr r3,[r7,#4]
 182 000a D3F88430 	 ldr r3,[r3,#132]
 183 000e 23F00072 	 bic r2,r3,#33554432
 184 0012 7B68     	 ldr r3,[r7,#4]
 185 0014 C3F88420 	 str r2,[r3,#132]
2452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
 186              	 .loc 1 2452 0
 187 0018 0C37     	 adds r7,r7,#12
 188              	.LCFI15:
 189              	 .cfi_def_cfa_offset 4
 190 001a BD46     	 mov sp,r7
 191              	.LCFI16:
 192              	 .cfi_def_cfa_register 13
 193              	 
 194 001c 5DF8047B 	 ldr r7,[sp],#4
 195              	.LCFI17:
 196              	 .cfi_restore 7
 197              	 .cfi_def_cfa_offset 0
 198 0020 7047     	 bx lr
 199              	 .cfi_endproc
 200              	.LFE166:
 202 0022 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot,"ax",%progbits
 203              	 .align 2
 204              	 .thumb
 205              	 .thumb_func
 207              	XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:
 208              	.LFB179:
2453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_input  Choice of the input earmarked as a trigger line
2457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal for scan request source.<BR>\n
2462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTSEL.
2467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectGating()<BR> XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
2472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_edge  Trigger edge selection
2477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the trigger edge for scan request source.<BR>\n
2482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible trigger edges. This is
2484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTMODE.
2486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
2491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param gating_input  Module input signal meant to be selected as gating input
2495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Gating signal for scan request source.<BR>\n
2500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the scan request source o
2502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxASMR.ENGT has to be config
2503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxAS
2504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
2509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the scan request source
2513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the gating mode of scan request source.<BR>\n
2518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectGating();
2524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_G
2526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMODE
2529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR &= (uint32_t) (~((uint32_t)VADC_G_ASMR_ENGT_Msk));
2532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Set the new gating mode */
2533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)((uint32_t)mode_sel << VADC_G_ASMR_ENGT_Pos);
2534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. Every request source event will cause a load event to occur. A call to this API would 
2548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableContinuousMode()<BR>
2552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_SCAN_Msk;
2557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
2566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. By invoking this feature the Autoscan mode of operations is disabled. A call to this A
2571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableContinuousMode()<BR>
2575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_SCAN_Msk);
2580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
2589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
2590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the s
2591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxASMR.LD
2592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
2597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
2599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_LDEV_Msk;
2600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Aborts an ongoing scan sequence conversion.<BR>\n
2609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
2610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
2611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
2612:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxASMR, GxASCTRL, GxARBPR to achieve the sequen
2613:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2614:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2615:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2616:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2617:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr);
2618:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2619:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2620:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2621:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The channel meant to be added to scan sequence
2622:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2623:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2624:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2625:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2626:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2627:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds a channel to the scan sequence.<BR>\n
2628:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the scan request source. This will be added to
2629:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
2630:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2631:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2632:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2633:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddMultipleChannels()<BR>
2634:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2635:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddChannelToSequence(XMC_VADC_GROUP_t *const group_ptr, con
2636:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2637:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("VADC_GSCAN_AddSingleChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
2638:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddChannelToSequence:Wrong Channel Number", 
2639:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
2640:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASSEL |= (uint32_t)((uint32_t)1 << ch_num);
2641:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2642:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2643:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2644:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2645:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
2646:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
2647:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
2648:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the selected channels
2649:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
2650:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2651:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2652:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2653:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2654:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
2655:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
2656:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
2657:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2658:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2659:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2660:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddChannelToSequence()<BR>
2661:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2662:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddMultipleChannels(XMC_VADC_GROUP_t *const group_ptr, cons
2663:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2664:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddMultipleChannels:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
2665:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASSEL = ch_mask;
2666:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2667:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2668:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2669:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2670:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
2671:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2672:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2673:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
2674:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2675:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2676:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determine if the channel is pending for conversion.<BR>\n
2677:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
2678:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
2679:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
2680:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the channel is found in the pending register (GxASPND).
2681:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2682:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2683:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanGetNumChannelsPending()<BR>
2684:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2685:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsChannelPending(XMC_VADC_GROUP_t *const group_ptr, const u
2686:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2687:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2688:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
2689:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_C
2690:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2691:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return( (bool)((uint32_t)(group_ptr->ASPND >> ch_num) & 1U));
2692:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2693:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2694:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2695:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param  group_ptr     Constant pointer to the VADC group
2696:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return  <BR>
2697:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
2698:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to 0x8]
2699:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2700:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2701:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Returns the total number of pending channels.<BR>\n
2702:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
2703:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
2704:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
2705:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * return the total number of channels pending (GxASPND).
2706:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2707:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2708:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanIsChannelPending()<BR>
2709:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2710:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr);
2711:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2712:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2713:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2714:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2715:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2716:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2717:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2718:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
2719:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will set the request source event for scan. This will trigger a interrupt if the
2720:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
2721:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
2722:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2723:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2724:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
2725:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2726:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
2727:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2728:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2729:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->SEFLAG    |= (uint32_t)VADC_G_SEFLAG_SEV1_Msk;
2730:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2731:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2732:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2733:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2734:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2735:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2736:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2737:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2738:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges the scan conversion complete request source event.<BR>\n
2739:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
2740:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
2741:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2742:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2743:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanTriggerReqSrcEvent()<BR>
2744:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2745:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
2746:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2747:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
2748:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV1_Msk;
2749:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2750:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2751:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2752:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2753:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2754:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
2755:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
2756:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2757:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2758:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
2759:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will get the status of the scan request source event. Will return a true
2760:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the event has occurred for scan. A call to this API would access the register bit field GxSEF
2761:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2762:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2763:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2764:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2765:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
2766:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2767:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GSCAN_GetRSEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2768:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return( (bool)(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV1_Msk));
2769:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2770:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2771:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2772:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2773:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param sr    Service Request Id
2774:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2775:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2776:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2777:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2778:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Connects the scan request source event to the SR line of VADC.<BR>\n
2779:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a scan request source event. Hence to get a 
2780:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2781:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * field GxSEVNP.SEV1NP .
2782:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2783:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2784:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
2785:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2786:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
2787:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2788:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2789:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2790:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2791:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2792:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2793:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2794:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the trigger for scan request source.<BR>\n
2795:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API, the trigger signal will be activated for the scan request source. The trigger
2796:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * edge will be selected from the ASCTRL register. The Selection of a input will be done by
2797:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectTrigger(). A call to this API would configure the register bit field Gx
2798:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2799:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2800:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanDisableExternalTrigger()<BR>
2801:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2802:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
2803:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2804:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2805:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2806:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_ENTR_Msk;
2807:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2808:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2809:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2810:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2811:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2812:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2813:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2814:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2815:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the trigger for scan request source.<BR>
2816:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the scan request source.
2817:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the scan request source. If any configuration were
2818:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to select the trigger input in GxASCTRL, it will be not be effected by this API.
2819:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENTR.
2820:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2821:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2822:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2823:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2824:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
2825:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2826:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2827:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2828:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENTR_Msk);
2829:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2830:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2831:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2832:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2833:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr Pointer to the VADC module
2834:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
2835:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2836:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2837:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes the Background scan functional block.<BR>\n
2838:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The BACKGROUND SCAN request source functional block converts channels of all VADC groups that ha
2839:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * been assigned as a priority channel (priority channels can be converted only by queue and scan).
2840:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request source converts the unprioritized channels. Unprioritized channels however can also be u
2841:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * and scan. But a channel which is prioritized can not be used with background request source.
2842:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2843:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2844:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR> XMC_VADC_GROUP_BackgroundDisableArbitratio
2845:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundSelectGating()<BR>
2846:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2847:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
2848:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2849:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2850:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2851:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group which may receive a
2852:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                  conversion request from background request source
2853:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2854:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2855:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2856:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2857:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2858:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables arbitration slot of the Background request source.<BR>\n
2859:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
2860:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
2861:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * comes to the Background slot. Thus this must be enabled if any conversion need to take place.
2862:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2.
2863:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2864:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2865:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableArbitrationSlot()<BR>
2866:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2867:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_p
2868:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 209              	 .loc 1 2868 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213              	 
 214 0000 80B4     	 push {r7}
 215              	.LCFI18:
 216              	 .cfi_def_cfa_offset 4
 217              	 .cfi_offset 7,-4
 218 0002 83B0     	 sub sp,sp,#12
 219              	.LCFI19:
 220              	 .cfi_def_cfa_offset 16
 221 0004 00AF     	 add r7,sp,#0
 222              	.LCFI20:
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
2869:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK_
2870:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN2_Msk;
 225              	 .loc 1 2870 0
 226 0008 7B68     	 ldr r3,[r7,#4]
 227 000a D3F88430 	 ldr r3,[r3,#132]
 228 000e 43F08062 	 orr r2,r3,#67108864
 229 0012 7B68     	 ldr r3,[r7,#4]
 230 0014 C3F88420 	 str r2,[r3,#132]
2871:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
 231              	 .loc 1 2871 0
 232 0018 0C37     	 adds r7,r7,#12
 233              	.LCFI21:
 234              	 .cfi_def_cfa_offset 4
 235 001a BD46     	 mov sp,r7
 236              	.LCFI22:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 001c 5DF8047B 	 ldr r7,[sp],#4
 240              	.LCFI23:
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0020 7047     	 bx lr
 244              	 .cfi_endproc
 245              	.LFE179:
 247 0022 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot,"ax",%progbits
 248              	 .align 2
 249              	 .thumb
 250              	 .thumb_func
 252              	XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:
 253              	.LFB180:
2872:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2873:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2874:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group which may receive a conversion request
2875:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                     from background request source
2876:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2877:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2878:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2879:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2880:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables arbitration slot of the Background request source.<BR>\n
2881:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
2882:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
2883:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * comes to the Background slot.A call to this API will lead to all conversions request by Backgrou
2884:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2
2885:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2886:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2887:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR>
2888:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2889:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_
2890:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 254              	 .loc 1 2890 0
 255              	 .cfi_startproc
 256              	 
 257              	 
 258              	 
 259 0000 80B4     	 push {r7}
 260              	.LCFI24:
 261              	 .cfi_def_cfa_offset 4
 262              	 .cfi_offset 7,-4
 263 0002 83B0     	 sub sp,sp,#12
 264              	.LCFI25:
 265              	 .cfi_def_cfa_offset 16
 266 0004 00AF     	 add r7,sp,#0
 267              	.LCFI26:
 268              	 .cfi_def_cfa_register 7
 269 0006 7860     	 str r0,[r7,#4]
2891:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK
2892:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN2_Msk);
 270              	 .loc 1 2892 0
 271 0008 7B68     	 ldr r3,[r7,#4]
 272 000a D3F88430 	 ldr r3,[r3,#132]
 273 000e 23F08062 	 bic r2,r3,#67108864
 274 0012 7B68     	 ldr r3,[r7,#4]
 275 0014 C3F88420 	 str r2,[r3,#132]
2893:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
 276              	 .loc 1 2893 0
 277 0018 0C37     	 adds r7,r7,#12
 278              	.LCFI27:
 279              	 .cfi_def_cfa_offset 4
 280 001a BD46     	 mov sp,r7
 281              	.LCFI28:
 282              	 .cfi_def_cfa_register 13
 283              	 
 284 001c 5DF8047B 	 ldr r7,[sp],#4
 285              	.LCFI29:
 286              	 .cfi_restore 7
 287              	 .cfi_def_cfa_offset 0
 288 0020 7047     	 bx lr
 289              	 .cfi_endproc
 290              	.LFE180:
 292 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot,"ax",%progbits
 293              	 .align 2
 294              	 .thumb
 295              	 .thumb_func
 297              	XMC_VADC_GROUP_QueueEnableArbitrationSlot:
 298              	.LFB193:
2894:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #endif
2895:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2896:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2897:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2898:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
2899:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_TRIGGER_INPUT_SELECT_t
2900:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2901:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2902:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2903:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2904:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal for Background request source.<BR>\n
2905:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
2906:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2907:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
2908:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2909:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTSEL.
2910:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2911:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2912:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
2913:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2914:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
2915:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2916:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2917:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2918:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2919:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_edge  Select the trigger edge
2920:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2921:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2922:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2923:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2924:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger edge for Background request source.<BR>\n
2925:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
2926:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible values for the trigger 
2927:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
2928:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTMODE.
2929:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2930:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2931:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
2932:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2933:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
2934:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2935:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2936:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2937:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Module input signal meant to be selected as gating input
2938:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_GATE_INPUT_SELECT_t
2939:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2940:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2941:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2942:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2943:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Gating signal for Background request source.<BR>\n
2944:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2945:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the Background request so
2946:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxBRSMR.ENGT has to be confi
2947:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field BRSC
2948:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2949:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2950:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR>
2951:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2952:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
2953:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2954:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2955:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2956:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the background scan request source
2957:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2958:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2959:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2960:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <b>Details of function</b><br>
2961:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the gating mode of background request source.<BR>\n
2962:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2963:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2964:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2965:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENGT.
2966:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2967:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2968:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectGating();
2969:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
2970:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundSetGatingMode(XMC_VADC_GLOBAL_t *const global_ptr,
2971:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                             XMC_VADC_GATEMODE_t mode_sel)
2972:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
2973:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong Module Pointer", (global_ptr == VADC))
2974:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_G
2975:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2976:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2977:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR &= (uint32_t)(~((uint32_t)VADC_BRSMR_ENGT_Msk));
2978:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Configure the new gating mode*/
2979:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)((uint32_t)mode_sel << VADC_BRSMR_ENGT_Pos);
2980:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
2981:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2982:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
2983:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
2984:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
2985:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
2986:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
2987:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2988:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2989:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2990:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
2991:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is needed. Using autoscan (continuous conversion)feature it is possible to start the con
2992:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * once and allow the sequence to repeat without any further triggers. Once all channels belonging 
2993:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request source have been converted, a request source completion event is generated. Generation o
2994:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * can restart the Background configure sequence. Every request source event will cause a load even
2995:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would access the register bit field BRSMR.SCAN.
2996:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
2997:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2998:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableContinuousMode()<BR>
2999:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3000:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableContinuousMode(XMC_VADC_GLOBAL_t *const global
3001:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3002:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableContinuousMode:Wrong Module Pointer", (global_ptr == 
3003:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_SCAN_Msk;
3004:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3005:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3006:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3007:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3008:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3009:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3010:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3011:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3012:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
3013:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3014:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
3015:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a Background req
3016:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
3017:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. By invoking this API the Autoscan mode of operations is disabled. A call to this API w
3018:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * register bit field BRSMR.SCAN.
3019:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3020:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3021:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableContinuousMode()<BR>
3022:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3023:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableContinuousMode(XMC_VADC_GLOBAL_t *const globa
3024:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3025:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableContinuousMode:Wrong Module Pointer", (global_ptr ==
3026:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_SCAN_Msk);
3027:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3028:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3029:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3030:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3031:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3032:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3033:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3034:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3035:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
3036:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3037:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the b
3038:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * has already been filled up with entries. A call to this API would set the register bit field BRS
3039:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3040:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3041:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3042:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3043:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_pt
3044:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3045:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VAD
3046:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
3047:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3048:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3049:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3050:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3051:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3052:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3053:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3054:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3055:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Aborts an ongoing background scan conversion(sequence).<BR>\n
3056:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
3057:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
3058:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
3059:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers BRSMR, BRSCTRL, GxARBPR(if group is available) 
3060:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * current scan sequence.
3061:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3062:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3063:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3064:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3065:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr);
3066:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3067:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3068:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3069:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3070:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Request source
3071:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3072:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3073:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3074:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3075:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3076:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3077:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds a channel to the background scan sequence.<BR>\n
3078:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3079:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3080:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3081:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3082:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3083:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
3084:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3085:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global
3086:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                     const uint32_t grp_num,
3087:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                     const uint32_t ch_num)
3088:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3089:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3090:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3091:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3092:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3093:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3094:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
3095:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3096:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3097:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3098:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3099:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndAddMultipleChannels(XMC_VADC_GLOBAL_t *const global_ptr
3118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t ch_mask)
3120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= ch_mask;
3124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determine if the channel is pending.<BR>\n
3136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the channel is found in the pending register (BRSPND[\b grp_num]).
3140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending()<BR>
3143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundIsChannelPending(XMC_VADC_GLOBAL_t *const global_ptr
3145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                                                 const uint32_t ch_num)
3147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Module Pointer", (global_ptr == VADC
3149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Group Number",   ((grp_num) < XMC_VA
3150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Channel Number",
3151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return( (bool)(global_ptr->BRSPND[grp_num] & (uint32_t)((uint32_t)1 << ch_num)));
3154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * @return  <BR>
3159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to (0x8*number of groups)]
3161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Returns the number of pending channels.<BR>\n
3164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * return the total number of channels pending (BRSPND[\b grp_num]).
3168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundIsChannelPending()<BR>
3171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr);
3173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will set the request source event for background scan. This will trigger a interrupt if
3182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB.
3184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * None.
3187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent(XMC_VADC_GLOBAL_t *const global_p
3189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent:Wrong Module Pointer", (global_ptr == VA
3191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk;
3192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Acknowledges the background scan conversion complete request source event.<BR>\n
3201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB
3203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent()<BR>
3206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent(XMC_VADC_GLOBAL_t *const global_ptr
3208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent:Wrong Module Pointer", (global_ptr == VADC
3210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLBCLR_Msk;
3211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will get the status of the background scan request source event. Will return a true
3222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * if the event has occurred for background scan. A call to this API would configure the register
3223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit field GLOBEFLAG.SEVGLB.
3224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  None.
3227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus(XMC_VADC_GLOBAL_t *const global
3229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus:Wrong Module Pointer", (global_ptr == 
3231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   return((bool)(global_ptr->GLOBEFLAG & (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk));
3232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables the trigger for background scan request source.<BR>\n
3241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the scan request source. The trigger signal 
3242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * edge will be selected from the BRSCTRL register. The Selection of a input will be done by
3243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectTrigger(). A call to this API would configure the register bit f
3244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(
3247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger(XMC_VADC_GLOBAL_t *const globa
3249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger:Wrong Group Pointer", (global_ptr == 
3251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_ENTR_Msk;
3253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables the trigger for background scan request source.<BR>
3262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the background scan request source.
3263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the background scan request source. If any configu
3264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to select the trigger input in BRSCTRL will be not be effected. A call to this API would configu
3265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * bit field BRSMR.ENTR.
3266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><br>
3268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<BR>
3269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(XMC_VADC_GLOBAL_t *const glob
3271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger:Wrong Group Pointer", (global_ptr ==
3273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENTR_Msk);
3275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
3278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
3280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Initializes VADC QUEUE functional block.<BR>\n
3286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The QUEUE request source functional block converts channels stored in a queue. The first channel
3287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * queue is converted first. A channel once converted, can be placed back into the queue if desired
3288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_QueueEnable
3289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
3290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_QueueDisableArb
3291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxQCTRL0, GxQMR0 to configure the queu
3292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * source.
3293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR> XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR
3296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueSelectGating()<BR>
3297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
3299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Enables arbitration slot of the queue request source.<BR>\n
3307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the queue slot. Thus this must be enabled if any conversion need to take place.
3310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR>
3314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 299              	 .loc 1 3316 0
 300              	 .cfi_startproc
 301              	 
 302              	 
 303              	 
 304 0000 80B4     	 push {r7}
 305              	.LCFI30:
 306              	 .cfi_def_cfa_offset 4
 307              	 .cfi_offset 7,-4
 308 0002 83B0     	 sub sp,sp,#12
 309              	.LCFI31:
 310              	 .cfi_def_cfa_offset 16
 311 0004 00AF     	 add r7,sp,#0
 312              	.LCFI32:
 313              	 .cfi_def_cfa_register 7
 314 0006 7860     	 str r0,[r7,#4]
3317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)1 << VADC_G_ARBPR_ASEN0_Pos);
 315              	 .loc 1 3318 0
 316 0008 7B68     	 ldr r3,[r7,#4]
 317 000a D3F88430 	 ldr r3,[r3,#132]
 318 000e 43F08072 	 orr r2,r3,#16777216
 319 0012 7B68     	 ldr r3,[r7,#4]
 320 0014 C3F88420 	 str r2,[r3,#132]
3319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
 321              	 .loc 1 3319 0
 322 0018 0C37     	 adds r7,r7,#12
 323              	.LCFI33:
 324              	 .cfi_def_cfa_offset 4
 325 001a BD46     	 mov sp,r7
 326              	.LCFI34:
 327              	 .cfi_def_cfa_register 13
 328              	 
 329 001c 5DF8047B 	 ldr r7,[sp],#4
 330              	.LCFI35:
 331              	 .cfi_restore 7
 332              	 .cfi_def_cfa_offset 0
 333 0020 7047     	 bx lr
 334              	 .cfi_endproc
 335              	.LFE193:
 337 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot,"ax",%progbits
 338              	 .align 2
 339              	 .thumb
 340              	 .thumb_func
 342              	XMC_VADC_GROUP_QueueDisableArbitrationSlot:
 343              	.LFB194:
3320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Disables arbitration slot of the queue request source.<BR>\n
3328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to the queue slot.A call to this API will lead to all conversions request by queue to be blocked
3331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR>
3335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 344              	 .loc 1 3337 0
 345              	 .cfi_startproc
 346              	 
 347              	 
 348              	 
 349 0000 80B4     	 push {r7}
 350              	.LCFI36:
 351              	 .cfi_def_cfa_offset 4
 352              	 .cfi_offset 7,-4
 353 0002 83B0     	 sub sp,sp,#12
 354              	.LCFI37:
 355              	 .cfi_def_cfa_offset 16
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI38:
 358              	 .cfi_def_cfa_register 7
 359 0006 7860     	 str r0,[r7,#4]
3338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN0_Msk);
 360              	 .loc 1 3339 0
 361 0008 7B68     	 ldr r3,[r7,#4]
 362 000a D3F88430 	 ldr r3,[r3,#132]
 363 000e 23F08072 	 bic r2,r3,#16777216
 364 0012 7B68     	 ldr r3,[r7,#4]
 365 0014 C3F88420 	 str r2,[r3,#132]
3340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
 366              	 .loc 1 3340 0
 367 0018 0C37     	 adds r7,r7,#12
 368              	.LCFI39:
 369              	 .cfi_def_cfa_offset 4
 370 001a BD46     	 mov sp,r7
 371              	.LCFI40:
 372              	 .cfi_def_cfa_register 13
 373              	 
 374 001c 5DF8047B 	 ldr r7,[sp],#4
 375              	.LCFI41:
 376              	 .cfi_restore 7
 377              	 .cfi_def_cfa_offset 0
 378 0020 7047     	 bx lr
 379              	 .cfi_endproc
 380              	.LFE194:
 382 0022 00BF     	 .section .text.XMC_VADC_GROUP_QueueFlushEntries,"ax",%progbits
 383              	 .align 2
 384              	 .thumb
 385              	 .thumb_func
 387              	XMC_VADC_GROUP_QueueFlushEntries:
 388              	.LFB197:
3341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal for queue request source.<BR>\n
3350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTSEL.
3355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, 
3360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num);
3361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param trigger_edge  Choice of the trigger edge
3365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Trigger signal edge for queue request source.<BR>\n
3370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 trigger edges. This is
3372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTMODE.
3375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
3380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as the gating line
3384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Select Gating signal for queue request source.<BR>\n
3389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the queue request source 
3391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxQMR0.ENGT has to be config
3392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxQC
3393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR>
3396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
3398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the queue request source
3402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Selects the gating mode of queue request source.<BR>\n
3407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQMR0.ENGT.
3411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectGating();
3414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_
3416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMOD
3419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 &= (uint32_t)(~((uint32_t) VADC_G_QMR0_ENGT_Msk));
3422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Set the new gating mode */
3423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)mode_sel << VADC_G_QMR0_ENGT_Pos);
3424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>
3434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the queue unit to generate a conversion request to the analog converter. It is assumed that the 
3436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxQMR0.TR
3437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * The conversion of queue entry will start immediately after the entry has been loaded into GxQINR
3440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This happens only if the queue entry has been loaded into the register without the need for the 
3441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * If a H/W Trigger is selected while loading the entry, the conversion will occur in one of the 2 
3442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI> The H/W generates a trigger needed for the queue request source.
3443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * <LI> The Conversion is triggered manually by calling this API.
3444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
3449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
3450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_TREV_Pos);
3452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
3453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    uint32_t returns the total number of channels.
3458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Returns the number of channels present in the queue.<BR>\n
3462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will return the queue buffer size. This buffer will be consisting of valid queue entrie
3463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * will be converted when a trigger event occurs. All the entries that are loaded onto the GxQINR0 
3464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * be added to the queue buffer. Hence if an application needs to get the number of valid queue ent
3465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * this API would provide the interface. A call to this API would access the registers GxQBUR0, GxQ
3466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * to determine the queue length.
3467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr);
3472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Aborts an ongoing conversion by flushing the queue.<BR>\n
3480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will flush the queue buffer. Ongoing conversion of the Queue request source will
3481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to abort
3483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * the queue sequence.
3484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueFlushEntries() <BR>
3487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr);
3489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** /**
3491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * @return
3493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *    None
3494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * Flushing the queue Entry.<BR>\n
3497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * This API will flush one entry in the queue buffer. Ongoing conversion of the Queue request sourc
3498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * A call to this API would configure the registers  GxQMR0. This is a Blocking API, i.e will only 
3500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * all the entries are removed from the queue.
3501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *
3502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueAbortSequence(0<BR>
3504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****  */
3505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueFlushEntries(XMC_VADC_GROUP_t *const group_ptr)
3506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** {
 389              	 .loc 1 3506 0
 390              	 .cfi_startproc
 391              	 
 392              	 
 393              	 
 394 0000 80B4     	 push {r7}
 395              	.LCFI42:
 396              	 .cfi_def_cfa_offset 4
 397              	 .cfi_offset 7,-4
 398 0002 83B0     	 sub sp,sp,#12
 399              	.LCFI43:
 400              	 .cfi_def_cfa_offset 16
 401 0004 00AF     	 add r7,sp,#0
 402              	.LCFI44:
 403              	 .cfi_def_cfa_register 7
 404 0006 7860     	 str r0,[r7,#4]
3507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   /* Initiate flushing of the queue */
3508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_FLUSH_Msk;
 405              	 .loc 1 3508 0
 406 0008 7B68     	 ldr r3,[r7,#4]
 407 000a D3F80431 	 ldr r3,[r3,#260]
 408 000e 43F48062 	 orr r2,r3,#1024
 409 0012 7B68     	 ldr r3,[r7,#4]
 410 0014 C3F80421 	 str r2,[r3,#260]
3509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** 
3510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   while( !((group_ptr->QSR0)& (uint32_t)VADC_G_QSR0_EMPTY_Msk))
 411              	 .loc 1 3510 0
 412 0018 00BF     	 nop
 413              	.L9:
 414              	 .loc 1 3510 0 is_stmt 0 discriminator 1
 415 001a 7B68     	 ldr r3,[r7,#4]
 416 001c D3F80831 	 ldr r3,[r3,#264]
 417 0020 03F02003 	 and r3,r3,#32
 418 0024 002B     	 cmp r3,#0
 419 0026 F8D0     	 beq .L9
3511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   {
3512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****     /* Wait until the queue is indeed flushed */
3513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h ****   }
3514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_vadc.h **** }
 420              	 .loc 1 3514 0 is_stmt 1
 421 0028 0C37     	 adds r7,r7,#12
 422              	.LCFI45:
 423              	 .cfi_def_cfa_offset 4
 424 002a BD46     	 mov sp,r7
 425              	.LCFI46:
 426              	 .cfi_def_cfa_register 13
 427              	 
 428 002c 5DF8047B 	 ldr r7,[sp],#4
 429              	.LCFI47:
 430              	 .cfi_restore 7
 431              	 .cfi_def_cfa_offset 0
 432 0030 7047     	 bx lr
 433              	 .cfi_endproc
 434              	.LFE197:
 436 0032 00BF     	 .section .rodata.g_xmc_vadc_group_array,"a",%progbits
 437              	 .align 2
 440              	g_xmc_vadc_group_array:
 441 0000 00440040 	 .word 1073759232
 442 0004 00480040 	 .word 1073760256
 443              	 .section .text.XMC_VADC_GLOBAL_EnableModule,"ax",%progbits
 444              	 .align 2
 445              	 .global XMC_VADC_GLOBAL_EnableModule
 446              	 .thumb
 447              	 .thumb_func
 449              	XMC_VADC_GLOBAL_EnableModule:
 450              	.LFB213:
 451              	 .file 2 "../Libraries/XMCLib/src/xmc_vadc.c"
   1:../Libraries/XMCLib/src/xmc_vadc.c **** /**
   2:../Libraries/XMCLib/src/xmc_vadc.c ****  * @file xmc_vadc.c
   3:../Libraries/XMCLib/src/xmc_vadc.c ****  * @date 2015-06-25 
   4:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   5:../Libraries/XMCLib/src/xmc_vadc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_vadc.c **** ***************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_vadc.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   9:../Libraries/XMCLib/src/xmc_vadc.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_vadc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_vadc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_vadc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_vadc.c ****  * 
  18:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_vadc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_vadc.c ****  * 
  21:../Libraries/XMCLib/src/xmc_vadc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_vadc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_vadc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_vadc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_vadc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_vadc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_vadc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_vadc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_vadc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_vadc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_vadc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  36:../Libraries/XMCLib/src/xmc_vadc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_vadc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  39:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-15:
  40:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_vadc.c ****  *      
  42:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-20:
  43:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised for XMC1201 device.<br>
  44:../Libraries/XMCLib/src/xmc_vadc.c ****  *   
  45:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-04-27:
  46:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for SHS.<br>
  47:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added New APIs for trigger edge selection.<BR>
  48:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  51:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  54:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-25:
  55:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - BFL configuration in channel initialization fixed.
  56:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  57:../Libraries/XMCLib/src/xmc_vadc.c ****  * @endcond 
  58:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  59:../Libraries/XMCLib/src/xmc_vadc.c ****  */
  60:../Libraries/XMCLib/src/xmc_vadc.c **** 
  61:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  62:../Libraries/XMCLib/src/xmc_vadc.c ****  * HEADER FILES
  63:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_vadc.c **** #include <xmc_vadc.h>
  65:../Libraries/XMCLib/src/xmc_vadc.c **** 
  66:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_vadc.c ****  * MACROS
  68:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  69:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_MAX_ICLASS_SET          (2U)  /**< Defines the maximum number of conversion parame
  70:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_NUM_EMUX_INTERFACES     (2U)  /**< Defines the maximum number of external multiple
  71:../Libraries/XMCLib/src/xmc_vadc.c **** 
  72:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_RESULT_LEFT_ALIGN_10BIT (2U)  /**< Defines the 10 bit converted result register le
  73:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     is used in the XMC_VADC_GLOBAL_SetCompareValue(
  74:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_vadc.c ****  * ENUMS
  76:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_vadc.c **** 
  78:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  79:../Libraries/XMCLib/src/xmc_vadc.c ****  * DATA STRUCTURES
  80:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  81:../Libraries/XMCLib/src/xmc_vadc.c **** 
  82:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  83:../Libraries/XMCLib/src/xmc_vadc.c ****  * GLOBAL DATA
  84:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_vadc.c **** 
  86:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
  87:../Libraries/XMCLib/src/xmc_vadc.c **** 
  88:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U) 
  89:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
  90:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
  91:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
  92:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
  93:../Libraries/XMCLib/src/xmc_vadc.c **** #else
  94:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
  95:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
  96:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
  97:../Libraries/XMCLib/src/xmc_vadc.c **** 
  98:../Libraries/XMCLib/src/xmc_vadc.c **** #endif 
  99:../Libraries/XMCLib/src/xmc_vadc.c **** 
 100:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 101:../Libraries/XMCLib/src/xmc_vadc.c ****  * LOCAL ROUTINES
 102:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 103:../Libraries/XMCLib/src/xmc_vadc.c **** 
 104:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 105:../Libraries/XMCLib/src/xmc_vadc.c ****  * API IMPLEMENTATION
 106:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 107:../Libraries/XMCLib/src/xmc_vadc.c **** 
 108:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to enable the VADC Module*/
 109:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_EnableModule(void)
 110:../Libraries/XMCLib/src/xmc_vadc.c **** {
 452              	 .loc 2 110 0
 453              	 .cfi_startproc
 454              	 
 455              	 
 456 0000 80B5     	 push {r7,lr}
 457              	.LCFI48:
 458              	 .cfi_def_cfa_offset 8
 459              	 .cfi_offset 7,-8
 460              	 .cfi_offset 14,-4
 461 0002 00AF     	 add r7,sp,#0
 462              	.LCFI49:
 463              	 .cfi_def_cfa_register 7
 111:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
 112:../Libraries/XMCLib/src/xmc_vadc.c ****    * Enable Out of Range Comparator for ADC channels pins P2.2to P2.9. This hack is applicable only
 113:../Libraries/XMCLib/src/xmc_vadc.c ****    * and in particular the G11 step.
 114:../Libraries/XMCLib/src/xmc_vadc.c ****    *
 115:../Libraries/XMCLib/src/xmc_vadc.c ****    * Please refer to the XMC1000 Errata sheet V1.4 released 2014-06 Errata ID : ADC_AI.003 Additona
 116:../Libraries/XMCLib/src/xmc_vadc.c ****    * function
 117:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 118:../Libraries/XMCLib/src/xmc_vadc.c **** 
 119:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined (COMPARATOR)
 120:../Libraries/XMCLib/src/xmc_vadc.c ****   COMPARATOR->ORCCTRL = (uint32_t)0xFF;
 121:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 122:../Libraries/XMCLib/src/xmc_vadc.c **** 
 123:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_CLOCK_UNGATING_NEEDED ==  1U)
 124:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 464              	 .loc 2 124 0
 465 0004 0120     	 movs r0,#1
 466 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 125:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 126:../Libraries/XMCLib/src/xmc_vadc.c **** 
 127:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_DEASSERT_RESET_NEEDED == 1U)
 128:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 129:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_DeassertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC )
 467              	 .loc 2 129 0
 468 000a 0120     	 movs r0,#1
 469 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 130:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 131:../Libraries/XMCLib/src/xmc_vadc.c **** }
 470              	 .loc 2 131 0
 471 0010 80BD     	 pop {r7,pc}
 472              	 .cfi_endproc
 473              	.LFE213:
 475 0012 00BF     	 .section .text.XMC_VADC_GLOBAL_DisableModule,"ax",%progbits
 476              	 .align 2
 477              	 .global XMC_VADC_GLOBAL_DisableModule
 478              	 .thumb
 479              	 .thumb_func
 481              	XMC_VADC_GLOBAL_DisableModule:
 482              	.LFB214:
 132:../Libraries/XMCLib/src/xmc_vadc.c **** 
 133:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to Disable the VADC Module*/
 134:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_DisableModule(void)
 135:../Libraries/XMCLib/src/xmc_vadc.c **** {
 483              	 .loc 2 135 0
 484              	 .cfi_startproc
 485              	 
 486              	 
 487 0000 80B5     	 push {r7,lr}
 488              	.LCFI50:
 489              	 .cfi_def_cfa_offset 8
 490              	 .cfi_offset 7,-8
 491              	 .cfi_offset 14,-4
 492 0002 00AF     	 add r7,sp,#0
 493              	.LCFI51:
 494              	 .cfi_def_cfa_register 7
 136:../Libraries/XMCLib/src/xmc_vadc.c **** 
 137:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_CLOCK_UNGATING_NEEDED ==  1U)
 138:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 495              	 .loc 2 138 0
 496 0004 0120     	 movs r0,#1
 497 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 139:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 140:../Libraries/XMCLib/src/xmc_vadc.c **** 
 141:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_DEASSERT_RESET_NEEDED == 1U)
 142:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 143:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_AssertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC );
 498              	 .loc 2 143 0
 499 000a 0120     	 movs r0,#1
 500 000c FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 144:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 145:../Libraries/XMCLib/src/xmc_vadc.c **** }
 501              	 .loc 2 145 0
 502 0010 80BD     	 pop {r7,pc}
 503              	 .cfi_endproc
 504              	.LFE214:
 506 0012 00BF     	 .section .text.XMC_VADC_GLOBAL_Init,"ax",%progbits
 507              	 .align 2
 508              	 .global XMC_VADC_GLOBAL_Init
 509              	 .thumb
 510              	 .thumb_func
 512              	XMC_VADC_GLOBAL_Init:
 513              	.LFB215:
 146:../Libraries/XMCLib/src/xmc_vadc.c **** 
 147:../Libraries/XMCLib/src/xmc_vadc.c **** 
 148:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize global resources */
 149:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
 150:../Libraries/XMCLib/src/xmc_vadc.c **** {
 514              	 .loc 2 150 0
 515              	 .cfi_startproc
 516              	 
 517              	 
 518 0000 80B5     	 push {r7,lr}
 519              	.LCFI52:
 520              	 .cfi_def_cfa_offset 8
 521              	 .cfi_offset 7,-8
 522              	 .cfi_offset 14,-4
 523 0002 82B0     	 sub sp,sp,#8
 524              	.LCFI53:
 525              	 .cfi_def_cfa_offset 16
 526 0004 00AF     	 add r7,sp,#0
 527              	.LCFI54:
 528              	 .cfi_def_cfa_register 7
 529 0006 7860     	 str r0,[r7,#4]
 530 0008 3960     	 str r1,[r7]
 151:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 152:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
 153:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 154:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_Init:Wrong Module Pointer", (global_ptr == VADC))
 155:../Libraries/XMCLib/src/xmc_vadc.c **** 
 156:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the VADC module*/
 157:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GLOBAL_EnableModule();
 531              	 .loc 2 157 0
 532 000a FFF7FEFF 	 bl XMC_VADC_GLOBAL_EnableModule
 158:../Libraries/XMCLib/src/xmc_vadc.c **** 
 159:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->CLC = (uint32_t)(config->clc);
 533              	 .loc 2 159 0
 534 000e 3B68     	 ldr r3,[r7]
 535 0010 5A69     	 ldr r2,[r3,#20]
 536 0012 7B68     	 ldr r3,[r7,#4]
 537 0014 1A60     	 str r2,[r3]
 160:../Libraries/XMCLib/src/xmc_vadc.c **** 
 161:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Clock configuration */
 162:../Libraries/XMCLib/src/xmc_vadc.c **** 
 163:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 164:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG  = (uint32_t)(config->clock_config.globcfg | (uint32_t)(VADC_GLOBCFG_DIVWC_Ms
 538              	 .loc 2 164 0
 539 0016 3B68     	 ldr r3,[r7]
 540 0018 5B68     	 ldr r3,[r3,#4]
 541 001a 43F40042 	 orr r2,r3,#32768
 542 001e 7B68     	 ldr r3,[r7,#4]
 543 0020 C3F88020 	 str r2,[r3,#128]
 165:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 166:../Libraries/XMCLib/src/xmc_vadc.c **** 
 167:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-0 configuration */
 168:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[0] = (uint32_t)(config->class0.globiclass);
 544              	 .loc 2 168 0
 545 0024 3B68     	 ldr r3,[r7]
 546 0026 9A68     	 ldr r2,[r3,#8]
 547 0028 7B68     	 ldr r3,[r7,#4]
 548 002a C3F8A020 	 str r2,[r3,#160]
 169:../Libraries/XMCLib/src/xmc_vadc.c **** 
 170:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-1 configuration */
 171:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[1] = (uint32_t)(config->class1.globiclass);
 549              	 .loc 2 171 0
 550 002e 3B68     	 ldr r3,[r7]
 551 0030 DA68     	 ldr r2,[r3,#12]
 552 0032 7B68     	 ldr r3,[r7,#4]
 553 0034 C3F8A420 	 str r2,[r3,#164]
 172:../Libraries/XMCLib/src/xmc_vadc.c **** 
 173:../Libraries/XMCLib/src/xmc_vadc.c **** 
 174:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Result generation related configuration */
 175:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRCR = (uint32_t)(config->globrcr);
 554              	 .loc 2 175 0
 555 0038 3B68     	 ldr r3,[r7]
 556 003a 1A69     	 ldr r2,[r3,#16]
 557 003c 7B68     	 ldr r3,[r7,#4]
 558 003e C3F88022 	 str r2,[r3,#640]
 176:../Libraries/XMCLib/src/xmc_vadc.c **** 
 177:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 178:../Libraries/XMCLib/src/xmc_vadc.c **** 
 179:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Boundaries */
 180:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = (uint32_t)(config->globbound);
 559              	 .loc 2 180 0
 560 0042 3B68     	 ldr r3,[r7]
 561 0044 1A68     	 ldr r2,[r3]
 562 0046 7B68     	 ldr r3,[r7,#4]
 563 0048 C3F8B820 	 str r2,[r3,#184]
 181:../Libraries/XMCLib/src/xmc_vadc.c **** 
 182:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 183:../Libraries/XMCLib/src/xmc_vadc.c **** 
 184:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Configure the SHS register that are needed for XMC11xx devices*/
 185:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 186:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Select Internal reference Upper suppy range*/
 187:../Libraries/XMCLib/src/xmc_vadc.c ****   SHS0->SHSCFG |= SHS_SHSCFG_SCWC_Msk |(2 <<SHS_SHSCFG_AREF_Pos);
 188:../Libraries/XMCLib/src/xmc_vadc.c **** 
 189:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enabling the Analog part of the converter*/
 190:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = SHS0->SHSCFG  | SHS_SHSCFG_SCWC_Msk;
 191:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(SHS_SHSCFG_ANOFF_Msk);
 192:../Libraries/XMCLib/src/xmc_vadc.c ****   SHS0->SHSCFG = reg;
 193:../Libraries/XMCLib/src/xmc_vadc.c **** 
 194:../Libraries/XMCLib/src/xmc_vadc.c ****   /* From the Errata sheet of XMC1100 V1.7*/
 195:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONV_ENABLE_FOR_XMC11 = 1U;
 196:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 197:../Libraries/XMCLib/src/xmc_vadc.c **** 
 198:../Libraries/XMCLib/src/xmc_vadc.c **** }
 564              	 .loc 2 198 0
 565 004c 0837     	 adds r7,r7,#8
 566              	.LCFI55:
 567              	 .cfi_def_cfa_offset 8
 568 004e BD46     	 mov sp,r7
 569              	.LCFI56:
 570              	 .cfi_def_cfa_register 13
 571              	 
 572 0050 80BD     	 pop {r7,pc}
 573              	 .cfi_endproc
 574              	.LFE215:
 576 0052 00BF     	 .section .text.XMC_VADC_GLOBAL_InputClassInit,"ax",%progbits
 577              	 .align 2
 578              	 .global XMC_VADC_GLOBAL_InputClassInit
 579              	 .thumb
 580              	 .thumb_func
 582              	XMC_VADC_GLOBAL_InputClassInit:
 583              	.LFB216:
 199:../Libraries/XMCLib/src/xmc_vadc.c **** 
 200:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Set the Global IClass registers*/
 201:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
 202:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 203:../Libraries/XMCLib/src/xmc_vadc.c **** {
 584              	 .loc 2 203 0
 585              	 .cfi_startproc
 586              	 
 587              	 
 588              	 
 589 0000 80B4     	 push {r7}
 590              	.LCFI57:
 591              	 .cfi_def_cfa_offset 4
 592              	 .cfi_offset 7,-4
 593 0002 85B0     	 sub sp,sp,#20
 594              	.LCFI58:
 595              	 .cfi_def_cfa_offset 24
 596 0004 00AF     	 add r7,sp,#0
 597              	.LCFI59:
 598              	 .cfi_def_cfa_register 7
 599 0006 F860     	 str r0,[r7,#12]
 600 0008 B960     	 str r1,[r7,#8]
 601 000a 3B60     	 str r3,[r7]
 602 000c 1346     	 mov r3,r2
 603 000e FB71     	 strb r3,[r7,#7]
 204:../Libraries/XMCLib/src/xmc_vadc.c **** 
 205:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Module Pointer", (global_ptr == VADC))
 206:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP
 207:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLA
 208:../Libraries/XMCLib/src/xmc_vadc.c **** 
 209:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 210:../Libraries/XMCLib/src/xmc_vadc.c ****   if (conv_type == XMC_VADC_GROUP_CONV_STD )
 604              	 .loc 2 210 0
 605 0010 FB79     	 ldrb r3,[r7,#7]
 606 0012 002B     	 cmp r3,#0
 607 0014 09D1     	 bne .L14
 211:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 212:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 213:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass &
 608              	 .loc 2 213 0
 609 0016 BA68     	 ldr r2,[r7,#8]
 610 0018 40F21F73 	 movw r3,#1823
 611 001c 1340     	 ands r3,r3,r2
 612 001e FA68     	 ldr r2,[r7,#12]
 613 0020 3968     	 ldr r1,[r7]
 614 0022 2831     	 adds r1,r1,#40
 615 0024 42F82130 	 str r3,[r2,r1,lsl#2]
 616 0028 07E0     	 b .L13
 617              	.L14:
 214:../Libraries/XMCLib/src/xmc_vadc.c ****                                       (uint32_t)(VADC_GLOBICLASS_CMS_Msk | VADC_GLOBICLASS_STCS_Msk
 215:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 216:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 217:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 218:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 219:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass & (uint32_t)(VADC_GLOBICLASS_CME_Msk | VADC
 618              	 .loc 2 219 0
 619 002a BA68     	 ldr r2,[r7,#8]
 620 002c 054B     	 ldr r3,.L16
 621 002e 1340     	 ands r3,r3,r2
 622 0030 FA68     	 ldr r2,[r7,#12]
 623 0032 3968     	 ldr r1,[r7]
 624 0034 2831     	 adds r1,r1,#40
 625 0036 42F82130 	 str r3,[r2,r1,lsl#2]
 626              	.L13:
 220:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 221:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 222:../Libraries/XMCLib/src/xmc_vadc.c **** }
 627              	 .loc 2 222 0
 628 003a 1437     	 adds r7,r7,#20
 629              	.LCFI60:
 630              	 .cfi_def_cfa_offset 4
 631 003c BD46     	 mov sp,r7
 632              	.LCFI61:
 633              	 .cfi_def_cfa_register 13
 634              	 
 635 003e 5DF8047B 	 ldr r7,[sp],#4
 636              	.LCFI62:
 637              	 .cfi_restore 7
 638              	 .cfi_def_cfa_offset 0
 639 0042 7047     	 bx lr
 640              	.L17:
 641              	 .align 2
 642              	.L16:
 643 0044 00001F07 	 .word 119472128
 644              	 .cfi_endproc
 645              	.LFE216:
 647              	 .section .text.XMC_VADC_GLOBAL_StartupCalibration,"ax",%progbits
 648              	 .align 2
 649              	 .global XMC_VADC_GLOBAL_StartupCalibration
 650              	 .thumb
 651              	 .thumb_func
 653              	XMC_VADC_GLOBAL_StartupCalibration:
 654              	.LFB217:
 223:../Libraries/XMCLib/src/xmc_vadc.c **** 
 224:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable startup calibration feature */
 225:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
 226:../Libraries/XMCLib/src/xmc_vadc.c **** {
 655              	 .loc 2 226 0
 656              	 .cfi_startproc
 657              	 
 658              	 
 659              	 
 660 0000 80B4     	 push {r7}
 661              	.LCFI63:
 662              	 .cfi_def_cfa_offset 4
 663              	 .cfi_offset 7,-4
 664 0002 85B0     	 sub sp,sp,#20
 665              	.LCFI64:
 666              	 .cfi_def_cfa_offset 24
 667 0004 00AF     	 add r7,sp,#0
 668              	.LCFI65:
 669              	 .cfi_def_cfa_register 7
 670 0006 7860     	 str r0,[r7,#4]
 227:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 228:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
 229:../Libraries/XMCLib/src/xmc_vadc.c ****   VADC_G_TypeDef *group_ptr;
 230:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 231:../Libraries/XMCLib/src/xmc_vadc.c ****   
 232:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_StartupCalibration:Wrong Module Pointer", (global_ptr == VADC))
 233:../Libraries/XMCLib/src/xmc_vadc.c **** 
 234:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG |= (uint32_t)VADC_GLOBCFG_SUCAL_Msk;
 671              	 .loc 2 234 0
 672 0008 7B68     	 ldr r3,[r7,#4]
 673 000a D3F88030 	 ldr r3,[r3,#128]
 674 000e 43F00042 	 orr r2,r3,#-2147483648
 675 0012 7B68     	 ldr r3,[r7,#4]
 676 0014 C3F88020 	 str r2,[r3,#128]
 235:../Libraries/XMCLib/src/xmc_vadc.c **** 
 236:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 237:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until all active groups finish calibration */
 238:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0U; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 677              	 .loc 2 238 0
 678 0018 0023     	 movs r3,#0
 679 001a FB73     	 strb r3,[r7,#15]
 680 001c 16E0     	 b .L19
 681              	.L22:
 239:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 240:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr = g_xmc_vadc_group_array[i];
 682              	 .loc 2 240 0
 683 001e FB7B     	 ldrb r3,[r7,#15]
 684 0020 0E4A     	 ldr r2,.L23
 685 0022 52F82330 	 ldr r3,[r2,r3,lsl#2]
 686 0026 BB60     	 str r3,[r7,#8]
 241:../Libraries/XMCLib/src/xmc_vadc.c ****     if ( (group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_ANONS_Msk)
 687              	 .loc 2 241 0
 688 0028 BB68     	 ldr r3,[r7,#8]
 689 002a D3F88030 	 ldr r3,[r3,#128]
 690 002e 03F44033 	 and r3,r3,#196608
 691 0032 002B     	 cmp r3,#0
 692 0034 07D0     	 beq .L20
 242:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 243:../Libraries/XMCLib/src/xmc_vadc.c ****       /* This group is active. Loop until it finishes calibration */
 244:../Libraries/XMCLib/src/xmc_vadc.c ****       while((group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_CAL_Msk)
 693              	 .loc 2 244 0
 694 0036 00BF     	 nop
 695              	.L21:
 696              	 .loc 2 244 0 is_stmt 0 discriminator 1
 697 0038 BB68     	 ldr r3,[r7,#8]
 698 003a D3F88030 	 ldr r3,[r3,#128]
 699 003e 03F08053 	 and r3,r3,#268435456
 700 0042 002B     	 cmp r3,#0
 701 0044 F8D1     	 bne .L21
 702              	.L20:
 238:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 703              	 .loc 2 238 0 is_stmt 1 discriminator 2
 704 0046 FB7B     	 ldrb r3,[r7,#15]
 705 0048 0133     	 adds r3,r3,#1
 706 004a FB73     	 strb r3,[r7,#15]
 707              	.L19:
 238:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 708              	 .loc 2 238 0 is_stmt 0 discriminator 1
 709 004c FB7B     	 ldrb r3,[r7,#15]
 710 004e 012B     	 cmp r3,#1
 711 0050 E5D9     	 bls .L22
 245:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 246:../Libraries/XMCLib/src/xmc_vadc.c ****         /* NOP */
 247:../Libraries/XMCLib/src/xmc_vadc.c ****       }
 248:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 249:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 250:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 251:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until it finishes calibration */
 252:../Libraries/XMCLib/src/xmc_vadc.c ****   while( ( (SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) == XMC_VADC_SHS_START_UP_CAL_ACTIVE )
 253:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 254:../Libraries/XMCLib/src/xmc_vadc.c ****     /* NOP */
 255:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 256:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 257:../Libraries/XMCLib/src/xmc_vadc.c **** }
 712              	 .loc 2 257 0 is_stmt 1
 713 0052 1437     	 adds r7,r7,#20
 714              	.LCFI66:
 715              	 .cfi_def_cfa_offset 4
 716 0054 BD46     	 mov sp,r7
 717              	.LCFI67:
 718              	 .cfi_def_cfa_register 13
 719              	 
 720 0056 5DF8047B 	 ldr r7,[sp],#4
 721              	.LCFI68:
 722              	 .cfi_restore 7
 723              	 .cfi_def_cfa_offset 0
 724 005a 7047     	 bx lr
 725              	.L24:
 726              	 .align 2
 727              	.L23:
 728 005c 00000000 	 .word g_xmc_vadc_group_array
 729              	 .cfi_endproc
 730              	.LFE217:
 732              	 .section .text.XMC_VADC_GLOBAL_SetBoundaries,"ax",%progbits
 733              	 .align 2
 734              	 .global XMC_VADC_GLOBAL_SetBoundaries
 735              	 .thumb
 736              	 .thumb_func
 738              	XMC_VADC_GLOBAL_SetBoundaries:
 739              	.LFB218:
 258:../Libraries/XMCLib/src/xmc_vadc.c **** 
 259:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boudaries for result of conversion. Should the boundaries be violated, interrupts are
 260:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 261:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr,
 262:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary0,
 263:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary1)
 264:../Libraries/XMCLib/src/xmc_vadc.c **** {
 740              	 .loc 2 264 0
 741              	 .cfi_startproc
 742              	 
 743              	 
 744              	 
 745 0000 80B4     	 push {r7}
 746              	.LCFI69:
 747              	 .cfi_def_cfa_offset 4
 748              	 .cfi_offset 7,-4
 749 0002 87B0     	 sub sp,sp,#28
 750              	.LCFI70:
 751              	 .cfi_def_cfa_offset 32
 752 0004 00AF     	 add r7,sp,#0
 753              	.LCFI71:
 754              	 .cfi_def_cfa_register 7
 755 0006 F860     	 str r0,[r7,#12]
 756 0008 B960     	 str r1,[r7,#8]
 757 000a 7A60     	 str r2,[r7,#4]
 265:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 266:../Libraries/XMCLib/src/xmc_vadc.c **** 
 267:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 268:../Libraries/XMCLib/src/xmc_vadc.c **** 
 269:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound = 0U;
 758              	 .loc 2 269 0
 759 000c 0023     	 movs r3,#0
 760 000e 7B61     	 str r3,[r7,#20]
 270:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary0 << VADC_GLOBBOUND_BOUNDARY0_Pos);
 761              	 .loc 2 270 0
 762 0010 7A69     	 ldr r2,[r7,#20]
 763 0012 BB68     	 ldr r3,[r7,#8]
 764 0014 1343     	 orrs r3,r3,r2
 765 0016 7B61     	 str r3,[r7,#20]
 271:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary1 << VADC_GLOBBOUND_BOUNDARY1_Pos);
 766              	 .loc 2 271 0
 767 0018 7B68     	 ldr r3,[r7,#4]
 768 001a 1B04     	 lsls r3,r3,#16
 769 001c 7A69     	 ldr r2,[r7,#20]
 770 001e 1343     	 orrs r3,r3,r2
 771 0020 7B61     	 str r3,[r7,#20]
 272:../Libraries/XMCLib/src/xmc_vadc.c **** 
 273:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 772              	 .loc 2 273 0
 773 0022 FB68     	 ldr r3,[r7,#12]
 774 0024 7A69     	 ldr r2,[r7,#20]
 775 0026 C3F8B820 	 str r2,[r3,#184]
 274:../Libraries/XMCLib/src/xmc_vadc.c **** }
 776              	 .loc 2 274 0
 777 002a 1C37     	 adds r7,r7,#28
 778              	.LCFI72:
 779              	 .cfi_def_cfa_offset 4
 780 002c BD46     	 mov sp,r7
 781              	.LCFI73:
 782              	 .cfi_def_cfa_register 13
 783              	 
 784 002e 5DF8047B 	 ldr r7,[sp],#4
 785              	.LCFI74:
 786              	 .cfi_restore 7
 787              	 .cfi_def_cfa_offset 0
 788 0032 7047     	 bx lr
 789              	 .cfi_endproc
 790              	.LFE218:
 792              	 .section .text.XMC_VADC_GLOBAL_SetCompareValue,"ax",%progbits
 793              	 .align 2
 794              	 .global XMC_VADC_GLOBAL_SetCompareValue
 795              	 .thumb
 796              	 .thumb_func
 798              	XMC_VADC_GLOBAL_SetCompareValue:
 799              	.LFB219:
 275:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 276:../Libraries/XMCLib/src/xmc_vadc.c **** 
 277:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set compare value for the result register. Result of conversion is compared against this 
 278:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
 279:../Libraries/XMCLib/src/xmc_vadc.c **** {
 800              	 .loc 2 279 0
 801              	 .cfi_startproc
 802              	 
 803              	 
 804              	 
 805 0000 80B4     	 push {r7}
 806              	.LCFI75:
 807              	 .cfi_def_cfa_offset 4
 808              	 .cfi_offset 7,-4
 809 0002 83B0     	 sub sp,sp,#12
 810              	.LCFI76:
 811              	 .cfi_def_cfa_offset 16
 812 0004 00AF     	 add r7,sp,#0
 813              	.LCFI77:
 814              	 .cfi_def_cfa_register 7
 815 0006 7860     	 str r0,[r7,#4]
 816 0008 0B46     	 mov r3,r1
 817 000a 7B80     	 strh r3,[r7,#2]
 280:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetCompareValue:Wrong Module Pointer", (global_ptr == VADC))
 281:../Libraries/XMCLib/src/xmc_vadc.c **** 
 282:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES &= ~((uint32_t)VADC_GLOBRES_RESULT_Msk);
 818              	 .loc 2 282 0
 819 000c 7B68     	 ldr r3,[r7,#4]
 820 000e D3F80033 	 ldr r3,[r3,#768]
 821 0012 1B0C     	 lsrs r3,r3,#16
 822 0014 1B04     	 lsls r3,r3,#16
 823 0016 7A68     	 ldr r2,[r7,#4]
 824 0018 C2F80033 	 str r3,[r2,#768]
 283:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 825              	 .loc 2 283 0
 826 001c 7B68     	 ldr r3,[r7,#4]
 827 001e D3F80023 	 ldr r2,[r3,#768]
 828 0022 7B88     	 ldrh r3,[r7,#2]
 829 0024 9B00     	 lsls r3,r3,#2
 830 0026 1A43     	 orrs r2,r2,r3
 831 0028 7B68     	 ldr r3,[r7,#4]
 832 002a C3F80023 	 str r2,[r3,#768]
 284:../Libraries/XMCLib/src/xmc_vadc.c **** }
 833              	 .loc 2 284 0
 834 002e 0C37     	 adds r7,r7,#12
 835              	.LCFI78:
 836              	 .cfi_def_cfa_offset 4
 837 0030 BD46     	 mov sp,r7
 838              	.LCFI79:
 839              	 .cfi_def_cfa_register 13
 840              	 
 841 0032 5DF8047B 	 ldr r7,[sp],#4
 842              	.LCFI80:
 843              	 .cfi_restore 7
 844              	 .cfi_def_cfa_offset 0
 845 0036 7047     	 bx lr
 846              	 .cfi_endproc
 847              	.LFE219:
 849              	 .section .text.XMC_VADC_GLOBAL_GetCompareResult,"ax",%progbits
 850              	 .align 2
 851              	 .global XMC_VADC_GLOBAL_GetCompareResult
 852              	 .thumb
 853              	 .thumb_func
 855              	XMC_VADC_GLOBAL_GetCompareResult:
 856              	.LFB220:
 285:../Libraries/XMCLib/src/xmc_vadc.c **** 
 286:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of comparison */
 287:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr)
 288:../Libraries/XMCLib/src/xmc_vadc.c **** {
 857              	 .loc 2 288 0
 858              	 .cfi_startproc
 859              	 
 860              	 
 861              	 
 862 0000 80B4     	 push {r7}
 863              	.LCFI81:
 864              	 .cfi_def_cfa_offset 4
 865              	 .cfi_offset 7,-4
 866 0002 85B0     	 sub sp,sp,#20
 867              	.LCFI82:
 868              	 .cfi_def_cfa_offset 24
 869 0004 00AF     	 add r7,sp,#0
 870              	.LCFI83:
 871              	 .cfi_def_cfa_register 7
 872 0006 7860     	 str r0,[r7,#4]
 289:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
 290:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
 291:../Libraries/XMCLib/src/xmc_vadc.c **** 
 292:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetCompareResult:Wrong Module Pointer", (global_ptr == VADC))
 293:../Libraries/XMCLib/src/xmc_vadc.c **** 
 294:../Libraries/XMCLib/src/xmc_vadc.c ****   res = global_ptr->GLOBRES;
 873              	 .loc 2 294 0
 874 0008 7B68     	 ldr r3,[r7,#4]
 875 000a D3F80033 	 ldr r3,[r3,#768]
 876 000e BB60     	 str r3,[r7,#8]
 295:../Libraries/XMCLib/src/xmc_vadc.c **** 
 296:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_GLOBRES_VF_Msk)
 877              	 .loc 2 296 0
 878 0010 BB68     	 ldr r3,[r7,#8]
 879 0012 002B     	 cmp r3,#0
 880 0014 06DA     	 bge .L28
 297:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 298:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_GLOBRES_FCR_Pos) & (uint32_
 881              	 .loc 2 298 0
 882 0016 BB68     	 ldr r3,[r7,#8]
 883 0018 9B0F     	 lsrs r3,r3,#30
 884 001a DBB2     	 uxtb r3,r3
 885 001c 03F00103 	 and r3,r3,#1
 886 0020 FB73     	 strb r3,[r7,#15]
 887 0022 01E0     	 b .L29
 888              	.L28:
 299:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 300:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 301:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 302:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 889              	 .loc 2 302 0
 890 0024 0223     	 movs r3,#2
 891 0026 FB73     	 strb r3,[r7,#15]
 892              	.L29:
 303:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 304:../Libraries/XMCLib/src/xmc_vadc.c **** 
 305:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
 893              	 .loc 2 305 0
 894 0028 FB7B     	 ldrb r3,[r7,#15]
 306:../Libraries/XMCLib/src/xmc_vadc.c **** }
 895              	 .loc 2 306 0
 896 002a 1846     	 mov r0,r3
 897 002c 1437     	 adds r7,r7,#20
 898              	.LCFI84:
 899              	 .cfi_def_cfa_offset 4
 900 002e BD46     	 mov sp,r7
 901              	.LCFI85:
 902              	 .cfi_def_cfa_register 13
 903              	 
 904 0030 5DF8047B 	 ldr r7,[sp],#4
 905              	.LCFI86:
 906              	 .cfi_restore 7
 907              	 .cfi_def_cfa_offset 0
 908 0034 7047     	 bx lr
 909              	 .cfi_endproc
 910              	.LFE220:
 912 0036 00BF     	 .section .text.XMC_VADC_GLOBAL_BindGroupToEMux,"ax",%progbits
 913              	 .align 2
 914              	 .global XMC_VADC_GLOBAL_BindGroupToEMux
 915              	 .thumb
 916              	 .thumb_func
 918              	XMC_VADC_GLOBAL_BindGroupToEMux:
 919              	.LFB221:
 307:../Libraries/XMCLib/src/xmc_vadc.c **** 
 308:../Libraries/XMCLib/src/xmc_vadc.c **** /* Bind one of the four groups to one of the two EMUX interfaces */
 309:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_EMUX_AVAILABLE == 1U)
 310:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
 311:../Libraries/XMCLib/src/xmc_vadc.c **** {
 920              	 .loc 2 311 0
 921              	 .cfi_startproc
 922              	 
 923              	 
 924              	 
 925 0000 80B4     	 push {r7}
 926              	.LCFI87:
 927              	 .cfi_def_cfa_offset 4
 928              	 .cfi_offset 7,-4
 929 0002 87B0     	 sub sp,sp,#28
 930              	.LCFI88:
 931              	 .cfi_def_cfa_offset 32
 932 0004 00AF     	 add r7,sp,#0
 933              	.LCFI89:
 934              	 .cfi_def_cfa_register 7
 935 0006 F860     	 str r0,[r7,#12]
 936 0008 B960     	 str r1,[r7,#8]
 937 000a 7A60     	 str r2,[r7,#4]
 312:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
 313:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
 314:../Libraries/XMCLib/src/xmc_vadc.c **** 
 315:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong Module Pointer", (global_ptr == VADC))
 316:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong EMUX Group", (emuxif < XMC_VADC_NUM_EMUX_INTERF
 317:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong VADC Group", (group < XMC_VADC_MAXIMUM_NUM_GROU
 318:../Libraries/XMCLib/src/xmc_vadc.c **** 
 319:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == emuxif)
 938              	 .loc 2 319 0
 939 000c BB68     	 ldr r3,[r7,#8]
 940 000e 002B     	 cmp r3,#0
 941 0010 04D1     	 bne .L32
 320:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 321:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Pos;
 942              	 .loc 2 321 0
 943 0012 0023     	 movs r3,#0
 944 0014 3B61     	 str r3,[r7,#16]
 322:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Msk;
 945              	 .loc 2 322 0
 946 0016 0F23     	 movs r3,#15
 947 0018 7B61     	 str r3,[r7,#20]
 948 001a 03E0     	 b .L33
 949              	.L32:
 323:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 324:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 325:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 326:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Pos;
 950              	 .loc 2 326 0
 951 001c 0423     	 movs r3,#4
 952 001e 3B61     	 str r3,[r7,#16]
 327:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Msk;
 953              	 .loc 2 327 0
 954 0020 F023     	 movs r3,#240
 955 0022 7B61     	 str r3,[r7,#20]
 956              	.L33:
 328:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 329:../Libraries/XMCLib/src/xmc_vadc.c **** 
 330:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL &= ~(mask);
 957              	 .loc 2 330 0
 958 0024 FB68     	 ldr r3,[r7,#12]
 959 0026 D3F8F023 	 ldr r2,[r3,#1008]
 960 002a 7B69     	 ldr r3,[r7,#20]
 961 002c DB43     	 mvns r3,r3
 962 002e 1A40     	 ands r2,r2,r3
 963 0030 FB68     	 ldr r3,[r7,#12]
 964 0032 C3F8F023 	 str r2,[r3,#1008]
 331:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL |= (uint32_t) (group << pos);
 965              	 .loc 2 331 0
 966 0036 FB68     	 ldr r3,[r7,#12]
 967 0038 D3F8F023 	 ldr r2,[r3,#1008]
 968 003c 3B69     	 ldr r3,[r7,#16]
 969 003e 7968     	 ldr r1,[r7,#4]
 970 0040 01FA03F3 	 lsl r3,r1,r3
 971 0044 1A43     	 orrs r2,r2,r3
 972 0046 FB68     	 ldr r3,[r7,#12]
 973 0048 C3F8F023 	 str r2,[r3,#1008]
 332:../Libraries/XMCLib/src/xmc_vadc.c **** 
 333:../Libraries/XMCLib/src/xmc_vadc.c **** }
 974              	 .loc 2 333 0
 975 004c 1C37     	 adds r7,r7,#28
 976              	.LCFI90:
 977              	 .cfi_def_cfa_offset 4
 978 004e BD46     	 mov sp,r7
 979              	.LCFI91:
 980              	 .cfi_def_cfa_register 13
 981              	 
 982 0050 5DF8047B 	 ldr r7,[sp],#4
 983              	.LCFI92:
 984              	 .cfi_restore 7
 985              	 .cfi_def_cfa_offset 0
 986 0054 7047     	 bx lr
 987              	 .cfi_endproc
 988              	.LFE221:
 990 0056 00BF     	 .section .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode,"ax",%progbits
 991              	 .align 2
 992              	 .global XMC_VADC_GLOBAL_SetResultEventInterruptNode
 993              	 .thumb
 994              	 .thumb_func
 996              	XMC_VADC_GLOBAL_SetResultEventInterruptNode:
 997              	.LFB222:
 334:../Libraries/XMCLib/src/xmc_vadc.c **** #endif 
 335:../Libraries/XMCLib/src/xmc_vadc.c **** 
 336:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind result event with a service request line */
 337:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
 338:../Libraries/XMCLib/src/xmc_vadc.c **** {
 998              	 .loc 2 338 0
 999              	 .cfi_startproc
 1000              	 
 1001              	 
 1002              	 
 1003 0000 80B4     	 push {r7}
 1004              	.LCFI93:
 1005              	 .cfi_def_cfa_offset 4
 1006              	 .cfi_offset 7,-4
 1007 0002 85B0     	 sub sp,sp,#20
 1008              	.LCFI94:
 1009              	 .cfi_def_cfa_offset 24
 1010 0004 00AF     	 add r7,sp,#0
 1011              	.LCFI95:
 1012              	 .cfi_def_cfa_register 7
 1013 0006 7860     	 str r0,[r7,#4]
 1014 0008 0B46     	 mov r3,r1
 1015 000a FB70     	 strb r3,[r7,#3]
 339:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 340:../Libraries/XMCLib/src/xmc_vadc.c ****   
 341:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong Module Pointer", (global_ptr == VAD
 342:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong SR Number", (sr <= XMC_VADC_SR_SHAR
 343:../Libraries/XMCLib/src/xmc_vadc.c **** 
 344:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 1016              	 .loc 2 344 0
 1017 000c FB78     	 ldrb r3,[r7,#3]
 1018 000e 032B     	 cmp r3,#3
 1019 0010 03D9     	 bls .L35
 345:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 346:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 1020              	 .loc 2 346 0
 1021 0012 FB78     	 ldrb r3,[r7,#3]
 1022 0014 043B     	 subs r3,r3,#4
 1023 0016 FB60     	 str r3,[r7,#12]
 1024 0018 01E0     	 b .L36
 1025              	.L35:
 347:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 348:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 349:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 350:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1026              	 .loc 2 350 0
 1027 001a FB78     	 ldrb r3,[r7,#3]
 1028 001c FB60     	 str r3,[r7,#12]
 1029              	.L36:
 351:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 352:../Libraries/XMCLib/src/xmc_vadc.c **** 
 353:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_REV0NP_Msk);
 1030              	 .loc 2 353 0
 1031 001e 7B68     	 ldr r3,[r7,#4]
 1032 0020 D3F84031 	 ldr r3,[r3,#320]
 1033 0024 23F47022 	 bic r2,r3,#983040
 1034 0028 7B68     	 ldr r3,[r7,#4]
 1035 002a C3F84021 	 str r2,[r3,#320]
 354:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
 1036              	 .loc 2 354 0
 1037 002e 7B68     	 ldr r3,[r7,#4]
 1038 0030 D3F84021 	 ldr r2,[r3,#320]
 1039 0034 FB68     	 ldr r3,[r7,#12]
 1040 0036 1B04     	 lsls r3,r3,#16
 1041 0038 1A43     	 orrs r2,r2,r3
 1042 003a 7B68     	 ldr r3,[r7,#4]
 1043 003c C3F84021 	 str r2,[r3,#320]
 355:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1044              	 .loc 2 355 0
 1045 0040 1437     	 adds r7,r7,#20
 1046              	.LCFI96:
 1047              	 .cfi_def_cfa_offset 4
 1048 0042 BD46     	 mov sp,r7
 1049              	.LCFI97:
 1050              	 .cfi_def_cfa_register 13
 1051              	 
 1052 0044 5DF8047B 	 ldr r7,[sp],#4
 1053              	.LCFI98:
 1054              	 .cfi_restore 7
 1055              	 .cfi_def_cfa_offset 0
 1056 0048 7047     	 bx lr
 1057              	 .cfi_endproc
 1058              	.LFE222:
 1060 004a 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode,"ax",%progbits
 1061              	 .align 2
 1062              	 .global XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
 1063              	 .thumb
 1064              	 .thumb_func
 1066              	XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:
 1067              	.LFB223:
 356:../Libraries/XMCLib/src/xmc_vadc.c **** 
 357:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind request source event with a service request line */
 358:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
 359:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1068              	 .loc 2 359 0
 1069              	 .cfi_startproc
 1070              	 
 1071              	 
 1072              	 
 1073 0000 80B4     	 push {r7}
 1074              	.LCFI99:
 1075              	 .cfi_def_cfa_offset 4
 1076              	 .cfi_offset 7,-4
 1077 0002 85B0     	 sub sp,sp,#20
 1078              	.LCFI100:
 1079              	 .cfi_def_cfa_offset 24
 1080 0004 00AF     	 add r7,sp,#0
 1081              	.LCFI101:
 1082              	 .cfi_def_cfa_register 7
 1083 0006 7860     	 str r0,[r7,#4]
 1084 0008 0B46     	 mov r3,r1
 1085 000a FB70     	 strb r3,[r7,#3]
 360:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 361:../Libraries/XMCLib/src/xmc_vadc.c ****   
 362:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:Wrong Module Pointer", (global_
 363:../Libraries/XMCLib/src/xmc_vadc.c **** 
 364:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 1086              	 .loc 2 364 0
 1087 000c FB78     	 ldrb r3,[r7,#3]
 1088 000e 032B     	 cmp r3,#3
 1089 0010 03D9     	 bls .L38
 365:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 366:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 1090              	 .loc 2 366 0
 1091 0012 FB78     	 ldrb r3,[r7,#3]
 1092 0014 043B     	 subs r3,r3,#4
 1093 0016 FB60     	 str r3,[r7,#12]
 1094 0018 01E0     	 b .L39
 1095              	.L38:
 367:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 368:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 369:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 370:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1096              	 .loc 2 370 0
 1097 001a FB78     	 ldrb r3,[r7,#3]
 1098 001c FB60     	 str r3,[r7,#12]
 1099              	.L39:
 371:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 372:../Libraries/XMCLib/src/xmc_vadc.c **** 
 373:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_SEV0NP_Msk);
 1100              	 .loc 2 373 0
 1101 001e 7B68     	 ldr r3,[r7,#4]
 1102 0020 D3F84031 	 ldr r3,[r3,#320]
 1103 0024 23F00F02 	 bic r2,r3,#15
 1104 0028 7B68     	 ldr r3,[r7,#4]
 1105 002a C3F84021 	 str r2,[r3,#320]
 374:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t) (node << VADC_GLOBEVNP_SEV0NP_Pos);
 1106              	 .loc 2 374 0
 1107 002e 7B68     	 ldr r3,[r7,#4]
 1108 0030 D3F84021 	 ldr r2,[r3,#320]
 1109 0034 FB68     	 ldr r3,[r7,#12]
 1110 0036 1A43     	 orrs r2,r2,r3
 1111 0038 7B68     	 ldr r3,[r7,#4]
 1112 003a C3F84021 	 str r2,[r3,#320]
 375:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1113              	 .loc 2 375 0
 1114 003e 1437     	 adds r7,r7,#20
 1115              	.LCFI102:
 1116              	 .cfi_def_cfa_offset 4
 1117 0040 BD46     	 mov sp,r7
 1118              	.LCFI103:
 1119              	 .cfi_def_cfa_register 13
 1120              	 
 1121 0042 5DF8047B 	 ldr r7,[sp],#4
 1122              	.LCFI104:
 1123              	 .cfi_restore 7
 1124              	 .cfi_def_cfa_offset 0
 1125 0046 7047     	 bx lr
 1126              	 .cfi_endproc
 1127              	.LFE223:
 1129              	 .section .text.XMC_VADC_GROUP_Init,"ax",%progbits
 1130              	 .align 2
 1131              	 .global XMC_VADC_GROUP_Init
 1132              	 .thumb
 1133              	 .thumb_func
 1135              	XMC_VADC_GROUP_Init:
 1136              	.LFB224:
 376:../Libraries/XMCLib/src/xmc_vadc.c **** 
 377:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize an instance of group of VADC hardware */
 378:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)  
 379:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_Init( XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config)
 380:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1137              	 .loc 2 380 0
 1138              	 .cfi_startproc
 1139              	 
 1140              	 
 1141 0000 80B5     	 push {r7,lr}
 1142              	.LCFI105:
 1143              	 .cfi_def_cfa_offset 8
 1144              	 .cfi_offset 7,-8
 1145              	 .cfi_offset 14,-4
 1146 0002 82B0     	 sub sp,sp,#8
 1147              	.LCFI106:
 1148              	 .cfi_def_cfa_offset 16
 1149 0004 00AF     	 add r7,sp,#0
 1150              	.LCFI107:
 1151              	 .cfi_def_cfa_register 7
 1152 0006 7860     	 str r0,[r7,#4]
 1153 0008 3960     	 str r1,[r7]
 381:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_Init:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
 382:../Libraries/XMCLib/src/xmc_vadc.c **** 
 383:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the input classes */
 384:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_STD, 0U);
 1154              	 .loc 2 384 0
 1155 000a 3B68     	 ldr r3,[r7]
 1156 000c 7868     	 ldr r0,[r7,#4]
 1157 000e 5968     	 ldr r1,[r3,#4]
 1158 0010 0022     	 movs r2,#0
 1159 0012 0023     	 movs r3,#0
 1160 0014 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 385:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_EMUX, 0U);
 1161              	 .loc 2 385 0
 1162 0018 3B68     	 ldr r3,[r7]
 1163 001a 7868     	 ldr r0,[r7,#4]
 1164 001c 5968     	 ldr r1,[r3,#4]
 1165 001e 0122     	 movs r2,#1
 1166 0020 0023     	 movs r3,#0
 1167 0022 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 386:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_STD, 1U);
 1168              	 .loc 2 386 0
 1169 0026 3B68     	 ldr r3,[r7]
 1170 0028 7868     	 ldr r0,[r7,#4]
 1171 002a 9968     	 ldr r1,[r3,#8]
 1172 002c 0022     	 movs r2,#0
 1173 002e 0123     	 movs r3,#1
 1174 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 387:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_EMUX, 1U);
 1175              	 .loc 2 387 0
 1176 0034 3B68     	 ldr r3,[r7]
 1177 0036 7868     	 ldr r0,[r7,#4]
 1178 0038 9968     	 ldr r1,[r3,#8]
 1179 003a 0122     	 movs r2,#1
 1180 003c 0123     	 movs r3,#1
 1181 003e FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 388:../Libraries/XMCLib/src/xmc_vadc.c **** 
 389:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = config->g_arbcfg;
 1182              	 .loc 2 389 0
 1183 0042 3B68     	 ldr r3,[r7]
 1184 0044 1A69     	 ldr r2,[r3,#16]
 1185 0046 7B68     	 ldr r3,[r7,#4]
 1186 0048 C3F88020 	 str r2,[r3,#128]
 390:../Libraries/XMCLib/src/xmc_vadc.c **** 
 391:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = config->g_bound;
 1187              	 .loc 2 391 0
 1188 004c 3B68     	 ldr r3,[r7]
 1189 004e DA68     	 ldr r2,[r3,#12]
 1190 0050 7B68     	 ldr r3,[r7,#4]
 1191 0052 C3F8B820 	 str r2,[r3,#184]
 392:../Libraries/XMCLib/src/xmc_vadc.c **** 
 393:../Libraries/XMCLib/src/xmc_vadc.c ****   /* External mux configuration */
 394:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ExternalMuxControlInit(group_ptr,config->emux_config);
 1192              	 .loc 2 394 0
 1193 0056 3B68     	 ldr r3,[r7]
 1194 0058 7868     	 ldr r0,[r7,#4]
 1195 005a 1968     	 ldr r1,[r3]
 1196 005c FFF7FEFF 	 bl XMC_VADC_GROUP_ExternalMuxControlInit
 395:../Libraries/XMCLib/src/xmc_vadc.c **** 
 396:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1197              	 .loc 2 396 0
 1198 0060 0837     	 adds r7,r7,#8
 1199              	.LCFI108:
 1200              	 .cfi_def_cfa_offset 8
 1201 0062 BD46     	 mov sp,r7
 1202              	.LCFI109:
 1203              	 .cfi_def_cfa_register 13
 1204              	 
 1205 0064 80BD     	 pop {r7,pc}
 1206              	 .cfi_endproc
 1207              	.LFE224:
 1209 0066 00BF     	 .section .text.XMC_VADC_GROUP_InputClassInit,"ax",%progbits
 1210              	 .align 2
 1211              	 .global XMC_VADC_GROUP_InputClassInit
 1212              	 .thumb
 1213              	 .thumb_func
 1215              	XMC_VADC_GROUP_InputClassInit:
 1216              	.LFB225:
 397:../Libraries/XMCLib/src/xmc_vadc.c **** 
 398:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to program conversion characteristics */
 399:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
 400:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 401:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1217              	 .loc 2 401 0
 1218              	 .cfi_startproc
 1219              	 
 1220              	 
 1221              	 
 1222 0000 80B4     	 push {r7}
 1223              	.LCFI110:
 1224              	 .cfi_def_cfa_offset 4
 1225              	 .cfi_offset 7,-4
 1226 0002 8DB0     	 sub sp,sp,#52
 1227              	.LCFI111:
 1228              	 .cfi_def_cfa_offset 56
 1229 0004 00AF     	 add r7,sp,#0
 1230              	.LCFI112:
 1231              	 .cfi_def_cfa_register 7
 1232 0006 F860     	 str r0,[r7,#12]
 1233 0008 B960     	 str r1,[r7,#8]
 1234 000a 3B60     	 str r3,[r7]
 1235 000c 1346     	 mov r3,r2
 1236 000e FB71     	 strb r3,[r7,#7]
 402:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_class;
 403:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_pos;
 404:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_pos;
 405:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_mask;
 406:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_mask;
 407:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time;
 408:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONVMODE_t conv_mode;
 409:../Libraries/XMCLib/src/xmc_vadc.c **** 
 410:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
 411:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP_
 412:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLAS
 413:../Libraries/XMCLib/src/xmc_vadc.c **** 
 414:../Libraries/XMCLib/src/xmc_vadc.c ****   /* 
 415:../Libraries/XMCLib/src/xmc_vadc.c ****    * Obtain the mask and position macros of the parameters based on what is being requested - Stand
 416:../Libraries/XMCLib/src/xmc_vadc.c ****    * external mux channels.
 417:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 418:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_CONV_STD == conv_type)
 1237              	 .loc 2 418 0
 1238 0010 FB79     	 ldrb r3,[r7,#7]
 1239 0012 002B     	 cmp r3,#0
 1240 0014 13D1     	 bne .L42
 419:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 420:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CMS_Pos;
 1241              	 .loc 2 420 0
 1242 0016 0823     	 movs r3,#8
 1243 0018 FB62     	 str r3,[r7,#44]
 421:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CMS_Msk;
 1244              	 .loc 2 421 0
 1245 001a 4FF4E063 	 mov r3,#1792
 1246 001e 7B62     	 str r3,[r7,#36]
 422:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCS_Pos;
 1247              	 .loc 2 422 0
 1248 0020 0023     	 movs r3,#0
 1249 0022 BB62     	 str r3,[r7,#40]
 423:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCS_Msk;
 1250              	 .loc 2 423 0
 1251 0024 1F23     	 movs r3,#31
 1252 0026 3B62     	 str r3,[r7,#32]
 424:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sample_time_std_conv;
 1253              	 .loc 2 424 0
 1254 0028 3B7A     	 ldrb r3,[r7,#8]
 1255 002a C3F30403 	 ubfx r3,r3,#0,#5
 1256 002e DBB2     	 uxtb r3,r3
 1257 0030 FB61     	 str r3,[r7,#28]
 425:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 1258              	 .loc 2 425 0
 1259 0032 7B7A     	 ldrb r3,[r7,#9]
 1260 0034 C3F30203 	 ubfx r3,r3,#0,#3
 1261 0038 DBB2     	 uxtb r3,r3
 1262 003a FB76     	 strb r3,[r7,#27]
 1263 003c 13E0     	 b .L43
 1264              	.L42:
 426:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 427:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 428:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 429:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CME_Pos;
 1265              	 .loc 2 429 0
 1266 003e 1823     	 movs r3,#24
 1267 0040 FB62     	 str r3,[r7,#44]
 430:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CME_Msk;
 1268              	 .loc 2 430 0
 1269 0042 4FF0E063 	 mov r3,#117440512
 1270 0046 7B62     	 str r3,[r7,#36]
 431:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCE_Pos;
 1271              	 .loc 2 431 0
 1272 0048 1023     	 movs r3,#16
 1273 004a BB62     	 str r3,[r7,#40]
 432:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCE_Msk;
 1274              	 .loc 2 432 0
 1275 004c 4FF4F813 	 mov r3,#2031616
 1276 0050 3B62     	 str r3,[r7,#32]
 433:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sampling_phase_emux_channel;
 1277              	 .loc 2 433 0
 1278 0052 BB7A     	 ldrb r3,[r7,#10]
 1279 0054 C3F30403 	 ubfx r3,r3,#0,#5
 1280 0058 DBB2     	 uxtb r3,r3
 1281 005a FB61     	 str r3,[r7,#28]
 434:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_emux;
 1282              	 .loc 2 434 0
 1283 005c FB7A     	 ldrb r3,[r7,#11]
 1284 005e C3F30203 	 ubfx r3,r3,#0,#3
 1285 0062 DBB2     	 uxtb r3,r3
 1286 0064 FB76     	 strb r3,[r7,#27]
 1287              	.L43:
 435:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 436:../Libraries/XMCLib/src/xmc_vadc.c **** 
 437:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the class */
 438:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class  = group_ptr->ICLASS[set_num];
 1288              	 .loc 2 438 0
 1289 0066 FB68     	 ldr r3,[r7,#12]
 1290 0068 3A68     	 ldr r2,[r7]
 1291 006a 2832     	 adds r2,r2,#40
 1292 006c 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1293 0070 7B61     	 str r3,[r7,#20]
 439:../Libraries/XMCLib/src/xmc_vadc.c **** 
 440:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the class register */
 441:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(conv_mode_mask);
 1294              	 .loc 2 441 0
 1295 0072 7B6A     	 ldr r3,[r7,#36]
 1296 0074 DB43     	 mvns r3,r3
 1297 0076 7A69     	 ldr r2,[r7,#20]
 1298 0078 1340     	 ands r3,r3,r2
 1299 007a 7B61     	 str r3,[r7,#20]
 442:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 1300              	 .loc 2 442 0
 1301 007c FA7E     	 ldrb r2,[r7,#27]
 1302 007e FB6A     	 ldr r3,[r7,#44]
 1303 0080 02FA03F3 	 lsl r3,r2,r3
 1304 0084 7A69     	 ldr r2,[r7,#20]
 1305 0086 1343     	 orrs r3,r3,r2
 1306 0088 7B61     	 str r3,[r7,#20]
 443:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 1307              	 .loc 2 443 0
 1308 008a 3B6A     	 ldr r3,[r7,#32]
 1309 008c DB43     	 mvns r3,r3
 1310 008e 7A69     	 ldr r2,[r7,#20]
 1311 0090 1340     	 ands r3,r3,r2
 1312 0092 7B61     	 str r3,[r7,#20]
 444:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 1313              	 .loc 2 444 0
 1314 0094 BB6A     	 ldr r3,[r7,#40]
 1315 0096 FA69     	 ldr r2,[r7,#28]
 1316 0098 02FA03F3 	 lsl r3,r2,r3
 1317 009c 7A69     	 ldr r2,[r7,#20]
 1318 009e 1343     	 orrs r3,r3,r2
 1319 00a0 7B61     	 str r3,[r7,#20]
 445:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 1320              	 .loc 2 445 0
 1321 00a2 FB68     	 ldr r3,[r7,#12]
 1322 00a4 3A68     	 ldr r2,[r7]
 1323 00a6 2832     	 adds r2,r2,#40
 1324 00a8 7969     	 ldr r1,[r7,#20]
 1325 00aa 43F82210 	 str r1,[r3,r2,lsl#2]
 446:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1326              	 .loc 2 446 0
 1327 00ae 3437     	 adds r7,r7,#52
 1328              	.LCFI113:
 1329              	 .cfi_def_cfa_offset 4
 1330 00b0 BD46     	 mov sp,r7
 1331              	.LCFI114:
 1332              	 .cfi_def_cfa_register 13
 1333              	 
 1334 00b2 5DF8047B 	 ldr r7,[sp],#4
 1335              	.LCFI115:
 1336              	 .cfi_restore 7
 1337              	 .cfi_def_cfa_offset 0
 1338 00b6 7047     	 bx lr
 1339              	 .cfi_endproc
 1340              	.LFE225:
 1342              	 .section .text.XMC_VADC_GROUP_SetPowerMode,"ax",%progbits
 1343              	 .align 2
 1344              	 .global XMC_VADC_GROUP_SetPowerMode
 1345              	 .thumb
 1346              	 .thumb_func
 1348              	XMC_VADC_GROUP_SetPowerMode:
 1349              	.LFB226:
 447:../Libraries/XMCLib/src/xmc_vadc.c **** 
 448:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which sets the power mode of analog converter of a VADC group */
 449:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
 450:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1350              	 .loc 2 450 0
 1351              	 .cfi_startproc
 1352              	 
 1353              	 
 1354              	 
 1355 0000 80B4     	 push {r7}
 1356              	.LCFI116:
 1357              	 .cfi_def_cfa_offset 4
 1358              	 .cfi_offset 7,-4
 1359 0002 85B0     	 sub sp,sp,#20
 1360              	.LCFI117:
 1361              	 .cfi_def_cfa_offset 24
 1362 0004 00AF     	 add r7,sp,#0
 1363              	.LCFI118:
 1364              	 .cfi_def_cfa_register 7
 1365 0006 7860     	 str r0,[r7,#4]
 1366 0008 0B46     	 mov r3,r1
 1367 000a FB70     	 strb r3,[r7,#3]
 451:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t arbcfg;
 452:../Libraries/XMCLib/src/xmc_vadc.c **** 
 453:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 454:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Power Mode", (power_mode <= XMC_VADC_GROUP_POWERMOD
 455:../Libraries/XMCLib/src/xmc_vadc.c **** 
 456:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = group_ptr->ARBCFG;
 1368              	 .loc 2 456 0
 1369 000c 7B68     	 ldr r3,[r7,#4]
 1370 000e D3F88030 	 ldr r3,[r3,#128]
 1371 0012 FB60     	 str r3,[r7,#12]
 457:../Libraries/XMCLib/src/xmc_vadc.c **** 
 458:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= ~((uint32_t)VADC_G_ARBCFG_ANONC_Msk);
 1372              	 .loc 2 458 0
 1373 0014 FB68     	 ldr r3,[r7,#12]
 1374 0016 23F00303 	 bic r3,r3,#3
 1375 001a FB60     	 str r3,[r7,#12]
 459:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg |= (uint32_t)power_mode;
 1376              	 .loc 2 459 0
 1377 001c FB78     	 ldrb r3,[r7,#3]
 1378 001e FA68     	 ldr r2,[r7,#12]
 1379 0020 1343     	 orrs r3,r3,r2
 1380 0022 FB60     	 str r3,[r7,#12]
 460:../Libraries/XMCLib/src/xmc_vadc.c **** 
 461:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = arbcfg;
 1381              	 .loc 2 461 0
 1382 0024 7B68     	 ldr r3,[r7,#4]
 1383 0026 FA68     	 ldr r2,[r7,#12]
 1384 0028 C3F88020 	 str r2,[r3,#128]
 462:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1385              	 .loc 2 462 0
 1386 002c 1437     	 adds r7,r7,#20
 1387              	.LCFI119:
 1388              	 .cfi_def_cfa_offset 4
 1389 002e BD46     	 mov sp,r7
 1390              	.LCFI120:
 1391              	 .cfi_def_cfa_register 13
 1392              	 
 1393 0030 5DF8047B 	 ldr r7,[sp],#4
 1394              	.LCFI121:
 1395              	 .cfi_restore 7
 1396              	 .cfi_def_cfa_offset 0
 1397 0034 7047     	 bx lr
 1398              	 .cfi_endproc
 1399              	.LFE226:
 1401 0036 00BF     	 .section .text.XMC_VADC_GROUP_SetSyncSlave,"ax",%progbits
 1402              	 .align 2
 1403              	 .global XMC_VADC_GROUP_SetSyncSlave
 1404              	 .thumb
 1405              	 .thumb_func
 1407              	XMC_VADC_GROUP_SetSyncSlave:
 1408              	.LFB227:
 463:../Libraries/XMCLib/src/xmc_vadc.c **** 
 464:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a slave group during sync conversions */
 465:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
 466:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1409              	 .loc 2 466 0
 1410              	 .cfi_startproc
 1411              	 
 1412              	 
 1413              	 
 1414 0000 80B4     	 push {r7}
 1415              	.LCFI122:
 1416              	 .cfi_def_cfa_offset 4
 1417              	 .cfi_offset 7,-4
 1418 0002 87B0     	 sub sp,sp,#28
 1419              	.LCFI123:
 1420              	 .cfi_def_cfa_offset 32
 1421 0004 00AF     	 add r7,sp,#0
 1422              	.LCFI124:
 1423              	 .cfi_def_cfa_register 7
 1424 0006 F860     	 str r0,[r7,#12]
 1425 0008 B960     	 str r1,[r7,#8]
 1426 000a 7A60     	 str r2,[r7,#4]
 467:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 468:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 469:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
 470:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlave:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 471:../Libraries/XMCLib/src/xmc_vadc.c ****   
 472:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 473:../Libraries/XMCLib/src/xmc_vadc.c **** 
 474:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the coding of SYNCTR */
 475:../Libraries/XMCLib/src/xmc_vadc.c ****   if (slave_grp > master_grp)
 1427              	 .loc 2 475 0
 1428 000c 7A68     	 ldr r2,[r7,#4]
 1429 000e BB68     	 ldr r3,[r7,#8]
 1430 0010 9A42     	 cmp r2,r3
 1431 0012 02D9     	 bls .L46
 476:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 477:../Libraries/XMCLib/src/xmc_vadc.c ****     master_grp = master_grp + 1U;
 1432              	 .loc 2 477 0
 1433 0014 BB68     	 ldr r3,[r7,#8]
 1434 0016 0133     	 adds r3,r3,#1
 1435 0018 BB60     	 str r3,[r7,#8]
 1436              	.L46:
 478:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 479:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
 480:../Libraries/XMCLib/src/xmc_vadc.c ****   
 481:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program SYNCTR */
 482:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1437              	 .loc 2 482 0
 1438 001a FB68     	 ldr r3,[r7,#12]
 1439 001c D3F8C030 	 ldr r3,[r3,#192]
 1440 0020 7B61     	 str r3,[r7,#20]
 483:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1441              	 .loc 2 483 0
 1442 0022 7B69     	 ldr r3,[r7,#20]
 1443 0024 23F00303 	 bic r3,r3,#3
 1444 0028 7B61     	 str r3,[r7,#20]
 484:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   |= master_grp;
 1445              	 .loc 2 484 0
 1446 002a 7A69     	 ldr r2,[r7,#20]
 1447 002c BB68     	 ldr r3,[r7,#8]
 1448 002e 1343     	 orrs r3,r3,r2
 1449 0030 7B61     	 str r3,[r7,#20]
 485:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1450              	 .loc 2 485 0
 1451 0032 FB68     	 ldr r3,[r7,#12]
 1452 0034 7A69     	 ldr r2,[r7,#20]
 1453 0036 C3F8C020 	 str r2,[r3,#192]
 486:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1454              	 .loc 2 486 0
 1455 003a 1C37     	 adds r7,r7,#28
 1456              	.LCFI125:
 1457              	 .cfi_def_cfa_offset 4
 1458 003c BD46     	 mov sp,r7
 1459              	.LCFI126:
 1460              	 .cfi_def_cfa_register 13
 1461              	 
 1462 003e 5DF8047B 	 ldr r7,[sp],#4
 1463              	.LCFI127:
 1464              	 .cfi_restore 7
 1465              	 .cfi_def_cfa_offset 0
 1466 0042 7047     	 bx lr
 1467              	 .cfi_endproc
 1468              	.LFE227:
 1470              	 .section .text.XMC_VADC_GROUP_SetSyncMaster,"ax",%progbits
 1471              	 .align 2
 1472              	 .global XMC_VADC_GROUP_SetSyncMaster
 1473              	 .thumb
 1474              	 .thumb_func
 1476              	XMC_VADC_GROUP_SetSyncMaster:
 1477              	.LFB228:
 487:../Libraries/XMCLib/src/xmc_vadc.c **** 
 488:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a master group during sync conversions */
 489:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr)
 490:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1478              	 .loc 2 490 0
 1479              	 .cfi_startproc
 1480              	 
 1481              	 
 1482              	 
 1483 0000 80B4     	 push {r7}
 1484              	.LCFI128:
 1485              	 .cfi_def_cfa_offset 4
 1486              	 .cfi_offset 7,-4
 1487 0002 85B0     	 sub sp,sp,#20
 1488              	.LCFI129:
 1489              	 .cfi_def_cfa_offset 24
 1490 0004 00AF     	 add r7,sp,#0
 1491              	.LCFI130:
 1492              	 .cfi_def_cfa_register 7
 1493 0006 7860     	 str r0,[r7,#4]
 491:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 492:../Libraries/XMCLib/src/xmc_vadc.c **** 
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncMaster:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 494:../Libraries/XMCLib/src/xmc_vadc.c **** 
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1494              	 .loc 2 495 0
 1495 0008 7B68     	 ldr r3,[r7,#4]
 1496 000a D3F8C030 	 ldr r3,[r3,#192]
 1497 000e FB60     	 str r3,[r7,#12]
 496:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1498              	 .loc 2 496 0
 1499 0010 FB68     	 ldr r3,[r7,#12]
 1500 0012 23F00303 	 bic r3,r3,#3
 1501 0016 FB60     	 str r3,[r7,#12]
 497:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1502              	 .loc 2 497 0
 1503 0018 7B68     	 ldr r3,[r7,#4]
 1504 001a FA68     	 ldr r2,[r7,#12]
 1505 001c C3F8C020 	 str r2,[r3,#192]
 498:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1506              	 .loc 2 498 0
 1507 0020 1437     	 adds r7,r7,#20
 1508              	.LCFI131:
 1509              	 .cfi_def_cfa_offset 4
 1510 0022 BD46     	 mov sp,r7
 1511              	.LCFI132:
 1512              	 .cfi_def_cfa_register 13
 1513              	 
 1514 0024 5DF8047B 	 ldr r7,[sp],#4
 1515              	.LCFI133:
 1516              	 .cfi_restore 7
 1517              	 .cfi_def_cfa_offset 0
 1518 0028 7047     	 bx lr
 1519              	 .cfi_endproc
 1520              	.LFE228:
 1522 002a 00BF     	 .section .text.XMC_VADC_GROUP_CheckSlaveReadiness,"ax",%progbits
 1523              	 .align 2
 1524              	 .global XMC_VADC_GROUP_CheckSlaveReadiness
 1525              	 .thumb
 1526              	 .thumb_func
 1528              	XMC_VADC_GROUP_CheckSlaveReadiness:
 1529              	.LFB229:
 499:../Libraries/XMCLib/src/xmc_vadc.c **** 
 500:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable checking of readiness of slaves before a synchronous conversion request is issued 
 501:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 502:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1530              	 .loc 2 502 0
 1531              	 .cfi_startproc
 1532              	 
 1533              	 
 1534              	 
 1535 0000 80B4     	 push {r7}
 1536              	.LCFI134:
 1537              	 .cfi_def_cfa_offset 4
 1538              	 .cfi_offset 7,-4
 1539 0002 83B0     	 sub sp,sp,#12
 1540              	.LCFI135:
 1541              	 .cfi_def_cfa_offset 16
 1542 0004 00AF     	 add r7,sp,#0
 1543              	.LCFI136:
 1544              	 .cfi_def_cfa_register 7
 1545 0006 7860     	 str r0,[r7,#4]
 1546 0008 3960     	 str r1,[r7]
 503:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 504:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t slave_kernel;
 505:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t adc_ready;
 506:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t ready_pos;
 507:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 508:../Libraries/XMCLib/src/xmc_vadc.c ****  
 509:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
 510:../Libraries/XMCLib/src/xmc_vadc.c ****  
 511:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 512:../Libraries/XMCLib/src/xmc_vadc.c ****  
 513:../Libraries/XMCLib/src/xmc_vadc.c ****   slave_kernel  =  slave_group;
 514:../Libraries/XMCLib/src/xmc_vadc.c **** 
 515:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == slave_kernel)
 516:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 517:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = 1U;
 518:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 519:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 520:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 521:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = slave_kernel;
 522:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 523:../Libraries/XMCLib/src/xmc_vadc.c **** 
 524:../Libraries/XMCLib/src/xmc_vadc.c ****   if (1U == adc_ready)
 525:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 526:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR1_Pos;
 527:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 528:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (2U == adc_ready)
 529:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 530:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR2_Pos;
 531:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 532:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 533:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 534:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR3_Pos;
 535:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 536:../Libraries/XMCLib/src/xmc_vadc.c **** 
 537:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (uint32_t)((uint32_t)1 << ready_pos);
 538:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 539:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= ((uint32_t)VADC_G_SYNCTR_EVALR1_Msk);
 1547              	 .loc 2 539 0
 1548 000a 7B68     	 ldr r3,[r7,#4]
 1549 000c D3F8C030 	 ldr r3,[r3,#192]
 1550 0010 43F01002 	 orr r2,r3,#16
 1551 0014 7B68     	 ldr r3,[r7,#4]
 1552 0016 C3F8C020 	 str r2,[r3,#192]
 540:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 541:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1553              	 .loc 2 541 0
 1554 001a 0C37     	 adds r7,r7,#12
 1555              	.LCFI137:
 1556              	 .cfi_def_cfa_offset 4
 1557 001c BD46     	 mov sp,r7
 1558              	.LCFI138:
 1559              	 .cfi_def_cfa_register 13
 1560              	 
 1561 001e 5DF8047B 	 ldr r7,[sp],#4
 1562              	.LCFI139:
 1563              	 .cfi_restore 7
 1564              	 .cfi_def_cfa_offset 0
 1565 0022 7047     	 bx lr
 1566              	 .cfi_endproc
 1567              	.LFE229:
 1569              	 .section .text.XMC_VADC_GROUP_IgnoreSlaveReadiness,"ax",%progbits
 1570              	 .align 2
 1571              	 .global XMC_VADC_GROUP_IgnoreSlaveReadiness
 1572              	 .thumb
 1573              	 .thumb_func
 1575              	XMC_VADC_GROUP_IgnoreSlaveReadiness:
 1576              	.LFB230:
 542:../Libraries/XMCLib/src/xmc_vadc.c **** 
 543:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable checking of readiness of slaves during synchronous conversions */
 544:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 545:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1577              	 .loc 2 545 0
 1578              	 .cfi_startproc
 1579              	 
 1580              	 
 1581              	 
 1582 0000 80B4     	 push {r7}
 1583              	.LCFI140:
 1584              	 .cfi_def_cfa_offset 4
 1585              	 .cfi_offset 7,-4
 1586 0002 83B0     	 sub sp,sp,#12
 1587              	.LCFI141:
 1588              	 .cfi_def_cfa_offset 16
 1589 0004 00AF     	 add r7,sp,#0
 1590              	.LCFI142:
 1591              	 .cfi_def_cfa_register 7
 1592 0006 7860     	 str r0,[r7,#4]
 1593 0008 3960     	 str r1,[r7]
 546:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 547:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t slave_kernel;
 548:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t adc_ready;
 549:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t ready_pos;
 550:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 551:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
 552:../Libraries/XMCLib/src/xmc_vadc.c **** 
 553:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 554:../Libraries/XMCLib/src/xmc_vadc.c ****   slave_kernel = slave_group;
 555:../Libraries/XMCLib/src/xmc_vadc.c **** 
 556:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == slave_kernel)
 557:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 558:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = 1U;
 559:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 560:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 561:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 562:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = slave_kernel;
 563:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 564:../Libraries/XMCLib/src/xmc_vadc.c **** 
 565:../Libraries/XMCLib/src/xmc_vadc.c ****   if (1U == adc_ready)
 566:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 567:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR1_Pos;
 568:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 569:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (2U == adc_ready)
 570:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 571:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR2_Pos;
 572:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 573:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 574:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 575:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR3_Pos;
 576:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 577:../Libraries/XMCLib/src/xmc_vadc.c **** 
 578:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR &= ~((uint32_t)((uint32_t)1 << ready_pos));
 579:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 580:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR &= ~((uint32_t)VADC_G_SYNCTR_EVALR1_Msk);
 1594              	 .loc 2 580 0
 1595 000a 7B68     	 ldr r3,[r7,#4]
 1596 000c D3F8C030 	 ldr r3,[r3,#192]
 1597 0010 23F01002 	 bic r2,r3,#16
 1598 0014 7B68     	 ldr r3,[r7,#4]
 1599 0016 C3F8C020 	 str r2,[r3,#192]
 581:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 582:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1600              	 .loc 2 582 0
 1601 001a 0C37     	 adds r7,r7,#12
 1602              	.LCFI143:
 1603              	 .cfi_def_cfa_offset 4
 1604 001c BD46     	 mov sp,r7
 1605              	.LCFI144:
 1606              	 .cfi_def_cfa_register 13
 1607              	 
 1608 001e 5DF8047B 	 ldr r7,[sp],#4
 1609              	.LCFI145:
 1610              	 .cfi_restore 7
 1611              	 .cfi_def_cfa_offset 0
 1612 0022 7047     	 bx lr
 1613              	 .cfi_endproc
 1614              	.LFE230:
 1616              	 .section .text.XMC_VADC_GROUP_EnableChannelSyncRequest,"ax",%progbits
 1617              	 .align 2
 1618              	 .global XMC_VADC_GROUP_EnableChannelSyncRequest
 1619              	 .thumb
 1620              	 .thumb_func
 1622              	XMC_VADC_GROUP_EnableChannelSyncRequest:
 1623              	.LFB231:
 583:../Libraries/XMCLib/src/xmc_vadc.c **** 
 584:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the synchronous conversion feature - Applicable only to kernel configured as maste
 585:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
 586:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1624              	 .loc 2 586 0
 1625              	 .cfi_startproc
 1626              	 
 1627              	 
 1628              	 
 1629 0000 80B4     	 push {r7}
 1630              	.LCFI146:
 1631              	 .cfi_def_cfa_offset 4
 1632              	 .cfi_offset 7,-4
 1633 0002 85B0     	 sub sp,sp,#20
 1634              	.LCFI147:
 1635              	 .cfi_def_cfa_offset 24
 1636 0004 00AF     	 add r7,sp,#0
 1637              	.LCFI148:
 1638              	 .cfi_def_cfa_register 7
 1639 0006 7860     	 str r0,[r7,#4]
 1640 0008 3960     	 str r1,[r7]
 587:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 588:../Libraries/XMCLib/src/xmc_vadc.c **** 
 589:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
 590:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Channel Number",
 591:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 592:../Libraries/XMCLib/src/xmc_vadc.c **** 
 593:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1641              	 .loc 2 593 0
 1642 000a 7B68     	 ldr r3,[r7,#4]
 1643 000c D3F8C030 	 ldr r3,[r3,#192]
 1644 0010 FB60     	 str r3,[r7,#12]
 594:../Libraries/XMCLib/src/xmc_vadc.c **** 
 595:../Libraries/XMCLib/src/xmc_vadc.c ****   if (!(synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk))
 1645              	 .loc 2 595 0
 1646 0012 FB68     	 ldr r3,[r7,#12]
 1647 0014 03F00303 	 and r3,r3,#3
 1648 0018 002B     	 cmp r3,#0
 1649 001a 0BD1     	 bne .L50
 596:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 597:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] |= (uint32_t)((uint32_t)1 << VADC_G_CHCTR_SYNC_Pos);
 1650              	 .loc 2 597 0
 1651 001c 7B68     	 ldr r3,[r7,#4]
 1652 001e 3A68     	 ldr r2,[r7]
 1653 0020 8032     	 adds r2,r2,#128
 1654 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1655 0026 43F48061 	 orr r1,r3,#1024
 1656 002a 7B68     	 ldr r3,[r7,#4]
 1657 002c 3A68     	 ldr r2,[r7]
 1658 002e 8032     	 adds r2,r2,#128
 1659 0030 43F82210 	 str r1,[r3,r2,lsl#2]
 1660              	.L50:
 598:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 599:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1661              	 .loc 2 599 0
 1662 0034 1437     	 adds r7,r7,#20
 1663              	.LCFI149:
 1664              	 .cfi_def_cfa_offset 4
 1665 0036 BD46     	 mov sp,r7
 1666              	.LCFI150:
 1667              	 .cfi_def_cfa_register 13
 1668              	 
 1669 0038 5DF8047B 	 ldr r7,[sp],#4
 1670              	.LCFI151:
 1671              	 .cfi_restore 7
 1672              	 .cfi_def_cfa_offset 0
 1673 003c 7047     	 bx lr
 1674              	 .cfi_endproc
 1675              	.LFE231:
 1677 003e 00BF     	 .section .text.XMC_VADC_GROUP_DisableChannelSyncRequest,"ax",%progbits
 1678              	 .align 2
 1679              	 .global XMC_VADC_GROUP_DisableChannelSyncRequest
 1680              	 .thumb
 1681              	 .thumb_func
 1683              	XMC_VADC_GROUP_DisableChannelSyncRequest:
 1684              	.LFB232:
 600:../Libraries/XMCLib/src/xmc_vadc.c **** 
 601:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable synchronous conversion feature */
 602:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
 603:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1685              	 .loc 2 603 0
 1686              	 .cfi_startproc
 1687              	 
 1688              	 
 1689              	 
 1690 0000 80B4     	 push {r7}
 1691              	.LCFI152:
 1692              	 .cfi_def_cfa_offset 4
 1693              	 .cfi_offset 7,-4
 1694 0002 85B0     	 sub sp,sp,#20
 1695              	.LCFI153:
 1696              	 .cfi_def_cfa_offset 24
 1697 0004 00AF     	 add r7,sp,#0
 1698              	.LCFI154:
 1699              	 .cfi_def_cfa_register 7
 1700 0006 7860     	 str r0,[r7,#4]
 1701 0008 3960     	 str r1,[r7]
 604:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    synctr;
 605:../Libraries/XMCLib/src/xmc_vadc.c **** 
 606:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
 607:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Channel Number",
 608:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 609:../Libraries/XMCLib/src/xmc_vadc.c **** 
 610:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1702              	 .loc 2 610 0
 1703 000a 7B68     	 ldr r3,[r7,#4]
 1704 000c D3F8C030 	 ldr r3,[r3,#192]
 1705 0010 FB60     	 str r3,[r7,#12]
 611:../Libraries/XMCLib/src/xmc_vadc.c **** 
 612:../Libraries/XMCLib/src/xmc_vadc.c ****   if (synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk)
 1706              	 .loc 2 612 0
 1707 0012 FB68     	 ldr r3,[r7,#12]
 1708 0014 03F00303 	 and r3,r3,#3
 1709 0018 002B     	 cmp r3,#0
 1710 001a 0BD0     	 beq .L52
 613:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 614:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_SYNC_Msk);
 1711              	 .loc 2 614 0
 1712 001c 7B68     	 ldr r3,[r7,#4]
 1713 001e 3A68     	 ldr r2,[r7]
 1714 0020 8032     	 adds r2,r2,#128
 1715 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1716 0026 23F48061 	 bic r1,r3,#1024
 1717 002a 7B68     	 ldr r3,[r7,#4]
 1718 002c 3A68     	 ldr r2,[r7]
 1719 002e 8032     	 adds r2,r2,#128
 1720 0030 43F82210 	 str r1,[r3,r2,lsl#2]
 1721              	.L52:
 615:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 616:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1722              	 .loc 2 616 0
 1723 0034 1437     	 adds r7,r7,#20
 1724              	.LCFI155:
 1725              	 .cfi_def_cfa_offset 4
 1726 0036 BD46     	 mov sp,r7
 1727              	.LCFI156:
 1728              	 .cfi_def_cfa_register 13
 1729              	 
 1730 0038 5DF8047B 	 ldr r7,[sp],#4
 1731              	.LCFI157:
 1732              	 .cfi_restore 7
 1733              	 .cfi_def_cfa_offset 0
 1734 003c 7047     	 bx lr
 1735              	 .cfi_endproc
 1736              	.LFE232:
 1738 003e 00BF     	 .section .text.XMC_VADC_GROUP_IsConverterBusy,"ax",%progbits
 1739              	 .align 2
 1740              	 .global XMC_VADC_GROUP_IsConverterBusy
 1741              	 .thumb
 1742              	 .thumb_func
 1744              	XMC_VADC_GROUP_IsConverterBusy:
 1745              	.LFB233:
 617:../Libraries/XMCLib/src/xmc_vadc.c **** 
 618:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the converter state - Idle vs Busy */ 
 619:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr)
 620:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1746              	 .loc 2 620 0
 1747              	 .cfi_startproc
 1748              	 
 1749              	 
 1750              	 
 1751 0000 80B4     	 push {r7}
 1752              	.LCFI158:
 1753              	 .cfi_def_cfa_offset 4
 1754              	 .cfi_offset 7,-4
 1755 0002 85B0     	 sub sp,sp,#20
 1756              	.LCFI159:
 1757              	 .cfi_def_cfa_offset 24
 1758 0004 00AF     	 add r7,sp,#0
 1759              	.LCFI160:
 1760              	 .cfi_def_cfa_register 7
 1761 0006 7860     	 str r0,[r7,#4]
 621:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      arbcfg;
 622:../Libraries/XMCLib/src/xmc_vadc.c **** 
 623:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsConverterBusy:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
 624:../Libraries/XMCLib/src/xmc_vadc.c **** 
 625:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg  = group_ptr->ARBCFG;
 1762              	 .loc 2 625 0
 1763 0008 7B68     	 ldr r3,[r7,#4]
 1764 000a D3F88030 	 ldr r3,[r3,#128]
 1765 000e FB60     	 str r3,[r7,#12]
 626:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= (uint32_t)VADC_G_ARBCFG_BUSY_Msk;
 1766              	 .loc 2 626 0
 1767 0010 FB68     	 ldr r3,[r7,#12]
 1768 0012 03F08043 	 and r3,r3,#1073741824
 1769 0016 FB60     	 str r3,[r7,#12]
 627:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = arbcfg >> VADC_G_ARBCFG_BUSY_Pos;
 1770              	 .loc 2 627 0
 1771 0018 FB68     	 ldr r3,[r7,#12]
 1772 001a 9B0F     	 lsrs r3,r3,#30
 1773 001c FB60     	 str r3,[r7,#12]
 628:../Libraries/XMCLib/src/xmc_vadc.c **** 
 629:../Libraries/XMCLib/src/xmc_vadc.c ****   return( (XMC_VADC_GROUP_STATE_t)arbcfg);
 1774              	 .loc 2 629 0
 1775 001e FB68     	 ldr r3,[r7,#12]
 1776 0020 DBB2     	 uxtb r3,r3
 630:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1777              	 .loc 2 630 0
 1778 0022 1846     	 mov r0,r3
 1779 0024 1437     	 adds r7,r7,#20
 1780              	.LCFI161:
 1781              	 .cfi_def_cfa_offset 4
 1782 0026 BD46     	 mov sp,r7
 1783              	.LCFI162:
 1784              	 .cfi_def_cfa_register 13
 1785              	 
 1786 0028 5DF8047B 	 ldr r7,[sp],#4
 1787              	.LCFI163:
 1788              	 .cfi_restore 7
 1789              	 .cfi_def_cfa_offset 0
 1790 002c 7047     	 bx lr
 1791              	 .cfi_endproc
 1792              	.LFE233:
 1794 002e 00BF     	 .section .text.XMC_VADC_GROUP_SetBoundaries,"ax",%progbits
 1795              	 .align 2
 1796              	 .global XMC_VADC_GROUP_SetBoundaries
 1797              	 .thumb
 1798              	 .thumb_func
 1800              	XMC_VADC_GROUP_SetBoundaries:
 1801              	.LFB234:
 631:../Libraries/XMCLib/src/xmc_vadc.c **** 
 632:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boundaries for conversion results */
 633:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, const uint32_t boundary0, cons
 634:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1802              	 .loc 2 634 0
 1803              	 .cfi_startproc
 1804              	 
 1805              	 
 1806              	 
 1807 0000 80B4     	 push {r7}
 1808              	.LCFI164:
 1809              	 .cfi_def_cfa_offset 4
 1810              	 .cfi_offset 7,-4
 1811 0002 87B0     	 sub sp,sp,#28
 1812              	.LCFI165:
 1813              	 .cfi_def_cfa_offset 32
 1814 0004 00AF     	 add r7,sp,#0
 1815              	.LCFI166:
 1816              	 .cfi_def_cfa_register 7
 1817 0006 F860     	 str r0,[r7,#12]
 1818 0008 B960     	 str r1,[r7,#8]
 1819 000a 7A60     	 str r2,[r7,#4]
 635:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 636:../Libraries/XMCLib/src/xmc_vadc.c **** 
 637:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaries:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 638:../Libraries/XMCLib/src/xmc_vadc.c **** 
 639:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 640:../Libraries/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 1820              	 .loc 2 640 0
 1821 000c FB68     	 ldr r3,[r7,#12]
 1822 000e D3F8B830 	 ldr r3,[r3,#184]
 1823 0012 7B61     	 str r3,[r7,#20]
 641:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 1824              	 .loc 2 641 0
 1825 0014 7B69     	 ldr r3,[r7,#20]
 1826 0016 23F47F63 	 bic r3,r3,#4080
 1827 001a 23F00F03 	 bic r3,r3,#15
 1828 001e 7B61     	 str r3,[r7,#20]
 642:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 1829              	 .loc 2 642 0
 1830 0020 7B69     	 ldr r3,[r7,#20]
 1831 0022 23F07F63 	 bic r3,r3,#267386880
 1832 0026 23F47023 	 bic r3,r3,#983040
 1833 002a 7B61     	 str r3,[r7,#20]
 643:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary0 << VADC_G_BOUND_BOUNDARY0_Pos);
 1834              	 .loc 2 643 0
 1835 002c 7A69     	 ldr r2,[r7,#20]
 1836 002e BB68     	 ldr r3,[r7,#8]
 1837 0030 1343     	 orrs r3,r3,r2
 1838 0032 7B61     	 str r3,[r7,#20]
 644:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary1 << VADC_G_BOUND_BOUNDARY1_Pos);
 1839              	 .loc 2 644 0
 1840 0034 7B68     	 ldr r3,[r7,#4]
 1841 0036 1B04     	 lsls r3,r3,#16
 1842 0038 7A69     	 ldr r2,[r7,#20]
 1843 003a 1343     	 orrs r3,r3,r2
 1844 003c 7B61     	 str r3,[r7,#20]
 645:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 1845              	 .loc 2 645 0
 1846 003e FB68     	 ldr r3,[r7,#12]
 1847 0040 7A69     	 ldr r2,[r7,#20]
 1848 0042 C3F8B820 	 str r2,[r3,#184]
 646:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1849              	 .loc 2 646 0
 1850 0046 1C37     	 adds r7,r7,#28
 1851              	.LCFI167:
 1852              	 .cfi_def_cfa_offset 4
 1853 0048 BD46     	 mov sp,r7
 1854              	.LCFI168:
 1855              	 .cfi_def_cfa_register 13
 1856              	 
 1857 004a 5DF8047B 	 ldr r7,[sp],#4
 1858              	.LCFI169:
 1859              	 .cfi_restore 7
 1860              	 .cfi_def_cfa_offset 0
 1861 004e 7047     	 bx lr
 1862              	 .cfi_endproc
 1863              	.LFE234:
 1865              	 .section .text.XMC_VADC_GROUP_TriggerServiceRequest,"ax",%progbits
 1866              	 .align 2
 1867              	 .global XMC_VADC_GROUP_TriggerServiceRequest
 1868              	 .thumb
 1869              	 .thumb_func
 1871              	XMC_VADC_GROUP_TriggerServiceRequest:
 1872              	.LFB235:
 647:../Libraries/XMCLib/src/xmc_vadc.c **** 
 648:../Libraries/XMCLib/src/xmc_vadc.c **** /* Manually assert service request (Interrupt) to NVIC */
 649:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr,
 650:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const uint32_t sr_num,
 651:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_IRQ_t type)
 652:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1873              	 .loc 2 652 0
 1874              	 .cfi_startproc
 1875              	 
 1876              	 
 1877              	 
 1878 0000 80B4     	 push {r7}
 1879              	.LCFI170:
 1880              	 .cfi_def_cfa_offset 4
 1881              	 .cfi_offset 7,-4
 1882 0002 87B0     	 sub sp,sp,#28
 1883              	.LCFI171:
 1884              	 .cfi_def_cfa_offset 32
 1885 0004 00AF     	 add r7,sp,#0
 1886              	.LCFI172:
 1887              	 .cfi_def_cfa_register 7
 1888 0006 F860     	 str r0,[r7,#12]
 1889 0008 B960     	 str r1,[r7,#8]
 1890 000a 1346     	 mov r3,r2
 1891 000c FB71     	 strb r3,[r7,#7]
 653:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sract;
 654:../Libraries/XMCLib/src/xmc_vadc.c **** 
 655:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 656:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR number", (sr_num <= XMC_VADC_SR_SHARED_
 657:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR type", ((type)<= XMC_VADC_GROUP_IRQ_SHA
 658:../Libraries/XMCLib/src/xmc_vadc.c **** 
 659:../Libraries/XMCLib/src/xmc_vadc.c ****   sract = group_ptr->SRACT;
 1892              	 .loc 2 659 0
 1893 000e FB68     	 ldr r3,[r7,#12]
 1894 0010 D3F8C831 	 ldr r3,[r3,#456]
 1895 0014 7B61     	 str r3,[r7,#20]
 660:../Libraries/XMCLib/src/xmc_vadc.c **** 
 661:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_IRQ_KERNEL == type)
 1896              	 .loc 2 661 0
 1897 0016 FB79     	 ldrb r3,[r7,#7]
 1898 0018 002B     	 cmp r3,#0
 1899 001a 07D1     	 bne .L58
 662:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 663:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << sr_num);
 1900              	 .loc 2 663 0
 1901 001c BB68     	 ldr r3,[r7,#8]
 1902 001e 0122     	 movs r2,#1
 1903 0020 02FA03F3 	 lsl r3,r2,r3
 1904 0024 7A69     	 ldr r2,[r7,#20]
 1905 0026 1343     	 orrs r3,r3,r2
 1906 0028 7B61     	 str r3,[r7,#20]
 1907 002a 07E0     	 b .L59
 1908              	.L58:
 664:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 665:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 666:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 667:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << (sr_num + (uint32_t)8));
 1909              	 .loc 2 667 0
 1910 002c BB68     	 ldr r3,[r7,#8]
 1911 002e 0833     	 adds r3,r3,#8
 1912 0030 1A46     	 mov r2,r3
 1913 0032 0123     	 movs r3,#1
 1914 0034 9340     	 lsls r3,r3,r2
 1915 0036 7A69     	 ldr r2,[r7,#20]
 1916 0038 1343     	 orrs r3,r3,r2
 1917 003a 7B61     	 str r3,[r7,#20]
 1918              	.L59:
 668:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 669:../Libraries/XMCLib/src/xmc_vadc.c **** 
 670:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SRACT = sract;
 1919              	 .loc 2 670 0
 1920 003c FB68     	 ldr r3,[r7,#12]
 1921 003e 7A69     	 ldr r2,[r7,#20]
 1922 0040 C3F8C821 	 str r2,[r3,#456]
 671:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1923              	 .loc 2 671 0
 1924 0044 1C37     	 adds r7,r7,#28
 1925              	.LCFI173:
 1926              	 .cfi_def_cfa_offset 4
 1927 0046 BD46     	 mov sp,r7
 1928              	.LCFI174:
 1929              	 .cfi_def_cfa_register 13
 1930              	 
 1931 0048 5DF8047B 	 ldr r7,[sp],#4
 1932              	.LCFI175:
 1933              	 .cfi_restore 7
 1934              	 .cfi_def_cfa_offset 0
 1935 004c 7047     	 bx lr
 1936              	 .cfi_endproc
 1937              	.LFE235:
 1939 004e 00BF     	 .section .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode,"ax",%progbits
 1940              	 .align 2
 1941              	 .global XMC_VADC_GROUP_SetBoundaryEventInterruptNode
 1942              	 .thumb
 1943              	 .thumb_func
 1945              	XMC_VADC_GROUP_SetBoundaryEventInterruptNode:
 1946              	.LFB236:
 672:../Libraries/XMCLib/src/xmc_vadc.c **** 
 673:../Libraries/XMCLib/src/xmc_vadc.c **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
 674:../Libraries/XMCLib/src/xmc_vadc.c **** 
 675:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the SR line for the Boundary flag node pointer*/
 676:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
 677:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                   const uint8_t boundary_flag_num,
 678:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                   const XMC_VADC_BOUNDARY_NODE_t sr
 679:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1947              	 .loc 2 679 0
 1948              	 .cfi_startproc
 1949              	 
 1950              	 
 1951              	 
 1952 0000 80B4     	 push {r7}
 1953              	.LCFI176:
 1954              	 .cfi_def_cfa_offset 4
 1955              	 .cfi_offset 7,-4
 1956 0002 85B0     	 sub sp,sp,#20
 1957              	.LCFI177:
 1958              	 .cfi_def_cfa_offset 24
 1959 0004 00AF     	 add r7,sp,#0
 1960              	.LCFI178:
 1961              	 .cfi_def_cfa_register 7
 1962 0006 7860     	 str r0,[r7,#4]
 1963 0008 0B46     	 mov r3,r1
 1964 000a FB70     	 strb r3,[r7,#3]
 1965 000c 1346     	 mov r3,r2
 1966 000e BB70     	 strb r3,[r7,#2]
 680:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t flag_pos;
 681:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaryEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GRO
 682:../Libraries/XMCLib/src/xmc_vadc.c **** 
 683:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the GxBFLNP */
 684:../Libraries/XMCLib/src/xmc_vadc.c ****   flag_pos = (uint32_t)boundary_flag_num << (uint32_t)2;
 1967              	 .loc 2 684 0
 1968 0010 FB78     	 ldrb r3,[r7,#3]
 1969 0012 9B00     	 lsls r3,r3,#2
 1970 0014 FB60     	 str r3,[r7,#12]
 685:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP &= ~((uint32_t)VADC_G_BFLNP_BFL0NP_Msk << flag_pos);
 1971              	 .loc 2 685 0
 1972 0016 7B68     	 ldr r3,[r7,#4]
 1973 0018 D3F8D420 	 ldr r2,[r3,#212]
 1974 001c FB68     	 ldr r3,[r7,#12]
 1975 001e 0F21     	 movs r1,#15
 1976 0020 01FA03F3 	 lsl r3,r1,r3
 1977 0024 DB43     	 mvns r3,r3
 1978 0026 1A40     	 ands r2,r2,r3
 1979 0028 7B68     	 ldr r3,[r7,#4]
 1980 002a C3F8D420 	 str r2,[r3,#212]
 686:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 1981              	 .loc 2 686 0
 1982 002e 7B68     	 ldr r3,[r7,#4]
 1983 0030 D3F8D420 	 ldr r2,[r3,#212]
 1984 0034 B978     	 ldrb r1,[r7,#2]
 1985 0036 FB68     	 ldr r3,[r7,#12]
 1986 0038 01FA03F3 	 lsl r3,r1,r3
 1987 003c 1A43     	 orrs r2,r2,r3
 1988 003e 7B68     	 ldr r3,[r7,#4]
 1989 0040 C3F8D420 	 str r2,[r3,#212]
 687:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1990              	 .loc 2 687 0
 1991 0044 1437     	 adds r7,r7,#20
 1992              	.LCFI179:
 1993              	 .cfi_def_cfa_offset 4
 1994 0046 BD46     	 mov sp,r7
 1995              	.LCFI180:
 1996              	 .cfi_def_cfa_register 13
 1997              	 
 1998 0048 5DF8047B 	 ldr r7,[sp],#4
 1999              	.LCFI181:
 2000              	 .cfi_restore 7
 2001              	 .cfi_def_cfa_offset 0
 2002 004c 7047     	 bx lr
 2003              	 .cfi_endproc
 2004              	.LFE236:
 2006 004e 00BF     	 .section .text.XMC_VADC_GROUP_ScanInit,"ax",%progbits
 2007              	 .align 2
 2008              	 .global XMC_VADC_GROUP_ScanInit
 2009              	 .thumb
 2010              	 .thumb_func
 2012              	XMC_VADC_GROUP_ScanInit:
 2013              	.LFB237:
 688:../Libraries/XMCLib/src/xmc_vadc.c **** 
 689:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_BOUNDARY_FLAG_SELECT */
 690:../Libraries/XMCLib/src/xmc_vadc.c **** 
 691:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_GROUP_AVAILABLE */
 692:../Libraries/XMCLib/src/xmc_vadc.c **** 
 693:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 694:../Libraries/XMCLib/src/xmc_vadc.c **** 
 695:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Initialize the Sample and hold features*/
 696:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONFI
 697:../Libraries/XMCLib/src/xmc_vadc.c **** {
 698:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(voi
 699:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong Index number",(config == (XMC_VADC_GLOBAL_SHS_CONFIG_t
 700:../Libraries/XMCLib/src/xmc_vadc.c **** 
 701:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Initialize the SHS Configuration register*/
 702:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->SHSCFG = (uint32_t)((uint32_t)config->shscfg | (uint32_t)SHS_SHSCFG_SCWC_Msk);
 703:../Libraries/XMCLib/src/xmc_vadc.c **** 
 704:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Select the Calibration order*/
 705:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALORD_Msk);
 706:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR |=  (uint32_t) ((uint32_t)config->calibration_order << SHS_CALCTR_CALORD_Pos);
 707:../Libraries/XMCLib/src/xmc_vadc.c **** }
 708:../Libraries/XMCLib/src/xmc_vadc.c **** 
 709:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the accelerated mode of conversion */
 710:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROUP
 711:../Libraries/XMCLib/src/xmc_vadc.c **** {
 712:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong SHS Pointer",
 713:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 714:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC_
 715:../Libraries/XMCLib/src/xmc_vadc.c **** 
 716:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 717:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 718:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 719:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)SHS_TIMCFG0_AT_Msk;
 720:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 721:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 722:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 723:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)SHS_TIMCFG1_AT_Msk;
 724:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 725:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 726:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 727:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 728:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 729:../Libraries/XMCLib/src/xmc_vadc.c **** }
 730:../Libraries/XMCLib/src/xmc_vadc.c **** 
 731:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable the accelerated mode of conversion */
 732:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROU
 733:../Libraries/XMCLib/src/xmc_vadc.c **** {
 734:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong SHS Pointer",
 735:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 736:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC
 737:../Libraries/XMCLib/src/xmc_vadc.c **** 
 738:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 739:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 740:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 741:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~(uint32_t)SHS_TIMCFG0_AT_Msk;
 742:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 743:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 744:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 745:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~(uint32_t)SHS_TIMCFG1_AT_Msk;
 746:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 747:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 748:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 749:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 750:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 751:../Libraries/XMCLib/src/xmc_vadc.c **** }
 752:../Libraries/XMCLib/src/xmc_vadc.c **** 
 753:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the Short sample time of the Sample and hold module*/
 754:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 755:../Libraries/XMCLib/src/xmc_vadc.c ****                                             XMC_VADC_GROUP_INDEX_t group_num,
 756:../Libraries/XMCLib/src/xmc_vadc.c ****                                             uint8_t sst_value)
 757:../Libraries/XMCLib/src/xmc_vadc.c **** {
 758:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SHS Pointer",
 759:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 760:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong Index number",(group_num <= XMC_VADC_GRO
 761:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SST value",(sst_value < 64U))
 762:../Libraries/XMCLib/src/xmc_vadc.c **** 
 763:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the short sample time for the Accelerated mode of operation*/
 764:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 765:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 766:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~((uint32_t)SHS_TIMCFG0_SST_Msk);
 767:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG0_SST_Pos );
 768:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 769:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 770:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 771:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~((uint32_t)SHS_TIMCFG1_SST_Msk);
 772:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG1_SST_Pos );
 773:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 774:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 775:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 776:../Libraries/XMCLib/src/xmc_vadc.c ****   /* for MISRA*/
 777:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 778:../Libraries/XMCLib/src/xmc_vadc.c **** }
 779:../Libraries/XMCLib/src/xmc_vadc.c **** 
 780:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the gain factor of the Sample and hold module*/
 781:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 782:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t gain_value,
 783:../Libraries/XMCLib/src/xmc_vadc.c ****                                        XMC_VADC_GROUP_INDEX_t group_num,
 784:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t ch_num)
 785:../Libraries/XMCLib/src/xmc_vadc.c **** {
 786:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_mask;
 787:../Libraries/XMCLib/src/xmc_vadc.c **** 
 788:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SH
 789:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong Index number",(group_num <= XMC_VADC_GROUP_IN
 790:../Libraries/XMCLib/src/xmc_vadc.c **** 
 791:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Calculate location of channel bit-field*/
 792:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_mask = ((uint32_t)ch_num << (uint32_t)2);
 793:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 794:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 795:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 &= ~((uint32_t)SHS_GNCTR00_GAIN0_Msk << ch_mask) ;
 796:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 |=  ((uint32_t)gain_value << ch_mask);
 797:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 798:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 799:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 800:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 &= ~((uint32_t)SHS_GNCTR10_GAIN0_Msk << ch_mask);
 801:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 802:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 803:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 804:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 805:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 806:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 807:../Libraries/XMCLib/src/xmc_vadc.c **** }
 808:../Libraries/XMCLib/src/xmc_vadc.c **** 
 809:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 810:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 811:../Libraries/XMCLib/src/xmc_vadc.c ****                                                          XMC_VADC_GROUP_INDEX_t group_num)
 812:../Libraries/XMCLib/src/xmc_vadc.c **** {
 813:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong SHS Pointer",
 814:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 815:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong group selected",
 816:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 817:../Libraries/XMCLib/src/xmc_vadc.c **** 
 818:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable gain and offset calibration*/
 819:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 820:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 821:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 &= ~((uint32_t)SHS_CALOC0_DISCAL_Msk);
 822:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 823:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 824:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 825:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 &= ~((uint32_t)SHS_CALOC1_DISCAL_Msk);
 826:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 827:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 828:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 829:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 830:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 831:../Libraries/XMCLib/src/xmc_vadc.c **** }
 832:../Libraries/XMCLib/src/xmc_vadc.c **** 
 833:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 834:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 835:../Libraries/XMCLib/src/xmc_vadc.c ****                                                           XMC_VADC_GROUP_INDEX_t group_num)
 836:../Libraries/XMCLib/src/xmc_vadc.c **** {
 837:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong SHS Pointer",
 838:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 839:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong group selected",
 840:../Libraries/XMCLib/src/xmc_vadc.c ****             (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 841:../Libraries/XMCLib/src/xmc_vadc.c **** 
 842:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 843:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 844:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |= (uint32_t)SHS_CALOC0_DISCAL_Msk;
 845:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 846:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 847:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 848:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |= (uint32_t)SHS_CALOC1_DISCAL_Msk;
 849:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 850:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 851:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 852:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 853:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 854:../Libraries/XMCLib/src/xmc_vadc.c **** }
 855:../Libraries/XMCLib/src/xmc_vadc.c **** 
 856:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to get the offset calibration value of the Sample and hold module*/
 857:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 858:../Libraries/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
 859:../Libraries/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level)
 860:../Libraries/XMCLib/src/xmc_vadc.c **** {
 861:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t calibration_value;
 862:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong SHS Pointer",
 863:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 864:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong Group number selected",
 865:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 866:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong gain level selected",
 867:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
 868:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
 869:../Libraries/XMCLib/src/xmc_vadc.c **** 
 870:../Libraries/XMCLib/src/xmc_vadc.c ****   calibration_value = 0U;
 871:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 872:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 873:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC0 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC0_CALOFFVAL0
 874:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 875:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 876:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 877:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC1 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC1_CALOFFVAL0
 878:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 879:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 880:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 881:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 882:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 883:../Libraries/XMCLib/src/xmc_vadc.c ****   return ((uint8_t)calibration_value);
 884:../Libraries/XMCLib/src/xmc_vadc.c **** }
 885:../Libraries/XMCLib/src/xmc_vadc.c **** 
 886:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the offset calibration value of the Sample and hold module*/
 887:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 888:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
 889:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
 890:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    uint8_t offset_calibration_value)
 891:../Libraries/XMCLib/src/xmc_vadc.c **** {
 892:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong SHS Pointer",
 893:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 894:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong Group number selected",
 895:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 896:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong gain level selected",
 897:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
 898:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
 899:../Libraries/XMCLib/src/xmc_vadc.c **** 
 900:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 901:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 902:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 = (shs_ptr->CALOC0  & ~((uint32_t)SHS_CALOC0_CALOFFVAL0_Msk << (uint32_t)gain_l
 903:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC0_OFFWC_Msk;
 904:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
 905:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 906:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 907:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 908:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 = (shs_ptr->CALOC1 & ~((uint32_t)SHS_CALOC1_CALOFFVAL0_Msk << (uint32_t)gain_le
 909:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC1_OFFWC_Msk;
 910:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
 911:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 912:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 913:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 914:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 915:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 916:../Libraries/XMCLib/src/xmc_vadc.c **** }
 917:../Libraries/XMCLib/src/xmc_vadc.c **** 
 918:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the values of sigma delta loop of the Sample and hold module*/
 919:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 920:../Libraries/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_GROUP_INDEX_t group_num,
 921:../Libraries/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
 922:../Libraries/XMCLib/src/xmc_vadc.c ****                                            uint8_t ch_num)
 923:../Libraries/XMCLib/src/xmc_vadc.c **** {
 924:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong SHS Pointer",
 925:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 926:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Group number selected",
 927:../Libraries/XMCLib/src/xmc_vadc.c ****                (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 928:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Delta sigma loop selected",
 929:../Libraries/XMCLib/src/xmc_vadc.c ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
 930:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Channel Number",
 931:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 932:../Libraries/XMCLib/src/xmc_vadc.c **** 
 933:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP &= ~(((uint32_t)SHS_LOOP_LPCH0_Msk | (uint32_t)SHS_LOOP_LPSH0_Msk | (uint32_t)SHS_L
 934:../Libraries/XMCLib/src/xmc_vadc.c ****                      << (uint32_t)loop_select);
 935:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP |= ((uint32_t)ch_num | ((uint32_t)group_num << (uint32_t)SHS_LOOP_LPSH0_Pos)) << (u
 936:../Libraries/XMCLib/src/xmc_vadc.c **** 
 937:../Libraries/XMCLib/src/xmc_vadc.c **** }
 938:../Libraries/XMCLib/src/xmc_vadc.c **** 
 939:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_SHS_AVAILABLE */
 940:../Libraries/XMCLib/src/xmc_vadc.c **** 
 941:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)   
 942:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize the group scan hardware of a kernel */
 943:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
 944:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2014              	 .loc 2 944 0
 2015              	 .cfi_startproc
 2016              	 
 2017              	 
 2018 0000 80B5     	 push {r7,lr}
 2019              	.LCFI182:
 2020              	 .cfi_def_cfa_offset 8
 2021              	 .cfi_offset 7,-8
 2022              	 .cfi_offset 14,-4
 2023 0002 84B0     	 sub sp,sp,#16
 2024              	.LCFI183:
 2025              	 .cfi_def_cfa_offset 24
 2026 0004 00AF     	 add r7,sp,#0
 2027              	.LCFI184:
 2028              	 .cfi_def_cfa_register 7
 2029 0006 7860     	 str r0,[r7,#4]
 2030 0008 3960     	 str r1,[r7]
 945:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      reg;
 946:../Libraries/XMCLib/src/xmc_vadc.c **** 
 947:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
 948:../Libraries/XMCLib/src/xmc_vadc.c **** 
 949:../Libraries/XMCLib/src/xmc_vadc.c ****   /* All configurations have to be performed with the arbitration slot disabled */
 950:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2031              	 .loc 2 950 0
 2032 000a 7868     	 ldr r0,[r7,#4]
 2033 000c FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
 951:../Libraries/XMCLib/src/xmc_vadc.c ****   
 952:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Read in the existing contents of arbitration priority register */
 953:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 2034              	 .loc 2 953 0
 2035 0010 7B68     	 ldr r3,[r7,#4]
 2036 0012 D3F88430 	 ldr r3,[r3,#132]
 2037 0016 FB60     	 str r3,[r7,#12]
 954:../Libraries/XMCLib/src/xmc_vadc.c **** 
 955:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the priority of the request source */
 956:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(uint32_t)VADC_G_ARBPR_PRIO1_Msk;
 2038              	 .loc 2 956 0
 2039 0018 FB68     	 ldr r3,[r7,#12]
 2040 001a 23F03003 	 bic r3,r3,#48
 2041 001e FB60     	 str r3,[r7,#12]
 957:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO1_Pos);
 2042              	 .loc 2 957 0
 2043 0020 3B68     	 ldr r3,[r7]
 2044 0022 1B78     	 ldrb r3,[r3]
 2045 0024 C3F38103 	 ubfx r3,r3,#2,#2
 2046 0028 DBB2     	 uxtb r3,r3
 2047 002a 1B01     	 lsls r3,r3,#4
 2048 002c FA68     	 ldr r2,[r7,#12]
 2049 002e 1343     	 orrs r3,r3,r2
 2050 0030 FB60     	 str r3,[r7,#12]
 958:../Libraries/XMCLib/src/xmc_vadc.c ****   
 959:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the start mode */
 960:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (config->conv_start_mode))
 2051              	 .loc 2 960 0
 2052 0032 3B68     	 ldr r3,[r7]
 2053 0034 1B78     	 ldrb r3,[r3]
 2054 0036 03F00303 	 and r3,r3,#3
 2055 003a DBB2     	 uxtb r3,r3
 2056 003c 002B     	 cmp r3,#0
 2057 003e 03D0     	 beq .L62
 961:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 962:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM1_Msk);
 2058              	 .loc 2 962 0
 2059 0040 FB68     	 ldr r3,[r7,#12]
 2060 0042 43F08003 	 orr r3,r3,#128
 2061 0046 FB60     	 str r3,[r7,#12]
 2062              	.L62:
 963:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 964:../Libraries/XMCLib/src/xmc_vadc.c **** 
 965:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 2063              	 .loc 2 965 0
 2064 0048 7B68     	 ldr r3,[r7,#4]
 2065 004a FA68     	 ldr r2,[r7,#12]
 2066 004c C3F88420 	 str r2,[r3,#132]
 966:../Libraries/XMCLib/src/xmc_vadc.c **** 
 967:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL = (uint32_t)(config->asctrl |(VADC_G_ASCTRL_XTWC_Msk) |(VADC_G_ASCTRL_GTWC_Msk)
 2067              	 .loc 2 967 0
 2068 0050 3B68     	 ldr r3,[r7]
 2069 0052 5B68     	 ldr r3,[r3,#4]
 2070 0054 43F08023 	 orr r3,r3,#-2147450880
 2071 0058 43F40003 	 orr r3,r3,#8388608
 2072 005c 7A68     	 ldr r2,[r7,#4]
 2073 005e C2F82031 	 str r3,[r2,#288]
 968:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  (VADC_G_ASCTRL_TMWC_Msk));
 969:../Libraries/XMCLib/src/xmc_vadc.c **** 
 970:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR  = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 2074              	 .loc 2 970 0
 2075 0062 3B68     	 ldr r3,[r7]
 2076 0064 9B68     	 ldr r3,[r3,#8]
 2077 0066 43F00102 	 orr r2,r3,#1
 2078 006a 7B68     	 ldr r3,[r7,#4]
 2079 006c C3F82421 	 str r2,[r3,#292]
 971:../Libraries/XMCLib/src/xmc_vadc.c ****   
 972:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (config->conv_start_mode))
 2080              	 .loc 2 972 0
 2081 0070 3B68     	 ldr r3,[r7]
 2082 0072 1B78     	 ldrb r3,[r3]
 2083 0074 03F00303 	 and r3,r3,#3
 2084 0078 DBB2     	 uxtb r3,r3
 2085 007a 022B     	 cmp r3,#2
 2086 007c 07D1     	 bne .L63
 973:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 974:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_RPTDIS_Msk;
 2087              	 .loc 2 974 0
 2088 007e 7B68     	 ldr r3,[r7,#4]
 2089 0080 D3F82431 	 ldr r3,[r3,#292]
 2090 0084 43F48032 	 orr r2,r3,#65536
 2091 0088 7B68     	 ldr r3,[r7,#4]
 2092 008a C3F82421 	 str r2,[r3,#292]
 2093              	.L63:
 975:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 976:../Libraries/XMCLib/src/xmc_vadc.c ****   
 977:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot now */
 978:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanEnableArbitrationSlot(group_ptr);
 2094              	 .loc 2 978 0
 2095 008e 7868     	 ldr r0,[r7,#4]
 2096 0090 FFF7FEFF 	 bl XMC_VADC_GROUP_ScanEnableArbitrationSlot
 979:../Libraries/XMCLib/src/xmc_vadc.c ****   
 980:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2097              	 .loc 2 980 0
 2098 0094 1037     	 adds r7,r7,#16
 2099              	.LCFI185:
 2100              	 .cfi_def_cfa_offset 8
 2101 0096 BD46     	 mov sp,r7
 2102              	.LCFI186:
 2103              	 .cfi_def_cfa_register 13
 2104              	 
 2105 0098 80BD     	 pop {r7,pc}
 2106              	 .cfi_endproc
 2107              	.LFE237:
 2109 009a 00BF     	 .section .text.XMC_VADC_GROUP_ScanSelectTrigger,"ax",%progbits
 2110              	 .align 2
 2111              	 .global XMC_VADC_GROUP_ScanSelectTrigger
 2112              	 .thumb
 2113              	 .thumb_func
 2115              	XMC_VADC_GROUP_ScanSelectTrigger:
 2116              	.LFB238:
 981:../Libraries/XMCLib/src/xmc_vadc.c **** 
 982:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger input for Group Scan request source */
 983:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
 984:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2117              	 .loc 2 984 0
 2118              	 .cfi_startproc
 2119              	 
 2120              	 
 2121              	 
 2122 0000 80B4     	 push {r7}
 2123              	.LCFI187:
 2124              	 .cfi_def_cfa_offset 4
 2125              	 .cfi_offset 7,-4
 2126 0002 85B0     	 sub sp,sp,#20
 2127              	.LCFI188:
 2128              	 .cfi_def_cfa_offset 24
 2129 0004 00AF     	 add r7,sp,#0
 2130              	.LCFI189:
 2131              	 .cfi_def_cfa_register 7
 2132 0006 7860     	 str r0,[r7,#4]
 2133 0008 0B46     	 mov r3,r1
 2134 000a FB70     	 strb r3,[r7,#3]
 985:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
 986:../Libraries/XMCLib/src/xmc_vadc.c **** 
 987:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
 988:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Trigger Port", ((trigger_input)< XMC_VADC_NUM_
 989:../Libraries/XMCLib/src/xmc_vadc.c **** 
 990:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2135              	 .loc 2 990 0
 2136 000c 7B68     	 ldr r3,[r7,#4]
 2137 000e D3F82031 	 ldr r3,[r3,#288]
 2138 0012 FB60     	 str r3,[r7,#12]
 991:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2139              	 .loc 2 991 0
 2140 0014 FB68     	 ldr r3,[r7,#12]
 2141 0016 43F40043 	 orr r3,r3,#32768
 2142 001a FB60     	 str r3,[r7,#12]
 992:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTSEL_Msk);
 2143              	 .loc 2 992 0
 2144 001c FB68     	 ldr r3,[r7,#12]
 2145 001e 23F47063 	 bic r3,r3,#3840
 2146 0022 FB60     	 str r3,[r7,#12]
 993:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_input << VADC_G_ASCTRL_XTSEL_Pos);
 2147              	 .loc 2 993 0
 2148 0024 FB78     	 ldrb r3,[r7,#3]
 2149 0026 1B02     	 lsls r3,r3,#8
 2150 0028 FA68     	 ldr r2,[r7,#12]
 2151 002a 1343     	 orrs r3,r3,r2
 2152 002c FB60     	 str r3,[r7,#12]
 994:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2153              	 .loc 2 994 0
 2154 002e 7B68     	 ldr r3,[r7,#4]
 2155 0030 FA68     	 ldr r2,[r7,#12]
 2156 0032 C3F82021 	 str r2,[r3,#288]
 995:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2157              	 .loc 2 995 0
 2158 0036 1437     	 adds r7,r7,#20
 2159              	.LCFI190:
 2160              	 .cfi_def_cfa_offset 4
 2161 0038 BD46     	 mov sp,r7
 2162              	.LCFI191:
 2163              	 .cfi_def_cfa_register 13
 2164              	 
 2165 003a 5DF8047B 	 ldr r7,[sp],#4
 2166              	.LCFI192:
 2167              	 .cfi_restore 7
 2168              	 .cfi_def_cfa_offset 0
 2169 003e 7047     	 bx lr
 2170              	 .cfi_endproc
 2171              	.LFE238:
 2173              	 .section .text.XMC_VADC_GROUP_ScanSelectTriggerEdge,"ax",%progbits
 2174              	 .align 2
 2175              	 .global XMC_VADC_GROUP_ScanSelectTriggerEdge
 2176              	 .thumb
 2177              	 .thumb_func
 2179              	XMC_VADC_GROUP_ScanSelectTriggerEdge:
 2180              	.LFB239:
 996:../Libraries/XMCLib/src/xmc_vadc.c **** 
 997:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
 998:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
 999:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2181              	 .loc 2 999 0
 2182              	 .cfi_startproc
 2183              	 
 2184              	 
 2185              	 
 2186 0000 80B4     	 push {r7}
 2187              	.LCFI193:
 2188              	 .cfi_def_cfa_offset 4
 2189              	 .cfi_offset 7,-4
 2190 0002 85B0     	 sub sp,sp,#20
 2191              	.LCFI194:
 2192              	 .cfi_def_cfa_offset 24
 2193 0004 00AF     	 add r7,sp,#0
 2194              	.LCFI195:
 2195              	 .cfi_def_cfa_register 7
 2196 0006 7860     	 str r0,[r7,#4]
 2197 0008 0B46     	 mov r3,r1
 2198 000a FB70     	 strb r3,[r7,#3]
1000:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1001:../Libraries/XMCLib/src/xmc_vadc.c **** 
1002:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
1003:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Trigger Port", ((trigger_edge)<= XMC_VADC_
1004:../Libraries/XMCLib/src/xmc_vadc.c **** 
1005:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2199              	 .loc 2 1005 0
 2200 000c 7B68     	 ldr r3,[r7,#4]
 2201 000e D3F82031 	 ldr r3,[r3,#288]
 2202 0012 FB60     	 str r3,[r7,#12]
1006:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2203              	 .loc 2 1006 0
 2204 0014 FB68     	 ldr r3,[r7,#12]
 2205 0016 43F40043 	 orr r3,r3,#32768
 2206 001a FB60     	 str r3,[r7,#12]
1007:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTMODE_Msk);
 2207              	 .loc 2 1007 0
 2208 001c FB68     	 ldr r3,[r7,#12]
 2209 001e 23F4C043 	 bic r3,r3,#24576
 2210 0022 FB60     	 str r3,[r7,#12]
1008:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_G_ASCTRL_XTMODE_Pos);
 2211              	 .loc 2 1008 0
 2212 0024 FB78     	 ldrb r3,[r7,#3]
 2213 0026 5B03     	 lsls r3,r3,#13
 2214 0028 FA68     	 ldr r2,[r7,#12]
 2215 002a 1343     	 orrs r3,r3,r2
 2216 002c FB60     	 str r3,[r7,#12]
1009:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2217              	 .loc 2 1009 0
 2218 002e 7B68     	 ldr r3,[r7,#4]
 2219 0030 FA68     	 ldr r2,[r7,#12]
 2220 0032 C3F82021 	 str r2,[r3,#288]
1010:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2221              	 .loc 2 1010 0
 2222 0036 1437     	 adds r7,r7,#20
 2223              	.LCFI196:
 2224              	 .cfi_def_cfa_offset 4
 2225 0038 BD46     	 mov sp,r7
 2226              	.LCFI197:
 2227              	 .cfi_def_cfa_register 13
 2228              	 
 2229 003a 5DF8047B 	 ldr r7,[sp],#4
 2230              	.LCFI198:
 2231              	 .cfi_restore 7
 2232              	 .cfi_def_cfa_offset 0
 2233 003e 7047     	 bx lr
 2234              	 .cfi_endproc
 2235              	.LFE239:
 2237              	 .section .text.XMC_VADC_GROUP_ScanSelectGating,"ax",%progbits
 2238              	 .align 2
 2239              	 .global XMC_VADC_GROUP_ScanSelectGating
 2240              	 .thumb
 2241              	 .thumb_func
 2243              	XMC_VADC_GROUP_ScanSelectGating:
 2244              	.LFB240:
1011:../Libraries/XMCLib/src/xmc_vadc.c **** 
1012:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gating input for Group Scan request source */
1013:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
1014:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2245              	 .loc 2 1014 0
 2246              	 .cfi_startproc
 2247              	 
 2248              	 
 2249              	 
 2250 0000 80B4     	 push {r7}
 2251              	.LCFI199:
 2252              	 .cfi_def_cfa_offset 4
 2253              	 .cfi_offset 7,-4
 2254 0002 85B0     	 sub sp,sp,#20
 2255              	.LCFI200:
 2256              	 .cfi_def_cfa_offset 24
 2257 0004 00AF     	 add r7,sp,#0
 2258              	.LCFI201:
 2259              	 .cfi_def_cfa_register 7
 2260 0006 7860     	 str r0,[r7,#4]
 2261 0008 0B46     	 mov r3,r1
 2262 000a FB70     	 strb r3,[r7,#3]
1015:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1016:../Libraries/XMCLib/src/xmc_vadc.c **** 
1017:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1018:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Gating Port", ((gating_input)< XMC_VADC_NUM_POR
1019:../Libraries/XMCLib/src/xmc_vadc.c **** 
1020:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2263              	 .loc 2 1020 0
 2264 000c 7B68     	 ldr r3,[r7,#4]
 2265 000e D3F82031 	 ldr r3,[r3,#288]
 2266 0012 FB60     	 str r3,[r7,#12]
1021:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)VADC_G_ASCTRL_GTWC_Msk;
 2267              	 .loc 2 1021 0
 2268 0014 FB68     	 ldr r3,[r7,#12]
 2269 0016 43F40003 	 orr r3,r3,#8388608
 2270 001a FB60     	 str r3,[r7,#12]
1022:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_GTSEL_Msk);
 2271              	 .loc 2 1022 0
 2272 001c FB68     	 ldr r3,[r7,#12]
 2273 001e 23F47023 	 bic r3,r3,#983040
 2274 0022 FB60     	 str r3,[r7,#12]
1023:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)gating_input << VADC_G_ASCTRL_GTSEL_Pos);
 2275              	 .loc 2 1023 0
 2276 0024 FB78     	 ldrb r3,[r7,#3]
 2277 0026 1B04     	 lsls r3,r3,#16
 2278 0028 FA68     	 ldr r2,[r7,#12]
 2279 002a 1343     	 orrs r3,r3,r2
 2280 002c FB60     	 str r3,[r7,#12]
1024:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2281              	 .loc 2 1024 0
 2282 002e 7B68     	 ldr r3,[r7,#4]
 2283 0030 FA68     	 ldr r2,[r7,#12]
 2284 0032 C3F82021 	 str r2,[r3,#288]
1025:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2285              	 .loc 2 1025 0
 2286 0036 1437     	 adds r7,r7,#20
 2287              	.LCFI202:
 2288              	 .cfi_def_cfa_offset 4
 2289 0038 BD46     	 mov sp,r7
 2290              	.LCFI203:
 2291              	 .cfi_def_cfa_register 13
 2292              	 
 2293 003a 5DF8047B 	 ldr r7,[sp],#4
 2294              	.LCFI204:
 2295              	 .cfi_restore 7
 2296              	 .cfi_def_cfa_offset 0
 2297 003e 7047     	 bx lr
 2298              	 .cfi_endproc
 2299              	.LFE240:
 2301              	 .section .text.XMC_VADC_GROUP_ScanSequenceAbort,"ax",%progbits
 2302              	 .align 2
 2303              	 .global XMC_VADC_GROUP_ScanSequenceAbort
 2304              	 .thumb
 2305              	 .thumb_func
 2307              	XMC_VADC_GROUP_ScanSequenceAbort:
 2308              	.LFB241:
1026:../Libraries/XMCLib/src/xmc_vadc.c **** 
1027:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to stop an ongoing conversion of a sequence */
1028:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr)
1029:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2309              	 .loc 2 1029 0
 2310              	 .cfi_startproc
 2311              	 
 2312              	 
 2313 0000 80B5     	 push {r7,lr}
 2314              	.LCFI205:
 2315              	 .cfi_def_cfa_offset 8
 2316              	 .cfi_offset 7,-8
 2317              	 .cfi_offset 14,-4
 2318 0002 84B0     	 sub sp,sp,#16
 2319              	.LCFI206:
 2320              	 .cfi_def_cfa_offset 24
 2321 0004 00AF     	 add r7,sp,#0
 2322              	.LCFI207:
 2323              	 .cfi_def_cfa_register 7
 2324 0006 7860     	 str r0,[r7,#4]
1030:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t asctrl;
1031:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1032:../Libraries/XMCLib/src/xmc_vadc.c **** 
1033:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSequenceAbort:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1034:../Libraries/XMCLib/src/xmc_vadc.c **** 
1035:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1036:../Libraries/XMCLib/src/xmc_vadc.c ****   asctrl = group_ptr->ASCTRL;
 2325              	 .loc 2 1036 0
 2326 0008 7B68     	 ldr r3,[r7,#4]
 2327 000a D3F82031 	 ldr r3,[r3,#288]
 2328 000e FB60     	 str r3,[r7,#12]
1037:../Libraries/XMCLib/src/xmc_vadc.c **** 
1038:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(0U | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
 2329              	 .loc 2 1038 0
 2330 0010 7B68     	 ldr r3,[r7,#4]
 2331 0012 1A4A     	 ldr r2,.L68
 2332 0014 C3F82021 	 str r2,[r3,#288]
1039:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
1040:../Libraries/XMCLib/src/xmc_vadc.c **** 
1041:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable Arbitration before abort*/
1042:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN1_Pos) & 1U);
 2333              	 .loc 2 1042 0
 2334 0018 7B68     	 ldr r3,[r7,#4]
 2335 001a D3F88430 	 ldr r3,[r3,#132]
 2336 001e 5B0E     	 lsrs r3,r3,#25
 2337 0020 03F00103 	 and r3,r3,#1
 2338 0024 002B     	 cmp r3,#0
 2339 0026 14BF     	 ite ne
 2340 0028 0123     	 movne r3,#1
 2341 002a 0023     	 moveq r3,#0
 2342 002c FB72     	 strb r3,[r7,#11]
1043:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2343              	 .loc 2 1043 0
 2344 002e 7868     	 ldr r0,[r7,#4]
 2345 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
1044:../Libraries/XMCLib/src/xmc_vadc.c **** 
1045:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENGT_Msk);
 2346              	 .loc 2 1045 0
 2347 0034 7B68     	 ldr r3,[r7,#4]
 2348 0036 D3F82431 	 ldr r3,[r3,#292]
 2349 003a 23F00302 	 bic r2,r3,#3
 2350 003e 7B68     	 ldr r3,[r7,#4]
 2351 0040 C3F82421 	 str r2,[r3,#292]
1046:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
 2352              	 .loc 2 1046 0
 2353 0044 7B68     	 ldr r3,[r7,#4]
 2354 0046 D3F82431 	 ldr r3,[r3,#292]
 2355 004a 43F48072 	 orr r2,r3,#256
 2356 004e 7B68     	 ldr r3,[r7,#4]
 2357 0050 C3F82421 	 str r2,[r3,#292]
1047:../Libraries/XMCLib/src/xmc_vadc.c **** 
1048:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Enable the arbitration slot 1*/
1049:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN1_Pos);
 2358              	 .loc 2 1049 0
 2359 0054 7B68     	 ldr r3,[r7,#4]
 2360 0056 D3F88420 	 ldr r2,[r3,#132]
 2361 005a FB7A     	 ldrb r3,[r7,#11]
 2362 005c 5B06     	 lsls r3,r3,#25
 2363 005e 1A43     	 orrs r2,r2,r3
 2364 0060 7B68     	 ldr r3,[r7,#4]
 2365 0062 C3F88420 	 str r2,[r3,#132]
1050:../Libraries/XMCLib/src/xmc_vadc.c **** 
1051:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1052:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(asctrl | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
1053:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2366              	 .loc 2 1053 0
 2367 0066 FB68     	 ldr r3,[r7,#12]
 2368 0068 43F08023 	 orr r3,r3,#-2147450880
 2369 006c 43F40003 	 orr r3,r3,#8388608
1052:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2370              	 .loc 2 1052 0
 2371 0070 7A68     	 ldr r2,[r7,#4]
 2372 0072 C2F82031 	 str r3,[r2,#288]
1054:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2373              	 .loc 2 1054 0
 2374 0076 1037     	 adds r7,r7,#16
 2375              	.LCFI208:
 2376              	 .cfi_def_cfa_offset 8
 2377 0078 BD46     	 mov sp,r7
 2378              	.LCFI209:
 2379              	 .cfi_def_cfa_register 13
 2380              	 
 2381 007a 80BD     	 pop {r7,pc}
 2382              	.L69:
 2383              	 .align 2
 2384              	.L68:
 2385 007c 00808080 	 .word -2139062272
 2386              	 .cfi_endproc
 2387              	.LFE241:
 2389              	 .section .text.XMC_VADC_GROUP_ScanGetNumChannelsPending,"ax",%progbits
 2390              	 .align 2
 2391              	 .global XMC_VADC_GROUP_ScanGetNumChannelsPending
 2392              	 .thumb
 2393              	 .thumb_func
 2395              	XMC_VADC_GROUP_ScanGetNumChannelsPending:
 2396              	.LFB242:
1055:../Libraries/XMCLib/src/xmc_vadc.c **** 
1056:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to find out number of channels awaiting conversion */
1057:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr)
1058:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2397              	 .loc 2 1058 0
 2398              	 .cfi_startproc
 2399              	 
 2400              	 
 2401              	 
 2402 0000 80B4     	 push {r7}
 2403              	.LCFI210:
 2404              	 .cfi_def_cfa_offset 4
 2405              	 .cfi_offset 7,-4
 2406 0002 87B0     	 sub sp,sp,#28
 2407              	.LCFI211:
 2408              	 .cfi_def_cfa_offset 32
 2409 0004 00AF     	 add r7,sp,#0
 2410              	.LCFI212:
 2411              	 .cfi_def_cfa_register 7
 2412 0006 7860     	 str r0,[r7,#4]
1059:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1060:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1061:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1062:../Libraries/XMCLib/src/xmc_vadc.c **** 
1063:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanGetNumChannelsPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1064:../Libraries/XMCLib/src/xmc_vadc.c **** 
1065:../Libraries/XMCLib/src/xmc_vadc.c **** 
1066:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
 2413              	 .loc 2 1066 0
 2414 0008 0023     	 movs r3,#0
 2415 000a FB60     	 str r3,[r7,#12]
1067:../Libraries/XMCLib/src/xmc_vadc.c **** 
1068:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_ptr->ASPND)
 2416              	 .loc 2 1068 0
 2417 000c 7B68     	 ldr r3,[r7,#4]
 2418 000e D3F82C31 	 ldr r3,[r3,#300]
 2419 0012 002B     	 cmp r3,#0
 2420 0014 17D0     	 beq .L71
1069:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1070:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = group_ptr->ASPND;
 2421              	 .loc 2 1070 0
 2422 0016 7B68     	 ldr r3,[r7,#4]
 2423 0018 D3F82C31 	 ldr r3,[r3,#300]
 2424 001c 7B61     	 str r3,[r7,#20]
1071:../Libraries/XMCLib/src/xmc_vadc.c **** 
1072:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i=0U;i<XMC_VADC_NUM_CHANNELS_PER_GROUP;i++)
 2425              	 .loc 2 1072 0
 2426 001e 0023     	 movs r3,#0
 2427 0020 3B61     	 str r3,[r7,#16]
 2428 0022 0DE0     	 b .L72
 2429              	.L74:
1073:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1074:../Libraries/XMCLib/src/xmc_vadc.c ****       if (reg & 1U)
 2430              	 .loc 2 1074 0
 2431 0024 7B69     	 ldr r3,[r7,#20]
 2432 0026 03F00103 	 and r3,r3,#1
 2433 002a 002B     	 cmp r3,#0
 2434 002c 02D0     	 beq .L73
1075:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1076:../Libraries/XMCLib/src/xmc_vadc.c ****         count++;
 2435              	 .loc 2 1076 0
 2436 002e FB68     	 ldr r3,[r7,#12]
 2437 0030 0133     	 adds r3,r3,#1
 2438 0032 FB60     	 str r3,[r7,#12]
 2439              	.L73:
1077:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1078:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = (uint32_t)(reg >> (uint32_t)1);
 2440              	 .loc 2 1078 0 discriminator 2
 2441 0034 7B69     	 ldr r3,[r7,#20]
 2442 0036 5B08     	 lsrs r3,r3,#1
 2443 0038 7B61     	 str r3,[r7,#20]
1072:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2444              	 .loc 2 1072 0 discriminator 2
 2445 003a 3B69     	 ldr r3,[r7,#16]
 2446 003c 0133     	 adds r3,r3,#1
 2447 003e 3B61     	 str r3,[r7,#16]
 2448              	.L72:
1072:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2449              	 .loc 2 1072 0 is_stmt 0 discriminator 1
 2450 0040 3B69     	 ldr r3,[r7,#16]
 2451 0042 072B     	 cmp r3,#7
 2452 0044 EED9     	 bls .L74
 2453              	.L71:
1079:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1080:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1081:../Libraries/XMCLib/src/xmc_vadc.c **** 
1082:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
 2454              	 .loc 2 1082 0 is_stmt 1
 2455 0046 FB68     	 ldr r3,[r7,#12]
1083:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2456              	 .loc 2 1083 0
 2457 0048 1846     	 mov r0,r3
 2458 004a 1C37     	 adds r7,r7,#28
 2459              	.LCFI213:
 2460              	 .cfi_def_cfa_offset 4
 2461 004c BD46     	 mov sp,r7
 2462              	.LCFI214:
 2463              	 .cfi_def_cfa_register 13
 2464              	 
 2465 004e 5DF8047B 	 ldr r7,[sp],#4
 2466              	.LCFI215:
 2467              	 .cfi_restore 7
 2468              	 .cfi_def_cfa_offset 0
 2469 0052 7047     	 bx lr
 2470              	 .cfi_endproc
 2471              	.LFE242:
 2473              	 .section .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode,"ax",%progbits
 2474              	 .align 2
 2475              	 .global XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
 2476              	 .thumb
 2477              	 .thumb_func
 2479              	XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:
 2480              	.LFB243:
1084:../Libraries/XMCLib/src/xmc_vadc.c **** 
1085:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for request source event */
1086:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
1087:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2481              	 .loc 2 1087 0
 2482              	 .cfi_startproc
 2483              	 
 2484              	 
 2485              	 
 2486 0000 80B4     	 push {r7}
 2487              	.LCFI216:
 2488              	 .cfi_def_cfa_offset 4
 2489              	 .cfi_offset 7,-4
 2490 0002 85B0     	 sub sp,sp,#20
 2491              	.LCFI217:
 2492              	 .cfi_def_cfa_offset 24
 2493 0004 00AF     	 add r7,sp,#0
 2494              	.LCFI218:
 2495              	 .cfi_def_cfa_register 7
 2496 0006 7860     	 str r0,[r7,#4]
 2497 0008 0B46     	 mov r3,r1
 2498 000a FB70     	 strb r3,[r7,#3]
1088:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1089:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 2499              	 .loc 2 1089 0
 2500 000c 7B68     	 ldr r3,[r7,#4]
 2501 000e D3F8C031 	 ldr r3,[r3,#448]
 2502 0012 FB60     	 str r3,[r7,#12]
1090:../Libraries/XMCLib/src/xmc_vadc.c **** 
1091:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_G
1092:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_
1093:../Libraries/XMCLib/src/xmc_vadc.c **** 
1094:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV1NP_Msk);
 2503              	 .loc 2 1094 0
 2504 0014 FB68     	 ldr r3,[r7,#12]
 2505 0016 23F0F003 	 bic r3,r3,#240
 2506 001a FB60     	 str r3,[r7,#12]
1095:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV1NP_Pos);
 2507              	 .loc 2 1095 0
 2508 001c FB78     	 ldrb r3,[r7,#3]
 2509 001e 1B01     	 lsls r3,r3,#4
 2510 0020 FA68     	 ldr r2,[r7,#12]
 2511 0022 1343     	 orrs r3,r3,r2
 2512 0024 FB60     	 str r3,[r7,#12]
1096:../Libraries/XMCLib/src/xmc_vadc.c **** 
1097:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 2513              	 .loc 2 1097 0
 2514 0026 7B68     	 ldr r3,[r7,#4]
 2515 0028 FA68     	 ldr r2,[r7,#12]
 2516 002a C3F8C021 	 str r2,[r3,#448]
1098:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2517              	 .loc 2 1098 0
 2518 002e 1437     	 adds r7,r7,#20
 2519              	.LCFI219:
 2520              	 .cfi_def_cfa_offset 4
 2521 0030 BD46     	 mov sp,r7
 2522              	.LCFI220:
 2523              	 .cfi_def_cfa_register 13
 2524              	 
 2525 0032 5DF8047B 	 ldr r7,[sp],#4
 2526              	.LCFI221:
 2527              	 .cfi_restore 7
 2528              	 .cfi_def_cfa_offset 0
 2529 0036 7047     	 bx lr
 2530              	 .cfi_endproc
 2531              	.LFE243:
 2533              	 .section .text.XMC_VADC_GLOBAL_BackgroundInit,"ax",%progbits
 2534              	 .align 2
 2535              	 .global XMC_VADC_GLOBAL_BackgroundInit
 2536              	 .thumb
 2537              	 .thumb_func
 2539              	XMC_VADC_GLOBAL_BackgroundInit:
 2540              	.LFB244:
1099:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_GSCAN_AVAILABLE */
1100:../Libraries/XMCLib/src/xmc_vadc.c **** 
1101:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize background scan request source hardware */
1102:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
1103:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2541              	 .loc 2 1103 0
 2542              	 .cfi_startproc
 2543              	 
 2544              	 
 2545 0000 80B5     	 push {r7,lr}
 2546              	.LCFI222:
 2547              	 .cfi_def_cfa_offset 8
 2548              	 .cfi_offset 7,-8
 2549              	 .cfi_offset 14,-4
 2550 0002 86B0     	 sub sp,sp,#24
 2551              	.LCFI223:
 2552              	 .cfi_def_cfa_offset 32
 2553 0004 00AF     	 add r7,sp,#0
 2554              	.LCFI224:
 2555              	 .cfi_def_cfa_register 7
 2556 0006 7860     	 str r0,[r7,#4]
 2557 0008 3960     	 str r1,[r7]
1104:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1105:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
1106:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1107:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t conv_start_mask;
1108:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1109:../Libraries/XMCLib/src/xmc_vadc.c ****   
1110:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundInit:Wrong Module Pointer", (global_ptr == VADC))
1111:../Libraries/XMCLib/src/xmc_vadc.c **** 
1112:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1113:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2558              	 .loc 2 1113 0
 2559 000a 0023     	 movs r3,#0
 2560 000c FB75     	 strb r3,[r7,#23]
 2561 000e 09E0     	 b .L78
 2562              	.L79:
1114:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1115:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2563              	 .loc 2 1115 0 discriminator 3
 2564 0010 FB7D     	 ldrb r3,[r7,#23]
 2565 0012 394A     	 ldr r2,.L86
 2566 0014 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2567 0018 1846     	 mov r0,r3
 2568 001a FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1113:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2569              	 .loc 2 1113 0 discriminator 3
 2570 001e FB7D     	 ldrb r3,[r7,#23]
 2571 0020 0133     	 adds r3,r3,#1
 2572 0022 FB75     	 strb r3,[r7,#23]
 2573              	.L78:
1113:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2574              	 .loc 2 1113 0 is_stmt 0 discriminator 1
 2575 0024 FB7D     	 ldrb r3,[r7,#23]
 2576 0026 012B     	 cmp r3,#1
 2577 0028 F2D9     	 bls .L79
1116:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1117:../Libraries/XMCLib/src/xmc_vadc.c ****   
1118:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_start_mask = (uint32_t) 0;
 2578              	 .loc 2 1118 0 is_stmt 1
 2579 002a 0023     	 movs r3,#0
 2580 002c 3B61     	 str r3,[r7,#16]
1119:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != config->conv_start_mode)
 2581              	 .loc 2 1119 0
 2582 002e 3B68     	 ldr r3,[r7]
 2583 0030 1B78     	 ldrb r3,[r3]
 2584 0032 03F00303 	 and r3,r3,#3
 2585 0036 DBB2     	 uxtb r3,r3
 2586 0038 002B     	 cmp r3,#0
 2587 003a 02D0     	 beq .L80
1120:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1121:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_start_mask = (uint32_t)VADC_G_ARBPR_CSM2_Msk;
 2588              	 .loc 2 1121 0
 2589 003c 4FF40063 	 mov r3,#2048
 2590 0040 3B61     	 str r3,[r7,#16]
 2591              	.L80:
1122:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1123:../Libraries/XMCLib/src/xmc_vadc.c ****   
1124:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2592              	 .loc 2 1124 0
 2593 0042 0023     	 movs r3,#0
 2594 0044 FB75     	 strb r3,[r7,#23]
 2595 0046 21E0     	 b .L81
 2596              	.L82:
1125:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1126:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = g_xmc_vadc_group_array[i]->ARBPR;
 2597              	 .loc 2 1126 0 discriminator 3
 2598 0048 FB7D     	 ldrb r3,[r7,#23]
 2599 004a 2B4A     	 ldr r2,.L86
 2600 004c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2601 0050 D3F88430 	 ldr r3,[r3,#132]
 2602 0054 FB60     	 str r3,[r7,#12]
1127:../Libraries/XMCLib/src/xmc_vadc.c **** 
1128:../Libraries/XMCLib/src/xmc_vadc.c ****     reg &= ~(uint32_t)(VADC_G_ARBPR_PRIO2_Msk);
 2603              	 .loc 2 1128 0 discriminator 3
 2604 0056 FB68     	 ldr r3,[r7,#12]
 2605 0058 23F44073 	 bic r3,r3,#768
 2606 005c FB60     	 str r3,[r7,#12]
1129:../Libraries/XMCLib/src/xmc_vadc.c **** 
1130:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the priority of the request source */
1131:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO2_Pos);
 2607              	 .loc 2 1131 0 discriminator 3
 2608 005e 3B68     	 ldr r3,[r7]
 2609 0060 1B78     	 ldrb r3,[r3]
 2610 0062 C3F38103 	 ubfx r3,r3,#2,#2
 2611 0066 DBB2     	 uxtb r3,r3
 2612 0068 1B02     	 lsls r3,r3,#8
 2613 006a FA68     	 ldr r2,[r7,#12]
 2614 006c 1343     	 orrs r3,r3,r2
 2615 006e FB60     	 str r3,[r7,#12]
1132:../Libraries/XMCLib/src/xmc_vadc.c ****   
1133:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the start mode */
1134:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= conv_start_mask;
 2616              	 .loc 2 1134 0 discriminator 3
 2617 0070 FA68     	 ldr r2,[r7,#12]
 2618 0072 3B69     	 ldr r3,[r7,#16]
 2619 0074 1343     	 orrs r3,r3,r2
 2620 0076 FB60     	 str r3,[r7,#12]
1135:../Libraries/XMCLib/src/xmc_vadc.c **** 
1136:../Libraries/XMCLib/src/xmc_vadc.c ****     g_xmc_vadc_group_array[i]->ARBPR = reg;
 2621              	 .loc 2 1136 0 discriminator 3
 2622 0078 FB7D     	 ldrb r3,[r7,#23]
 2623 007a 1F4A     	 ldr r2,.L86
 2624 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2625 0080 FA68     	 ldr r2,[r7,#12]
 2626 0082 C3F88420 	 str r2,[r3,#132]
1124:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2627              	 .loc 2 1124 0 discriminator 3
 2628 0086 FB7D     	 ldrb r3,[r7,#23]
 2629 0088 0133     	 adds r3,r3,#1
 2630 008a FB75     	 strb r3,[r7,#23]
 2631              	.L81:
1124:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2632              	 .loc 2 1124 0 is_stmt 0 discriminator 1
 2633 008c FB7D     	 ldrb r3,[r7,#23]
 2634 008e 012B     	 cmp r3,#1
 2635 0090 DAD9     	 bls .L82
1137:../Libraries/XMCLib/src/xmc_vadc.c ****   
1138:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1139:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1140:../Libraries/XMCLib/src/xmc_vadc.c **** 
1141:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSCTRL register */
1142:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL = (uint32_t)(config->asctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VAD
 2636              	 .loc 2 1142 0 is_stmt 1
 2637 0092 3B68     	 ldr r3,[r7]
 2638 0094 5B68     	 ldr r3,[r3,#4]
 2639 0096 43F40003 	 orr r3,r3,#8388608
 2640 009a 43F40043 	 orr r3,r3,#32768
 2641 009e 7A68     	 ldr r2,[r7,#4]
 2642 00a0 C2F80032 	 str r3,[r2,#512]
1143:../Libraries/XMCLib/src/xmc_vadc.c **** 
1144:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSMR register */
1145:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << V
 2643              	 .loc 2 1145 0
 2644 00a4 3B68     	 ldr r3,[r7]
 2645 00a6 9B68     	 ldr r3,[r3,#8]
 2646 00a8 43F00102 	 orr r2,r3,#1
 2647 00ac 7B68     	 ldr r3,[r7,#4]
 2648 00ae C3F80422 	 str r2,[r3,#516]
1146:../Libraries/XMCLib/src/xmc_vadc.c ****   
1147:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1148:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (config->conv_start_mode))
 2649              	 .loc 2 1148 0
 2650 00b2 3B68     	 ldr r3,[r7]
 2651 00b4 1B78     	 ldrb r3,[r3]
 2652 00b6 03F00303 	 and r3,r3,#3
 2653 00ba DBB2     	 uxtb r3,r3
 2654 00bc 022B     	 cmp r3,#2
 2655 00be 07D1     	 bne .L83
1149:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1150:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_RPTDIS_Msk;
 2656              	 .loc 2 1150 0
 2657 00c0 7B68     	 ldr r3,[r7,#4]
 2658 00c2 D3F80432 	 ldr r3,[r3,#516]
 2659 00c6 43F48032 	 orr r2,r3,#65536
 2660 00ca 7B68     	 ldr r3,[r7,#4]
 2661 00cc C3F80422 	 str r2,[r3,#516]
 2662              	.L83:
1151:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1152:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1153:../Libraries/XMCLib/src/xmc_vadc.c ****   
1154:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1155:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2663              	 .loc 2 1155 0
 2664 00d0 0023     	 movs r3,#0
 2665 00d2 FB75     	 strb r3,[r7,#23]
 2666 00d4 09E0     	 b .L84
 2667              	.L85:
1156:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1157:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2668              	 .loc 2 1157 0 discriminator 3
 2669 00d6 FB7D     	 ldrb r3,[r7,#23]
 2670 00d8 074A     	 ldr r2,.L86
 2671 00da 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2672 00de 1846     	 mov r0,r3
 2673 00e0 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
1155:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2674              	 .loc 2 1155 0 discriminator 3
 2675 00e4 FB7D     	 ldrb r3,[r7,#23]
 2676 00e6 0133     	 adds r3,r3,#1
 2677 00e8 FB75     	 strb r3,[r7,#23]
 2678              	.L84:
1155:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2679              	 .loc 2 1155 0 is_stmt 0 discriminator 1
 2680 00ea FB7D     	 ldrb r3,[r7,#23]
 2681 00ec 012B     	 cmp r3,#1
 2682 00ee F2D9     	 bls .L85
1158:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1159:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1160:../Libraries/XMCLib/src/xmc_vadc.c ****   
1161:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2683              	 .loc 2 1161 0 is_stmt 1
 2684 00f0 1837     	 adds r7,r7,#24
 2685              	.LCFI225:
 2686              	 .cfi_def_cfa_offset 8
 2687 00f2 BD46     	 mov sp,r7
 2688              	.LCFI226:
 2689              	 .cfi_def_cfa_register 13
 2690              	 
 2691 00f4 80BD     	 pop {r7,pc}
 2692              	.L87:
 2693 00f6 00BF     	 .align 2
 2694              	.L86:
 2695 00f8 00000000 	 .word g_xmc_vadc_group_array
 2696              	 .cfi_endproc
 2697              	.LFE244:
 2699              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger,"ax",%progbits
 2700              	 .align 2
 2701              	 .global XMC_VADC_GLOBAL_BackgroundSelectTrigger
 2702              	 .thumb
 2703              	 .thumb_func
 2705              	XMC_VADC_GLOBAL_BackgroundSelectTrigger:
 2706              	.LFB245:
1162:../Libraries/XMCLib/src/xmc_vadc.c **** 
1163:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger for background scan request source */
1164:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
1165:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2707              	 .loc 2 1165 0
 2708              	 .cfi_startproc
 2709              	 
 2710              	 
 2711              	 
 2712 0000 80B4     	 push {r7}
 2713              	.LCFI227:
 2714              	 .cfi_def_cfa_offset 4
 2715              	 .cfi_offset 7,-4
 2716 0002 85B0     	 sub sp,sp,#20
 2717              	.LCFI228:
 2718              	 .cfi_def_cfa_offset 24
 2719 0004 00AF     	 add r7,sp,#0
 2720              	.LCFI229:
 2721              	 .cfi_def_cfa_register 7
 2722 0006 7860     	 str r0,[r7,#4]
 2723 0008 3960     	 str r1,[r7]
1166:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1167:../Libraries/XMCLib/src/xmc_vadc.c **** 
1168:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("VADC_BCKGND_SelectTriggerInput:Wrong Module Pointer", (global_ptr == VADC))
1169:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_N
1170:../Libraries/XMCLib/src/xmc_vadc.c **** 
1171:../Libraries/XMCLib/src/xmc_vadc.c ****   
1172:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2724              	 .loc 2 1172 0
 2725 000a 7B68     	 ldr r3,[r7,#4]
 2726 000c D3F80032 	 ldr r3,[r3,#512]
 2727 0010 FB60     	 str r3,[r7,#12]
1173:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_XTWC_Msk;
 2728              	 .loc 2 1173 0
 2729 0012 FB68     	 ldr r3,[r7,#12]
 2730 0014 43F40043 	 orr r3,r3,#32768
 2731 0018 FB60     	 str r3,[r7,#12]
1174:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_XTSEL_Msk);
 2732              	 .loc 2 1174 0
 2733 001a FB68     	 ldr r3,[r7,#12]
 2734 001c 23F47063 	 bic r3,r3,#3840
 2735 0020 FB60     	 str r3,[r7,#12]
1175:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_XTSEL_Pos);
 2736              	 .loc 2 1175 0
 2737 0022 3B68     	 ldr r3,[r7]
 2738 0024 1B02     	 lsls r3,r3,#8
 2739 0026 FA68     	 ldr r2,[r7,#12]
 2740 0028 1343     	 orrs r3,r3,r2
 2741 002a FB60     	 str r3,[r7,#12]
1176:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2742              	 .loc 2 1176 0
 2743 002c 7B68     	 ldr r3,[r7,#4]
 2744 002e FA68     	 ldr r2,[r7,#12]
 2745 0030 C3F80022 	 str r2,[r3,#512]
1177:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2746              	 .loc 2 1177 0
 2747 0034 1437     	 adds r7,r7,#20
 2748              	.LCFI230:
 2749              	 .cfi_def_cfa_offset 4
 2750 0036 BD46     	 mov sp,r7
 2751              	.LCFI231:
 2752              	 .cfi_def_cfa_register 13
 2753              	 
 2754 0038 5DF8047B 	 ldr r7,[sp],#4
 2755              	.LCFI232:
 2756              	 .cfi_restore 7
 2757              	 .cfi_def_cfa_offset 0
 2758 003c 7047     	 bx lr
 2759              	 .cfi_endproc
 2760              	.LFE245:
 2762 003e 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge,"ax",%progbits
 2763              	 .align 2
 2764              	 .global XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
 2765              	 .thumb
 2766              	 .thumb_func
 2768              	XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:
 2769              	.LFB246:
1178:../Libraries/XMCLib/src/xmc_vadc.c **** 
1179:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1180:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr,
1181:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_TRIGGER_EDGE_t trigger_edge)
1182:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2770              	 .loc 2 1182 0
 2771              	 .cfi_startproc
 2772              	 
 2773              	 
 2774              	 
 2775 0000 80B4     	 push {r7}
 2776              	.LCFI233:
 2777              	 .cfi_def_cfa_offset 4
 2778              	 .cfi_offset 7,-4
 2779 0002 85B0     	 sub sp,sp,#20
 2780              	.LCFI234:
 2781              	 .cfi_def_cfa_offset 24
 2782 0004 00AF     	 add r7,sp,#0
 2783              	.LCFI235:
 2784              	 .cfi_def_cfa_register 7
 2785 0006 7860     	 str r0,[r7,#4]
 2786 0008 0B46     	 mov r3,r1
 2787 000a FB70     	 strb r3,[r7,#3]
1183:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1184:../Libraries/XMCLib/src/xmc_vadc.c **** 
1185:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Global Pointer", (global_ptr == VAD
1186:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Trigger Port",
1187:../Libraries/XMCLib/src/xmc_vadc.c ****             ((trigger_edge)<= XMC_VADC_TRIGGER_EDGE_ANY))
1188:../Libraries/XMCLib/src/xmc_vadc.c **** 
1189:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = global_ptr->BRSCTRL;
 2788              	 .loc 2 1189 0
 2789 000c 7B68     	 ldr r3,[r7,#4]
 2790 000e D3F80032 	 ldr r3,[r3,#512]
 2791 0012 FB60     	 str r3,[r7,#12]
1190:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_BRSCTRL_XTWC_Msk;
 2792              	 .loc 2 1190 0
 2793 0014 FB68     	 ldr r3,[r7,#12]
 2794 0016 43F40043 	 orr r3,r3,#32768
 2795 001a FB60     	 str r3,[r7,#12]
1191:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_BRSCTRL_XTMODE_Msk);
 2796              	 .loc 2 1191 0
 2797 001c FB68     	 ldr r3,[r7,#12]
 2798 001e 23F4C043 	 bic r3,r3,#24576
 2799 0022 FB60     	 str r3,[r7,#12]
1192:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_BRSCTRL_XTMODE_Pos);
 2800              	 .loc 2 1192 0
 2801 0024 FB78     	 ldrb r3,[r7,#3]
 2802 0026 5B03     	 lsls r3,r3,#13
 2803 0028 FA68     	 ldr r2,[r7,#12]
 2804 002a 1343     	 orrs r3,r3,r2
 2805 002c FB60     	 str r3,[r7,#12]
1193:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2806              	 .loc 2 1193 0
 2807 002e 7B68     	 ldr r3,[r7,#4]
 2808 0030 FA68     	 ldr r2,[r7,#12]
 2809 0032 C3F80022 	 str r2,[r3,#512]
1194:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2810              	 .loc 2 1194 0
 2811 0036 1437     	 adds r7,r7,#20
 2812              	.LCFI236:
 2813              	 .cfi_def_cfa_offset 4
 2814 0038 BD46     	 mov sp,r7
 2815              	.LCFI237:
 2816              	 .cfi_def_cfa_register 13
 2817              	 
 2818 003a 5DF8047B 	 ldr r7,[sp],#4
 2819              	.LCFI238:
 2820              	 .cfi_restore 7
 2821              	 .cfi_def_cfa_offset 0
 2822 003e 7047     	 bx lr
 2823              	 .cfi_endproc
 2824              	.LFE246:
 2826              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectGating,"ax",%progbits
 2827              	 .align 2
 2828              	 .global XMC_VADC_GLOBAL_BackgroundSelectGating
 2829              	 .thumb
 2830              	 .thumb_func
 2832              	XMC_VADC_GLOBAL_BackgroundSelectGating:
 2833              	.LFB247:
1195:../Libraries/XMCLib/src/xmc_vadc.c **** 
1196:../Libraries/XMCLib/src/xmc_vadc.c **** 
1197:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gate for background scan request source */
1198:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
1199:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2834              	 .loc 2 1199 0
 2835              	 .cfi_startproc
 2836              	 
 2837              	 
 2838              	 
 2839 0000 80B4     	 push {r7}
 2840              	.LCFI239:
 2841              	 .cfi_def_cfa_offset 4
 2842              	 .cfi_offset 7,-4
 2843 0002 85B0     	 sub sp,sp,#20
 2844              	.LCFI240:
 2845              	 .cfi_def_cfa_offset 24
 2846 0004 00AF     	 add r7,sp,#0
 2847              	.LCFI241:
 2848              	 .cfi_def_cfa_register 7
 2849 0006 7860     	 str r0,[r7,#4]
 2850 0008 3960     	 str r1,[r7]
1200:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1201:../Libraries/XMCLib/src/xmc_vadc.c **** 
1202:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Module Pointer", (global_ptr == VADC))
1203:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM
1204:../Libraries/XMCLib/src/xmc_vadc.c **** 
1205:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2851              	 .loc 2 1205 0
 2852 000a 7B68     	 ldr r3,[r7,#4]
 2853 000c D3F80032 	 ldr r3,[r3,#512]
 2854 0010 FB60     	 str r3,[r7,#12]
1206:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_GTWC_Msk;
 2855              	 .loc 2 1206 0
 2856 0012 FB68     	 ldr r3,[r7,#12]
 2857 0014 43F40003 	 orr r3,r3,#8388608
 2858 0018 FB60     	 str r3,[r7,#12]
1207:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_GTSEL_Msk);
 2859              	 .loc 2 1207 0
 2860 001a FB68     	 ldr r3,[r7,#12]
 2861 001c 23F47023 	 bic r3,r3,#983040
 2862 0020 FB60     	 str r3,[r7,#12]
1208:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_GTSEL_Pos);
 2863              	 .loc 2 1208 0
 2864 0022 3B68     	 ldr r3,[r7]
 2865 0024 1B04     	 lsls r3,r3,#16
 2866 0026 FA68     	 ldr r2,[r7,#12]
 2867 0028 1343     	 orrs r3,r3,r2
 2868 002a FB60     	 str r3,[r7,#12]
1209:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2869              	 .loc 2 1209 0
 2870 002c 7B68     	 ldr r3,[r7,#4]
 2871 002e FA68     	 ldr r2,[r7,#12]
 2872 0030 C3F80022 	 str r2,[r3,#512]
1210:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2873              	 .loc 2 1210 0
 2874 0034 1437     	 adds r7,r7,#20
 2875              	.LCFI242:
 2876              	 .cfi_def_cfa_offset 4
 2877 0036 BD46     	 mov sp,r7
 2878              	.LCFI243:
 2879              	 .cfi_def_cfa_register 13
 2880              	 
 2881 0038 5DF8047B 	 ldr r7,[sp],#4
 2882              	.LCFI244:
 2883              	 .cfi_restore 7
 2884              	 .cfi_def_cfa_offset 0
 2885 003c 7047     	 bx lr
 2886              	 .cfi_endproc
 2887              	.LFE247:
 2889 003e 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundAbortSequence,"ax",%progbits
 2890              	 .align 2
 2891              	 .global XMC_VADC_GLOBAL_BackgroundAbortSequence
 2892              	 .thumb
 2893              	 .thumb_func
 2895              	XMC_VADC_GLOBAL_BackgroundAbortSequence:
 2896              	.LFB248:
1211:../Libraries/XMCLib/src/xmc_vadc.c **** 
1212:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a sequence */
1213:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr)
1214:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2897              	 .loc 2 1214 0
 2898              	 .cfi_startproc
 2899              	 
 2900              	 
 2901 0000 80B5     	 push {r7,lr}
 2902              	.LCFI245:
 2903              	 .cfi_def_cfa_offset 8
 2904              	 .cfi_offset 7,-8
 2905              	 .cfi_offset 14,-4
 2906 0002 86B0     	 sub sp,sp,#24
 2907              	.LCFI246:
 2908              	 .cfi_def_cfa_offset 32
 2909 0004 00AF     	 add r7,sp,#0
 2910              	.LCFI247:
 2911              	 .cfi_def_cfa_register 7
 2912 0006 7860     	 str r0,[r7,#4]
1215:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t brsctrl;
1216:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1217:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1218:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t grp_asen2_flag[XMC_VADC_MAXIMUM_NUM_GROUPS];
1219:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1220:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAbortSequence:Wrong Module Pointer", (global_ptr == VADC))
1221:../Libraries/XMCLib/src/xmc_vadc.c **** 
1222:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1223:../Libraries/XMCLib/src/xmc_vadc.c ****   brsctrl = global_ptr->BRSCTRL;
 2913              	 .loc 2 1223 0
 2914 0008 7B68     	 ldr r3,[r7,#4]
 2915 000a D3F80032 	 ldr r3,[r3,#512]
 2916 000e 3B61     	 str r3,[r7,#16]
1224:../Libraries/XMCLib/src/xmc_vadc.c **** 
1225:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(0U | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk);
 2917              	 .loc 2 1225 0
 2918 0010 7B68     	 ldr r3,[r7,#4]
 2919 0012 254A     	 ldr r2,.L97
 2920 0014 C3F80022 	 str r2,[r3,#512]
1226:../Libraries/XMCLib/src/xmc_vadc.c **** 
1227:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable Background Request source */
1228:../Libraries/XMCLib/src/xmc_vadc.c **** 
1229:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1230:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2921              	 .loc 2 1230 0
 2922 0018 0023     	 movs r3,#0
 2923 001a 7B61     	 str r3,[r7,#20]
 2924 001c 17E0     	 b .L92
 2925              	.L93:
1231:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1232:../Libraries/XMCLib/src/xmc_vadc.c ****     grp_asen2_flag[i] = (uint8_t)(g_xmc_vadc_group_array[i]->ARBPR >> VADC_G_ARBPR_ASEN2_Pos);
 2926              	 .loc 2 1232 0 discriminator 3
 2927 001e 234A     	 ldr r2,.L97+4
 2928 0020 7B69     	 ldr r3,[r7,#20]
 2929 0022 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2930 0026 D3F88430 	 ldr r3,[r3,#132]
 2931 002a 9B0E     	 lsrs r3,r3,#26
 2932 002c D9B2     	 uxtb r1,r3
 2933 002e 07F10C02 	 add r2,r7,#12
 2934 0032 7B69     	 ldr r3,[r7,#20]
 2935 0034 1344     	 add r3,r3,r2
 2936 0036 0A46     	 mov r2,r1
 2937 0038 1A70     	 strb r2,[r3]
1233:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 2938              	 .loc 2 1233 0 discriminator 3
 2939 003a 1C4A     	 ldr r2,.L97+4
 2940 003c 7B69     	 ldr r3,[r7,#20]
 2941 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2942 0042 1846     	 mov r0,r3
 2943 0044 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1230:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2944              	 .loc 2 1230 0 discriminator 3
 2945 0048 7B69     	 ldr r3,[r7,#20]
 2946 004a 0133     	 adds r3,r3,#1
 2947 004c 7B61     	 str r3,[r7,#20]
 2948              	.L92:
1230:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2949              	 .loc 2 1230 0 is_stmt 0 discriminator 1
 2950 004e 7B69     	 ldr r3,[r7,#20]
 2951 0050 012B     	 cmp r3,#1
 2952 0052 E4D9     	 bls .L93
1234:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1235:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1236:../Libraries/XMCLib/src/xmc_vadc.c **** 
1237:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Abort the ongoing sequence */
1238:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_CLRPND_Msk;
 2953              	 .loc 2 1238 0 is_stmt 1
 2954 0054 7B68     	 ldr r3,[r7,#4]
 2955 0056 D3F80432 	 ldr r3,[r3,#516]
 2956 005a 43F48072 	 orr r2,r3,#256
 2957 005e 7B68     	 ldr r3,[r7,#4]
 2958 0060 C3F80422 	 str r2,[r3,#516]
1239:../Libraries/XMCLib/src/xmc_vadc.c **** 
1240:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1241:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable Background Request source */
1242:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 2959              	 .loc 2 1242 0
 2960 0064 0023     	 movs r3,#0
 2961 0066 7B61     	 str r3,[r7,#20]
 2962 0068 10E0     	 b .L94
 2963              	.L96:
1243:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1244:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint8_t)1 == grp_asen2_flag[i])
 2964              	 .loc 2 1244 0
 2965 006a 07F10C02 	 add r2,r7,#12
 2966 006e 7B69     	 ldr r3,[r7,#20]
 2967 0070 1344     	 add r3,r3,r2
 2968 0072 1B78     	 ldrb r3,[r3]
 2969 0074 012B     	 cmp r3,#1
 2970 0076 06D1     	 bne .L95
1245:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1246:../Libraries/XMCLib/src/xmc_vadc.c ****       XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t*)g_xmc_vadc_group_array[i]);
 2971              	 .loc 2 1246 0
 2972 0078 0C4A     	 ldr r2,.L97+4
 2973 007a 7B69     	 ldr r3,[r7,#20]
 2974 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2975 0080 1846     	 mov r0,r3
 2976 0082 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
 2977              	.L95:
1242:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2978              	 .loc 2 1242 0 discriminator 2
 2979 0086 7B69     	 ldr r3,[r7,#20]
 2980 0088 0133     	 adds r3,r3,#1
 2981 008a 7B61     	 str r3,[r7,#20]
 2982              	.L94:
1242:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2983              	 .loc 2 1242 0 is_stmt 0 discriminator 1
 2984 008c 7B69     	 ldr r3,[r7,#20]
 2985 008e 012B     	 cmp r3,#1
 2986 0090 EBD9     	 bls .L96
1247:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1248:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1249:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1250:../Libraries/XMCLib/src/xmc_vadc.c **** 
1251:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Re-enable any disabled trigger and gating*/
1252:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(brsctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk
 2987              	 .loc 2 1252 0 is_stmt 1
 2988 0092 3B69     	 ldr r3,[r7,#16]
 2989 0094 43F40003 	 orr r3,r3,#8388608
 2990 0098 43F40043 	 orr r3,r3,#32768
 2991 009c 7A68     	 ldr r2,[r7,#4]
 2992 009e C2F80032 	 str r3,[r2,#512]
1253:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2993              	 .loc 2 1253 0
 2994 00a2 1837     	 adds r7,r7,#24
 2995              	.LCFI248:
 2996              	 .cfi_def_cfa_offset 8
 2997 00a4 BD46     	 mov sp,r7
 2998              	.LCFI249:
 2999              	 .cfi_def_cfa_register 13
 3000              	 
 3001 00a6 80BD     	 pop {r7,pc}
 3002              	.L98:
 3003              	 .align 2
 3004              	.L97:
 3005 00a8 00808000 	 .word 8421376
 3006 00ac 00000000 	 .word g_xmc_vadc_group_array
 3007              	 .cfi_endproc
 3008              	.LFE248:
 3010              	 .section .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending,"ax",%progbits
 3011              	 .align 2
 3012              	 .global XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
 3013              	 .thumb
 3014              	 .thumb_func
 3016              	XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:
 3017              	.LFB249:
1254:../Libraries/XMCLib/src/xmc_vadc.c **** 
1255:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine how many channels are awaiting conversion */
1256:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr)
1257:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3018              	 .loc 2 1257 0
 3019              	 .cfi_startproc
 3020              	 
 3021              	 
 3022              	 
 3023 0000 80B4     	 push {r7}
 3024              	.LCFI250:
 3025              	 .cfi_def_cfa_offset 4
 3026              	 .cfi_offset 7,-4
 3027 0002 87B0     	 sub sp,sp,#28
 3028              	.LCFI251:
 3029              	 .cfi_def_cfa_offset 32
 3030 0004 00AF     	 add r7,sp,#0
 3031              	.LCFI252:
 3032              	 .cfi_def_cfa_register 7
 3033 0006 7860     	 str r0,[r7,#4]
1258:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1259:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1260:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t j;
1261:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1262:../Libraries/XMCLib/src/xmc_vadc.c **** 
1263:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:Wrong Module Pointer", (global_ptr ==
1264:../Libraries/XMCLib/src/xmc_vadc.c **** 
1265:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
 3034              	 .loc 2 1265 0
 3035 0008 0023     	 movs r3,#0
 3036 000a BB60     	 str r3,[r7,#8]
1266:../Libraries/XMCLib/src/xmc_vadc.c ****   
1267:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop through all groups and find out who is awaiting conversion */
1268:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i = 0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3037              	 .loc 2 1268 0
 3038 000c 0023     	 movs r3,#0
 3039 000e 3B61     	 str r3,[r7,#16]
 3040 0010 23E0     	 b .L100
 3041              	.L105:
1269:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1270:../Libraries/XMCLib/src/xmc_vadc.c ****     if (global_ptr->BRSSEL[i])
 3042              	 .loc 2 1270 0
 3043 0012 7B68     	 ldr r3,[r7,#4]
 3044 0014 3A69     	 ldr r2,[r7,#16]
 3045 0016 6032     	 adds r2,r2,#96
 3046 0018 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3047 001c 002B     	 cmp r3,#0
 3048 001e 19D0     	 beq .L101
1271:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1272:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = global_ptr->BRSPND[i];
 3049              	 .loc 2 1272 0
 3050 0020 7B68     	 ldr r3,[r7,#4]
 3051 0022 3A69     	 ldr r2,[r7,#16]
 3052 0024 7032     	 adds r2,r2,#112
 3053 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3054 002a 7B61     	 str r3,[r7,#20]
1273:../Libraries/XMCLib/src/xmc_vadc.c **** 
1274:../Libraries/XMCLib/src/xmc_vadc.c ****       for(j=0U;j<XMC_VADC_NUM_CHANNELS_PER_GROUP;j++)
 3055              	 .loc 2 1274 0
 3056 002c 0023     	 movs r3,#0
 3057 002e FB60     	 str r3,[r7,#12]
 3058 0030 0DE0     	 b .L102
 3059              	.L104:
1275:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1276:../Libraries/XMCLib/src/xmc_vadc.c ****         if (reg & 1U)
 3060              	 .loc 2 1276 0
 3061 0032 7B69     	 ldr r3,[r7,#20]
 3062 0034 03F00103 	 and r3,r3,#1
 3063 0038 002B     	 cmp r3,#0
 3064 003a 02D0     	 beq .L103
1277:../Libraries/XMCLib/src/xmc_vadc.c ****         {
1278:../Libraries/XMCLib/src/xmc_vadc.c ****           count++;
 3065              	 .loc 2 1278 0
 3066 003c BB68     	 ldr r3,[r7,#8]
 3067 003e 0133     	 adds r3,r3,#1
 3068 0040 BB60     	 str r3,[r7,#8]
 3069              	.L103:
1279:../Libraries/XMCLib/src/xmc_vadc.c ****         }
1280:../Libraries/XMCLib/src/xmc_vadc.c **** 
1281:../Libraries/XMCLib/src/xmc_vadc.c ****         reg = reg >> 1U;
 3070              	 .loc 2 1281 0 discriminator 2
 3071 0042 7B69     	 ldr r3,[r7,#20]
 3072 0044 5B08     	 lsrs r3,r3,#1
 3073 0046 7B61     	 str r3,[r7,#20]
1274:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 3074              	 .loc 2 1274 0 discriminator 2
 3075 0048 FB68     	 ldr r3,[r7,#12]
 3076 004a 0133     	 adds r3,r3,#1
 3077 004c FB60     	 str r3,[r7,#12]
 3078              	.L102:
1274:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 3079              	 .loc 2 1274 0 is_stmt 0 discriminator 1
 3080 004e FB68     	 ldr r3,[r7,#12]
 3081 0050 072B     	 cmp r3,#7
 3082 0052 EED9     	 bls .L104
 3083              	.L101:
1268:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3084              	 .loc 2 1268 0 is_stmt 1 discriminator 2
 3085 0054 3B69     	 ldr r3,[r7,#16]
 3086 0056 0133     	 adds r3,r3,#1
 3087 0058 3B61     	 str r3,[r7,#16]
 3088              	.L100:
1268:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3089              	 .loc 2 1268 0 is_stmt 0 discriminator 1
 3090 005a 3B69     	 ldr r3,[r7,#16]
 3091 005c 012B     	 cmp r3,#1
 3092 005e D8D9     	 bls .L105
1282:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1283:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1284:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1285:../Libraries/XMCLib/src/xmc_vadc.c **** 
1286:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
 3093              	 .loc 2 1286 0 is_stmt 1
 3094 0060 BB68     	 ldr r3,[r7,#8]
1287:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3095              	 .loc 2 1287 0
 3096 0062 1846     	 mov r0,r3
 3097 0064 1C37     	 adds r7,r7,#28
 3098              	.LCFI253:
 3099              	 .cfi_def_cfa_offset 4
 3100 0066 BD46     	 mov sp,r7
 3101              	.LCFI254:
 3102              	 .cfi_def_cfa_register 13
 3103              	 
 3104 0068 5DF8047B 	 ldr r7,[sp],#4
 3105              	.LCFI255:
 3106              	 .cfi_restore 7
 3107              	 .cfi_def_cfa_offset 0
 3108 006c 7047     	 bx lr
 3109              	 .cfi_endproc
 3110              	.LFE249:
 3112 006e 00BF     	 .section .text.XMC_VADC_GROUP_QueueInit,"ax",%progbits
 3113              	 .align 2
 3114              	 .global XMC_VADC_GROUP_QueueInit
 3115              	 .thumb
 3116              	 .thumb_func
 3118              	XMC_VADC_GROUP_QueueInit:
 3119              	.LFB250:
1288:../Libraries/XMCLib/src/xmc_vadc.c **** 
1289:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)  
1290:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize queue request source */
1291:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
1292:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3120              	 .loc 2 1292 0
 3121              	 .cfi_startproc
 3122              	 
 3123              	 
 3124 0000 80B5     	 push {r7,lr}
 3125              	.LCFI256:
 3126              	 .cfi_def_cfa_offset 8
 3127              	 .cfi_offset 7,-8
 3128              	 .cfi_offset 14,-4
 3129 0002 84B0     	 sub sp,sp,#16
 3130              	.LCFI257:
 3131              	 .cfi_def_cfa_offset 24
 3132 0004 00AF     	 add r7,sp,#0
 3133              	.LCFI258:
 3134              	 .cfi_def_cfa_register 7
 3135 0006 7860     	 str r0,[r7,#4]
 3136 0008 3960     	 str r1,[r7]
1293:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t          reg;
1294:../Libraries/XMCLib/src/xmc_vadc.c **** 
1295:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1296:../Libraries/XMCLib/src/xmc_vadc.c **** 
1297:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable arbitration slot of the queue request source */
1298:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3137              	 .loc 2 1298 0
 3138 000a 7868     	 ldr r0,[r7,#4]
 3139 000c FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1299:../Libraries/XMCLib/src/xmc_vadc.c ****   
1300:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 3140              	 .loc 2 1300 0
 3141 0010 7B68     	 ldr r3,[r7,#4]
 3142 0012 D3F88430 	 ldr r3,[r3,#132]
 3143 0016 FB60     	 str r3,[r7,#12]
1301:../Libraries/XMCLib/src/xmc_vadc.c **** 
1302:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Request Source priority */
1303:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~((uint32_t)VADC_G_ARBPR_PRIO0_Msk);
 3144              	 .loc 2 1303 0
 3145 0018 FB68     	 ldr r3,[r7,#12]
 3146 001a 23F00303 	 bic r3,r3,#3
 3147 001e FB60     	 str r3,[r7,#12]
1304:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t) ((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO0_Pos);
 3148              	 .loc 2 1304 0
 3149 0020 3B68     	 ldr r3,[r7]
 3150 0022 1B78     	 ldrb r3,[r3]
 3151 0024 C3F38103 	 ubfx r3,r3,#2,#2
 3152 0028 DBB2     	 uxtb r3,r3
 3153 002a 1A46     	 mov r2,r3
 3154 002c FB68     	 ldr r3,[r7,#12]
 3155 002e 1343     	 orrs r3,r3,r2
 3156 0030 FB60     	 str r3,[r7,#12]
1305:../Libraries/XMCLib/src/xmc_vadc.c **** 
1306:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Conversion Start mode */
1307:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != config->conv_start_mode)
 3157              	 .loc 2 1307 0
 3158 0032 3B68     	 ldr r3,[r7]
 3159 0034 1B78     	 ldrb r3,[r3]
 3160 0036 03F00303 	 and r3,r3,#3
 3161 003a DBB2     	 uxtb r3,r3
 3162 003c 002B     	 cmp r3,#0
 3163 003e 03D0     	 beq .L108
1308:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1309:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM0_Msk);
 3164              	 .loc 2 1309 0
 3165 0040 FB68     	 ldr r3,[r7,#12]
 3166 0042 43F00803 	 orr r3,r3,#8
 3167 0046 FB60     	 str r3,[r7,#12]
 3168              	.L108:
1310:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1311:../Libraries/XMCLib/src/xmc_vadc.c **** 
1312:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 3169              	 .loc 2 1312 0
 3170 0048 7B68     	 ldr r3,[r7,#4]
 3171 004a FA68     	 ldr r2,[r7,#12]
 3172 004c C3F88420 	 str r2,[r3,#132]
1313:../Libraries/XMCLib/src/xmc_vadc.c **** 
1314:../Libraries/XMCLib/src/xmc_vadc.c **** 
1315:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (uint32_t)((config->qctrl0)|(uint32_t)(VADC_G_QCTRL0_XTWC_Msk)|
 3173              	 .loc 2 1315 0
 3174 0050 3B68     	 ldr r3,[r7]
 3175 0052 5B68     	 ldr r3,[r3,#4]
 3176 0054 43F08023 	 orr r3,r3,#-2147450880
 3177 0058 43F40003 	 orr r3,r3,#8388608
 3178 005c 7A68     	 ldr r2,[r7,#4]
 3179 005e C2F80031 	 str r3,[r2,#256]
1316:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_TMWC_Msk)|
1317:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_GTWC_Msk));
1318:../Libraries/XMCLib/src/xmc_vadc.c **** 
1319:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Gating mode */
1320:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QMR0 = ((uint32_t)(config->qmr0) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 3180              	 .loc 2 1320 0
 3181 0062 3B68     	 ldr r3,[r7]
 3182 0064 9B68     	 ldr r3,[r3,#8]
 3183 0066 43F00102 	 orr r2,r3,#1
 3184 006a 7B68     	 ldr r3,[r7,#4]
 3185 006c C3F80421 	 str r2,[r3,#260]
1321:../Libraries/XMCLib/src/xmc_vadc.c **** 
1322:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (config->conv_start_mode) )
 3186              	 .loc 2 1322 0
 3187 0070 3B68     	 ldr r3,[r7]
 3188 0072 1B78     	 ldrb r3,[r3]
 3189 0074 03F00303 	 and r3,r3,#3
 3190 0078 DBB2     	 uxtb r3,r3
 3191 007a 022B     	 cmp r3,#2
 3192 007c 07D1     	 bne .L109
1323:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1324:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_RPTDIS_Pos);
 3193              	 .loc 2 1324 0
 3194 007e 7B68     	 ldr r3,[r7,#4]
 3195 0080 D3F80431 	 ldr r3,[r3,#260]
 3196 0084 43F48032 	 orr r2,r3,#65536
 3197 0088 7B68     	 ldr r3,[r7,#4]
 3198 008a C3F80421 	 str r2,[r3,#260]
 3199              	.L109:
1325:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1326:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot for the queue request source */
1327:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueEnableArbitrationSlot(group_ptr);
 3200              	 .loc 2 1327 0
 3201 008e 7868     	 ldr r0,[r7,#4]
 3202 0090 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueEnableArbitrationSlot
1328:../Libraries/XMCLib/src/xmc_vadc.c **** 
1329:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3203              	 .loc 2 1329 0
 3204 0094 1037     	 adds r7,r7,#16
 3205              	.LCFI259:
 3206              	 .cfi_def_cfa_offset 8
 3207 0096 BD46     	 mov sp,r7
 3208              	.LCFI260:
 3209              	 .cfi_def_cfa_register 13
 3210              	 
 3211 0098 80BD     	 pop {r7,pc}
 3212              	 .cfi_endproc
 3213              	.LFE250:
 3215 009a 00BF     	 .section .text.XMC_VADC_GROUP_QueueSelectTrigger,"ax",%progbits
 3216              	 .align 2
 3217              	 .global XMC_VADC_GROUP_QueueSelectTrigger
 3218              	 .thumb
 3219              	 .thumb_func
 3221              	XMC_VADC_GROUP_QueueSelectTrigger:
 3222              	.LFB251:
1330:../Libraries/XMCLib/src/xmc_vadc.c **** 
1331:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible triggers as a conversion trigger for queue request source *
1332:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr,
1333:../Libraries/XMCLib/src/xmc_vadc.c ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num)
1334:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3223              	 .loc 2 1334 0
 3224              	 .cfi_startproc
 3225              	 
 3226              	 
 3227              	 
 3228 0000 80B4     	 push {r7}
 3229              	.LCFI261:
 3230              	 .cfi_def_cfa_offset 4
 3231              	 .cfi_offset 7,-4
 3232 0002 85B0     	 sub sp,sp,#20
 3233              	.LCFI262:
 3234              	 .cfi_def_cfa_offset 24
 3235 0004 00AF     	 add r7,sp,#0
 3236              	.LCFI263:
 3237              	 .cfi_def_cfa_register 7
 3238 0006 7860     	 str r0,[r7,#4]
 3239 0008 0B46     	 mov r3,r1
 3240 000a FB70     	 strb r3,[r7,#3]
1335:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    qctrl;
1336:../Libraries/XMCLib/src/xmc_vadc.c ****   
1337:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1338:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_NUM_POR
1339:../Libraries/XMCLib/src/xmc_vadc.c **** 
1340:../Libraries/XMCLib/src/xmc_vadc.c ****   
1341:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the conversion trigger */
1342:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3241              	 .loc 2 1342 0
 3242 000c 7B68     	 ldr r3,[r7,#4]
 3243 000e D3F80031 	 ldr r3,[r3,#256]
 3244 0012 FB60     	 str r3,[r7,#12]
1343:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3245              	 .loc 2 1343 0
 3246 0014 FB68     	 ldr r3,[r7,#12]
 3247 0016 43F40043 	 orr r3,r3,#32768
 3248 001a FB60     	 str r3,[r7,#12]
1344:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTSEL_Msk);
 3249              	 .loc 2 1344 0
 3250 001c FB68     	 ldr r3,[r7,#12]
 3251 001e 23F47063 	 bic r3,r3,#3840
 3252 0022 FB60     	 str r3,[r7,#12]
1345:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_XTSEL_Pos);
 3253              	 .loc 2 1345 0
 3254 0024 FB78     	 ldrb r3,[r7,#3]
 3255 0026 1B02     	 lsls r3,r3,#8
 3256 0028 FA68     	 ldr r2,[r7,#12]
 3257 002a 1343     	 orrs r3,r3,r2
 3258 002c FB60     	 str r3,[r7,#12]
1346:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3259              	 .loc 2 1346 0
 3260 002e 7B68     	 ldr r3,[r7,#4]
 3261 0030 FA68     	 ldr r2,[r7,#12]
 3262 0032 C3F80021 	 str r2,[r3,#256]
1347:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3263              	 .loc 2 1347 0
 3264 0036 1437     	 adds r7,r7,#20
 3265              	.LCFI264:
 3266              	 .cfi_def_cfa_offset 4
 3267 0038 BD46     	 mov sp,r7
 3268              	.LCFI265:
 3269              	 .cfi_def_cfa_register 13
 3270              	 
 3271 003a 5DF8047B 	 ldr r7,[sp],#4
 3272              	.LCFI266:
 3273              	 .cfi_restore 7
 3274              	 .cfi_def_cfa_offset 0
 3275 003e 7047     	 bx lr
 3276              	 .cfi_endproc
 3277              	.LFE251:
 3279              	 .section .text.XMC_VADC_GROUP_QueueSelectTriggerEdge,"ax",%progbits
 3280              	 .align 2
 3281              	 .global XMC_VADC_GROUP_QueueSelectTriggerEdge
 3282              	 .thumb
 3283              	 .thumb_func
 3285              	XMC_VADC_GROUP_QueueSelectTriggerEdge:
 3286              	.LFB252:
1348:../Libraries/XMCLib/src/xmc_vadc.c **** 
1349:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1350:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
1351:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3287              	 .loc 2 1351 0
 3288              	 .cfi_startproc
 3289              	 
 3290              	 
 3291              	 
 3292 0000 80B4     	 push {r7}
 3293              	.LCFI267:
 3294              	 .cfi_def_cfa_offset 4
 3295              	 .cfi_offset 7,-4
 3296 0002 85B0     	 sub sp,sp,#20
 3297              	.LCFI268:
 3298              	 .cfi_def_cfa_offset 24
 3299 0004 00AF     	 add r7,sp,#0
 3300              	.LCFI269:
 3301              	 .cfi_def_cfa_register 7
 3302 0006 7860     	 str r0,[r7,#4]
 3303 0008 0B46     	 mov r3,r1
 3304 000a FB70     	 strb r3,[r7,#3]
1352:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1353:../Libraries/XMCLib/src/xmc_vadc.c **** 
1354:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1355:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Gating Port", ((trigger_edge)<= XMC_VADC_
1356:../Libraries/XMCLib/src/xmc_vadc.c **** 
1357:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1358:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3305              	 .loc 2 1358 0
 3306 000c 7B68     	 ldr r3,[r7,#4]
 3307 000e D3F80031 	 ldr r3,[r3,#256]
 3308 0012 FB60     	 str r3,[r7,#12]
1359:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3309              	 .loc 2 1359 0
 3310 0014 FB68     	 ldr r3,[r7,#12]
 3311 0016 43F40043 	 orr r3,r3,#32768
 3312 001a FB60     	 str r3,[r7,#12]
1360:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTMODE_Msk);
 3313              	 .loc 2 1360 0
 3314 001c FB68     	 ldr r3,[r7,#12]
 3315 001e 23F4C043 	 bic r3,r3,#24576
 3316 0022 FB60     	 str r3,[r7,#12]
1361:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)trigger_edge << VADC_G_QCTRL0_XTMODE_Pos);
 3317              	 .loc 2 1361 0
 3318 0024 FB78     	 ldrb r3,[r7,#3]
 3319 0026 5B03     	 lsls r3,r3,#13
 3320 0028 FA68     	 ldr r2,[r7,#12]
 3321 002a 1343     	 orrs r3,r3,r2
 3322 002c FB60     	 str r3,[r7,#12]
1362:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3323              	 .loc 2 1362 0
 3324 002e 7B68     	 ldr r3,[r7,#4]
 3325 0030 FA68     	 ldr r2,[r7,#12]
 3326 0032 C3F80021 	 str r2,[r3,#256]
1363:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3327              	 .loc 2 1363 0
 3328 0036 1437     	 adds r7,r7,#20
 3329              	.LCFI270:
 3330              	 .cfi_def_cfa_offset 4
 3331 0038 BD46     	 mov sp,r7
 3332              	.LCFI271:
 3333              	 .cfi_def_cfa_register 13
 3334              	 
 3335 003a 5DF8047B 	 ldr r7,[sp],#4
 3336              	.LCFI272:
 3337              	 .cfi_restore 7
 3338              	 .cfi_def_cfa_offset 0
 3339 003e 7047     	 bx lr
 3340              	 .cfi_endproc
 3341              	.LFE252:
 3343              	 .section .text.XMC_VADC_GROUP_QueueSelectGating,"ax",%progbits
 3344              	 .align 2
 3345              	 .global XMC_VADC_GROUP_QueueSelectGating
 3346              	 .thumb
 3347              	 .thumb_func
 3349              	XMC_VADC_GROUP_QueueSelectGating:
 3350              	.LFB253:
1364:../Libraries/XMCLib/src/xmc_vadc.c **** 
1365:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible trigger gates as a trigger gating signal for queue request 
1366:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
1367:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3351              	 .loc 2 1367 0
 3352              	 .cfi_startproc
 3353              	 
 3354              	 
 3355              	 
 3356 0000 80B4     	 push {r7}
 3357              	.LCFI273:
 3358              	 .cfi_def_cfa_offset 4
 3359              	 .cfi_offset 7,-4
 3360 0002 85B0     	 sub sp,sp,#20
 3361              	.LCFI274:
 3362              	 .cfi_def_cfa_offset 24
 3363 0004 00AF     	 add r7,sp,#0
 3364              	.LCFI275:
 3365              	 .cfi_def_cfa_register 7
 3366 0006 7860     	 str r0,[r7,#4]
 3367 0008 0B46     	 mov r3,r1
 3368 000a FB70     	 strb r3,[r7,#3]
1368:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1369:../Libraries/XMCLib/src/xmc_vadc.c **** 
1370:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1371:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM_PORTS
1372:../Libraries/XMCLib/src/xmc_vadc.c ****   
1373:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1374:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3369              	 .loc 2 1374 0
 3370 000c 7B68     	 ldr r3,[r7,#4]
 3371 000e D3F80031 	 ldr r3,[r3,#256]
 3372 0012 FB60     	 str r3,[r7,#12]
1375:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_GTWC_Msk;
 3373              	 .loc 2 1375 0
 3374 0014 FB68     	 ldr r3,[r7,#12]
 3375 0016 43F40003 	 orr r3,r3,#8388608
 3376 001a FB60     	 str r3,[r7,#12]
1376:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_GTSEL_Msk);
 3377              	 .loc 2 1376 0
 3378 001c FB68     	 ldr r3,[r7,#12]
 3379 001e 23F47023 	 bic r3,r3,#983040
 3380 0022 FB60     	 str r3,[r7,#12]
1377:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_GTSEL_Pos);
 3381              	 .loc 2 1377 0
 3382 0024 FB78     	 ldrb r3,[r7,#3]
 3383 0026 1B04     	 lsls r3,r3,#16
 3384 0028 FA68     	 ldr r2,[r7,#12]
 3385 002a 1343     	 orrs r3,r3,r2
 3386 002c FB60     	 str r3,[r7,#12]
1378:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3387              	 .loc 2 1378 0
 3388 002e 7B68     	 ldr r3,[r7,#4]
 3389 0030 FA68     	 ldr r2,[r7,#12]
 3390 0032 C3F80021 	 str r2,[r3,#256]
1379:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3391              	 .loc 2 1379 0
 3392 0036 1437     	 adds r7,r7,#20
 3393              	.LCFI276:
 3394              	 .cfi_def_cfa_offset 4
 3395 0038 BD46     	 mov sp,r7
 3396              	.LCFI277:
 3397              	 .cfi_def_cfa_register 13
 3398              	 
 3399 003a 5DF8047B 	 ldr r7,[sp],#4
 3400              	.LCFI278:
 3401              	 .cfi_restore 7
 3402              	 .cfi_def_cfa_offset 0
 3403 003e 7047     	 bx lr
 3404              	 .cfi_endproc
 3405              	.LFE253:
 3407              	 .section .text.XMC_VADC_GROUP_QueueGetLength,"ax",%progbits
 3408              	 .align 2
 3409              	 .global XMC_VADC_GROUP_QueueGetLength
 3410              	 .thumb
 3411              	 .thumb_func
 3413              	XMC_VADC_GROUP_QueueGetLength:
 3414              	.LFB254:
1380:../Libraries/XMCLib/src/xmc_vadc.c **** 
1381:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine the number of channels in the queue (length includes the valid channel in the B
1382:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr)
1383:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3415              	 .loc 2 1383 0
 3416              	 .cfi_startproc
 3417              	 
 3418              	 
 3419              	 
 3420 0000 80B4     	 push {r7}
 3421              	.LCFI279:
 3422              	 .cfi_def_cfa_offset 4
 3423              	 .cfi_offset 7,-4
 3424 0002 87B0     	 sub sp,sp,#28
 3425              	.LCFI280:
 3426              	 .cfi_def_cfa_offset 32
 3427 0004 00AF     	 add r7,sp,#0
 3428              	.LCFI281:
 3429              	 .cfi_def_cfa_register 7
 3430 0006 7860     	 str r0,[r7,#4]
1384:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qsr;
1385:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qbur0;
1386:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        length;
1387:../Libraries/XMCLib/src/xmc_vadc.c **** 
1388:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetLength:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
1389:../Libraries/XMCLib/src/xmc_vadc.c **** 
1390:../Libraries/XMCLib/src/xmc_vadc.c ****   qsr = group_ptr->QSR0;
 3431              	 .loc 2 1390 0
 3432 0008 7B68     	 ldr r3,[r7,#4]
 3433 000a D3F80831 	 ldr r3,[r3,#264]
 3434 000e 3B61     	 str r3,[r7,#16]
1391:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3435              	 .loc 2 1391 0
 3436 0010 7B68     	 ldr r3,[r7,#4]
 3437 0012 D3F81031 	 ldr r3,[r3,#272]
 3438 0016 FB60     	 str r3,[r7,#12]
1392:../Libraries/XMCLib/src/xmc_vadc.c **** 
1393:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qsr & (uint32_t)VADC_G_QSR0_EMPTY_Msk)
 3439              	 .loc 2 1393 0
 3440 0018 3B69     	 ldr r3,[r7,#16]
 3441 001a 03F02003 	 and r3,r3,#32
 3442 001e 002B     	 cmp r3,#0
 3443 0020 02D0     	 beq .L114
1394:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1395:../Libraries/XMCLib/src/xmc_vadc.c ****     length = 0U;
 3444              	 .loc 2 1395 0
 3445 0022 0023     	 movs r3,#0
 3446 0024 7B61     	 str r3,[r7,#20]
 3447 0026 04E0     	 b .L115
 3448              	.L114:
1396:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1397:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1398:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1399:../Libraries/XMCLib/src/xmc_vadc.c ****     length = (qsr & (uint32_t)VADC_G_QSR0_FILL_Msk) + 1U;
 3449              	 .loc 2 1399 0
 3450 0028 3B69     	 ldr r3,[r7,#16]
 3451 002a 03F00F03 	 and r3,r3,#15
 3452 002e 0133     	 adds r3,r3,#1
 3453 0030 7B61     	 str r3,[r7,#20]
 3454              	.L115:
1400:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1401:../Libraries/XMCLib/src/xmc_vadc.c ****   
1402:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qbur0 & (uint32_t)VADC_G_QBUR0_V_Msk )
 3455              	 .loc 2 1402 0
 3456 0032 FB68     	 ldr r3,[r7,#12]
 3457 0034 03F48073 	 and r3,r3,#256
 3458 0038 002B     	 cmp r3,#0
 3459 003a 02D0     	 beq .L116
1403:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1404:../Libraries/XMCLib/src/xmc_vadc.c ****     length++;
 3460              	 .loc 2 1404 0
 3461 003c 7B69     	 ldr r3,[r7,#20]
 3462 003e 0133     	 adds r3,r3,#1
 3463 0040 7B61     	 str r3,[r7,#20]
 3464              	.L116:
1405:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1406:../Libraries/XMCLib/src/xmc_vadc.c **** 
1407:../Libraries/XMCLib/src/xmc_vadc.c ****   return length;
 3465              	 .loc 2 1407 0
 3466 0042 7B69     	 ldr r3,[r7,#20]
1408:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3467              	 .loc 2 1408 0
 3468 0044 1846     	 mov r0,r3
 3469 0046 1C37     	 adds r7,r7,#28
 3470              	.LCFI282:
 3471              	 .cfi_def_cfa_offset 4
 3472 0048 BD46     	 mov sp,r7
 3473              	.LCFI283:
 3474              	 .cfi_def_cfa_register 13
 3475              	 
 3476 004a 5DF8047B 	 ldr r7,[sp],#4
 3477              	.LCFI284:
 3478              	 .cfi_restore 7
 3479              	 .cfi_def_cfa_offset 0
 3480 004e 7047     	 bx lr
 3481              	 .cfi_endproc
 3482              	.LFE254:
 3484              	 .section .text.XMC_VADC_GROUP_QueueAbortSequence,"ax",%progbits
 3485              	 .align 2
 3486              	 .global XMC_VADC_GROUP_QueueAbortSequence
 3487              	 .thumb
 3488              	 .thumb_func
 3490              	XMC_VADC_GROUP_QueueAbortSequence:
 3491              	.LFB255:
1409:../Libraries/XMCLib/src/xmc_vadc.c **** 
1410:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a channel sequence */
1411:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr)
1412:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3492              	 .loc 2 1412 0
 3493              	 .cfi_startproc
 3494              	 
 3495              	 
 3496 0000 80B5     	 push {r7,lr}
 3497              	.LCFI285:
 3498              	 .cfi_def_cfa_offset 8
 3499              	 .cfi_offset 7,-8
 3500              	 .cfi_offset 14,-4
 3501 0002 84B0     	 sub sp,sp,#16
 3502              	.LCFI286:
 3503              	 .cfi_def_cfa_offset 24
 3504 0004 00AF     	 add r7,sp,#0
 3505              	.LCFI287:
 3506              	 .cfi_def_cfa_register 7
 3507 0006 7860     	 str r0,[r7,#4]
1413:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1414:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1415:../Libraries/XMCLib/src/xmc_vadc.c **** 
1416:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueAbortSequence:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1417:../Libraries/XMCLib/src/xmc_vadc.c **** 
1418:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1419:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0 = group_ptr->QCTRL0;
 3508              	 .loc 2 1419 0
 3509 0008 7B68     	 ldr r3,[r7,#4]
 3510 000a D3F80031 	 ldr r3,[r3,#256]
 3511 000e FB60     	 str r3,[r7,#12]
1420:../Libraries/XMCLib/src/xmc_vadc.c **** 
1421:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3512              	 .loc 2 1421 0
 3513 0010 7B68     	 ldr r3,[r7,#4]
 3514 0012 144A     	 ldr r2,.L119
 3515 0014 C3F80021 	 str r2,[r3,#256]
1422:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1423:../Libraries/XMCLib/src/xmc_vadc.c ****   
1424:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1425:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3516              	 .loc 2 1425 0
 3517 0018 7B68     	 ldr r3,[r7,#4]
 3518 001a D3F88430 	 ldr r3,[r3,#132]
 3519 001e 1B0E     	 lsrs r3,r3,#24
 3520 0020 03F00103 	 and r3,r3,#1
 3521 0024 002B     	 cmp r3,#0
 3522 0026 14BF     	 ite ne
 3523 0028 0123     	 movne r3,#1
 3524 002a 0023     	 moveq r3,#0
 3525 002c FB72     	 strb r3,[r7,#11]
1426:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3526              	 .loc 2 1426 0
 3527 002e 7868     	 ldr r0,[r7,#4]
 3528 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1427:../Libraries/XMCLib/src/xmc_vadc.c ****    
1428:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Flush the Entries from queue*/
1429:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueFlushEntries(group_ptr);
 3529              	 .loc 2 1429 0
 3530 0034 7868     	 ldr r0,[r7,#4]
 3531 0036 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueFlushEntries
1430:../Libraries/XMCLib/src/xmc_vadc.c ****   
1431:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1432:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3532              	 .loc 2 1432 0
 3533 003a 7B68     	 ldr r3,[r7,#4]
 3534 003c D3F88420 	 ldr r2,[r3,#132]
 3535 0040 FB7A     	 ldrb r3,[r7,#11]
 3536 0042 1B06     	 lsls r3,r3,#24
 3537 0044 1A43     	 orrs r2,r2,r3
 3538 0046 7B68     	 ldr r3,[r7,#4]
 3539 0048 C3F88420 	 str r2,[r3,#132]
1433:../Libraries/XMCLib/src/xmc_vadc.c ****   
1434:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1435:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1436:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3540              	 .loc 2 1436 0
 3541 004c FB68     	 ldr r3,[r7,#12]
 3542 004e 43F08023 	 orr r3,r3,#-2147450880
 3543 0052 43F40003 	 orr r3,r3,#8388608
1435:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3544              	 .loc 2 1435 0
 3545 0056 7A68     	 ldr r2,[r7,#4]
 3546 0058 C2F80031 	 str r3,[r2,#256]
1437:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3547              	 .loc 2 1437 0
 3548 005c 1037     	 adds r7,r7,#16
 3549              	.LCFI288:
 3550              	 .cfi_def_cfa_offset 8
 3551 005e BD46     	 mov sp,r7
 3552              	.LCFI289:
 3553              	 .cfi_def_cfa_register 13
 3554              	 
 3555 0060 80BD     	 pop {r7,pc}
 3556              	.L120:
 3557 0062 00BF     	 .align 2
 3558              	.L119:
 3559 0064 00808080 	 .word -2139062272
 3560              	 .cfi_endproc
 3561              	.LFE255:
 3563              	 .section .text.XMC_VADC_GROUP_QueueRemoveChannel,"ax",%progbits
 3564              	 .align 2
 3565              	 .global XMC_VADC_GROUP_QueueRemoveChannel
 3566              	 .thumb
 3567              	 .thumb_func
 3569              	XMC_VADC_GROUP_QueueRemoveChannel:
 3570              	.LFB256:
1438:../Libraries/XMCLib/src/xmc_vadc.c **** 
1439:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort conversion of the channel queued up next */
1440:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueRemoveChannel(XMC_VADC_GROUP_t *const group_ptr)
1441:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3571              	 .loc 2 1441 0
 3572              	 .cfi_startproc
 3573              	 
 3574              	 
 3575 0000 80B5     	 push {r7,lr}
 3576              	.LCFI290:
 3577              	 .cfi_def_cfa_offset 8
 3578              	 .cfi_offset 7,-8
 3579              	 .cfi_offset 14,-4
 3580 0002 86B0     	 sub sp,sp,#24
 3581              	.LCFI291:
 3582              	 .cfi_def_cfa_offset 32
 3583 0004 00AF     	 add r7,sp,#0
 3584              	.LCFI292:
 3585              	 .cfi_def_cfa_register 7
 3586 0006 7860     	 str r0,[r7,#4]
1442:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_before_abort;
1443:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_after_abort;
1444:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1445:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1446:../Libraries/XMCLib/src/xmc_vadc.c **** 
1447:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1448:../Libraries/XMCLib/src/xmc_vadc.c ****   
1449:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1450:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0= group_ptr->QCTRL0;
 3587              	 .loc 2 1450 0
 3588 0008 7B68     	 ldr r3,[r7,#4]
 3589 000a D3F80031 	 ldr r3,[r3,#256]
 3590 000e 3B61     	 str r3,[r7,#16]
1451:../Libraries/XMCLib/src/xmc_vadc.c **** 
1452:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3591              	 .loc 2 1452 0
 3592 0010 7B68     	 ldr r3,[r7,#4]
 3593 0012 204A     	 ldr r2,.L125
 3594 0014 C3F80021 	 str r2,[r3,#256]
1453:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1454:../Libraries/XMCLib/src/xmc_vadc.c ****   
1455:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1456:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3595              	 .loc 2 1456 0
 3596 0018 7B68     	 ldr r3,[r7,#4]
 3597 001a D3F88430 	 ldr r3,[r3,#132]
 3598 001e 1B0E     	 lsrs r3,r3,#24
 3599 0020 03F00103 	 and r3,r3,#1
 3600 0024 002B     	 cmp r3,#0
 3601 0026 14BF     	 ite ne
 3602 0028 0123     	 movne r3,#1
 3603 002a 0023     	 moveq r3,#0
 3604 002c FB73     	 strb r3,[r7,#15]
1457:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3605              	 .loc 2 1457 0
 3606 002e 7868     	 ldr r0,[r7,#4]
 3607 0030 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1458:../Libraries/XMCLib/src/xmc_vadc.c **** 
1459:../Libraries/XMCLib/src/xmc_vadc.c ****   length_before_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3608              	 .loc 2 1459 0
 3609 0034 7868     	 ldr r0,[r7,#4]
 3610 0036 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3611 003a B860     	 str r0,[r7,#8]
1460:../Libraries/XMCLib/src/xmc_vadc.c **** 
1461:../Libraries/XMCLib/src/xmc_vadc.c ****   if (length_before_abort)
 3612              	 .loc 2 1461 0
 3613 003c BB68     	 ldr r3,[r7,#8]
 3614 003e 002B     	 cmp r3,#0
 3615 0040 14D0     	 beq .L122
1462:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1463:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Remove the first entry of the queue */
1464:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_CLRV_Msk;
 3616              	 .loc 2 1464 0
 3617 0042 7B68     	 ldr r3,[r7,#4]
 3618 0044 D3F80431 	 ldr r3,[r3,#260]
 3619 0048 43F48072 	 orr r2,r3,#256
 3620 004c 7B68     	 ldr r3,[r7,#4]
 3621 004e C3F80421 	 str r2,[r3,#260]
1465:../Libraries/XMCLib/src/xmc_vadc.c **** 
1466:../Libraries/XMCLib/src/xmc_vadc.c ****     length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3622              	 .loc 2 1466 0
 3623 0052 7868     	 ldr r0,[r7,#4]
 3624 0054 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3625 0058 7861     	 str r0,[r7,#20]
1467:../Libraries/XMCLib/src/xmc_vadc.c **** 
1468:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Loop until a reduction in queue length is assessed */
1469:../Libraries/XMCLib/src/xmc_vadc.c ****     while(length_after_abort == length_before_abort)
 3626              	 .loc 2 1469 0
 3627 005a 03E0     	 b .L123
 3628              	.L124:
1470:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1471:../Libraries/XMCLib/src/xmc_vadc.c ****       length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 3629              	 .loc 2 1471 0
 3630 005c 7868     	 ldr r0,[r7,#4]
 3631 005e FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 3632 0062 7861     	 str r0,[r7,#20]
 3633              	.L123:
1469:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 3634              	 .loc 2 1469 0
 3635 0064 7A69     	 ldr r2,[r7,#20]
 3636 0066 BB68     	 ldr r3,[r7,#8]
 3637 0068 9A42     	 cmp r2,r3
 3638 006a F7D0     	 beq .L124
 3639              	.L122:
1472:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1473:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1474:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1475:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3640              	 .loc 2 1475 0
 3641 006c 7B68     	 ldr r3,[r7,#4]
 3642 006e D3F88420 	 ldr r2,[r3,#132]
 3643 0072 FB7B     	 ldrb r3,[r7,#15]
 3644 0074 1B06     	 lsls r3,r3,#24
 3645 0076 1A43     	 orrs r2,r2,r3
 3646 0078 7B68     	 ldr r3,[r7,#4]
 3647 007a C3F88420 	 str r2,[r3,#132]
1476:../Libraries/XMCLib/src/xmc_vadc.c ****   
1477:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1478:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1479:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3648              	 .loc 2 1479 0
 3649 007e 3B69     	 ldr r3,[r7,#16]
 3650 0080 43F08023 	 orr r3,r3,#-2147450880
 3651 0084 43F40003 	 orr r3,r3,#8388608
1478:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3652              	 .loc 2 1478 0
 3653 0088 7A68     	 ldr r2,[r7,#4]
 3654 008a C2F80031 	 str r3,[r2,#256]
1480:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3655              	 .loc 2 1480 0
 3656 008e 1837     	 adds r7,r7,#24
 3657              	.LCFI293:
 3658              	 .cfi_def_cfa_offset 8
 3659 0090 BD46     	 mov sp,r7
 3660              	.LCFI294:
 3661              	 .cfi_def_cfa_register 13
 3662              	 
 3663 0092 80BD     	 pop {r7,pc}
 3664              	.L126:
 3665              	 .align 2
 3666              	.L125:
 3667 0094 00808080 	 .word -2139062272
 3668              	 .cfi_endproc
 3669              	.LFE256:
 3671              	 .section .text.XMC_VADC_GROUP_QueueGetNextChannel,"ax",%progbits
 3672              	 .align 2
 3673              	 .global XMC_VADC_GROUP_QueueGetNextChannel
 3674              	 .thumb
 3675              	 .thumb_func
 3677              	XMC_VADC_GROUP_QueueGetNextChannel:
 3678              	.LFB257:
1481:../Libraries/XMCLib/src/xmc_vadc.c **** 
1482:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get details of channel meant to be converted right after the ongoing conversion */
1483:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetNextChannel(XMC_VADC_GROUP_t *const group_ptr)
1484:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3679              	 .loc 2 1484 0
 3680              	 .cfi_startproc
 3681              	 
 3682              	 
 3683              	 
 3684 0000 80B4     	 push {r7}
 3685              	.LCFI295:
 3686              	 .cfi_def_cfa_offset 4
 3687              	 .cfi_offset 7,-4
 3688 0002 85B0     	 sub sp,sp,#20
 3689              	.LCFI296:
 3690              	 .cfi_def_cfa_offset 24
 3691 0004 00AF     	 add r7,sp,#0
 3692              	.LCFI297:
 3693              	 .cfi_def_cfa_register 7
 3694 0006 7860     	 str r0,[r7,#4]
1485:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1486:../Libraries/XMCLib/src/xmc_vadc.c **** 
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetNextChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1488:../Libraries/XMCLib/src/xmc_vadc.c ****   
1489:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1490:../Libraries/XMCLib/src/xmc_vadc.c ****    * Check if there is something in the backup stage. If not, read queue-0
1491:../Libraries/XMCLib/src/xmc_vadc.c ****    * entry.
1492:../Libraries/XMCLib/src/xmc_vadc.c ****    */
1493:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3695              	 .loc 2 1493 0
 3696 0008 7B68     	 ldr r3,[r7,#4]
 3697 000a D3F81031 	 ldr r3,[r3,#272]
 3698 000e 03F48073 	 and r3,r3,#256
 3699 0012 002B     	 cmp r3,#0
 3700 0014 06D0     	 beq .L128
1494:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1495:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 3701              	 .loc 2 1495 0
 3702 0016 7B68     	 ldr r3,[r7,#4]
 3703 0018 D3F81031 	 ldr r3,[r3,#272]
 3704 001c 03F01F03 	 and r3,r3,#31
 3705 0020 FB60     	 str r3,[r7,#12]
 3706 0022 10E0     	 b .L129
 3707              	.L128:
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1497:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( (group_ptr->Q0R0) & (uint32_t)VADC_G_Q0R0_V_Msk)
 3708              	 .loc 2 1497 0
 3709 0024 7B68     	 ldr r3,[r7,#4]
 3710 0026 D3F80C31 	 ldr r3,[r3,#268]
 3711 002a 03F48073 	 and r3,r3,#256
 3712 002e 002B     	 cmp r3,#0
 3713 0030 06D0     	 beq .L130
1498:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1499:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->Q0R0 & (uint32_t)VADC_G_Q0R0_REQCHNR_Msk);
 3714              	 .loc 2 1499 0
 3715 0032 7B68     	 ldr r3,[r7,#4]
 3716 0034 D3F80C31 	 ldr r3,[r3,#268]
 3717 0038 03F01F03 	 and r3,r3,#31
 3718 003c FB60     	 str r3,[r7,#12]
 3719 003e 02E0     	 b .L129
 3720              	.L130:
1500:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1501:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1502:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1503:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Nothing is pending */
1504:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 3721              	 .loc 2 1504 0
 3722 0040 4FF0FF33 	 mov r3,#-1
 3723 0044 FB60     	 str r3,[r7,#12]
 3724              	.L129:
1505:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1506:../Libraries/XMCLib/src/xmc_vadc.c **** 
1507:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
 3725              	 .loc 2 1507 0
 3726 0046 FB68     	 ldr r3,[r7,#12]
1508:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3727              	 .loc 2 1508 0
 3728 0048 1846     	 mov r0,r3
 3729 004a 1437     	 adds r7,r7,#20
 3730              	.LCFI298:
 3731              	 .cfi_def_cfa_offset 4
 3732 004c BD46     	 mov sp,r7
 3733              	.LCFI299:
 3734              	 .cfi_def_cfa_register 13
 3735              	 
 3736 004e 5DF8047B 	 ldr r7,[sp],#4
 3737              	.LCFI300:
 3738              	 .cfi_restore 7
 3739              	 .cfi_def_cfa_offset 0
 3740 0052 7047     	 bx lr
 3741              	 .cfi_endproc
 3742              	.LFE257:
 3744              	 .section .text.XMC_VADC_GROUP_QueueGetInterruptedChannel,"ax",%progbits
 3745              	 .align 2
 3746              	 .global XMC_VADC_GROUP_QueueGetInterruptedChannel
 3747              	 .thumb
 3748              	 .thumb_func
 3750              	XMC_VADC_GROUP_QueueGetInterruptedChannel:
 3751              	.LFB258:
1509:../Libraries/XMCLib/src/xmc_vadc.c **** 
1510:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get the channel number of the channel whose conversion had been interrupted */
1511:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetInterruptedChannel(XMC_VADC_GROUP_t *const group_ptr)
1512:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3752              	 .loc 2 1512 0
 3753              	 .cfi_startproc
 3754              	 
 3755              	 
 3756              	 
 3757 0000 80B4     	 push {r7}
 3758              	.LCFI301:
 3759              	 .cfi_def_cfa_offset 4
 3760              	 .cfi_offset 7,-4
 3761 0002 85B0     	 sub sp,sp,#20
 3762              	.LCFI302:
 3763              	 .cfi_def_cfa_offset 24
 3764 0004 00AF     	 add r7,sp,#0
 3765              	.LCFI303:
 3766              	 .cfi_def_cfa_register 7
 3767 0006 7860     	 str r0,[r7,#4]
1513:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1514:../Libraries/XMCLib/src/xmc_vadc.c **** 
1515:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetInterruptedChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1516:../Libraries/XMCLib/src/xmc_vadc.c ****   
1517:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3768              	 .loc 2 1517 0
 3769 0008 7B68     	 ldr r3,[r7,#4]
 3770 000a D3F81031 	 ldr r3,[r3,#272]
 3771 000e 03F48073 	 and r3,r3,#256
 3772 0012 002B     	 cmp r3,#0
 3773 0014 06D0     	 beq .L133
1518:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1519:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 3774              	 .loc 2 1519 0
 3775 0016 7B68     	 ldr r3,[r7,#4]
 3776 0018 D3F81031 	 ldr r3,[r3,#272]
 3777 001c 03F01F03 	 and r3,r3,#31
 3778 0020 FB60     	 str r3,[r7,#12]
 3779 0022 02E0     	 b .L134
 3780              	.L133:
1520:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1521:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1522:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1523:../Libraries/XMCLib/src/xmc_vadc.c ****     /* No such channel */
1524:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 3781              	 .loc 2 1524 0
 3782 0024 4FF0FF33 	 mov r3,#-1
 3783 0028 FB60     	 str r3,[r7,#12]
 3784              	.L134:
1525:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1526:../Libraries/XMCLib/src/xmc_vadc.c **** 
1527:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
 3785              	 .loc 2 1527 0
 3786 002a FB68     	 ldr r3,[r7,#12]
1528:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3787              	 .loc 2 1528 0
 3788 002c 1846     	 mov r0,r3
 3789 002e 1437     	 adds r7,r7,#20
 3790              	.LCFI304:
 3791              	 .cfi_def_cfa_offset 4
 3792 0030 BD46     	 mov sp,r7
 3793              	.LCFI305:
 3794              	 .cfi_def_cfa_register 13
 3795              	 
 3796 0032 5DF8047B 	 ldr r7,[sp],#4
 3797              	.LCFI306:
 3798              	 .cfi_restore 7
 3799              	 .cfi_def_cfa_offset 0
 3800 0036 7047     	 bx lr
 3801              	 .cfi_endproc
 3802              	.LFE258:
 3804              	 .section .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode,"ax",%progbits
 3805              	 .align 2
 3806              	 .global XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
 3807              	 .thumb
 3808              	 .thumb_func
 3810              	XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:
 3811              	.LFB259:
1529:../Libraries/XMCLib/src/xmc_vadc.c **** 
1530:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a Service Request line for the request source event */
1531:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_V
1532:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3812              	 .loc 2 1532 0
 3813              	 .cfi_startproc
 3814              	 
 3815              	 
 3816              	 
 3817 0000 80B4     	 push {r7}
 3818              	.LCFI307:
 3819              	 .cfi_def_cfa_offset 4
 3820              	 .cfi_offset 7,-4
 3821 0002 85B0     	 sub sp,sp,#20
 3822              	.LCFI308:
 3823              	 .cfi_def_cfa_offset 24
 3824 0004 00AF     	 add r7,sp,#0
 3825              	.LCFI309:
 3826              	 .cfi_def_cfa_register 7
 3827 0006 7860     	 str r0,[r7,#4]
 3828 0008 0B46     	 mov r3,r1
 3829 000a FB70     	 strb r3,[r7,#3]
1533:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1534:../Libraries/XMCLib/src/xmc_vadc.c **** 
1535:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_
1536:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC
1537:../Libraries/XMCLib/src/xmc_vadc.c **** 
1538:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 3830              	 .loc 2 1538 0
 3831 000c 7B68     	 ldr r3,[r7,#4]
 3832 000e D3F8C031 	 ldr r3,[r3,#448]
 3833 0012 FB60     	 str r3,[r7,#12]
1539:../Libraries/XMCLib/src/xmc_vadc.c **** 
1540:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV0NP_Msk);
 3834              	 .loc 2 1540 0
 3835 0014 FB68     	 ldr r3,[r7,#12]
 3836 0016 23F00F03 	 bic r3,r3,#15
 3837 001a FB60     	 str r3,[r7,#12]
1541:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV0NP_Pos);
 3838              	 .loc 2 1541 0
 3839 001c FB78     	 ldrb r3,[r7,#3]
 3840 001e FA68     	 ldr r2,[r7,#12]
 3841 0020 1343     	 orrs r3,r3,r2
 3842 0022 FB60     	 str r3,[r7,#12]
1542:../Libraries/XMCLib/src/xmc_vadc.c **** 
1543:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 3843              	 .loc 2 1543 0
 3844 0024 7B68     	 ldr r3,[r7,#4]
 3845 0026 FA68     	 ldr r2,[r7,#12]
 3846 0028 C3F8C021 	 str r2,[r3,#448]
1544:../Libraries/XMCLib/src/xmc_vadc.c **** 
1545:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3847              	 .loc 2 1545 0
 3848 002c 1437     	 adds r7,r7,#20
 3849              	.LCFI310:
 3850              	 .cfi_def_cfa_offset 4
 3851 002e BD46     	 mov sp,r7
 3852              	.LCFI311:
 3853              	 .cfi_def_cfa_register 13
 3854              	 
 3855 0030 5DF8047B 	 ldr r7,[sp],#4
 3856              	.LCFI312:
 3857              	 .cfi_restore 7
 3858              	 .cfi_def_cfa_offset 0
 3859 0034 7047     	 bx lr
 3860              	 .cfi_endproc
 3861              	.LFE259:
 3863 0036 00BF     	 .section .text.XMC_VADC_GROUP_ChannelInit,"ax",%progbits
 3864              	 .align 2
 3865              	 .global XMC_VADC_GROUP_ChannelInit
 3866              	 .thumb
 3867              	 .thumb_func
 3869              	XMC_VADC_GROUP_ChannelInit:
 3870              	.LFB260:
1546:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_QUEUE_AVAILABLE*/
1547:../Libraries/XMCLib/src/xmc_vadc.c **** 
1548:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1549:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize a channel unit */
1550:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelInit(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num,
1551:../Libraries/XMCLib/src/xmc_vadc.c ****                                         const XMC_VADC_CHANNEL_CONFIG_t *config)
1552:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3871              	 .loc 2 1552 0
 3872              	 .cfi_startproc
 3873              	 
 3874              	 
 3875              	 
 3876 0000 80B4     	 push {r7}
 3877              	.LCFI313:
 3878              	 .cfi_def_cfa_offset 4
 3879              	 .cfi_offset 7,-4
 3880 0002 89B0     	 sub sp,sp,#36
 3881              	.LCFI314:
 3882              	 .cfi_def_cfa_offset 40
 3883 0004 00AF     	 add r7,sp,#0
 3884              	.LCFI315:
 3885              	 .cfi_def_cfa_register 7
 3886 0006 F860     	 str r0,[r7,#12]
 3887 0008 B960     	 str r1,[r7,#8]
 3888 000a 7A60     	 str r2,[r7,#4]
1553:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t prio;
1554:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_assign;
1555:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1556:../Libraries/XMCLib/src/xmc_vadc.c **** 
1557:../Libraries/XMCLib/src/xmc_vadc.c **** 
1558:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1559:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CHANNELS_P
1560:../Libraries/XMCLib/src/xmc_vadc.c ****   
1561:../Libraries/XMCLib/src/xmc_vadc.c ****   prio  = (uint32_t)config->channel_priority;
 3889              	 .loc 2 1561 0
 3890 000c 7B68     	 ldr r3,[r7,#4]
 3891 000e 1B7B     	 ldrb r3,[r3,#12]
 3892 0010 BB61     	 str r3,[r7,#24]
1562:../Libraries/XMCLib/src/xmc_vadc.c **** 
1563:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Priority channel */
1564:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign  = group_ptr->CHASS;
 3893              	 .loc 2 1564 0
 3894 0012 FB68     	 ldr r3,[r7,#12]
 3895 0014 D3F88830 	 ldr r3,[r3,#136]
 3896 0018 7B61     	 str r3,[r7,#20]
1565:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign &= ~((uint32_t)((uint32_t)1 << ch_num));
 3897              	 .loc 2 1565 0
 3898 001a BB68     	 ldr r3,[r7,#8]
 3899 001c 0122     	 movs r2,#1
 3900 001e 02FA03F3 	 lsl r3,r2,r3
 3901 0022 DB43     	 mvns r3,r3
 3902 0024 7A69     	 ldr r2,[r7,#20]
 3903 0026 1340     	 ands r3,r3,r2
 3904 0028 7B61     	 str r3,[r7,#20]
1566:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign |= (uint32_t)(prio << ch_num);
 3905              	 .loc 2 1566 0
 3906 002a BB68     	 ldr r3,[r7,#8]
 3907 002c BA69     	 ldr r2,[r7,#24]
 3908 002e 02FA03F3 	 lsl r3,r2,r3
 3909 0032 7A69     	 ldr r2,[r7,#20]
 3910 0034 1343     	 orrs r3,r3,r2
 3911 0036 7B61     	 str r3,[r7,#20]
1567:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHASS = ch_assign;
 3912              	 .loc 2 1567 0
 3913 0038 FB68     	 ldr r3,[r7,#12]
 3914 003a 7A69     	 ldr r2,[r7,#20]
 3915 003c C3F88820 	 str r2,[r3,#136]
1568:../Libraries/XMCLib/src/xmc_vadc.c **** 
1569:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Alias channel */
1570:../Libraries/XMCLib/src/xmc_vadc.c ****   if (config->alias_channel >= (int32_t)0)
 3916              	 .loc 2 1570 0
 3917 0040 7B68     	 ldr r3,[r7,#4]
 3918 0042 5B7B     	 ldrb r3,[r3,#13]
 3919 0044 5BB2     	 sxtb r3,r3
 3920 0046 002B     	 cmp r3,#0
 3921 0048 29DB     	 blt .L138
1571:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1572:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)0;
 3922              	 .loc 2 1572 0
 3923 004a 0023     	 movs r3,#0
 3924 004c FB61     	 str r3,[r7,#28]
1573:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint32_t)1 == ch_num)
 3925              	 .loc 2 1573 0
 3926 004e BB68     	 ldr r3,[r7,#8]
 3927 0050 012B     	 cmp r3,#1
 3928 0052 0AD1     	 bne .L139
1574:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1575:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS1_Pos;
 3929              	 .loc 2 1575 0
 3930 0054 0823     	 movs r3,#8
 3931 0056 FB61     	 str r3,[r7,#28]
1576:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS1_Msk);
 3932              	 .loc 2 1576 0
 3933 0058 FB68     	 ldr r3,[r7,#12]
 3934 005a D3F8B030 	 ldr r3,[r3,#176]
 3935 005e 23F4F852 	 bic r2,r3,#7936
 3936 0062 FB68     	 ldr r3,[r7,#12]
 3937 0064 C3F8B020 	 str r2,[r3,#176]
 3938 0068 0CE0     	 b .L140
 3939              	.L139:
1577:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1578:../Libraries/XMCLib/src/xmc_vadc.c ****     else if ((uint32_t)0 == ch_num)
 3940              	 .loc 2 1578 0
 3941 006a BB68     	 ldr r3,[r7,#8]
 3942 006c 002B     	 cmp r3,#0
 3943 006e 09D1     	 bne .L140
1579:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1580:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS0_Pos;
 3944              	 .loc 2 1580 0
 3945 0070 0023     	 movs r3,#0
 3946 0072 FB61     	 str r3,[r7,#28]
1581:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS0_Msk);
 3947              	 .loc 2 1581 0
 3948 0074 FB68     	 ldr r3,[r7,#12]
 3949 0076 D3F8B030 	 ldr r3,[r3,#176]
 3950 007a 23F01F02 	 bic r2,r3,#31
 3951 007e FB68     	 ldr r3,[r7,#12]
 3952 0080 C3F8B020 	 str r2,[r3,#176]
 3953              	.L140:
1582:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1583:../Libraries/XMCLib/src/xmc_vadc.c **** 
1584:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ALIAS |= (uint32_t)(config->alias_channel << mask);
 3954              	 .loc 2 1584 0
 3955 0084 FB68     	 ldr r3,[r7,#12]
 3956 0086 D3F8B030 	 ldr r3,[r3,#176]
 3957 008a 7A68     	 ldr r2,[r7,#4]
 3958 008c 527B     	 ldrb r2,[r2,#13]
 3959 008e 51B2     	 sxtb r1,r2
 3960 0090 FA69     	 ldr r2,[r7,#28]
 3961 0092 01FA02F2 	 lsl r2,r1,r2
 3962 0096 1A43     	 orrs r2,r2,r3
 3963 0098 FB68     	 ldr r3,[r7,#12]
 3964 009a C3F8B020 	 str r2,[r3,#176]
 3965              	.L138:
1585:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1586:../Libraries/XMCLib/src/xmc_vadc.c **** 
1587:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFL |= config->bfl;
 3966              	 .loc 2 1587 0
 3967 009e FB68     	 ldr r3,[r7,#12]
 3968 00a0 D3F8C820 	 ldr r2,[r3,#200]
 3969 00a4 7B68     	 ldr r3,[r7,#4]
 3970 00a6 5B68     	 ldr r3,[r3,#4]
 3971 00a8 1A43     	 orrs r2,r2,r3
 3972 00aa FB68     	 ldr r3,[r7,#12]
 3973 00ac C3F8C820 	 str r2,[r3,#200]
1588:../Libraries/XMCLib/src/xmc_vadc.c **** 
1589:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
1590:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLC |= config->bflc;
 3974              	 .loc 2 1590 0
 3975 00b0 FB68     	 ldr r3,[r7,#12]
 3976 00b2 D3F8D020 	 ldr r2,[r3,#208]
 3977 00b6 7B68     	 ldr r3,[r7,#4]
 3978 00b8 9B68     	 ldr r3,[r3,#8]
 3979 00ba 1A43     	 orrs r2,r2,r3
 3980 00bc FB68     	 ldr r3,[r7,#12]
 3981 00be C3F8D020 	 str r2,[r3,#208]
1591:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1592:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the CHCTR register */
1593:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = config->chctr;
 3982              	 .loc 2 1593 0
 3983 00c2 7B68     	 ldr r3,[r7,#4]
 3984 00c4 1968     	 ldr r1,[r3]
 3985 00c6 FB68     	 ldr r3,[r7,#12]
 3986 00c8 BA68     	 ldr r2,[r7,#8]
 3987 00ca 8032     	 adds r2,r2,#128
 3988 00cc 43F82210 	 str r1,[r3,r2,lsl#2]
1594:../Libraries/XMCLib/src/xmc_vadc.c **** 
1595:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3989              	 .loc 2 1595 0
 3990 00d0 2437     	 adds r7,r7,#36
 3991              	.LCFI316:
 3992              	 .cfi_def_cfa_offset 4
 3993 00d2 BD46     	 mov sp,r7
 3994              	.LCFI317:
 3995              	 .cfi_def_cfa_register 13
 3996              	 
 3997 00d4 5DF8047B 	 ldr r7,[sp],#4
 3998              	.LCFI318:
 3999              	 .cfi_restore 7
 4000              	 .cfi_def_cfa_offset 0
 4001 00d8 7047     	 bx lr
 4002              	 .cfi_endproc
 4003              	.LFE260:
 4005 00da 00BF     	 .section .text.XMC_VADC_GROUP_SetChannelAlias,"ax",%progbits
 4006              	 .align 2
 4007              	 .global XMC_VADC_GROUP_SetChannelAlias
 4008              	 .thumb
 4009              	 .thumb_func
 4011              	XMC_VADC_GROUP_SetChannelAlias:
 4012              	.LFB261:
1596:../Libraries/XMCLib/src/xmc_vadc.c **** 
1597:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an alias channel for channels numbered 2 through 7 */
1598:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetChannelAlias(XMC_VADC_GROUP_t *const group_ptr,
1599:../Libraries/XMCLib/src/xmc_vadc.c ****                                     const uint32_t src_ch_num,
1600:../Libraries/XMCLib/src/xmc_vadc.c ****                                     const uint32_t alias_ch_num)
1601:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4013              	 .loc 2 1601 0
 4014              	 .cfi_startproc
 4015              	 
 4016              	 
 4017              	 
 4018 0000 80B4     	 push {r7}
 4019              	.LCFI319:
 4020              	 .cfi_def_cfa_offset 4
 4021              	 .cfi_offset 7,-4
 4022 0002 89B0     	 sub sp,sp,#36
 4023              	.LCFI320:
 4024              	 .cfi_def_cfa_offset 40
 4025 0004 00AF     	 add r7,sp,#0
 4026              	.LCFI321:
 4027              	 .cfi_def_cfa_register 7
 4028 0006 F860     	 str r0,[r7,#12]
 4029 0008 B960     	 str r1,[r7,#8]
 4030 000a 7A60     	 str r2,[r7,#4]
1602:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t alias;
1603:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1604:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
1605:../Libraries/XMCLib/src/xmc_vadc.c **** 
1606:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1607:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Alias Channel", ((alias_ch_num == 0)|| (alias_ch
1608:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Aliased Channel", ((src_ch_num < 8U)))
1609:../Libraries/XMCLib/src/xmc_vadc.c **** 
1610:../Libraries/XMCLib/src/xmc_vadc.c ****   alias = group_ptr->ALIAS;
 4031              	 .loc 2 1610 0
 4032 000c FB68     	 ldr r3,[r7,#12]
 4033 000e D3F8B030 	 ldr r3,[r3,#176]
 4034 0012 7B61     	 str r3,[r7,#20]
1611:../Libraries/XMCLib/src/xmc_vadc.c **** 
1612:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == alias_ch_num)
 4035              	 .loc 2 1612 0
 4036 0014 7B68     	 ldr r3,[r7,#4]
 4037 0016 002B     	 cmp r3,#0
 4038 0018 04D1     	 bne .L142
1613:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1614:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t) VADC_G_ALIAS_ALIAS0_Msk;
 4039              	 .loc 2 1614 0
 4040 001a 1F23     	 movs r3,#31
 4041 001c FB61     	 str r3,[r7,#28]
1615:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t) VADC_G_ALIAS_ALIAS0_Pos;
 4042              	 .loc 2 1615 0
 4043 001e 0023     	 movs r3,#0
 4044 0020 BB61     	 str r3,[r7,#24]
 4045 0022 04E0     	 b .L143
 4046              	.L142:
1616:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1617:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1618:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1619:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t) VADC_G_ALIAS_ALIAS1_Msk;
 4047              	 .loc 2 1619 0
 4048 0024 4FF4F853 	 mov r3,#7936
 4049 0028 FB61     	 str r3,[r7,#28]
1620:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t) VADC_G_ALIAS_ALIAS1_Pos;
 4050              	 .loc 2 1620 0
 4051 002a 0823     	 movs r3,#8
 4052 002c BB61     	 str r3,[r7,#24]
 4053              	.L143:
1621:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1622:../Libraries/XMCLib/src/xmc_vadc.c ****   alias &= ~mask;
 4054              	 .loc 2 1622 0
 4055 002e FB69     	 ldr r3,[r7,#28]
 4056 0030 DB43     	 mvns r3,r3
 4057 0032 7A69     	 ldr r2,[r7,#20]
 4058 0034 1340     	 ands r3,r3,r2
 4059 0036 7B61     	 str r3,[r7,#20]
1623:../Libraries/XMCLib/src/xmc_vadc.c ****   alias |= (uint32_t)(src_ch_num << pos);
 4060              	 .loc 2 1623 0
 4061 0038 BB69     	 ldr r3,[r7,#24]
 4062 003a BA68     	 ldr r2,[r7,#8]
 4063 003c 02FA03F3 	 lsl r3,r2,r3
 4064 0040 7A69     	 ldr r2,[r7,#20]
 4065 0042 1343     	 orrs r3,r3,r2
 4066 0044 7B61     	 str r3,[r7,#20]
1624:../Libraries/XMCLib/src/xmc_vadc.c **** 
1625:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ALIAS = alias;
 4067              	 .loc 2 1625 0
 4068 0046 FB68     	 ldr r3,[r7,#12]
 4069 0048 7A69     	 ldr r2,[r7,#20]
 4070 004a C3F8B020 	 str r2,[r3,#176]
1626:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4071              	 .loc 2 1626 0
 4072 004e 2437     	 adds r7,r7,#36
 4073              	.LCFI322:
 4074              	 .cfi_def_cfa_offset 4
 4075 0050 BD46     	 mov sp,r7
 4076              	.LCFI323:
 4077              	 .cfi_def_cfa_register 13
 4078              	 
 4079 0052 5DF8047B 	 ldr r7,[sp],#4
 4080              	.LCFI324:
 4081              	 .cfi_restore 7
 4082              	 .cfi_def_cfa_offset 0
 4083 0056 7047     	 bx lr
 4084              	 .cfi_endproc
 4085              	.LFE261:
 4087              	 .section .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds,"ax",%progbits
 4088              	 .align 2
 4089              	 .global XMC_VADC_GROUP_ChannelIsResultOutOfBounds
 4090              	 .thumb
 4091              	 .thumb_func
 4093              	XMC_VADC_GROUP_ChannelIsResultOutOfBounds:
 4094              	.LFB262:
1627:../Libraries/XMCLib/src/xmc_vadc.c **** 
1628:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine whether input to a channel has violated boundary conditions */
1629:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_ChannelIsResultOutOfBounds(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch
1630:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4095              	 .loc 2 1630 0
 4096              	 .cfi_startproc
 4097              	 
 4098              	 
 4099              	 
 4100 0000 80B4     	 push {r7}
 4101              	.LCFI325:
 4102              	 .cfi_def_cfa_offset 4
 4103              	 .cfi_offset 7,-4
 4104 0002 87B0     	 sub sp,sp,#28
 4105              	.LCFI326:
 4106              	 .cfi_def_cfa_offset 32
 4107 0004 00AF     	 add r7,sp,#0
 4108              	.LCFI327:
 4109              	 .cfi_def_cfa_register 7
 4110 0006 7860     	 str r0,[r7,#4]
 4111 0008 3960     	 str r1,[r7]
1631:../Libraries/XMCLib/src/xmc_vadc.c ****   bool retval;
1632:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    chctr;
1633:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    ceflag;
1634:../Libraries/XMCLib/src/xmc_vadc.c **** 
1635:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1636:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Channel Number",
1637:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1638:../Libraries/XMCLib/src/xmc_vadc.c **** 
1639:../Libraries/XMCLib/src/xmc_vadc.c ****   retval = (bool)false;
 4112              	 .loc 2 1639 0
 4113 000a 0023     	 movs r3,#0
 4114 000c FB75     	 strb r3,[r7,#23]
1640:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1641:../Libraries/XMCLib/src/xmc_vadc.c ****     Check if the Channel event is configured to be generated in the event of
1642:../Libraries/XMCLib/src/xmc_vadc.c ****     boundary violation and if affirmative, check if the channel event is set.
1643:../Libraries/XMCLib/src/xmc_vadc.c ****   */
1644:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CHEVMODE for requested channel */
1645:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4115              	 .loc 2 1645 0
 4116 000e 7B68     	 ldr r3,[r7,#4]
 4117 0010 3A68     	 ldr r2,[r7]
 4118 0012 8032     	 adds r2,r2,#128
 4119 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4120 0018 3B61     	 str r3,[r7,#16]
1646:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = (uint32_t)(chctr >> (uint32_t)VADC_G_CHCTR_CHEVMODE_Pos)& (uint32_t)0x3;
 4121              	 .loc 2 1646 0
 4122 001a 3B69     	 ldr r3,[r7,#16]
 4123 001c 1B0A     	 lsrs r3,r3,#8
 4124 001e 03F00303 	 and r3,r3,#3
 4125 0022 3B61     	 str r3,[r7,#16]
1647:../Libraries/XMCLib/src/xmc_vadc.c **** 
1648:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CEFLAG for the requested channel */
1649:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = group_ptr->CEFLAG;
 4126              	 .loc 2 1649 0
 4127 0024 7B68     	 ldr r3,[r7,#4]
 4128 0026 D3F88031 	 ldr r3,[r3,#384]
 4129 002a FB60     	 str r3,[r7,#12]
1650:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = ceflag & ((uint32_t)((uint32_t)1 << ch_num) );
 4130              	 .loc 2 1650 0
 4131 002c 3B68     	 ldr r3,[r7]
 4132 002e 0122     	 movs r2,#1
 4133 0030 02FA03F3 	 lsl r3,r2,r3
 4134 0034 FA68     	 ldr r2,[r7,#12]
 4135 0036 1340     	 ands r3,r3,r2
 4136 0038 FB60     	 str r3,[r7,#12]
1651:../Libraries/XMCLib/src/xmc_vadc.c **** 
1652:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Check what was the channel event generation criteria */
1653:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (( (uint32_t)XMC_VADC_CHANNEL_EVGEN_INBOUND == chctr) \
 4137              	 .loc 2 1653 0
 4138 003a 3B69     	 ldr r3,[r7,#16]
 4139 003c 012B     	 cmp r3,#1
 4140 003e 02D0     	 beq .L145
1654:../Libraries/XMCLib/src/xmc_vadc.c ****       || ((uint32_t) XMC_VADC_CHANNEL_EVGEN_OUTBOUND == chctr)) && (ceflag) )
 4141              	 .loc 2 1654 0
 4142 0040 3B69     	 ldr r3,[r7,#16]
 4143 0042 022B     	 cmp r3,#2
 4144 0044 04D1     	 bne .L146
 4145              	.L145:
 4146              	 .loc 2 1654 0 is_stmt 0 discriminator 1
 4147 0046 FB68     	 ldr r3,[r7,#12]
 4148 0048 002B     	 cmp r3,#0
 4149 004a 01D0     	 beq .L146
1655:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1656:../Libraries/XMCLib/src/xmc_vadc.c ****     retval = (bool)true;
 4150              	 .loc 2 1656 0 is_stmt 1
 4151 004c 0123     	 movs r3,#1
 4152 004e FB75     	 strb r3,[r7,#23]
 4153              	.L146:
1657:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1658:../Libraries/XMCLib/src/xmc_vadc.c **** 
1659:../Libraries/XMCLib/src/xmc_vadc.c ****   return retval;
 4154              	 .loc 2 1659 0
 4155 0050 FB7D     	 ldrb r3,[r7,#23]
1660:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4156              	 .loc 2 1660 0
 4157 0052 1846     	 mov r0,r3
 4158 0054 1C37     	 adds r7,r7,#28
 4159              	.LCFI328:
 4160              	 .cfi_def_cfa_offset 4
 4161 0056 BD46     	 mov sp,r7
 4162              	.LCFI329:
 4163              	 .cfi_def_cfa_register 13
 4164              	 
 4165 0058 5DF8047B 	 ldr r7,[sp],#4
 4166              	.LCFI330:
 4167              	 .cfi_restore 7
 4168              	 .cfi_def_cfa_offset 0
 4169 005c 7047     	 bx lr
 4170              	 .cfi_endproc
 4171              	.LFE262:
 4173 005e 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetInputReference,"ax",%progbits
 4174              	 .align 2
 4175              	 .global XMC_VADC_GROUP_ChannelSetInputReference
 4176              	 .thumb
 4177              	 .thumb_func
 4179              	XMC_VADC_GROUP_ChannelSetInputReference:
 4180              	.LFB263:
1661:../Libraries/XMCLib/src/xmc_vadc.c **** 
1662:../Libraries/XMCLib/src/xmc_vadc.c **** /* Set a reference voltage for conversion */
1663:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetInputReference(XMC_VADC_GROUP_t *const group_ptr,
1664:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1665:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const XMC_VADC_CHANNEL_REF_t ref)
1666:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4181              	 .loc 2 1666 0
 4182              	 .cfi_startproc
 4183              	 
 4184              	 
 4185              	 
 4186 0000 80B4     	 push {r7}
 4187              	.LCFI331:
 4188              	 .cfi_def_cfa_offset 4
 4189              	 .cfi_offset 7,-4
 4190 0002 87B0     	 sub sp,sp,#28
 4191              	.LCFI332:
 4192              	 .cfi_def_cfa_offset 32
 4193 0004 00AF     	 add r7,sp,#0
 4194              	.LCFI333:
 4195              	 .cfi_def_cfa_register 7
 4196 0006 F860     	 str r0,[r7,#12]
 4197 0008 B960     	 str r1,[r7,#8]
 4198 000a 1346     	 mov r3,r2
 4199 000c FB71     	 strb r3,[r7,#7]
1667:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1668:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1669:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Channel Number", ((ch_num) < XMC_VADC_N
1670:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Voltage Reference", ((ref)<= XMC_VADC_C
1671:../Libraries/XMCLib/src/xmc_vadc.c **** 
1672:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4200              	 .loc 2 1672 0
 4201 000e FB68     	 ldr r3,[r7,#12]
 4202 0010 BA68     	 ldr r2,[r7,#8]
 4203 0012 8032     	 adds r2,r2,#128
 4204 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4205 0018 7B61     	 str r3,[r7,#20]
1673:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_REFSEL_Msk);
 4206              	 .loc 2 1673 0
 4207 001a 7B69     	 ldr r3,[r7,#20]
 4208 001c 23F40063 	 bic r3,r3,#2048
 4209 0020 7B61     	 str r3,[r7,#20]
1674:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)ref <<  VADC_G_CHCTR_REFSEL_Pos);
 4210              	 .loc 2 1674 0
 4211 0022 FB79     	 ldrb r3,[r7,#7]
 4212 0024 DB02     	 lsls r3,r3,#11
 4213 0026 7A69     	 ldr r2,[r7,#20]
 4214 0028 1343     	 orrs r3,r3,r2
 4215 002a 7B61     	 str r3,[r7,#20]
1675:../Libraries/XMCLib/src/xmc_vadc.c **** 
1676:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4216              	 .loc 2 1676 0
 4217 002c FB68     	 ldr r3,[r7,#12]
 4218 002e BA68     	 ldr r2,[r7,#8]
 4219 0030 8032     	 adds r2,r2,#128
 4220 0032 7969     	 ldr r1,[r7,#20]
 4221 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1677:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4222              	 .loc 2 1677 0
 4223 0038 1C37     	 adds r7,r7,#28
 4224              	.LCFI334:
 4225              	 .cfi_def_cfa_offset 4
 4226 003a BD46     	 mov sp,r7
 4227              	.LCFI335:
 4228              	 .cfi_def_cfa_register 13
 4229              	 
 4230 003c 5DF8047B 	 ldr r7,[sp],#4
 4231              	.LCFI336:
 4232              	 .cfi_restore 7
 4233              	 .cfi_def_cfa_offset 0
 4234 0040 7047     	 bx lr
 4235              	 .cfi_endproc
 4236              	.LFE263:
 4238 0042 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetResultRegister,"ax",%progbits
 4239              	 .align 2
 4240              	 .global XMC_VADC_GROUP_ChannelSetResultRegister
 4241              	 .thumb
 4242              	 .thumb_func
 4244              	XMC_VADC_GROUP_ChannelSetResultRegister:
 4245              	.LFB264:
1678:../Libraries/XMCLib/src/xmc_vadc.c **** 
1679:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 16 registers for storing the channel result */
1680:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetResultRegister(XMC_VADC_GROUP_t *const group_ptr,
1681:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1682:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t result_reg_num)
1683:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4246              	 .loc 2 1683 0
 4247              	 .cfi_startproc
 4248              	 
 4249              	 
 4250              	 
 4251 0000 80B4     	 push {r7}
 4252              	.LCFI337:
 4253              	 .cfi_def_cfa_offset 4
 4254              	 .cfi_offset 7,-4
 4255 0002 87B0     	 sub sp,sp,#28
 4256              	.LCFI338:
 4257              	 .cfi_def_cfa_offset 32
 4258 0004 00AF     	 add r7,sp,#0
 4259              	.LCFI339:
 4260              	 .cfi_def_cfa_register 7
 4261 0006 F860     	 str r0,[r7,#12]
 4262 0008 B960     	 str r1,[r7,#8]
 4263 000a 7A60     	 str r2,[r7,#4]
1684:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1685:../Libraries/XMCLib/src/xmc_vadc.c **** 
1686:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1687:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Channel Number",
1688:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1689:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Result Register",
1690:../Libraries/XMCLib/src/xmc_vadc.c ****              ((result_reg_num) < XMC_VADC_NUM_RESULT_REGISTERS))
1691:../Libraries/XMCLib/src/xmc_vadc.c **** 
1692:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4264              	 .loc 2 1692 0
 4265 000c FB68     	 ldr r3,[r7,#12]
 4266 000e BA68     	 ldr r2,[r7,#8]
 4267 0010 8032     	 adds r2,r2,#128
 4268 0012 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4269 0016 7B61     	 str r3,[r7,#20]
1693:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_RESREG_Msk);
 4270              	 .loc 2 1693 0
 4271 0018 7B69     	 ldr r3,[r7,#20]
 4272 001a 23F47023 	 bic r3,r3,#983040
 4273 001e 7B61     	 str r3,[r7,#20]
1694:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)(result_reg_num <<  VADC_G_CHCTR_RESREG_Pos);
 4274              	 .loc 2 1694 0
 4275 0020 7B68     	 ldr r3,[r7,#4]
 4276 0022 1B04     	 lsls r3,r3,#16
 4277 0024 7A69     	 ldr r2,[r7,#20]
 4278 0026 1343     	 orrs r3,r3,r2
 4279 0028 7B61     	 str r3,[r7,#20]
1695:../Libraries/XMCLib/src/xmc_vadc.c **** 
1696:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4280              	 .loc 2 1696 0
 4281 002a FB68     	 ldr r3,[r7,#12]
 4282 002c BA68     	 ldr r2,[r7,#8]
 4283 002e 8032     	 adds r2,r2,#128
 4284 0030 7969     	 ldr r1,[r7,#20]
 4285 0032 43F82210 	 str r1,[r3,r2,lsl#2]
1697:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4286              	 .loc 2 1697 0
 4287 0036 1C37     	 adds r7,r7,#28
 4288              	.LCFI340:
 4289              	 .cfi_def_cfa_offset 4
 4290 0038 BD46     	 mov sp,r7
 4291              	.LCFI341:
 4292              	 .cfi_def_cfa_register 13
 4293              	 
 4294 003a 5DF8047B 	 ldr r7,[sp],#4
 4295              	.LCFI342:
 4296              	 .cfi_restore 7
 4297              	 .cfi_def_cfa_offset 0
 4298 003e 7047     	 bx lr
 4299              	 .cfi_endproc
 4300              	.LFE264:
 4302              	 .section .text.XMC_VADC_GROUP_ChannelGetResultRegister,"ax",%progbits
 4303              	 .align 2
 4304              	 .global XMC_VADC_GROUP_ChannelGetResultRegister
 4305              	 .thumb
 4306              	 .thumb_func
 4308              	XMC_VADC_GROUP_ChannelGetResultRegister:
 4309              	.LFB265:
1698:../Libraries/XMCLib/src/xmc_vadc.c **** 
1699:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result register bound with specified channel */
1700:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GROUP_ChannelGetResultRegister(XMC_VADC_GROUP_t *const group_ptr, const uint32_t c
1701:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4310              	 .loc 2 1701 0
 4311              	 .cfi_startproc
 4312              	 
 4313              	 
 4314              	 
 4315 0000 80B4     	 push {r7}
 4316              	.LCFI343:
 4317              	 .cfi_def_cfa_offset 4
 4318              	 .cfi_offset 7,-4
 4319 0002 85B0     	 sub sp,sp,#20
 4320              	.LCFI344:
 4321              	 .cfi_def_cfa_offset 24
 4322 0004 00AF     	 add r7,sp,#0
 4323              	.LCFI345:
 4324              	 .cfi_def_cfa_register 7
 4325 0006 7860     	 str r0,[r7,#4]
 4326 0008 3960     	 str r1,[r7]
1702:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t resreg;
1703:../Libraries/XMCLib/src/xmc_vadc.c **** 
1704:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1705:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Channel Number",
1706:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1707:../Libraries/XMCLib/src/xmc_vadc.c **** 
1708:../Libraries/XMCLib/src/xmc_vadc.c ****   resreg = (uint8_t)((group_ptr->CHCTR[ch_num] & (uint32_t)VADC_G_CHCTR_RESREG_Msk) >> VADC_G_CHCTR
 4327              	 .loc 2 1708 0
 4328 000a 7B68     	 ldr r3,[r7,#4]
 4329 000c 3A68     	 ldr r2,[r7]
 4330 000e 8032     	 adds r2,r2,#128
 4331 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4332 0014 03F47023 	 and r3,r3,#983040
 4333 0018 1B0C     	 lsrs r3,r3,#16
 4334 001a FB73     	 strb r3,[r7,#15]
1709:../Libraries/XMCLib/src/xmc_vadc.c **** 
1710:../Libraries/XMCLib/src/xmc_vadc.c ****   return resreg;
 4335              	 .loc 2 1710 0
 4336 001c FB7B     	 ldrb r3,[r7,#15]
1711:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4337              	 .loc 2 1711 0
 4338 001e 1846     	 mov r0,r3
 4339 0020 1437     	 adds r7,r7,#20
 4340              	.LCFI346:
 4341              	 .cfi_def_cfa_offset 4
 4342 0022 BD46     	 mov sp,r7
 4343              	.LCFI347:
 4344              	 .cfi_def_cfa_register 13
 4345              	 
 4346 0024 5DF8047B 	 ldr r7,[sp],#4
 4347              	.LCFI348:
 4348              	 .cfi_restore 7
 4349              	 .cfi_def_cfa_offset 0
 4350 0028 7047     	 bx lr
 4351              	 .cfi_endproc
 4352              	.LFE265:
 4354 002a 00BF     	 .section .text.XMC_VADC_GROUP_ChannelTriggerEvent,"ax",%progbits
 4355              	 .align 2
 4356              	 .global XMC_VADC_GROUP_ChannelTriggerEvent
 4357              	 .thumb
 4358              	 .thumb_func
 4360              	XMC_VADC_GROUP_ChannelTriggerEvent:
 4361              	.LFB266:
1712:../Libraries/XMCLib/src/xmc_vadc.c **** 
1713:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to manually assert channel event */
1714:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEvent(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num)
1715:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4362              	 .loc 2 1715 0
 4363              	 .cfi_startproc
 4364              	 
 4365              	 
 4366              	 
 4367 0000 80B4     	 push {r7}
 4368              	.LCFI349:
 4369              	 .cfi_def_cfa_offset 4
 4370              	 .cfi_offset 7,-4
 4371 0002 85B0     	 sub sp,sp,#20
 4372              	.LCFI350:
 4373              	 .cfi_def_cfa_offset 24
 4374 0004 00AF     	 add r7,sp,#0
 4375              	.LCFI351:
 4376              	 .cfi_def_cfa_register 7
 4377 0006 7860     	 str r0,[r7,#4]
 4378 0008 3960     	 str r1,[r7]
1716:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ceflag;
1717:../Libraries/XMCLib/src/xmc_vadc.c **** 
1718:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1719:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CH
1720:../Libraries/XMCLib/src/xmc_vadc.c **** 
1721:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag  = group_ptr->CEFLAG;
 4379              	 .loc 2 1721 0
 4380 000a 7B68     	 ldr r3,[r7,#4]
 4381 000c D3F88031 	 ldr r3,[r3,#384]
 4382 0010 FB60     	 str r3,[r7,#12]
1722:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag |= (uint32_t)((uint32_t)1 << ch_num);
 4383              	 .loc 2 1722 0
 4384 0012 3B68     	 ldr r3,[r7]
 4385 0014 0122     	 movs r2,#1
 4386 0016 02FA03F3 	 lsl r3,r2,r3
 4387 001a FA68     	 ldr r2,[r7,#12]
 4388 001c 1343     	 orrs r3,r3,r2
 4389 001e FB60     	 str r3,[r7,#12]
1723:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEFLAG = ceflag;
 4390              	 .loc 2 1723 0
 4391 0020 7B68     	 ldr r3,[r7,#4]
 4392 0022 FA68     	 ldr r2,[r7,#12]
 4393 0024 C3F88021 	 str r2,[r3,#384]
1724:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4394              	 .loc 2 1724 0
 4395 0028 1437     	 adds r7,r7,#20
 4396              	.LCFI352:
 4397              	 .cfi_def_cfa_offset 4
 4398 002a BD46     	 mov sp,r7
 4399              	.LCFI353:
 4400              	 .cfi_def_cfa_register 13
 4401              	 
 4402 002c 5DF8047B 	 ldr r7,[sp],#4
 4403              	.LCFI354:
 4404              	 .cfi_restore 7
 4405              	 .cfi_def_cfa_offset 0
 4406 0030 7047     	 bx lr
 4407              	 .cfi_endproc
 4408              	.LFE266:
 4410 0032 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode,"ax",%progbits
 4411              	 .align 2
 4412              	 .global XMC_VADC_GROUP_ChannelSetEventInterruptNode
 4413              	 .thumb
 4414              	 .thumb_func
 4416              	XMC_VADC_GROUP_ChannelSetEventInterruptNode:
 4417              	.LFB267:
1725:../Libraries/XMCLib/src/xmc_vadc.c **** 
1726:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind channel event with a service request (NVIC Node) */
1727:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1728:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1729:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_SR_t sr)
1730:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4418              	 .loc 2 1730 0
 4419              	 .cfi_startproc
 4420              	 
 4421              	 
 4422              	 
 4423 0000 80B4     	 push {r7}
 4424              	.LCFI355:
 4425              	 .cfi_def_cfa_offset 4
 4426              	 .cfi_offset 7,-4
 4427 0002 87B0     	 sub sp,sp,#28
 4428              	.LCFI356:
 4429              	 .cfi_def_cfa_offset 32
 4430 0004 00AF     	 add r7,sp,#0
 4431              	.LCFI357:
 4432              	 .cfi_def_cfa_register 7
 4433 0006 F860     	 str r0,[r7,#12]
 4434 0008 B960     	 str r1,[r7,#8]
 4435 000a 1346     	 mov r3,r2
 4436 000c FB71     	 strb r3,[r7,#7]
1731:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1732:../Libraries/XMCLib/src/xmc_vadc.c **** 
1733:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROU
1734:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Channel Number",
1735:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1736:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_VAD
1737:../Libraries/XMCLib/src/xmc_vadc.c **** 
1738:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask  = group_ptr->CEVNP0;
 4437              	 .loc 2 1738 0
 4438 000e FB68     	 ldr r3,[r7,#12]
 4439 0010 D3F8A031 	 ldr r3,[r3,#416]
 4440 0014 7B61     	 str r3,[r7,#20]
1739:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask &= ~((uint32_t)15 << (ch_num * (uint32_t)4));
 4441              	 .loc 2 1739 0
 4442 0016 BB68     	 ldr r3,[r7,#8]
 4443 0018 9B00     	 lsls r3,r3,#2
 4444 001a 1A46     	 mov r2,r3
 4445 001c 0F23     	 movs r3,#15
 4446 001e 9340     	 lsls r3,r3,r2
 4447 0020 DB43     	 mvns r3,r3
 4448 0022 7A69     	 ldr r2,[r7,#20]
 4449 0024 1340     	 ands r3,r3,r2
 4450 0026 7B61     	 str r3,[r7,#20]
1740:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask |= (uint32_t)( (uint32_t)sr << (ch_num * (uint32_t)4));
 4451              	 .loc 2 1740 0
 4452 0028 FB79     	 ldrb r3,[r7,#7]
 4453 002a BA68     	 ldr r2,[r7,#8]
 4454 002c 9200     	 lsls r2,r2,#2
 4455 002e 9340     	 lsls r3,r3,r2
 4456 0030 7A69     	 ldr r2,[r7,#20]
 4457 0032 1343     	 orrs r3,r3,r2
 4458 0034 7B61     	 str r3,[r7,#20]
1741:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEVNP0 = route_mask;
 4459              	 .loc 2 1741 0
 4460 0036 FB68     	 ldr r3,[r7,#12]
 4461 0038 7A69     	 ldr r2,[r7,#20]
 4462 003a C3F8A021 	 str r2,[r3,#416]
1742:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4463              	 .loc 2 1742 0
 4464 003e 1C37     	 adds r7,r7,#28
 4465              	.LCFI358:
 4466              	 .cfi_def_cfa_offset 4
 4467 0040 BD46     	 mov sp,r7
 4468              	.LCFI359:
 4469              	 .cfi_def_cfa_register 13
 4470              	 
 4471 0042 5DF8047B 	 ldr r7,[sp],#4
 4472              	.LCFI360:
 4473              	 .cfi_restore 7
 4474              	 .cfi_def_cfa_offset 0
 4475 0046 7047     	 bx lr
 4476              	 .cfi_endproc
 4477              	.LFE267:
 4479              	 .section .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria,"ax",%progbits
 4480              	 .align 2
 4481              	 .global XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
 4482              	 .thumb
 4483              	 .thumb_func
 4485              	XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:
 4486              	.LFB268:
1743:../Libraries/XMCLib/src/xmc_vadc.c **** 
1744:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure conditions for generation of channel event */
1745:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEventGenCriteria( XMC_VADC_GROUP_t *const group_ptr,
1746:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    const uint32_t ch_num,
1747:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    const XMC_VADC_CHANNEL_EVGEN_t criteria)
1748:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4487              	 .loc 2 1748 0
 4488              	 .cfi_startproc
 4489              	 
 4490              	 
 4491              	 
 4492 0000 80B4     	 push {r7}
 4493              	.LCFI361:
 4494              	 .cfi_def_cfa_offset 4
 4495              	 .cfi_offset 7,-4
 4496 0002 87B0     	 sub sp,sp,#28
 4497              	.LCFI362:
 4498              	 .cfi_def_cfa_offset 32
 4499 0004 00AF     	 add r7,sp,#0
 4500              	.LCFI363:
 4501              	 .cfi_def_cfa_register 7
 4502 0006 F860     	 str r0,[r7,#12]
 4503 0008 B960     	 str r1,[r7,#8]
 4504 000a 1346     	 mov r3,r2
 4505 000c FB71     	 strb r3,[r7,#7]
1749:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1750:../Libraries/XMCLib/src/xmc_vadc.c **** 
1751:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Group Pointer", XMC_VADC_CHECK_GR
1752:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Channel Number",
1753:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1754:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Event Generation Criteria",
1755:../Libraries/XMCLib/src/xmc_vadc.c ****              ((criteria) <= XMC_VADC_CHANNEL_EVGEN_ALWAYS))
1756:../Libraries/XMCLib/src/xmc_vadc.c **** 
1757:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4506              	 .loc 2 1757 0
 4507 000e FB68     	 ldr r3,[r7,#12]
 4508 0010 BA68     	 ldr r2,[r7,#8]
 4509 0012 8032     	 adds r2,r2,#128
 4510 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4511 0018 7B61     	 str r3,[r7,#20]
1758:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_CHEVMODE_Msk);
 4512              	 .loc 2 1758 0
 4513 001a 7B69     	 ldr r3,[r7,#20]
 4514 001c 23F44073 	 bic r3,r3,#768
 4515 0020 7B61     	 str r3,[r7,#20]
1759:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)criteria << VADC_G_CHCTR_CHEVMODE_Pos);
 4516              	 .loc 2 1759 0
 4517 0022 FB79     	 ldrb r3,[r7,#7]
 4518 0024 1B02     	 lsls r3,r3,#8
 4519 0026 7A69     	 ldr r2,[r7,#20]
 4520 0028 1343     	 orrs r3,r3,r2
 4521 002a 7B61     	 str r3,[r7,#20]
1760:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4522              	 .loc 2 1760 0
 4523 002c FB68     	 ldr r3,[r7,#12]
 4524 002e BA68     	 ldr r2,[r7,#8]
 4525 0030 8032     	 adds r2,r2,#128
 4526 0032 7969     	 ldr r1,[r7,#20]
 4527 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1761:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4528              	 .loc 2 1761 0
 4529 0038 1C37     	 adds r7,r7,#28
 4530              	.LCFI364:
 4531              	 .cfi_def_cfa_offset 4
 4532 003a BD46     	 mov sp,r7
 4533              	.LCFI365:
 4534              	 .cfi_def_cfa_register 13
 4535              	 
 4536 003c 5DF8047B 	 ldr r7,[sp],#4
 4537              	.LCFI366:
 4538              	 .cfi_restore 7
 4539              	 .cfi_def_cfa_offset 0
 4540 0040 7047     	 bx lr
 4541              	 .cfi_endproc
 4542              	.LFE268:
 4544 0042 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetBoundarySelection,"ax",%progbits
 4545              	 .align 2
 4546              	 .global XMC_VADC_GROUP_ChannelSetBoundarySelection
 4547              	 .thumb
 4548              	 .thumb_func
 4550              	XMC_VADC_GROUP_ChannelSetBoundarySelection:
 4551              	.LFB269:
1762:../Libraries/XMCLib/src/xmc_vadc.c **** 
1763:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure the boundary selection */
1764:../Libraries/XMCLib/src/xmc_vadc.c **** void  XMC_VADC_GROUP_ChannelSetBoundarySelection(XMC_VADC_GROUP_t *const group_ptr,
1765:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1766:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_BOUNDARY_SELECT_t boundary_sel,
1767:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_CHANNEL_BOUNDARY_t selection)
1768:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4552              	 .loc 2 1768 0
 4553              	 .cfi_startproc
 4554              	 
 4555              	 
 4556              	 
 4557 0000 80B4     	 push {r7}
 4558              	.LCFI367:
 4559              	 .cfi_def_cfa_offset 4
 4560              	 .cfi_offset 7,-4
 4561 0002 85B0     	 sub sp,sp,#20
 4562              	.LCFI368:
 4563              	 .cfi_def_cfa_offset 24
 4564 0004 00AF     	 add r7,sp,#0
 4565              	.LCFI369:
 4566              	 .cfi_def_cfa_register 7
 4567 0006 F860     	 str r0,[r7,#12]
 4568 0008 B960     	 str r1,[r7,#8]
 4569 000a 1146     	 mov r1,r2
 4570 000c 1A46     	 mov r2,r3
 4571 000e 0B46     	 mov r3,r1
 4572 0010 FB71     	 strb r3,[r7,#7]
 4573 0012 1346     	 mov r3,r2
 4574 0014 BB71     	 strb r3,[r7,#6]
1769:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
1770:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Channel Number",
1771:../Libraries/XMCLib/src/xmc_vadc.c ****               ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1772:../Libraries/XMCLib/src/xmc_vadc.c **** 
1773:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_BNDSELL_Msk << boundary_sel);
 4575              	 .loc 2 1773 0
 4576 0016 FB68     	 ldr r3,[r7,#12]
 4577 0018 BA68     	 ldr r2,[r7,#8]
 4578 001a 8032     	 adds r2,r2,#128
 4579 001c 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4580 0020 FB79     	 ldrb r3,[r7,#7]
 4581 0022 3021     	 movs r1,#48
 4582 0024 01FA03F3 	 lsl r3,r1,r3
 4583 0028 DB43     	 mvns r3,r3
 4584 002a 02EA0301 	 and r1,r2,r3
 4585 002e FB68     	 ldr r3,[r7,#12]
 4586 0030 BA68     	 ldr r2,[r7,#8]
 4587 0032 8032     	 adds r2,r2,#128
 4588 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1774:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< (VADC_G_CHCTR_BNDSELL_Pos + boundary_sel));
 4589              	 .loc 2 1774 0
 4590 0038 FB68     	 ldr r3,[r7,#12]
 4591 003a BA68     	 ldr r2,[r7,#8]
 4592 003c 8032     	 adds r2,r2,#128
 4593 003e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4594 0042 BA79     	 ldrb r2,[r7,#6]
 4595 0044 F979     	 ldrb r1,[r7,#7]
 4596 0046 0431     	 adds r1,r1,#4
 4597 0048 8A40     	 lsls r2,r2,r1
 4598 004a 43EA0201 	 orr r1,r3,r2
 4599 004e FB68     	 ldr r3,[r7,#12]
 4600 0050 BA68     	 ldr r2,[r7,#8]
 4601 0052 8032     	 adds r2,r2,#128
 4602 0054 43F82210 	 str r1,[r3,r2,lsl#2]
1775:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4603              	 .loc 2 1775 0
 4604 0058 1437     	 adds r7,r7,#20
 4605              	.LCFI370:
 4606              	 .cfi_def_cfa_offset 4
 4607 005a BD46     	 mov sp,r7
 4608              	.LCFI371:
 4609              	 .cfi_def_cfa_register 13
 4610              	 
 4611 005c 5DF8047B 	 ldr r7,[sp],#4
 4612              	.LCFI372:
 4613              	 .cfi_restore 7
 4614              	 .cfi_def_cfa_offset 0
 4615 0060 7047     	 bx lr
 4616              	 .cfi_endproc
 4617              	.LFE269:
 4619 0062 00BF     	 .section .text.XMC_VADC_GROUP_AddResultToFifo,"ax",%progbits
 4620              	 .align 2
 4621              	 .global XMC_VADC_GROUP_AddResultToFifo
 4622              	 .thumb
 4623              	 .thumb_func
 4625              	XMC_VADC_GROUP_AddResultToFifo:
 4626              	.LFB270:
1776:../Libraries/XMCLib/src/xmc_vadc.c **** 
1777:../Libraries/XMCLib/src/xmc_vadc.c **** /* Make the specified result register part of Result FIFO */ 
1778:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_AddResultToFifo(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg)
1779:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4627              	 .loc 2 1779 0
 4628              	 .cfi_startproc
 4629              	 
 4630              	 
 4631              	 
 4632 0000 80B4     	 push {r7}
 4633              	.LCFI373:
 4634              	 .cfi_def_cfa_offset 4
 4635              	 .cfi_offset 7,-4
 4636 0002 85B0     	 sub sp,sp,#20
 4637              	.LCFI374:
 4638              	 .cfi_def_cfa_offset 24
 4639 0004 00AF     	 add r7,sp,#0
 4640              	.LCFI375:
 4641              	 .cfi_def_cfa_register 7
 4642 0006 7860     	 str r0,[r7,#4]
 4643 0008 3960     	 str r1,[r7]
1780:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t fen;
1781:../Libraries/XMCLib/src/xmc_vadc.c **** 
1782:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1783:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RESU
1784:../Libraries/XMCLib/src/xmc_vadc.c **** 
1785:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract and clear the FIFO enable field */
1786:../Libraries/XMCLib/src/xmc_vadc.c ****   fen = group_ptr->RCR[res_reg];
 4644              	 .loc 2 1786 0
 4645 000a 7B68     	 ldr r3,[r7,#4]
 4646 000c 3A68     	 ldr r2,[r7]
 4647 000e A032     	 adds r2,r2,#160
 4648 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4649 0014 FB60     	 str r3,[r7,#12]
1787:../Libraries/XMCLib/src/xmc_vadc.c ****   fen &= ~((uint32_t)VADC_G_RCR_FEN_Msk);
 4650              	 .loc 2 1787 0
 4651 0016 FB68     	 ldr r3,[r7,#12]
 4652 0018 23F0C063 	 bic r3,r3,#100663296
 4653 001c FB60     	 str r3,[r7,#12]
1788:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set this register up as a FIFO member */
1789:../Libraries/XMCLib/src/xmc_vadc.c ****   fen |= (uint32_t)((uint32_t)1 << VADC_G_RCR_FEN_Pos);
 4654              	 .loc 2 1789 0
 4655 001e FB68     	 ldr r3,[r7,#12]
 4656 0020 43F00073 	 orr r3,r3,#33554432
 4657 0024 FB60     	 str r3,[r7,#12]
1790:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RCR[res_reg] = fen;
 4658              	 .loc 2 1790 0
 4659 0026 7B68     	 ldr r3,[r7,#4]
 4660 0028 3A68     	 ldr r2,[r7]
 4661 002a A032     	 adds r2,r2,#160
 4662 002c F968     	 ldr r1,[r7,#12]
 4663 002e 43F82210 	 str r1,[r3,r2,lsl#2]
1791:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4664              	 .loc 2 1791 0
 4665 0032 1437     	 adds r7,r7,#20
 4666              	.LCFI376:
 4667              	 .cfi_def_cfa_offset 4
 4668 0034 BD46     	 mov sp,r7
 4669              	.LCFI377:
 4670              	 .cfi_def_cfa_register 13
 4671              	 
 4672 0036 5DF8047B 	 ldr r7,[sp],#4
 4673              	.LCFI378:
 4674              	 .cfi_restore 7
 4675              	 .cfi_def_cfa_offset 0
 4676 003a 7047     	 bx lr
 4677              	 .cfi_endproc
 4678              	.LFE270:
 4680              	 .section .text.XMC_VADC_GROUP_SetResultFastCompareValue,"ax",%progbits
 4681              	 .align 2
 4682              	 .global XMC_VADC_GROUP_SetResultFastCompareValue
 4683              	 .thumb
 4684              	 .thumb_func
 4686              	XMC_VADC_GROUP_SetResultFastCompareValue:
 4687              	.LFB271:
1792:../Libraries/XMCLib/src/xmc_vadc.c **** 
1793:../Libraries/XMCLib/src/xmc_vadc.c **** 
1794:../Libraries/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1795:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultFastCompareValue(XMC_VADC_GROUP_t *const group_ptr,
1796:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const uint32_t res_reg,
1797:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const XMC_VADC_RESULT_SIZE_t compare_val)
1798:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4688              	 .loc 2 1798 0
 4689              	 .cfi_startproc
 4690              	 
 4691              	 
 4692              	 
 4693 0000 80B4     	 push {r7}
 4694              	.LCFI379:
 4695              	 .cfi_def_cfa_offset 4
 4696              	 .cfi_offset 7,-4
 4697 0002 87B0     	 sub sp,sp,#28
 4698              	.LCFI380:
 4699              	 .cfi_def_cfa_offset 32
 4700 0004 00AF     	 add r7,sp,#0
 4701              	.LCFI381:
 4702              	 .cfi_def_cfa_register 7
 4703 0006 F860     	 str r0,[r7,#12]
 4704 0008 B960     	 str r1,[r7,#8]
 4705 000a 1346     	 mov r3,r2
 4706 000c FB80     	 strh r3,[r7,#6]
1799:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res = group_ptr->RES[res_reg];
 4707              	 .loc 2 1799 0
 4708 000e FB68     	 ldr r3,[r7,#12]
 4709 0010 BA68     	 ldr r2,[r7,#8]
 4710 0012 C032     	 adds r2,r2,#192
 4711 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4712 0018 7B61     	 str r3,[r7,#20]
1800:../Libraries/XMCLib/src/xmc_vadc.c **** 
1801:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1802:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Result Register",
1803:../Libraries/XMCLib/src/xmc_vadc.c ****             ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
1804:../Libraries/XMCLib/src/xmc_vadc.c **** 
1805:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 4713              	 .loc 2 1805 0
 4714 001a 7B69     	 ldr r3,[r7,#20]
 4715 001c 1B0C     	 lsrs r3,r3,#16
 4716 001e 1B04     	 lsls r3,r3,#16
 4717 0020 7B61     	 str r3,[r7,#20]
1806:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 4718              	 .loc 2 1806 0
 4719 0022 FB88     	 ldrh r3,[r7,#6]
 4720 0024 9B00     	 lsls r3,r3,#2
 4721 0026 7A69     	 ldr r2,[r7,#20]
 4722 0028 1343     	 orrs r3,r3,r2
 4723 002a 7B61     	 str r3,[r7,#20]
1807:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[res_reg] = res;
 4724              	 .loc 2 1807 0
 4725 002c FB68     	 ldr r3,[r7,#12]
 4726 002e BA68     	 ldr r2,[r7,#8]
 4727 0030 C032     	 adds r2,r2,#192
 4728 0032 7969     	 ldr r1,[r7,#20]
 4729 0034 43F82210 	 str r1,[r3,r2,lsl#2]
1808:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4730              	 .loc 2 1808 0
 4731 0038 1C37     	 adds r7,r7,#28
 4732              	.LCFI382:
 4733              	 .cfi_def_cfa_offset 4
 4734 003a BD46     	 mov sp,r7
 4735              	.LCFI383:
 4736              	 .cfi_def_cfa_register 13
 4737              	 
 4738 003c 5DF8047B 	 ldr r7,[sp],#4
 4739              	.LCFI384:
 4740              	 .cfi_restore 7
 4741              	 .cfi_def_cfa_offset 0
 4742 0040 7047     	 bx lr
 4743              	 .cfi_endproc
 4744              	.LFE271:
 4746 0042 00BF     	 .section .text.XMC_VADC_GROUP_GetFastCompareResult,"ax",%progbits
 4747              	 .align 2
 4748              	 .global XMC_VADC_GROUP_GetFastCompareResult
 4749              	 .thumb
 4750              	 .thumb_func
 4752              	XMC_VADC_GROUP_GetFastCompareResult:
 4753              	.LFB272:
1809:../Libraries/XMCLib/src/xmc_vadc.c **** 
1810:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of fast mode comparison */
1811:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GROUP_GetFastCompareResult(XMC_VADC_GROUP_t *const group_ptr, cons
1812:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4754              	 .loc 2 1812 0
 4755              	 .cfi_startproc
 4756              	 
 4757              	 
 4758              	 
 4759 0000 80B4     	 push {r7}
 4760              	.LCFI385:
 4761              	 .cfi_def_cfa_offset 4
 4762              	 .cfi_offset 7,-4
 4763 0002 85B0     	 sub sp,sp,#20
 4764              	.LCFI386:
 4765              	 .cfi_def_cfa_offset 24
 4766 0004 00AF     	 add r7,sp,#0
 4767              	.LCFI387:
 4768              	 .cfi_def_cfa_register 7
 4769 0006 7860     	 str r0,[r7,#4]
 4770 0008 3960     	 str r1,[r7]
1813:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
1814:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1815:../Libraries/XMCLib/src/xmc_vadc.c **** 
1816:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
1817:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Result Register", ((res_reg) < XMC_VADC_NUM
1818:../Libraries/XMCLib/src/xmc_vadc.c **** 
1819:../Libraries/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[res_reg];
 4771              	 .loc 2 1819 0
 4772 000a 7B68     	 ldr r3,[r7,#4]
 4773 000c 3A68     	 ldr r2,[r7]
 4774 000e C032     	 adds r2,r2,#192
 4775 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4776 0014 BB60     	 str r3,[r7,#8]
1820:../Libraries/XMCLib/src/xmc_vadc.c **** 
1821:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_G_RES_VF_Msk)
 4777              	 .loc 2 1821 0
 4778 0016 BB68     	 ldr r3,[r7,#8]
 4779 0018 002B     	 cmp r3,#0
 4780 001a 06DA     	 bge .L159
1822:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1823:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_G_RES_FCR_Pos) & (uint32_t)
 4781              	 .loc 2 1823 0
 4782 001c BB68     	 ldr r3,[r7,#8]
 4783 001e 9B0F     	 lsrs r3,r3,#30
 4784 0020 DBB2     	 uxtb r3,r3
 4785 0022 03F00103 	 and r3,r3,#1
 4786 0026 FB73     	 strb r3,[r7,#15]
 4787 0028 01E0     	 b .L160
 4788              	.L159:
1824:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1825:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1826:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1827:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 4789              	 .loc 2 1827 0
 4790 002a 0223     	 movs r3,#2
 4791 002c FB73     	 strb r3,[r7,#15]
 4792              	.L160:
1828:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1829:../Libraries/XMCLib/src/xmc_vadc.c **** 
1830:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
 4793              	 .loc 2 1830 0
 4794 002e FB7B     	 ldrb r3,[r7,#15]
1831:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4795              	 .loc 2 1831 0
 4796 0030 1846     	 mov r0,r3
 4797 0032 1437     	 adds r7,r7,#20
 4798              	.LCFI388:
 4799              	 .cfi_def_cfa_offset 4
 4800 0034 BD46     	 mov sp,r7
 4801              	.LCFI389:
 4802              	 .cfi_def_cfa_register 13
 4803              	 
 4804 0036 5DF8047B 	 ldr r7,[sp],#4
 4805              	.LCFI390:
 4806              	 .cfi_restore 7
 4807              	 .cfi_def_cfa_offset 0
 4808 003a 7047     	 bx lr
 4809              	 .cfi_endproc
 4810              	.LFE272:
 4812              	 .section .text.XMC_VADC_GROUP_SetResultInterruptNode,"ax",%progbits
 4813              	 .align 2
 4814              	 .global XMC_VADC_GROUP_SetResultInterruptNode
 4815              	 .thumb
 4816              	 .thumb_func
 4818              	XMC_VADC_GROUP_SetResultInterruptNode:
 4819              	.LFB273:
1832:../Libraries/XMCLib/src/xmc_vadc.c **** 
1833:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for result event of specified unit of result ha
1834:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1835:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const uint32_t res_reg,
1836:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const XMC_VADC_SR_t sr)
1837:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4820              	 .loc 2 1837 0
 4821              	 .cfi_startproc
 4822              	 
 4823              	 
 4824              	 
 4825 0000 80B4     	 push {r7}
 4826              	.LCFI391:
 4827              	 .cfi_def_cfa_offset 4
 4828              	 .cfi_offset 7,-4
 4829 0002 87B0     	 sub sp,sp,#28
 4830              	.LCFI392:
 4831              	 .cfi_def_cfa_offset 32
 4832 0004 00AF     	 add r7,sp,#0
 4833              	.LCFI393:
 4834              	 .cfi_def_cfa_register 7
 4835 0006 F860     	 str r0,[r7,#12]
 4836 0008 B960     	 str r1,[r7,#8]
 4837 000a 1346     	 mov r3,r2
 4838 000c FB71     	 strb r3,[r7,#7]
1838:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1839:../Libraries/XMCLib/src/xmc_vadc.c **** 
1840:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1841:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Result Register", ((res_reg) < XMC_VADC_N
1842:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Service Request", ((sr)  <= XMC_VADC_SR_S
1843:../Libraries/XMCLib/src/xmc_vadc.c **** 
1844:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res_reg <= 7U)
 4839              	 .loc 2 1844 0
 4840 000e BB68     	 ldr r3,[r7,#8]
 4841 0010 072B     	 cmp r3,#7
 4842 0012 18D8     	 bhi .L163
1845:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1846:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask  = group_ptr->REVNP0;
 4843              	 .loc 2 1846 0
 4844 0014 FB68     	 ldr r3,[r7,#12]
 4845 0016 D3F8B031 	 ldr r3,[r3,#432]
 4846 001a 7B61     	 str r3,[r7,#20]
1847:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (res_reg * (uint32_t)4) ));
 4847              	 .loc 2 1847 0
 4848 001c BB68     	 ldr r3,[r7,#8]
 4849 001e 9B00     	 lsls r3,r3,#2
 4850 0020 1A46     	 mov r2,r3
 4851 0022 0F23     	 movs r3,#15
 4852 0024 9340     	 lsls r3,r3,r2
 4853 0026 DB43     	 mvns r3,r3
 4854 0028 7A69     	 ldr r2,[r7,#20]
 4855 002a 1340     	 ands r3,r3,r2
 4856 002c 7B61     	 str r3,[r7,#20]
1848:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << (res_reg * (uint32_t)4));
 4857              	 .loc 2 1848 0
 4858 002e FB79     	 ldrb r3,[r7,#7]
 4859 0030 BA68     	 ldr r2,[r7,#8]
 4860 0032 9200     	 lsls r2,r2,#2
 4861 0034 9340     	 lsls r3,r3,r2
 4862 0036 7A69     	 ldr r2,[r7,#20]
 4863 0038 1343     	 orrs r3,r3,r2
 4864 003a 7B61     	 str r3,[r7,#20]
1849:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP0 = route_mask;
 4865              	 .loc 2 1849 0
 4866 003c FB68     	 ldr r3,[r7,#12]
 4867 003e 7A69     	 ldr r2,[r7,#20]
 4868 0040 C3F8B021 	 str r2,[r3,#432]
 4869 0044 1EE0     	 b .L162
 4870              	.L163:
1850:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1851:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1852:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1853:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask = group_ptr->REVNP1;
 4871              	 .loc 2 1853 0
 4872 0046 FB68     	 ldr r3,[r7,#12]
 4873 0048 D3F8B431 	 ldr r3,[r3,#436]
 4874 004c 7B61     	 str r3,[r7,#20]
1854:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4875              	 .loc 2 1854 0
 4876 004e BB68     	 ldr r3,[r7,#8]
 4877 0050 03F18043 	 add r3,r3,#1073741824
 4878 0054 083B     	 subs r3,r3,#8
 4879 0056 9B00     	 lsls r3,r3,#2
 4880 0058 1A46     	 mov r2,r3
 4881 005a 0F23     	 movs r3,#15
 4882 005c 9340     	 lsls r3,r3,r2
 4883 005e DB43     	 mvns r3,r3
 4884 0060 7A69     	 ldr r2,[r7,#20]
 4885 0062 1340     	 ands r3,r3,r2
 4886 0064 7B61     	 str r3,[r7,#20]
1855:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << ((res_reg - (uint32_t)8) * (uint32_t)4));
 4887              	 .loc 2 1855 0
 4888 0066 FA79     	 ldrb r2,[r7,#7]
 4889 0068 BB68     	 ldr r3,[r7,#8]
 4890 006a 03F18043 	 add r3,r3,#1073741824
 4891 006e 083B     	 subs r3,r3,#8
 4892 0070 9B00     	 lsls r3,r3,#2
 4893 0072 02FA03F3 	 lsl r3,r2,r3
 4894 0076 7A69     	 ldr r2,[r7,#20]
 4895 0078 1343     	 orrs r3,r3,r2
 4896 007a 7B61     	 str r3,[r7,#20]
1856:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP1 = route_mask;
 4897              	 .loc 2 1856 0
 4898 007c FB68     	 ldr r3,[r7,#12]
 4899 007e 7A69     	 ldr r2,[r7,#20]
 4900 0080 C3F8B421 	 str r2,[r3,#436]
 4901              	.L162:
1857:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1858:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4902              	 .loc 2 1858 0
 4903 0084 1C37     	 adds r7,r7,#28
 4904              	.LCFI394:
 4905              	 .cfi_def_cfa_offset 4
 4906 0086 BD46     	 mov sp,r7
 4907              	.LCFI395:
 4908              	 .cfi_def_cfa_register 13
 4909              	 
 4910 0088 5DF8047B 	 ldr r7,[sp],#4
 4911              	.LCFI396:
 4912              	 .cfi_restore 7
 4913              	 .cfi_def_cfa_offset 0
 4914 008c 7047     	 bx lr
 4915              	 .cfi_endproc
 4916              	.LFE273:
 4918 008e 00BF     	 .section .text.XMC_VADC_GROUP_GetResultFifoTail,"ax",%progbits
 4919              	 .align 2
 4920              	 .global XMC_VADC_GROUP_GetResultFifoTail
 4921              	 .thumb
 4922              	 .thumb_func
 4924              	XMC_VADC_GROUP_GetResultFifoTail:
 4925              	.LFB274:
1859:../Libraries/XMCLib/src/xmc_vadc.c **** 
1860:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the tail of the fifo which the specified result register is a part of */
1861:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoTail(XMC_VADC_GROUP_t *const group_ptr, uint32_t res_reg)
1862:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4926              	 .loc 2 1862 0
 4927              	 .cfi_startproc
 4928              	 
 4929              	 
 4930 0000 80B5     	 push {r7,lr}
 4931              	.LCFI397:
 4932              	 .cfi_def_cfa_offset 8
 4933              	 .cfi_offset 7,-8
 4934              	 .cfi_offset 14,-4
 4935 0002 86B0     	 sub sp,sp,#24
 4936              	.LCFI398:
 4937              	 .cfi_def_cfa_offset 32
 4938 0004 00AF     	 add r7,sp,#0
 4939              	.LCFI399:
 4940              	 .cfi_def_cfa_register 7
 4941 0006 7860     	 str r0,[r7,#4]
 4942 0008 3960     	 str r1,[r7]
1863:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t tail;
1864:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
1865:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t i;
1866:../Libraries/XMCLib/src/xmc_vadc.c ****   bool exit_flag;
1867:../Libraries/XMCLib/src/xmc_vadc.c **** 
1868:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1869:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
1870:../Libraries/XMCLib/src/xmc_vadc.c **** 
1871:../Libraries/XMCLib/src/xmc_vadc.c ****   tail = 0U;
 4943              	 .loc 2 1871 0
 4944 000a 0023     	 movs r3,#0
 4945 000c 7B61     	 str r3,[r7,#20]
1872:../Libraries/XMCLib/src/xmc_vadc.c ****   exit_flag= (bool)false;
 4946              	 .loc 2 1872 0
 4947 000e 0023     	 movs r3,#0
 4948 0010 FB73     	 strb r3,[r7,#15]
1873:../Libraries/XMCLib/src/xmc_vadc.c **** 
1874:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 4949              	 .loc 2 1874 0
 4950 0012 7868     	 ldr r0,[r7,#4]
 4951 0014 3968     	 ldr r1,[r7]
 4952 0016 FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 4953 001a 0346     	 mov r3,r0
 4954 001c 002B     	 cmp r3,#0
 4955 001e 02D0     	 beq .L166
1875:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1876:../Libraries/XMCLib/src/xmc_vadc.c ****     res_reg = res_reg - 1U;
 4956              	 .loc 2 1876 0
 4957 0020 3B68     	 ldr r3,[r7]
 4958 0022 013B     	 subs r3,r3,#1
 4959 0024 3B60     	 str r3,[r7]
 4960              	.L166:
1877:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1878:../Libraries/XMCLib/src/xmc_vadc.c **** 
1879:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Border condition */
1880:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == res_reg)
 4961              	 .loc 2 1880 0
 4962 0026 3B68     	 ldr r3,[r7]
 4963 0028 002B     	 cmp r3,#0
 4964 002a 02D1     	 bne .L167
1881:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1882:../Libraries/XMCLib/src/xmc_vadc.c ****     tail = 0U;
 4965              	 .loc 2 1882 0
 4966 002c 0023     	 movs r3,#0
 4967 002e 7B61     	 str r3,[r7,#20]
 4968 0030 26E0     	 b .L168
 4969              	.L167:
1883:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1884:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1885:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1886:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Stop either at a node that does not have FEN set or at Node-0 */
1887:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i = (int32_t)res_reg; i >= (int32_t)0; i--)
 4970              	 .loc 2 1887 0
 4971 0032 3B68     	 ldr r3,[r7]
 4972 0034 3B61     	 str r3,[r7,#16]
 4973 0036 20E0     	 b .L169
 4974              	.L174:
1888:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1889:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr = group_ptr->RCR[i];
 4975              	 .loc 2 1889 0
 4976 0038 7B68     	 ldr r3,[r7,#4]
 4977 003a 3A69     	 ldr r2,[r7,#16]
 4978 003c A032     	 adds r2,r2,#160
 4979 003e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4980 0042 BB60     	 str r3,[r7,#8]
1890:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4981              	 .loc 2 1890 0
 4982 0044 BB68     	 ldr r3,[r7,#8]
 4983 0046 03F0C063 	 and r3,r3,#100663296
 4984 004a BB60     	 str r3,[r7,#8]
1891:../Libraries/XMCLib/src/xmc_vadc.c **** 
1892:../Libraries/XMCLib/src/xmc_vadc.c ****        if (rcr)
 4985              	 .loc 2 1892 0
 4986 004c BB68     	 ldr r3,[r7,#8]
 4987 004e 002B     	 cmp r3,#0
 4988 0050 07D0     	 beq .L170
1893:../Libraries/XMCLib/src/xmc_vadc.c ****        {
1894:../Libraries/XMCLib/src/xmc_vadc.c ****          if ((int32_t)0 == i)
 4989              	 .loc 2 1894 0
 4990 0052 3B69     	 ldr r3,[r7,#16]
 4991 0054 002B     	 cmp r3,#0
 4992 0056 09D1     	 bne .L172
1895:../Libraries/XMCLib/src/xmc_vadc.c ****          {
1896:../Libraries/XMCLib/src/xmc_vadc.c ****           /* No more nodes. Stop here */
1897:../Libraries/XMCLib/src/xmc_vadc.c ****           tail = (uint32_t)0;
 4993              	 .loc 2 1897 0
 4994 0058 0023     	 movs r3,#0
 4995 005a 7B61     	 str r3,[r7,#20]
1898:../Libraries/XMCLib/src/xmc_vadc.c ****           exit_flag = (bool)true;
 4996              	 .loc 2 1898 0
 4997 005c 0123     	 movs r3,#1
 4998 005e FB73     	 strb r3,[r7,#15]
 4999 0060 04E0     	 b .L172
 5000              	.L170:
1899:../Libraries/XMCLib/src/xmc_vadc.c ****          }
1900:../Libraries/XMCLib/src/xmc_vadc.c ****        }
1901:../Libraries/XMCLib/src/xmc_vadc.c ****        else
1902:../Libraries/XMCLib/src/xmc_vadc.c ****        {
1903:../Libraries/XMCLib/src/xmc_vadc.c ****          /* The preceding register forms the tail of the FIFO */
1904:../Libraries/XMCLib/src/xmc_vadc.c ****          tail = (uint32_t)i + (uint32_t)1;
 5001              	 .loc 2 1904 0
 5002 0062 3B69     	 ldr r3,[r7,#16]
 5003 0064 0133     	 adds r3,r3,#1
 5004 0066 7B61     	 str r3,[r7,#20]
1905:../Libraries/XMCLib/src/xmc_vadc.c ****          exit_flag = (bool)true;
 5005              	 .loc 2 1905 0
 5006 0068 0123     	 movs r3,#1
 5007 006a FB73     	 strb r3,[r7,#15]
 5008              	.L172:
1906:../Libraries/XMCLib/src/xmc_vadc.c ****        }
1907:../Libraries/XMCLib/src/xmc_vadc.c ****        if (exit_flag)
 5009              	 .loc 2 1907 0
 5010 006c FB7B     	 ldrb r3,[r7,#15]
 5011 006e 002B     	 cmp r3,#0
 5012 0070 00D0     	 beq .L173
1908:../Libraries/XMCLib/src/xmc_vadc.c ****        {
1909:../Libraries/XMCLib/src/xmc_vadc.c ****          break;
 5013              	 .loc 2 1909 0
 5014 0072 05E0     	 b .L168
 5015              	.L173:
1887:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5016              	 .loc 2 1887 0 discriminator 2
 5017 0074 3B69     	 ldr r3,[r7,#16]
 5018 0076 013B     	 subs r3,r3,#1
 5019 0078 3B61     	 str r3,[r7,#16]
 5020              	.L169:
1887:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5021              	 .loc 2 1887 0 is_stmt 0 discriminator 1
 5022 007a 3B69     	 ldr r3,[r7,#16]
 5023 007c 002B     	 cmp r3,#0
 5024 007e DBDA     	 bge .L174
 5025              	.L168:
1910:../Libraries/XMCLib/src/xmc_vadc.c ****        }
1911:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1912:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1913:../Libraries/XMCLib/src/xmc_vadc.c ****   return tail;
 5026              	 .loc 2 1913 0 is_stmt 1
 5027 0080 7B69     	 ldr r3,[r7,#20]
1914:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5028              	 .loc 2 1914 0
 5029 0082 1846     	 mov r0,r3
 5030 0084 1837     	 adds r7,r7,#24
 5031              	.LCFI400:
 5032              	 .cfi_def_cfa_offset 8
 5033 0086 BD46     	 mov sp,r7
 5034              	.LCFI401:
 5035              	 .cfi_def_cfa_register 13
 5036              	 
 5037 0088 80BD     	 pop {r7,pc}
 5038              	 .cfi_endproc
 5039              	.LFE274:
 5041              	 .section .text.XMC_VADC_GROUP_GetResultFifoHead,"ax",%progbits
 5042              	 .align 2
 5043              	 .global XMC_VADC_GROUP_GetResultFifoHead
 5044              	 .thumb
 5045              	 .thumb_func
 5047              	XMC_VADC_GROUP_GetResultFifoHead:
 5048              	.LFB275:
1915:../Libraries/XMCLib/src/xmc_vadc.c **** 
1916:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the head of the fifo which the specified result register is a part of */
1917:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg
1918:../Libraries/XMCLib/src/xmc_vadc.c **** {
 5049              	 .loc 2 1918 0
 5050              	 .cfi_startproc
 5051              	 
 5052              	 
 5053 0000 80B5     	 push {r7,lr}
 5054              	.LCFI402:
 5055              	 .cfi_def_cfa_offset 8
 5056              	 .cfi_offset 7,-8
 5057              	 .cfi_offset 14,-4
 5058 0002 86B0     	 sub sp,sp,#24
 5059              	.LCFI403:
 5060              	 .cfi_def_cfa_offset 32
 5061 0004 00AF     	 add r7,sp,#0
 5062              	.LCFI404:
 5063              	 .cfi_def_cfa_register 7
 5064 0006 7860     	 str r0,[r7,#4]
 5065 0008 3960     	 str r1,[r7]
1919:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t head;
1920:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
1921:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1922:../Libraries/XMCLib/src/xmc_vadc.c **** 
1923:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1924:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
1925:../Libraries/XMCLib/src/xmc_vadc.c **** 
1926:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 5066              	 .loc 2 1926 0
 5067 000a 7868     	 ldr r0,[r7,#4]
 5068 000c 3968     	 ldr r1,[r7]
 5069 000e FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 5070 0012 0346     	 mov r3,r0
 5071 0014 002B     	 cmp r3,#0
 5072 0016 02D0     	 beq .L177
1927:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1928:../Libraries/XMCLib/src/xmc_vadc.c ****       head = res_reg;
 5073              	 .loc 2 1928 0
 5074 0018 3B68     	 ldr r3,[r7]
 5075 001a 7B61     	 str r3,[r7,#20]
 5076 001c 1AE0     	 b .L178
 5077              	.L177:
1929:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1930:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1931:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1932:../Libraries/XMCLib/src/xmc_vadc.c ****     head = XMC_VADC_NUM_RESULT_REGISTERS - (uint32_t)1;
 5078              	 .loc 2 1932 0
 5079 001e 0F23     	 movs r3,#15
 5080 0020 7B61     	 str r3,[r7,#20]
1933:../Libraries/XMCLib/src/xmc_vadc.c **** 
1934:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i = res_reg; i < XMC_VADC_NUM_RESULT_REGISTERS ; i++)
 5081              	 .loc 2 1934 0
 5082 0022 3B68     	 ldr r3,[r7]
 5083 0024 3B61     	 str r3,[r7,#16]
 5084 0026 12E0     	 b .L179
 5085              	.L181:
1935:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1936:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr = group_ptr->RCR[i];
 5086              	 .loc 2 1936 0
 5087 0028 7B68     	 ldr r3,[r7,#4]
 5088 002a 3A69     	 ldr r2,[r7,#16]
 5089 002c A032     	 adds r2,r2,#160
 5090 002e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5091 0032 FB60     	 str r3,[r7,#12]
1937:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5092              	 .loc 2 1937 0
 5093 0034 FB68     	 ldr r3,[r7,#12]
 5094 0036 03F0C063 	 and r3,r3,#100663296
 5095 003a FB60     	 str r3,[r7,#12]
1938:../Libraries/XMCLib/src/xmc_vadc.c **** 
1939:../Libraries/XMCLib/src/xmc_vadc.c ****       if (!rcr)
 5096              	 .loc 2 1939 0
 5097 003c FB68     	 ldr r3,[r7,#12]
 5098 003e 002B     	 cmp r3,#0
 5099 0040 02D1     	 bne .L180
1940:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1941:../Libraries/XMCLib/src/xmc_vadc.c ****         /* This node forms the head of the FIFO */
1942:../Libraries/XMCLib/src/xmc_vadc.c ****         head = i ;
 5100              	 .loc 2 1942 0
 5101 0042 3B69     	 ldr r3,[r7,#16]
 5102 0044 7B61     	 str r3,[r7,#20]
1943:../Libraries/XMCLib/src/xmc_vadc.c ****         break;
 5103              	 .loc 2 1943 0
 5104 0046 05E0     	 b .L178
 5105              	.L180:
1934:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5106              	 .loc 2 1934 0 discriminator 2
 5107 0048 3B69     	 ldr r3,[r7,#16]
 5108 004a 0133     	 adds r3,r3,#1
 5109 004c 3B61     	 str r3,[r7,#16]
 5110              	.L179:
1934:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 5111              	 .loc 2 1934 0 is_stmt 0 discriminator 1
 5112 004e 3B69     	 ldr r3,[r7,#16]
 5113 0050 0F2B     	 cmp r3,#15
 5114 0052 E9D9     	 bls .L181
 5115              	.L178:
1944:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1945:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1946:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1947:../Libraries/XMCLib/src/xmc_vadc.c ****   return head;
 5116              	 .loc 2 1947 0 is_stmt 1
 5117 0054 7B69     	 ldr r3,[r7,#20]
1948:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5118              	 .loc 2 1948 0
 5119 0056 1846     	 mov r0,r3
 5120 0058 1837     	 adds r7,r7,#24
 5121              	.LCFI405:
 5122              	 .cfi_def_cfa_offset 8
 5123 005a BD46     	 mov sp,r7
 5124              	.LCFI406:
 5125              	 .cfi_def_cfa_register 13
 5126              	 
 5127 005c 80BD     	 pop {r7,pc}
 5128              	 .cfi_endproc
 5129              	.LFE275:
 5131 005e 00BF     	 .section .text.XMC_VADC_GROUP_IsResultRegisterFifoHead,"ax",%progbits
 5132              	 .align 2
 5133              	 .global XMC_VADC_GROUP_IsResultRegisterFifoHead
 5134              	 .thumb
 5135              	 .thumb_func
 5137              	XMC_VADC_GROUP_IsResultRegisterFifoHead:
 5138              	.LFB276:
1949:../Libraries/XMCLib/src/xmc_vadc.c **** 
1950:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine if the specified result register is the head of a result fifo */
1951:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_IsResultRegisterFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_
1952:../Libraries/XMCLib/src/xmc_vadc.c **** {
 5139              	 .loc 2 1952 0
 5140              	 .cfi_startproc
 5141              	 
 5142              	 
 5143              	 
 5144 0000 80B4     	 push {r7}
 5145              	.LCFI407:
 5146              	 .cfi_def_cfa_offset 4
 5147              	 .cfi_offset 7,-4
 5148 0002 87B0     	 sub sp,sp,#28
 5149              	.LCFI408:
 5150              	 .cfi_def_cfa_offset 32
 5151 0004 00AF     	 add r7,sp,#0
 5152              	.LCFI409:
 5153              	 .cfi_def_cfa_register 7
 5154 0006 7860     	 str r0,[r7,#4]
 5155 0008 3960     	 str r1,[r7]
1953:../Libraries/XMCLib/src/xmc_vadc.c ****   bool ret_val;
1954:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_head;
1955:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_next;
1956:../Libraries/XMCLib/src/xmc_vadc.c **** 
1957:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1958:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Result Register",
1959:../Libraries/XMCLib/src/xmc_vadc.c ****              ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
1960:../Libraries/XMCLib/src/xmc_vadc.c **** 
1961:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head = group_ptr->RCR[res_reg];
 5156              	 .loc 2 1961 0
 5157 000a 7B68     	 ldr r3,[r7,#4]
 5158 000c 3A68     	 ldr r2,[r7]
 5159 000e A032     	 adds r2,r2,#160
 5160 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5161 0014 3B61     	 str r3,[r7,#16]
1962:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5162              	 .loc 2 1962 0
 5163 0016 3B69     	 ldr r3,[r7,#16]
 5164 0018 03F0C063 	 and r3,r3,#100663296
 5165 001c 3B61     	 str r3,[r7,#16]
1963:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 5166              	 .loc 2 1963 0
 5167 001e 3B68     	 ldr r3,[r7]
 5168 0020 5A1E     	 subs r2,r3,#1
 5169 0022 7B68     	 ldr r3,[r7,#4]
 5170 0024 A032     	 adds r2,r2,#160
 5171 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5172 002a FB60     	 str r3,[r7,#12]
1964:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5173              	 .loc 2 1964 0
 5174 002c FB68     	 ldr r3,[r7,#12]
 5175 002e 03F0C063 	 and r3,r3,#100663296
 5176 0032 FB60     	 str r3,[r7,#12]
1965:../Libraries/XMCLib/src/xmc_vadc.c **** 
1966:../Libraries/XMCLib/src/xmc_vadc.c ****   if (rcr_head)
 5177              	 .loc 2 1966 0
 5178 0034 3B69     	 ldr r3,[r7,#16]
 5179 0036 002B     	 cmp r3,#0
 5180 0038 02D0     	 beq .L184
1967:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1968:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 5181              	 .loc 2 1968 0
 5182 003a 0023     	 movs r3,#0
 5183 003c FB75     	 strb r3,[r7,#23]
 5184 003e 07E0     	 b .L185
 5185              	.L184:
1969:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1970:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (rcr_next)
 5186              	 .loc 2 1970 0
 5187 0040 FB68     	 ldr r3,[r7,#12]
 5188 0042 002B     	 cmp r3,#0
 5189 0044 02D0     	 beq .L186
1971:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1972:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)true;
 5190              	 .loc 2 1972 0
 5191 0046 0123     	 movs r3,#1
 5192 0048 FB75     	 strb r3,[r7,#23]
 5193 004a 01E0     	 b .L185
 5194              	.L186:
1973:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1974:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1975:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1976:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 5195              	 .loc 2 1976 0
 5196 004c 0023     	 movs r3,#0
 5197 004e FB75     	 strb r3,[r7,#23]
 5198              	.L185:
1977:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1978:../Libraries/XMCLib/src/xmc_vadc.c **** 
1979:../Libraries/XMCLib/src/xmc_vadc.c ****   return ret_val;
 5199              	 .loc 2 1979 0
 5200 0050 FB7D     	 ldrb r3,[r7,#23]
1980:../Libraries/XMCLib/src/xmc_vadc.c **** }
 5201              	 .loc 2 1980 0
 5202 0052 1846     	 mov r0,r3
 5203 0054 1C37     	 adds r7,r7,#28
 5204              	.LCFI410:
 5205              	 .cfi_def_cfa_offset 4
 5206 0056 BD46     	 mov sp,r7
 5207              	.LCFI411:
 5208              	 .cfi_def_cfa_register 13
 5209              	 
 5210 0058 5DF8047B 	 ldr r7,[sp],#4
 5211              	.LCFI412:
 5212              	 .cfi_restore 7
 5213              	 .cfi_def_cfa_offset 0
 5214 005c 7047     	 bx lr
 5215              	 .cfi_endproc
 5216              	.LFE276:
 5218 005e 00BF     	 .text
 5219              	.Letext0:
 5220              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5221              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5222              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 5223              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 5224              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 5225              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_vadc.c
    {standard input}:19     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 $t
    {standard input}:23     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 XMC_VADC_GROUP_ExternalMuxControlInit
    {standard input}:113    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 $t
    {standard input}:117    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanEnableArbitrationSlot
    {standard input}:158    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 $t
    {standard input}:162    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanDisableArbitrationSlot
    {standard input}:203    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 $t
    {standard input}:207    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
    {standard input}:248    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 $t
    {standard input}:252    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
    {standard input}:293    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 $t
    {standard input}:297    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueEnableArbitrationSlot
    {standard input}:338    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 $t
    {standard input}:342    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueDisableArbitrationSlot
    {standard input}:383    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 $t
    {standard input}:387    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 XMC_VADC_GROUP_QueueFlushEntries
    {standard input}:437    .rodata.g_xmc_vadc_group_array:00000000 $d
    {standard input}:440    .rodata.g_xmc_vadc_group_array:00000000 g_xmc_vadc_group_array
    {standard input}:444    .text.XMC_VADC_GLOBAL_EnableModule:00000000 $t
    {standard input}:449    .text.XMC_VADC_GLOBAL_EnableModule:00000000 XMC_VADC_GLOBAL_EnableModule
    {standard input}:476    .text.XMC_VADC_GLOBAL_DisableModule:00000000 $t
    {standard input}:481    .text.XMC_VADC_GLOBAL_DisableModule:00000000 XMC_VADC_GLOBAL_DisableModule
    {standard input}:507    .text.XMC_VADC_GLOBAL_Init:00000000 $t
    {standard input}:512    .text.XMC_VADC_GLOBAL_Init:00000000 XMC_VADC_GLOBAL_Init
    {standard input}:577    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 $t
    {standard input}:582    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 XMC_VADC_GLOBAL_InputClassInit
    {standard input}:643    .text.XMC_VADC_GLOBAL_InputClassInit:00000044 $d
    {standard input}:648    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 $t
    {standard input}:653    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 XMC_VADC_GLOBAL_StartupCalibration
    {standard input}:728    .text.XMC_VADC_GLOBAL_StartupCalibration:0000005c $d
    {standard input}:733    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 $t
    {standard input}:738    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 XMC_VADC_GLOBAL_SetBoundaries
    {standard input}:793    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 $t
    {standard input}:798    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 XMC_VADC_GLOBAL_SetCompareValue
    {standard input}:850    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 $t
    {standard input}:855    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 XMC_VADC_GLOBAL_GetCompareResult
    {standard input}:913    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 $t
    {standard input}:918    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 XMC_VADC_GLOBAL_BindGroupToEMux
    {standard input}:991    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 $t
    {standard input}:996    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 XMC_VADC_GLOBAL_SetResultEventInterruptNode
    {standard input}:1061   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:1066   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
    {standard input}:1130   .text.XMC_VADC_GROUP_Init:00000000 $t
    {standard input}:1135   .text.XMC_VADC_GROUP_Init:00000000 XMC_VADC_GROUP_Init
    {standard input}:1215   .text.XMC_VADC_GROUP_InputClassInit:00000000 XMC_VADC_GROUP_InputClassInit
    {standard input}:1210   .text.XMC_VADC_GROUP_InputClassInit:00000000 $t
    {standard input}:1343   .text.XMC_VADC_GROUP_SetPowerMode:00000000 $t
    {standard input}:1348   .text.XMC_VADC_GROUP_SetPowerMode:00000000 XMC_VADC_GROUP_SetPowerMode
    {standard input}:1402   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 $t
    {standard input}:1407   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 XMC_VADC_GROUP_SetSyncSlave
    {standard input}:1471   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 $t
    {standard input}:1476   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 XMC_VADC_GROUP_SetSyncMaster
    {standard input}:1523   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 $t
    {standard input}:1528   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 XMC_VADC_GROUP_CheckSlaveReadiness
    {standard input}:1570   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 $t
    {standard input}:1575   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 XMC_VADC_GROUP_IgnoreSlaveReadiness
    {standard input}:1617   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 $t
    {standard input}:1622   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 XMC_VADC_GROUP_EnableChannelSyncRequest
    {standard input}:1678   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 $t
    {standard input}:1683   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 XMC_VADC_GROUP_DisableChannelSyncRequest
    {standard input}:1739   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 $t
    {standard input}:1744   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 XMC_VADC_GROUP_IsConverterBusy
    {standard input}:1795   .text.XMC_VADC_GROUP_SetBoundaries:00000000 $t
    {standard input}:1800   .text.XMC_VADC_GROUP_SetBoundaries:00000000 XMC_VADC_GROUP_SetBoundaries
    {standard input}:1866   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 $t
    {standard input}:1871   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 XMC_VADC_GROUP_TriggerServiceRequest
    {standard input}:1940   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 $t
    {standard input}:1945   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 XMC_VADC_GROUP_SetBoundaryEventInterruptNode
    {standard input}:2007   .text.XMC_VADC_GROUP_ScanInit:00000000 $t
    {standard input}:2012   .text.XMC_VADC_GROUP_ScanInit:00000000 XMC_VADC_GROUP_ScanInit
    {standard input}:2110   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 $t
    {standard input}:2115   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 XMC_VADC_GROUP_ScanSelectTrigger
    {standard input}:2174   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 $t
    {standard input}:2179   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 XMC_VADC_GROUP_ScanSelectTriggerEdge
    {standard input}:2238   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 $t
    {standard input}:2243   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 XMC_VADC_GROUP_ScanSelectGating
    {standard input}:2302   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 $t
    {standard input}:2307   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 XMC_VADC_GROUP_ScanSequenceAbort
    {standard input}:2385   .text.XMC_VADC_GROUP_ScanSequenceAbort:0000007c $d
    {standard input}:2390   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 $t
    {standard input}:2395   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 XMC_VADC_GROUP_ScanGetNumChannelsPending
    {standard input}:2474   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:2479   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
    {standard input}:2534   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 $t
    {standard input}:2539   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 XMC_VADC_GLOBAL_BackgroundInit
    {standard input}:2695   .text.XMC_VADC_GLOBAL_BackgroundInit:000000f8 $d
    {standard input}:2700   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 $t
    {standard input}:2705   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 XMC_VADC_GLOBAL_BackgroundSelectTrigger
    {standard input}:2763   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 $t
    {standard input}:2768   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
    {standard input}:2827   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 $t
    {standard input}:2832   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 XMC_VADC_GLOBAL_BackgroundSelectGating
    {standard input}:2890   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 $t
    {standard input}:2895   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 XMC_VADC_GLOBAL_BackgroundAbortSequence
    {standard input}:3005   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:000000a8 $d
    {standard input}:3011   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 $t
    {standard input}:3016   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
    {standard input}:3113   .text.XMC_VADC_GROUP_QueueInit:00000000 $t
    {standard input}:3118   .text.XMC_VADC_GROUP_QueueInit:00000000 XMC_VADC_GROUP_QueueInit
    {standard input}:3216   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 $t
    {standard input}:3221   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 XMC_VADC_GROUP_QueueSelectTrigger
    {standard input}:3280   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 $t
    {standard input}:3285   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 XMC_VADC_GROUP_QueueSelectTriggerEdge
    {standard input}:3344   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 $t
    {standard input}:3349   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 XMC_VADC_GROUP_QueueSelectGating
    {standard input}:3408   .text.XMC_VADC_GROUP_QueueGetLength:00000000 $t
    {standard input}:3413   .text.XMC_VADC_GROUP_QueueGetLength:00000000 XMC_VADC_GROUP_QueueGetLength
    {standard input}:3485   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 $t
    {standard input}:3490   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 XMC_VADC_GROUP_QueueAbortSequence
    {standard input}:3559   .text.XMC_VADC_GROUP_QueueAbortSequence:00000064 $d
    {standard input}:3564   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 $t
    {standard input}:3569   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 XMC_VADC_GROUP_QueueRemoveChannel
    {standard input}:3667   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000094 $d
    {standard input}:3672   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 $t
    {standard input}:3677   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 XMC_VADC_GROUP_QueueGetNextChannel
    {standard input}:3745   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 $t
    {standard input}:3750   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 XMC_VADC_GROUP_QueueGetInterruptedChannel
    {standard input}:3805   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:3810   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
    {standard input}:3864   .text.XMC_VADC_GROUP_ChannelInit:00000000 $t
    {standard input}:3869   .text.XMC_VADC_GROUP_ChannelInit:00000000 XMC_VADC_GROUP_ChannelInit
    {standard input}:4006   .text.XMC_VADC_GROUP_SetChannelAlias:00000000 $t
    {standard input}:4011   .text.XMC_VADC_GROUP_SetChannelAlias:00000000 XMC_VADC_GROUP_SetChannelAlias
    {standard input}:4088   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 $t
    {standard input}:4093   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 XMC_VADC_GROUP_ChannelIsResultOutOfBounds
    {standard input}:4174   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 $t
    {standard input}:4179   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 XMC_VADC_GROUP_ChannelSetInputReference
    {standard input}:4239   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 $t
    {standard input}:4244   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 XMC_VADC_GROUP_ChannelSetResultRegister
    {standard input}:4303   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 $t
    {standard input}:4308   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 XMC_VADC_GROUP_ChannelGetResultRegister
    {standard input}:4355   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 $t
    {standard input}:4360   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 XMC_VADC_GROUP_ChannelTriggerEvent
    {standard input}:4411   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 $t
    {standard input}:4416   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 XMC_VADC_GROUP_ChannelSetEventInterruptNode
    {standard input}:4480   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 $t
    {standard input}:4485   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
    {standard input}:4545   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 $t
    {standard input}:4550   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 XMC_VADC_GROUP_ChannelSetBoundarySelection
    {standard input}:4620   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 $t
    {standard input}:4625   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 XMC_VADC_GROUP_AddResultToFifo
    {standard input}:4681   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 $t
    {standard input}:4686   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 XMC_VADC_GROUP_SetResultFastCompareValue
    {standard input}:4747   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 $t
    {standard input}:4752   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 XMC_VADC_GROUP_GetFastCompareResult
    {standard input}:4813   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 $t
    {standard input}:4818   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 XMC_VADC_GROUP_SetResultInterruptNode
    {standard input}:4919   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 $t
    {standard input}:4924   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 XMC_VADC_GROUP_GetResultFifoTail
    {standard input}:5137   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 XMC_VADC_GROUP_IsResultRegisterFifoHead
    {standard input}:5042   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 $t
    {standard input}:5047   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 XMC_VADC_GROUP_GetResultFifoHead
    {standard input}:5132   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_AssertPeripheralReset
