   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_hrpwm.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_HRPWM_lDelay,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_HRPWM_lDelay:
  24              	.LFB200:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_hrpwm.c"
   1:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
   2:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**
   3:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @file xmc_hrpwm.c
   4:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @date 2015-07-14
   5:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
   6:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **********************************************************************************
   8:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  10:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Copyright (c) 2015, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Redistribution and use in source and binary forms, with or without           
  14:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * modification,are permitted provided that the following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   Redistributions of source code must retain the above copyright notice,      
  17:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   this list of conditions and the following disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 
  19:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  20:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   this list of conditions and the following disclaimer in the documentation    
  21:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   and/or other materials provided with the distribution.                       
  22:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 
  23:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  24:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   may be used to endorse or promote products derived from this software without
  25:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *   specific prior written permission.                                           
  26:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *                                                                              
  27:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  28:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  29:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  30:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  31:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  32:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  33:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  34:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  35:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  36:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  37:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  38:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *                                                                              
  39:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * To improve the quality of the software, users are encouraged to share        
  40:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  41:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * dave@infineon.com).                                                          
  42:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **********************************************************************************
  43:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  44:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * Change History
  45:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * --------------
  46:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  47:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-02-18:
  48:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Variable g_hrpwm_char_data[] defined in startup file is used in place of trim data macro<b
  49:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *      
  50:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-05-12:
  51:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - XMC_HRPWM_CSG_SelClampingInput() api is added to select the clamping input.<br>
  52:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - In XMC_HRPWM_Init() api macros used to check 'ccu_clock' frequency are renamed for readabi
  53:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - 80MHz HRC operation would need a minimum of 70 Mhz CCU clock.<br>
  54:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  55:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-06-20: 
  56:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  57:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Updated copyright and change history section.<br>
  58:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  59:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-07-06: 
  60:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - CSG trimming data assignment is corrected.<br>
  61:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  62:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * 2015-07-14:
  63:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Redundant code removed in XMC_HRPWM_HRC_ConfigSourceSelect0() and XMC_HRPWM_HRC_ConfigSour
  64:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *     - Enums and masks are type casted to uint32_t type.
  65:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  66:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @endcond 
  67:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  68:../Libraries/XMCLib/src/xmc_hrpwm.c ****  */
  69:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  70:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**
  71:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  72:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * @brief HRPWM low level driver API prototype definition for XMC family of microcontrollers <br>
  73:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  74:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * <b>Detailed description of file</b> <br>
  75:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * APIs provided in this file cover the following functional blocks of HRPWM: <br>
  76:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * -- High Resolution Channel (APIs prefixed with XMC_HRPWM_HRC_) <br>
  77:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * -- Comparator and Slope Generator (APIs prefixed with XMC_HRPWM_CSG_) <br>
  78:../Libraries/XMCLib/src/xmc_hrpwm.c ****  *
  79:../Libraries/XMCLib/src/xmc_hrpwm.c ****  */
  80:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  81:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
  82:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * HEADER FILES
  83:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_hrpwm.c **** #include <xmc_hrpwm.h>
  85:../Libraries/XMCLib/src/xmc_hrpwm.c **** #include <xmc_scu.h>
  86:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  87:../Libraries/XMCLib/src/xmc_hrpwm.c **** #if defined(HRPWM0)
  88:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
  89:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * MACROS
  90:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
  91:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 70MHz is considered as the minimum range for 80MHz HRC operation */
  92:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_70MHZ_FREQUENCY   70000000U
  93:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  94:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 100MHz is considered as the maximum range for 80MHz HRC operation */
  95:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_100MHZ_FREQUENCY  100000000U
  96:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
  97:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 150MHz is considered as the maximum range for 120MHz HRC operation */
  98:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_150MHZ_FREQUENCY  150000000U
  99:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 100:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* 200MHz is considered as the maximum range for 180MHz HRC operation */
 101:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_200MHZ_FREQUENCY  200000000U
 102:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 103:../Libraries/XMCLib/src/xmc_hrpwm.c **** #if (UC_SERIES == XMC44)
 104:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_DELAY_CNT (28800U)  /* Provides ~2.8 msec delay @ 220MHz frequency */
 105:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 106:../Libraries/XMCLib/src/xmc_hrpwm.c **** #elif (UC_SERIES == XMC42)
 107:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_DELAY_CNT (19200U)  /* Provides ~2.8 msec delay @ 150MHz frequency */
 108:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 109:../Libraries/XMCLib/src/xmc_hrpwm.c **** #else
 110:../Libraries/XMCLib/src/xmc_hrpwm.c **** #define XMC_HRPWM_DELAY_CNT (36000U)  /* Provides ~5.3 msec delay @ 150MHz frequency */
 111:../Libraries/XMCLib/src/xmc_hrpwm.c **** #endif
 112:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 113:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 114:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * LOCAL ROUTINES
 115:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 116:../Libraries/XMCLib/src/xmc_hrpwm.c ****  static void XMC_HRPWM_lDelay(void);
 117:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 118:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 119:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - GENERAL
 120:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 121:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 122:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Delay */
 123:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_lDelay(void)
 124:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
  26              	 .loc 1 124 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	.LCFI2:
  40              	 .cfi_def_cfa_register 7
 125:../Libraries/XMCLib/src/xmc_hrpwm.c ****   volatile uint32_t i;
 126:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 127:../Libraries/XMCLib/src/xmc_hrpwm.c ****   for (i = 0U; i <= XMC_HRPWM_DELAY_CNT; i++)  /* Wait more than 2 microseconds */
  41              	 .loc 1 127 0
  42 0006 0023     	 movs r3,#0
  43 0008 7B60     	 str r3,[r7,#4]
  44 000a 02E0     	 b .L2
  45              	.L3:
  46              	 .loc 1 127 0 is_stmt 0 discriminator 3
  47 000c 7B68     	 ldr r3,[r7,#4]
  48 000e 0133     	 adds r3,r3,#1
  49 0010 7B60     	 str r3,[r7,#4]
  50              	.L2:
  51              	 .loc 1 127 0 discriminator 1
  52 0012 7B68     	 ldr r3,[r7,#4]
  53 0014 B3F5964F 	 cmp r3,#19200
  54 0018 F8D9     	 bls .L3
 128:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 129:../Libraries/XMCLib/src/xmc_hrpwm.c ****     ; /* For MISRA */
 130:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 131:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
  55              	 .loc 1 131 0 is_stmt 1
  56 001a 0C37     	 adds r7,r7,#12
  57              	.LCFI3:
  58              	 .cfi_def_cfa_offset 4
  59 001c BD46     	 mov sp,r7
  60              	.LCFI4:
  61              	 .cfi_def_cfa_register 13
  62              	 
  63 001e 5DF8047B 	 ldr r7,[sp],#4
  64              	.LCFI5:
  65              	 .cfi_restore 7
  66              	 .cfi_def_cfa_offset 0
  67 0022 7047     	 bx lr
  68              	 .cfi_endproc
  69              	.LFE200:
  71              	 .section .text.XMC_HRPWM_Init,"ax",%progbits
  72              	 .align 2
  73              	 .global XMC_HRPWM_Init
  74              	 .thumb
  75              	 .thumb_func
  77              	XMC_HRPWM_Init:
  78              	.LFB201:
 132:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 133:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 134:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM GLOBAL
 135:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 136:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Initializes HRPWM global registers */
 137:../Libraries/XMCLib/src/xmc_hrpwm.c **** XMC_HRPWM_STATUS_t XMC_HRPWM_Init(XMC_HRPWM_t *const hrpwm)
 138:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
  79              	 .loc 1 138 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83 0000 80B5     	 push {r7,lr}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 8
  86              	 .cfi_offset 7,-8
  87              	 .cfi_offset 14,-4
  88 0002 86B0     	 sub sp,sp,#24
  89              	.LCFI7:
  90              	 .cfi_def_cfa_offset 32
  91 0004 00AF     	 add r7,sp,#0
  92              	.LCFI8:
  93              	 .cfi_def_cfa_register 7
  94 0006 7860     	 str r0,[r7,#4]
 139:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t *csg_memory;
 140:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t ccu_clock;
 141:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t clkc;
 142:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_HRPWM_STATUS_t status;
 143:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 144:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_Init:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrpwm));
 145:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 146:../Libraries/XMCLib/src/xmc_hrpwm.c ****   status = XMC_HRPWM_STATUS_ERROR;
  95              	 .loc 1 146 0
  96 0008 0223     	 movs r3,#2
  97 000a FB74     	 strb r3,[r7,#19]
 147:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 148:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Apply reset to HRPWM module */ 
 149:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_HRPWM0);
  98              	 .loc 1 149 0
  99 000c 4FF40000 	 mov r0,#8388608
 100 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 150:../Libraries/XMCLib/src/xmc_hrpwm.c ****  
 151:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Release reset for HRPWM module */
 152:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_HRPWM0);
 101              	 .loc 1 152 0
 102 0014 4FF40000 	 mov r0,#8388608
 103 0018 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 153:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 154:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Ungate clock */
 155:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_HRPWM0);
 104              	 .loc 1 155 0
 105 001c 4FF40000 	 mov r0,#8388608
 106 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 156:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 157:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->GLBANA = (uint32_t)0x00004A4E;  /* Initialization sequence */
 107              	 .loc 1 157 0
 108 0024 7B68     	 ldr r3,[r7,#4]
 109 0026 44F64E22 	 movw r2,#19022
 110 002a 5A61     	 str r2,[r3,#20]
 158:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 159:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->HRBSC |= (uint32_t)HRPWM0_HRBSC_HRBE_Msk;  /* Enable Bias Generator of HRPWM */
 111              	 .loc 1 159 0
 112 002c 7B68     	 ldr r3,[r7,#4]
 113 002e 1B68     	 ldr r3,[r3]
 114 0030 43F48072 	 orr r2,r3,#256
 115 0034 7B68     	 ldr r3,[r7,#4]
 116 0036 1A60     	 str r2,[r3]
 160:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 161:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Update CSG0 memory data */
 162:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg_memory = (uint32_t *)XMC_HRPWM_CSG0_MEMORY_ADDRESS;
 117              	 .loc 1 162 0
 118 0038 444B     	 ldr r3,.L13
 119 003a FB60     	 str r3,[r7,#12]
 163:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory = g_hrpwm_char_data[0];
 120              	 .loc 1 163 0
 121 003c 444B     	 ldr r3,.L13+4
 122 003e 1A68     	 ldr r2,[r3]
 123 0040 FB68     	 ldr r3,[r7,#12]
 124 0042 1A60     	 str r2,[r3]
 164:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* write csg memory bits[14:11] with 0b1100 */
 165:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory &= (uint32_t)(0xFFFF87FF);
 125              	 .loc 1 165 0
 126 0044 FB68     	 ldr r3,[r7,#12]
 127 0046 1B68     	 ldr r3,[r3]
 128 0048 23F4F042 	 bic r2,r3,#30720
 129 004c FB68     	 ldr r3,[r7,#12]
 130 004e 1A60     	 str r2,[r3]
 166:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory |= (uint32_t)(0x00006000);
 131              	 .loc 1 166 0
 132 0050 FB68     	 ldr r3,[r7,#12]
 133 0052 1B68     	 ldr r3,[r3]
 134 0054 43F4C042 	 orr r2,r3,#24576
 135 0058 FB68     	 ldr r3,[r7,#12]
 136 005a 1A60     	 str r2,[r3]
 167:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 168:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Update CSG1 trimming data */
 169:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg_memory = (uint32_t *)XMC_HRPWM_CSG1_MEMORY_ADDRESS;
 137              	 .loc 1 169 0
 138 005c 3D4B     	 ldr r3,.L13+8
 139 005e FB60     	 str r3,[r7,#12]
 170:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory = g_hrpwm_char_data[1];
 140              	 .loc 1 170 0
 141 0060 3B4B     	 ldr r3,.L13+4
 142 0062 5A68     	 ldr r2,[r3,#4]
 143 0064 FB68     	 ldr r3,[r7,#12]
 144 0066 1A60     	 str r2,[r3]
 171:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* write csg memory bits[14:11] with 0b1100 */
 172:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory &= (uint32_t)(0xFFFF87FF);
 145              	 .loc 1 172 0
 146 0068 FB68     	 ldr r3,[r7,#12]
 147 006a 1B68     	 ldr r3,[r3]
 148 006c 23F4F042 	 bic r2,r3,#30720
 149 0070 FB68     	 ldr r3,[r7,#12]
 150 0072 1A60     	 str r2,[r3]
 173:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory |= (uint32_t)(0x00006000);
 151              	 .loc 1 173 0
 152 0074 FB68     	 ldr r3,[r7,#12]
 153 0076 1B68     	 ldr r3,[r3]
 154 0078 43F4C042 	 orr r2,r3,#24576
 155 007c FB68     	 ldr r3,[r7,#12]
 156 007e 1A60     	 str r2,[r3]
 174:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 175:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Update CSG2 trimming data */
 176:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg_memory = (uint32_t *)XMC_HRPWM_CSG2_MEMORY_ADDRESS;
 157              	 .loc 1 176 0
 158 0080 354B     	 ldr r3,.L13+12
 159 0082 FB60     	 str r3,[r7,#12]
 177:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory = g_hrpwm_char_data[2];
 160              	 .loc 1 177 0
 161 0084 324B     	 ldr r3,.L13+4
 162 0086 9A68     	 ldr r2,[r3,#8]
 163 0088 FB68     	 ldr r3,[r7,#12]
 164 008a 1A60     	 str r2,[r3]
 178:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* write csg memory bits[14:11] with 0b1100 */
 179:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory &= (uint32_t)(0xFFFF87FF);
 165              	 .loc 1 179 0
 166 008c FB68     	 ldr r3,[r7,#12]
 167 008e 1B68     	 ldr r3,[r3]
 168 0090 23F4F042 	 bic r2,r3,#30720
 169 0094 FB68     	 ldr r3,[r7,#12]
 170 0096 1A60     	 str r2,[r3]
 180:../Libraries/XMCLib/src/xmc_hrpwm.c ****   *csg_memory |= (uint32_t)(0x00006000);
 171              	 .loc 1 180 0
 172 0098 FB68     	 ldr r3,[r7,#12]
 173 009a 1B68     	 ldr r3,[r3]
 174 009c 43F4C042 	 orr r2,r3,#24576
 175 00a0 FB68     	 ldr r3,[r7,#12]
 176 00a2 1A60     	 str r2,[r3]
 181:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 182:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Set CSG units to high speed mode */
 183:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->CSGCFG = (uint32_t)(0x0000003F);
 177              	 .loc 1 183 0
 178 00a4 7B68     	 ldr r3,[r7,#4]
 179 00a6 3F22     	 movs r2,#63
 180 00a8 1A62     	 str r2,[r3,#32]
 184:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 185:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Read CCU clock frequency */
 186:../Libraries/XMCLib/src/xmc_hrpwm.c ****   ccu_clock = XMC_SCU_CLOCK_GetCcuClockFrequency();
 181              	 .loc 1 186 0
 182 00aa FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCcuClockFrequency
 183 00ae B860     	 str r0,[r7,#8]
 187:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 188:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if ((ccu_clock > XMC_HRPWM_70MHZ_FREQUENCY) && (ccu_clock <= XMC_HRPWM_100MHZ_FREQUENCY))
 184              	 .loc 1 188 0
 185 00b0 BB68     	 ldr r3,[r7,#8]
 186 00b2 2A4A     	 ldr r2,.L13+16
 187 00b4 9342     	 cmp r3,r2
 188 00b6 06D9     	 bls .L5
 189              	 .loc 1 188 0 is_stmt 0 discriminator 1
 190 00b8 BB68     	 ldr r3,[r7,#8]
 191 00ba 294A     	 ldr r2,.L13+20
 192 00bc 9342     	 cmp r3,r2
 193 00be 02D8     	 bhi .L5
 189:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 190:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 3U; /* Clock frequency range 70MHz+ - 100MHz is considered as 80MHz HRC operation */
 194              	 .loc 1 190 0 is_stmt 1
 195 00c0 0323     	 movs r3,#3
 196 00c2 7B61     	 str r3,[r7,#20]
 197 00c4 17E0     	 b .L6
 198              	.L5:
 191:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 192:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else if ((ccu_clock > XMC_HRPWM_100MHZ_FREQUENCY) && (ccu_clock <= XMC_HRPWM_150MHZ_FREQUENCY))
 199              	 .loc 1 192 0
 200 00c6 BB68     	 ldr r3,[r7,#8]
 201 00c8 254A     	 ldr r2,.L13+20
 202 00ca 9342     	 cmp r3,r2
 203 00cc 06D9     	 bls .L7
 204              	 .loc 1 192 0 is_stmt 0 discriminator 1
 205 00ce BB68     	 ldr r3,[r7,#8]
 206 00d0 244A     	 ldr r2,.L13+24
 207 00d2 9342     	 cmp r3,r2
 208 00d4 02D8     	 bhi .L7
 193:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 194:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 2U; /* Clock frequency range 100MHz+ - 150MHz is considered as 120MHz HRC operation */
 209              	 .loc 1 194 0 is_stmt 1
 210 00d6 0223     	 movs r3,#2
 211 00d8 7B61     	 str r3,[r7,#20]
 212 00da 0CE0     	 b .L6
 213              	.L7:
 195:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 196:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else if ((ccu_clock > XMC_HRPWM_150MHZ_FREQUENCY) && (ccu_clock <= XMC_HRPWM_200MHZ_FREQUENCY))
 214              	 .loc 1 196 0
 215 00dc BB68     	 ldr r3,[r7,#8]
 216 00de 214A     	 ldr r2,.L13+24
 217 00e0 9342     	 cmp r3,r2
 218 00e2 06D9     	 bls .L8
 219              	 .loc 1 196 0 is_stmt 0 discriminator 1
 220 00e4 BB68     	 ldr r3,[r7,#8]
 221 00e6 204A     	 ldr r2,.L13+28
 222 00e8 9342     	 cmp r3,r2
 223 00ea 02D8     	 bhi .L8
 197:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 198:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 1U; /* Clock frequency range 150MHz+ - 200MHz is considered as 180MHz HRC operation */
 224              	 .loc 1 198 0 is_stmt 1
 225 00ec 0123     	 movs r3,#1
 226 00ee 7B61     	 str r3,[r7,#20]
 227 00f0 01E0     	 b .L6
 228              	.L8:
 199:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 200:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 201:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 202:../Libraries/XMCLib/src/xmc_hrpwm.c ****     clkc = 0U; /* Invalid frequency for HRC operation: Clock frequency <= 60MHz & Clock frequency >
 229              	 .loc 1 202 0
 230 00f2 0023     	 movs r3,#0
 231 00f4 7B61     	 str r3,[r7,#20]
 232              	.L6:
 203:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 204:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 205:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (clkc != 0U) /* Enter the loop only if the clock frequency is valid */
 233              	 .loc 1 205 0
 234 00f6 7B69     	 ldr r3,[r7,#20]
 235 00f8 002B     	 cmp r3,#0
 236 00fa 1FD0     	 beq .L9
 206:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 207:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Program HRC clock configuration with clock frequency information */
 208:../Libraries/XMCLib/src/xmc_hrpwm.c ****     hrpwm->HRCCFG |= (clkc << HRPWM0_HRCCFG_CLKC_Pos);
 237              	 .loc 1 208 0
 238 00fc 7B68     	 ldr r3,[r7,#4]
 239 00fe 1A6E     	 ldr r2,[r3,#96]
 240 0100 7B69     	 ldr r3,[r7,#20]
 241 0102 1B04     	 lsls r3,r3,#16
 242 0104 1A43     	 orrs r2,r2,r3
 243 0106 7B68     	 ldr r3,[r7,#4]
 244 0108 1A66     	 str r2,[r3,#96]
 209:../Libraries/XMCLib/src/xmc_hrpwm.c ****     
 210:../Libraries/XMCLib/src/xmc_hrpwm.c ****     hrpwm->HRCCFG |= (uint32_t)HRPWM0_HRCCFG_HRCPM_Msk; /* Release HR generation from power down mo
 245              	 .loc 1 210 0
 246 010a 7B68     	 ldr r3,[r7,#4]
 247 010c 1B6E     	 ldr r3,[r3,#96]
 248 010e 43F00102 	 orr r2,r3,#1
 249 0112 7B68     	 ldr r3,[r7,#4]
 250 0114 1A66     	 str r2,[r3,#96]
 211:../Libraries/XMCLib/src/xmc_hrpwm.c ****     
 212:../Libraries/XMCLib/src/xmc_hrpwm.c ****     XMC_HRPWM_lDelay(); /* As per Initialization sequence */
 251              	 .loc 1 212 0
 252 0116 FFF7FEFF 	 bl XMC_HRPWM_lDelay
 213:../Libraries/XMCLib/src/xmc_hrpwm.c ****     
 214:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Enable global high resolution generation / Force charge pump down */
 215:../Libraries/XMCLib/src/xmc_hrpwm.c ****     hrpwm->GLBANA |= (uint32_t)HRPWM0_GLBANA_GHREN_Msk;
 253              	 .loc 1 215 0
 254 011a 7B68     	 ldr r3,[r7,#4]
 255 011c 5B69     	 ldr r3,[r3,#20]
 256 011e 43F48022 	 orr r2,r3,#262144
 257 0122 7B68     	 ldr r3,[r7,#4]
 258 0124 5A61     	 str r2,[r3,#20]
 216:../Libraries/XMCLib/src/xmc_hrpwm.c ****     
 217:../Libraries/XMCLib/src/xmc_hrpwm.c ****     XMC_HRPWM_lDelay();
 259              	 .loc 1 217 0
 260 0126 FFF7FEFF 	 bl XMC_HRPWM_lDelay
 218:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 219:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Check High resolution ready bit field */
 220:../Libraries/XMCLib/src/xmc_hrpwm.c ****     if ((hrpwm->HRGHRS & HRPWM0_HRGHRS_HRGR_Msk) == 1U)
 261              	 .loc 1 220 0
 262 012a 7B68     	 ldr r3,[r7,#4]
 263 012c 1B6F     	 ldr r3,[r3,#112]
 264 012e 03F00103 	 and r3,r3,#1
 265 0132 002B     	 cmp r3,#0
 266 0134 04D0     	 beq .L11
 221:../Libraries/XMCLib/src/xmc_hrpwm.c ****     {
 222:../Libraries/XMCLib/src/xmc_hrpwm.c ****       /* High resolution logic unit is ready */
 223:../Libraries/XMCLib/src/xmc_hrpwm.c ****       status = XMC_HRPWM_STATUS_OK;
 267              	 .loc 1 223 0
 268 0136 0023     	 movs r3,#0
 269 0138 FB74     	 strb r3,[r7,#19]
 270 013a 01E0     	 b .L11
 271              	.L9:
 224:../Libraries/XMCLib/src/xmc_hrpwm.c ****     }
 225:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 226:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 227:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 228:../Libraries/XMCLib/src/xmc_hrpwm.c ****     status = XMC_HRPWM_STATUS_ERROR; /* Clock frequency is invalid */
 272              	 .loc 1 228 0
 273 013c 0223     	 movs r3,#2
 274 013e FB74     	 strb r3,[r7,#19]
 275              	.L11:
 229:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 230:../Libraries/XMCLib/src/xmc_hrpwm.c ****  
 231:../Libraries/XMCLib/src/xmc_hrpwm.c ****   return (status);
 276              	 .loc 1 231 0
 277 0140 FB7C     	 ldrb r3,[r7,#19]
 232:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 278              	 .loc 1 232 0
 279 0142 1846     	 mov r0,r3
 280 0144 1837     	 adds r7,r7,#24
 281              	.LCFI9:
 282              	 .cfi_def_cfa_offset 8
 283 0146 BD46     	 mov sp,r7
 284              	.LCFI10:
 285              	 .cfi_def_cfa_register 13
 286              	 
 287 0148 80BD     	 pop {r7,pc}
 288              	.L14:
 289 014a 00BF     	 .align 2
 290              	.L13:
 291 014c 400A0240 	 .word 1073875520
 292 0150 00000000 	 .word g_hrpwm_char_data
 293 0154 400B0240 	 .word 1073875776
 294 0158 400C0240 	 .word 1073876032
 295 015c 801D2C04 	 .word 70000000
 296 0160 00E1F505 	 .word 100000000
 297 0164 80D1F008 	 .word 150000000
 298 0168 00C2EB0B 	 .word 200000000
 299              	 .cfi_endproc
 300              	.LFE201:
 302              	 .section .text.XMC_HRPWM_EnableGlobalHR,"ax",%progbits
 303              	 .align 2
 304              	 .global XMC_HRPWM_EnableGlobalHR
 305              	 .thumb
 306              	 .thumb_func
 308              	XMC_HRPWM_EnableGlobalHR:
 309              	.LFB202:
 233:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 234:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Enable global high resolution generation */
 235:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_EnableGlobalHR(XMC_HRPWM_t *const hrpwm)
 236:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 310              	 .loc 1 236 0
 311              	 .cfi_startproc
 312              	 
 313              	 
 314 0000 80B5     	 push {r7,lr}
 315              	.LCFI11:
 316              	 .cfi_def_cfa_offset 8
 317              	 .cfi_offset 7,-8
 318              	 .cfi_offset 14,-4
 319 0002 82B0     	 sub sp,sp,#8
 320              	.LCFI12:
 321              	 .cfi_def_cfa_offset 16
 322 0004 00AF     	 add r7,sp,#0
 323              	.LCFI13:
 324              	 .cfi_def_cfa_register 7
 325 0006 7860     	 str r0,[r7,#4]
 237:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_EnableGlobalHR:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrpwm));
 238:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 239:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Enable global high resolution generation / Force charge pump down */
 240:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->GLBANA |= (uint32_t)HRPWM0_GLBANA_GHREN_Msk;
 326              	 .loc 1 240 0
 327 0008 7B68     	 ldr r3,[r7,#4]
 328 000a 5B69     	 ldr r3,[r3,#20]
 329 000c 43F48022 	 orr r2,r3,#262144
 330 0010 7B68     	 ldr r3,[r7,#4]
 331 0012 5A61     	 str r2,[r3,#20]
 241:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 242:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_HRPWM_lDelay(); /* Elapse startup time */
 332              	 .loc 1 242 0
 333 0014 FFF7FEFF 	 bl XMC_HRPWM_lDelay
 243:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 334              	 .loc 1 243 0
 335 0018 0837     	 adds r7,r7,#8
 336              	.LCFI14:
 337              	 .cfi_def_cfa_offset 8
 338 001a BD46     	 mov sp,r7
 339              	.LCFI15:
 340              	 .cfi_def_cfa_register 13
 341              	 
 342 001c 80BD     	 pop {r7,pc}
 343              	 .cfi_endproc
 344              	.LFE202:
 346 001e 00BF     	 .section .text.XMC_HRPWM_DisableGlobalHR,"ax",%progbits
 347              	 .align 2
 348              	 .global XMC_HRPWM_DisableGlobalHR
 349              	 .thumb
 350              	 .thumb_func
 352              	XMC_HRPWM_DisableGlobalHR:
 353              	.LFB203:
 244:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 245:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Disable global high resolution generation */
 246:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_DisableGlobalHR(XMC_HRPWM_t *const hrpwm)
 247:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 354              	 .loc 1 247 0
 355              	 .cfi_startproc
 356              	 
 357              	 
 358              	 
 359 0000 80B4     	 push {r7}
 360              	.LCFI16:
 361              	 .cfi_def_cfa_offset 4
 362              	 .cfi_offset 7,-4
 363 0002 83B0     	 sub sp,sp,#12
 364              	.LCFI17:
 365              	 .cfi_def_cfa_offset 16
 366 0004 00AF     	 add r7,sp,#0
 367              	.LCFI18:
 368              	 .cfi_def_cfa_register 7
 369 0006 7860     	 str r0,[r7,#4]
 248:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_DisableGlobalHR:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrpwm))
 249:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 250:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Enable global high resolution generation / Force charge pump down */
 251:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrpwm->GLBANA &= ~((uint32_t)HRPWM0_GLBANA_GHREN_Msk);
 370              	 .loc 1 251 0
 371 0008 7B68     	 ldr r3,[r7,#4]
 372 000a 5B69     	 ldr r3,[r3,#20]
 373 000c 23F48022 	 bic r2,r3,#262144
 374 0010 7B68     	 ldr r3,[r7,#4]
 375 0012 5A61     	 str r2,[r3,#20]
 252:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 376              	 .loc 1 252 0
 377 0014 0C37     	 adds r7,r7,#12
 378              	.LCFI19:
 379              	 .cfi_def_cfa_offset 4
 380 0016 BD46     	 mov sp,r7
 381              	.LCFI20:
 382              	 .cfi_def_cfa_register 13
 383              	 
 384 0018 5DF8047B 	 ldr r7,[sp],#4
 385              	.LCFI21:
 386              	 .cfi_restore 7
 387              	 .cfi_def_cfa_offset 0
 388 001c 7047     	 bx lr
 389              	 .cfi_endproc
 390              	.LFE203:
 392 001e 00BF     	 .section .text.XMC_HRPWM_GetHRGenReadyStatus,"ax",%progbits
 393              	 .align 2
 394              	 .global XMC_HRPWM_GetHRGenReadyStatus
 395              	 .thumb
 396              	 .thumb_func
 398              	XMC_HRPWM_GetHRGenReadyStatus:
 399              	.LFB204:
 253:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 254:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 255:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM HRC GLOBAL
 256:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 257:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Checks and returns high resolution generation working status */
 258:../Libraries/XMCLib/src/xmc_hrpwm.c **** XMC_HRPWM_HR_LOGIC_t XMC_HRPWM_GetHRGenReadyStatus(XMC_HRPWM_t *const hrpwm)
 259:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 400              	 .loc 1 259 0
 401              	 .cfi_startproc
 402              	 
 403              	 
 404              	 
 405 0000 80B4     	 push {r7}
 406              	.LCFI22:
 407              	 .cfi_def_cfa_offset 4
 408              	 .cfi_offset 7,-4
 409 0002 85B0     	 sub sp,sp,#20
 410              	.LCFI23:
 411              	 .cfi_def_cfa_offset 24
 412 0004 00AF     	 add r7,sp,#0
 413              	.LCFI24:
 414              	 .cfi_def_cfa_register 7
 415 0006 7860     	 str r0,[r7,#4]
 260:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_HRPWM_HR_LOGIC_t status;
 261:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 262:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_GetHRGenReadyStatus:Invalid module pointer", XMC_HRPWM_CHECK_MODULE_PTR(hrp
 263:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 264:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (hrpwm->HRGHRS)
 416              	 .loc 1 264 0
 417 0008 7B68     	 ldr r3,[r7,#4]
 418 000a 1B6F     	 ldr r3,[r3,#112]
 419 000c 002B     	 cmp r3,#0
 420 000e 02D0     	 beq .L18
 265:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 266:../Libraries/XMCLib/src/xmc_hrpwm.c ****     status = XMC_HRPWM_HR_LOGIC_WORKING;
 421              	 .loc 1 266 0
 422 0010 0123     	 movs r3,#1
 423 0012 FB73     	 strb r3,[r7,#15]
 424 0014 01E0     	 b .L19
 425              	.L18:
 267:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 268:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 269:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 270:../Libraries/XMCLib/src/xmc_hrpwm.c ****     status = XMC_HRPWM_HR_LOGIC_NOT_WORKING;
 426              	 .loc 1 270 0
 427 0016 0023     	 movs r3,#0
 428 0018 FB73     	 strb r3,[r7,#15]
 429              	.L19:
 271:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 272:../Libraries/XMCLib/src/xmc_hrpwm.c ****   return status;
 430              	 .loc 1 272 0
 431 001a FB7B     	 ldrb r3,[r7,#15]
 273:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 432              	 .loc 1 273 0
 433 001c 1846     	 mov r0,r3
 434 001e 1437     	 adds r7,r7,#20
 435              	.LCFI25:
 436              	 .cfi_def_cfa_offset 4
 437 0020 BD46     	 mov sp,r7
 438              	.LCFI26:
 439              	 .cfi_def_cfa_register 13
 440              	 
 441 0022 5DF8047B 	 ldr r7,[sp],#4
 442              	.LCFI27:
 443              	 .cfi_restore 7
 444              	 .cfi_def_cfa_offset 0
 445 0026 7047     	 bx lr
 446              	 .cfi_endproc
 447              	.LFE204:
 449              	 .section .text.XMC_HRPWM_HRC_Init,"ax",%progbits
 450              	 .align 2
 451              	 .global XMC_HRPWM_HRC_Init
 452              	 .thumb
 453              	 .thumb_func
 455              	XMC_HRPWM_HRC_Init:
 456              	.LFB205:
 274:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 275:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 276:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM HRC CHANNEL
 277:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 278:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Initialize HRPWM HRC channel */
 279:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_HRC_Init(XMC_HRPWM_HRC_t *const hrc, const XMC_HRPWM_HRC_CONFIG_t *const config)
 280:../Libraries/XMCLib/src/xmc_hrpwm.c **** { 
 457              	 .loc 1 280 0
 458              	 .cfi_startproc
 459              	 
 460              	 
 461              	 
 462 0000 80B4     	 push {r7}
 463              	.LCFI28:
 464              	 .cfi_def_cfa_offset 4
 465              	 .cfi_offset 7,-4
 466 0002 83B0     	 sub sp,sp,#12
 467              	.LCFI29:
 468              	 .cfi_def_cfa_offset 16
 469 0004 00AF     	 add r7,sp,#0
 470              	.LCFI30:
 471              	 .cfi_def_cfa_register 7
 472 0006 7860     	 str r0,[r7,#4]
 473 0008 3960     	 str r1,[r7]
 281:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_HRC_Init:Invalid HRC pointer", XMC_HRPWM_CHECK_HRC_PTR(hrc));
 282:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 283:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Setting of HRCy mode configuration */
 284:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC = config->gc;
 474              	 .loc 1 284 0
 475 000a 3B68     	 ldr r3,[r7]
 476 000c 1A68     	 ldr r2,[r3]
 477 000e 7B68     	 ldr r3,[r7,#4]
 478 0010 1A60     	 str r2,[r3]
 285:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 286:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Passive level configuration */
 287:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->PL = config->psl;
 479              	 .loc 1 287 0
 480 0012 3B68     	 ldr r3,[r7]
 481 0014 5A68     	 ldr r2,[r3,#4]
 482 0016 7B68     	 ldr r3,[r7,#4]
 483 0018 5A60     	 str r2,[r3,#4]
 288:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 484              	 .loc 1 288 0
 485 001a 0C37     	 adds r7,r7,#12
 486              	.LCFI31:
 487              	 .cfi_def_cfa_offset 4
 488 001c BD46     	 mov sp,r7
 489              	.LCFI32:
 490              	 .cfi_def_cfa_register 13
 491              	 
 492 001e 5DF8047B 	 ldr r7,[sp],#4
 493              	.LCFI33:
 494              	 .cfi_restore 7
 495              	 .cfi_def_cfa_offset 0
 496 0022 7047     	 bx lr
 497              	 .cfi_endproc
 498              	.LFE205:
 500              	 .section .text.XMC_HRPWM_HRC_ConfigSourceSelect0,"ax",%progbits
 501              	 .align 2
 502              	 .global XMC_HRPWM_HRC_ConfigSourceSelect0
 503              	 .thumb
 504              	 .thumb_func
 506              	XMC_HRPWM_HRC_ConfigSourceSelect0:
 507              	.LFB206:
 289:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 290:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure Source selector 0 */
 291:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_HRC_ConfigSourceSelect0(XMC_HRPWM_HRC_t *const hrc, const XMC_HRPWM_HRC_SRC_CONFIG_t
 292:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 508              	 .loc 1 292 0
 509              	 .cfi_startproc
 510              	 
 511              	 
 512              	 
 513 0000 80B4     	 push {r7}
 514              	.LCFI34:
 515              	 .cfi_def_cfa_offset 4
 516              	 .cfi_offset 7,-4
 517 0002 85B0     	 sub sp,sp,#20
 518              	.LCFI35:
 519              	 .cfi_def_cfa_offset 24
 520 0004 00AF     	 add r7,sp,#0
 521              	.LCFI36:
 522              	 .cfi_def_cfa_register 7
 523 0006 7860     	 str r0,[r7,#4]
 524 0008 3960     	 str r1,[r7]
 293:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 294:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 295:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_HRC_ConfigSourceSelect0:Invalid HRC pointer", XMC_HRPWM_CHECK_HRC_PTR(hrc))
 296:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 297:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* HRC mode config for source selector 0 */
 298:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC &= ~((uint32_t)HRPWM0_HRC_GC_HRM0_Msk);
 525              	 .loc 1 298 0
 526 000a 7B68     	 ldr r3,[r7,#4]
 527 000c 1B68     	 ldr r3,[r3]
 528 000e 23F00302 	 bic r2,r3,#3
 529 0012 7B68     	 ldr r3,[r7,#4]
 530 0014 1A60     	 str r2,[r3]
 299:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC |= ((uint32_t)config->high_res_mode) << HRPWM0_HRC_GC_HRM0_Pos;
 531              	 .loc 1 299 0
 532 0016 7B68     	 ldr r3,[r7,#4]
 533 0018 1B68     	 ldr r3,[r3]
 534 001a 3A68     	 ldr r2,[r7]
 535 001c 1278     	 ldrb r2,[r2]
 536 001e 1A43     	 orrs r2,r2,r3
 537 0020 7B68     	 ldr r3,[r7,#4]
 538 0022 1A60     	 str r2,[r3]
 300:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 301:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 302:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy global control selection (HRCyGSEL)
 303:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 304:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = 0U;
 539              	 .loc 1 304 0
 540 0024 0023     	 movs r3,#0
 541 0026 FB60     	 str r3,[r7,#12]
 305:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 306:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if(config->set_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 542              	 .loc 1 306 0
 543 0028 3B68     	 ldr r3,[r7]
 544 002a 5B78     	 ldrb r3,[r3,#1]
 545 002c 012B     	 cmp r3,#1
 546 002e 06D1     	 bne .L23
 307:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 308:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg  = ((uint32_t)config->cmp_set) << HRPWM0_HRC_GSEL_C0SS_Pos;
 547              	 .loc 1 308 0
 548 0030 3B68     	 ldr r3,[r7]
 549 0032 DB78     	 ldrb r3,[r3,#3]
 550 0034 FB60     	 str r3,[r7,#12]
 309:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_S0M_Pos;  /* comparator outpu
 551              	 .loc 1 309 0
 552 0036 FB68     	 ldr r3,[r7,#12]
 553 0038 43F04003 	 orr r3,r3,#64
 554 003c FB60     	 str r3,[r7,#12]
 555              	.L23:
 310:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 311:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 312:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (config->clear_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 556              	 .loc 1 312 0
 557 003e 3B68     	 ldr r3,[r7]
 558 0040 9B78     	 ldrb r3,[r3,#2]
 559 0042 012B     	 cmp r3,#1
 560 0044 09D1     	 bne .L24
 313:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 314:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)config->cmp_clear) << HRPWM0_HRC_GSEL_C0CS_Pos;
 561              	 .loc 1 314 0
 562 0046 3B68     	 ldr r3,[r7]
 563 0048 1B79     	 ldrb r3,[r3,#4]
 564 004a DB00     	 lsls r3,r3,#3
 565 004c FA68     	 ldr r2,[r7,#12]
 566 004e 1343     	 orrs r3,r3,r2
 567 0050 FB60     	 str r3,[r7,#12]
 315:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_C0M_Pos;  /* comparator outpu
 568              	 .loc 1 315 0
 569 0052 FB68     	 ldr r3,[r7,#12]
 570 0054 43F48073 	 orr r3,r3,#256
 571 0058 FB60     	 str r3,[r7,#12]
 572              	.L24:
 316:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 317:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 318:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->set_edge_config) << HRPWM0_HRC_GSEL_S0ES_Pos;
 573              	 .loc 1 318 0
 574 005a 3B68     	 ldr r3,[r7]
 575 005c 9B79     	 ldrb r3,[r3,#6]
 576 005e 9B02     	 lsls r3,r3,#10
 577 0060 FA68     	 ldr r2,[r7,#12]
 578 0062 1343     	 orrs r3,r3,r2
 579 0064 FB60     	 str r3,[r7,#12]
 319:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->clear_edge_config) << HRPWM0_HRC_GSEL_C0ES_Pos;
 580              	 .loc 1 319 0
 581 0066 3B68     	 ldr r3,[r7]
 582 0068 DB79     	 ldrb r3,[r3,#7]
 583 006a 1B03     	 lsls r3,r3,#12
 584 006c FA68     	 ldr r2,[r7,#12]
 585 006e 1343     	 orrs r3,r3,r2
 586 0070 FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL &= (uint32_t)0xFFFF0000;
 587              	 .loc 1 320 0
 588 0072 7B68     	 ldr r3,[r7,#4]
 589 0074 9B68     	 ldr r3,[r3,#8]
 590 0076 1B0C     	 lsrs r3,r3,#16
 591 0078 1B04     	 lsls r3,r3,#16
 592 007a 7A68     	 ldr r2,[r7,#4]
 593 007c 9360     	 str r3,[r2,#8]
 321:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL |= reg;
 594              	 .loc 1 321 0
 595 007e 7B68     	 ldr r3,[r7,#4]
 596 0080 9A68     	 ldr r2,[r3,#8]
 597 0082 FB68     	 ldr r3,[r7,#12]
 598 0084 1A43     	 orrs r2,r2,r3
 599 0086 7B68     	 ldr r3,[r7,#4]
 600 0088 9A60     	 str r2,[r3,#8]
 322:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 323:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 324:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy timer selection (HRCyTSEL)
 325:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 326:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = (uint32_t)config->timer_sel;
 601              	 .loc 1 326 0
 602 008a 3B68     	 ldr r3,[r7]
 603 008c 5B79     	 ldrb r3,[r3,#5]
 604 008e FB60     	 str r3,[r7,#12]
 327:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->src_trap_enable) << HRPWM0_HRC_TSEL_TS0E_Pos;
 605              	 .loc 1 327 0
 606 0090 3B68     	 ldr r3,[r7]
 607 0092 1B7A     	 ldrb r3,[r3,#8]
 608 0094 1B04     	 lsls r3,r3,#16
 609 0096 FA68     	 ldr r2,[r7,#12]
 610 0098 1343     	 orrs r3,r3,r2
 611 009a FB60     	 str r3,[r7,#12]
 328:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL &= (uint32_t)0xFFFEFFF8;
 612              	 .loc 1 328 0
 613 009c 7B68     	 ldr r3,[r7,#4]
 614 009e DB68     	 ldr r3,[r3,#12]
 615 00a0 23F48033 	 bic r3,r3,#65536
 616 00a4 23F00703 	 bic r3,r3,#7
 617 00a8 7A68     	 ldr r2,[r7,#4]
 618 00aa D360     	 str r3,[r2,#12]
 329:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL |= reg;
 619              	 .loc 1 329 0
 620 00ac 7B68     	 ldr r3,[r7,#4]
 621 00ae DA68     	 ldr r2,[r3,#12]
 622 00b0 FB68     	 ldr r3,[r7,#12]
 623 00b2 1A43     	 orrs r2,r2,r3
 624 00b4 7B68     	 ldr r3,[r7,#4]
 625 00b6 DA60     	 str r2,[r3,#12]
 330:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 626              	 .loc 1 330 0
 627 00b8 1437     	 adds r7,r7,#20
 628              	.LCFI37:
 629              	 .cfi_def_cfa_offset 4
 630 00ba BD46     	 mov sp,r7
 631              	.LCFI38:
 632              	 .cfi_def_cfa_register 13
 633              	 
 634 00bc 5DF8047B 	 ldr r7,[sp],#4
 635              	.LCFI39:
 636              	 .cfi_restore 7
 637              	 .cfi_def_cfa_offset 0
 638 00c0 7047     	 bx lr
 639              	 .cfi_endproc
 640              	.LFE206:
 642 00c2 00BF     	 .section .text.XMC_HRPWM_HRC_ConfigSourceSelect1,"ax",%progbits
 643              	 .align 2
 644              	 .global XMC_HRPWM_HRC_ConfigSourceSelect1
 645              	 .thumb
 646              	 .thumb_func
 648              	XMC_HRPWM_HRC_ConfigSourceSelect1:
 649              	.LFB207:
 331:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 332:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure Source selector 1 */
 333:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_HRC_ConfigSourceSelect1(XMC_HRPWM_HRC_t *const hrc, const XMC_HRPWM_HRC_SRC_CONFIG_t
 334:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 650              	 .loc 1 334 0
 651              	 .cfi_startproc
 652              	 
 653              	 
 654              	 
 655 0000 80B4     	 push {r7}
 656              	.LCFI40:
 657              	 .cfi_def_cfa_offset 4
 658              	 .cfi_offset 7,-4
 659 0002 85B0     	 sub sp,sp,#20
 660              	.LCFI41:
 661              	 .cfi_def_cfa_offset 24
 662 0004 00AF     	 add r7,sp,#0
 663              	.LCFI42:
 664              	 .cfi_def_cfa_register 7
 665 0006 7860     	 str r0,[r7,#4]
 666 0008 3960     	 str r1,[r7]
 335:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 336:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 337:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_HRC_ConfigSourceSelect1:Invalid HRC pointer", XMC_HRPWM_CHECK_HRC_PTR(hrc))
 338:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 339:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* HRC mode config for source selector 1 */
 340:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC &= ~((uint32_t)HRPWM0_HRC_GC_HRM1_Msk);
 667              	 .loc 1 340 0
 668 000a 7B68     	 ldr r3,[r7,#4]
 669 000c 1B68     	 ldr r3,[r3]
 670 000e 23F00C02 	 bic r2,r3,#12
 671 0012 7B68     	 ldr r3,[r7,#4]
 672 0014 1A60     	 str r2,[r3]
 341:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GC |= ((uint32_t)config->high_res_mode) << HRPWM0_HRC_GC_HRM1_Pos;
 673              	 .loc 1 341 0
 674 0016 7B68     	 ldr r3,[r7,#4]
 675 0018 1A68     	 ldr r2,[r3]
 676 001a 3B68     	 ldr r3,[r7]
 677 001c 1B78     	 ldrb r3,[r3]
 678 001e 9B00     	 lsls r3,r3,#2
 679 0020 1A43     	 orrs r2,r2,r3
 680 0022 7B68     	 ldr r3,[r7,#4]
 681 0024 1A60     	 str r2,[r3]
 342:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 343:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 344:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy global control selection (HRCyGSEL)
 345:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 346:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = 0U;
 682              	 .loc 1 346 0
 683 0026 0023     	 movs r3,#0
 684 0028 FB60     	 str r3,[r7,#12]
 347:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 348:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if(config->set_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 685              	 .loc 1 348 0
 686 002a 3B68     	 ldr r3,[r7]
 687 002c 5B78     	 ldrb r3,[r3,#1]
 688 002e 012B     	 cmp r3,#1
 689 0030 07D1     	 bne .L26
 349:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 350:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg  = ((uint32_t)config->cmp_set) << HRPWM0_HRC_GSEL_C1SS_Pos;
 690              	 .loc 1 350 0
 691 0032 3B68     	 ldr r3,[r7]
 692 0034 DB78     	 ldrb r3,[r3,#3]
 693 0036 1B04     	 lsls r3,r3,#16
 694 0038 FB60     	 str r3,[r7,#12]
 351:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_S1M_Pos;  /* comparator outpu
 695              	 .loc 1 351 0
 696 003a FB68     	 ldr r3,[r7,#12]
 697 003c 43F48003 	 orr r3,r3,#4194304
 698 0040 FB60     	 str r3,[r7,#12]
 699              	.L26:
 352:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 353:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 354:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (config->clear_config == XMC_HRPWM_HRC_SRC_INPUT_CSG)
 700              	 .loc 1 354 0
 701 0042 3B68     	 ldr r3,[r7]
 702 0044 9B78     	 ldrb r3,[r3,#2]
 703 0046 012B     	 cmp r3,#1
 704 0048 09D1     	 bne .L27
 355:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 356:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)config->cmp_clear) << HRPWM0_HRC_GSEL_C1CS_Pos;
 705              	 .loc 1 356 0
 706 004a 3B68     	 ldr r3,[r7]
 707 004c 1B79     	 ldrb r3,[r3,#4]
 708 004e DB04     	 lsls r3,r3,#19
 709 0050 FA68     	 ldr r2,[r7,#12]
 710 0052 1343     	 orrs r3,r3,r2
 711 0054 FB60     	 str r3,[r7,#12]
 357:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= ((uint32_t)XMC_HRPWM_HRC_SRC_INPUT_CSG) << HRPWM0_HRC_GSEL_C1M_Pos;  /* comparator outpu
 712              	 .loc 1 357 0
 713 0056 FB68     	 ldr r3,[r7,#12]
 714 0058 43F08073 	 orr r3,r3,#16777216
 715 005c FB60     	 str r3,[r7,#12]
 716              	.L27:
 358:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 359:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 360:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->set_edge_config) << HRPWM0_HRC_GSEL_S1ES_Pos;
 717              	 .loc 1 360 0
 718 005e 3B68     	 ldr r3,[r7]
 719 0060 9B79     	 ldrb r3,[r3,#6]
 720 0062 9B06     	 lsls r3,r3,#26
 721 0064 FA68     	 ldr r2,[r7,#12]
 722 0066 1343     	 orrs r3,r3,r2
 723 0068 FB60     	 str r3,[r7,#12]
 361:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->clear_edge_config) << HRPWM0_HRC_GSEL_C1ES_Pos;
 724              	 .loc 1 361 0
 725 006a 3B68     	 ldr r3,[r7]
 726 006c DB79     	 ldrb r3,[r3,#7]
 727 006e 1B07     	 lsls r3,r3,#28
 728 0070 FA68     	 ldr r2,[r7,#12]
 729 0072 1343     	 orrs r3,r3,r2
 730 0074 FB60     	 str r3,[r7,#12]
 362:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL &= (uint32_t)0x0000FFFF;
 731              	 .loc 1 362 0
 732 0076 7B68     	 ldr r3,[r7,#4]
 733 0078 9B68     	 ldr r3,[r3,#8]
 734 007a 9AB2     	 uxth r2,r3
 735 007c 7B68     	 ldr r3,[r7,#4]
 736 007e 9A60     	 str r2,[r3,#8]
 363:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->GSEL |= reg;
 737              	 .loc 1 363 0
 738 0080 7B68     	 ldr r3,[r7,#4]
 739 0082 9A68     	 ldr r2,[r3,#8]
 740 0084 FB68     	 ldr r3,[r7,#12]
 741 0086 1A43     	 orrs r2,r2,r3
 742 0088 7B68     	 ldr r3,[r7,#4]
 743 008a 9A60     	 str r2,[r3,#8]
 364:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 365:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /*****************************************************************************
 366:../Libraries/XMCLib/src/xmc_hrpwm.c ****    * HRCy timer selection (HRCyTSEL)
 367:../Libraries/XMCLib/src/xmc_hrpwm.c ****    ****************************************************************************/
 368:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = (uint32_t)config->timer_sel;
 744              	 .loc 1 368 0
 745 008c 3B68     	 ldr r3,[r7]
 746 008e 5B79     	 ldrb r3,[r3,#5]
 747 0090 FB60     	 str r3,[r7,#12]
 369:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t)config->src_trap_enable) << HRPWM0_HRC_TSEL_TS1E_Pos;
 748              	 .loc 1 369 0
 749 0092 3B68     	 ldr r3,[r7]
 750 0094 1B7A     	 ldrb r3,[r3,#8]
 751 0096 5B04     	 lsls r3,r3,#17
 752 0098 FA68     	 ldr r2,[r7,#12]
 753 009a 1343     	 orrs r3,r3,r2
 754 009c FB60     	 str r3,[r7,#12]
 370:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL &= (uint32_t)0xFFFDFFC7;
 755              	 .loc 1 370 0
 756 009e 7B68     	 ldr r3,[r7,#4]
 757 00a0 DB68     	 ldr r3,[r3,#12]
 758 00a2 23F40033 	 bic r3,r3,#131072
 759 00a6 23F03803 	 bic r3,r3,#56
 760 00aa 7A68     	 ldr r2,[r7,#4]
 761 00ac D360     	 str r3,[r2,#12]
 371:../Libraries/XMCLib/src/xmc_hrpwm.c ****   hrc->TSEL |= reg;
 762              	 .loc 1 371 0
 763 00ae 7B68     	 ldr r3,[r7,#4]
 764 00b0 DA68     	 ldr r2,[r3,#12]
 765 00b2 FB68     	 ldr r3,[r7,#12]
 766 00b4 1A43     	 orrs r2,r2,r3
 767 00b6 7B68     	 ldr r3,[r7,#4]
 768 00b8 DA60     	 str r2,[r3,#12]
 372:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 769              	 .loc 1 372 0
 770 00ba 1437     	 adds r7,r7,#20
 771              	.LCFI43:
 772              	 .cfi_def_cfa_offset 4
 773 00bc BD46     	 mov sp,r7
 774              	.LCFI44:
 775              	 .cfi_def_cfa_register 13
 776              	 
 777 00be 5DF8047B 	 ldr r7,[sp],#4
 778              	.LCFI45:
 779              	 .cfi_restore 7
 780              	 .cfi_def_cfa_offset 0
 781 00c2 7047     	 bx lr
 782              	 .cfi_endproc
 783              	.LFE207:
 785              	 .section .text.XMC_HRPWM_CSG_Init,"ax",%progbits
 786              	 .align 2
 787              	 .global XMC_HRPWM_CSG_Init
 788              	 .thumb
 789              	 .thumb_func
 791              	XMC_HRPWM_CSG_Init:
 792              	.LFB208:
 373:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 374:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 375:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM CSG GLOBAL
 376:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 377:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* No api's for CSG GLOBAL in xmc_hrpwm.c file */
 378:../Libraries/XMCLib/src/xmc_hrpwm.c ****  
 379:../Libraries/XMCLib/src/xmc_hrpwm.c **** /**************************************************************************************************
 380:../Libraries/XMCLib/src/xmc_hrpwm.c ****  * API IMPLEMENTATION - HRPWM CSG SLICE
 381:../Libraries/XMCLib/src/xmc_hrpwm.c ****  **************************************************************************************************
 382:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Initialization of CSG slice */
 383:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_Init(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_CONFIG_t *const config)
 384:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 793              	 .loc 1 384 0
 794              	 .cfi_startproc
 795              	 
 796              	 
 797              	 
 798 0000 80B4     	 push {r7}
 799              	.LCFI46:
 800              	 .cfi_def_cfa_offset 4
 801              	 .cfi_offset 7,-4
 802 0002 85B0     	 sub sp,sp,#20
 803              	.LCFI47:
 804              	 .cfi_def_cfa_offset 24
 805 0004 00AF     	 add r7,sp,#0
 806              	.LCFI48:
 807              	 .cfi_def_cfa_register 7
 808 0006 7860     	 str r0,[r7,#4]
 809 0008 3960     	 str r1,[r7]
 385:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 386:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 387:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_Init:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 388:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 389:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Passive level configuration */
 390:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->PLC = config->cmp_config.plc;
 810              	 .loc 1 390 0
 811 000a 3B68     	 ldr r3,[r7]
 812 000c 9A68     	 ldr r2,[r3,#8]
 813 000e 7B68     	 ldr r3,[r7,#4]
 814 0010 5A62     	 str r2,[r3,#36]
 391:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 392:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* DAC Reference values */
 393:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->SDSV1 = config->dac_config.dac_dsv1;
 815              	 .loc 1 393 0
 816 0012 3B68     	 ldr r3,[r7]
 817 0014 1A69     	 ldr r2,[r3,#16]
 818 0016 7B68     	 ldr r3,[r7,#4]
 819 0018 9A61     	 str r2,[r3,#24]
 394:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DSV2  = config->dac_config.dac_dsv2;
 820              	 .loc 1 394 0
 821 001a 3B68     	 ldr r3,[r7]
 822 001c 5A69     	 ldr r2,[r3,#20]
 823 001e 7B68     	 ldr r3,[r7,#4]
 824 0020 5A61     	 str r2,[r3,#20]
 395:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 396:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Pulse Swallow value */
 397:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->SPC = config->sgen_config.pulse_swallow_val;
 825              	 .loc 1 397 0
 826 0022 3B68     	 ldr r3,[r7]
 827 0024 DA69     	 ldr r2,[r3,#28]
 828 0026 7B68     	 ldr r3,[r7,#4]
 829 0028 DA61     	 str r2,[r3,#28]
 398:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 399:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Slope generation control (CSGySC) */
 400:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if(config->sgen_config.ctrl_mode != (uint32_t) XMC_HRPWM_CSG_SLOPE_CTRL_MODE_STATIC)
 830              	 .loc 1 400 0
 831 002a 3B68     	 ldr r3,[r7]
 832 002c 5B7E     	 ldrb r3,[r3,#25]
 833 002e 03F00303 	 and r3,r3,#3
 834 0032 DBB2     	 uxtb r3,r3
 835 0034 002B     	 cmp r3,#0
 836 0036 04D0     	 beq .L29
 401:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 402:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Dynamic Slope Generation */
 403:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->SC = config->sgen_config.sc;
 837              	 .loc 1 403 0
 838 0038 3B68     	 ldr r3,[r7]
 839 003a 9A69     	 ldr r2,[r3,#24]
 840 003c 7B68     	 ldr r3,[r7,#4]
 841 003e 9A60     	 str r2,[r3,#8]
 842 0040 07E0     	 b .L30
 843              	.L29:
 404:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 405:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 406:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 407:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Static Mode */
 408:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->SC = ((uint32_t)config->sgen_config.static_mode_ist_enable) << HRPWM0_CSG_SC_IST_Pos;
 844              	 .loc 1 408 0
 845 0042 3B68     	 ldr r3,[r7]
 846 0044 9B7E     	 ldrb r3,[r3,#26]
 847 0046 C3F30013 	 ubfx r3,r3,#4,#1
 848 004a DBB2     	 uxtb r3,r3
 849 004c 1A05     	 lsls r2,r3,#20
 850 004e 7B68     	 ldr r3,[r7,#4]
 851 0050 9A60     	 str r2,[r3,#8]
 852              	.L30:
 409:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 410:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = ((uint32_t)config->dac_config.start_mode) << HRPWM0_CSG_SC_SWSM_Pos;
 853              	 .loc 1 410 0
 854 0052 3B68     	 ldr r3,[r7]
 855 0054 1B7B     	 ldrb r3,[r3,#12]
 856 0056 1B04     	 lsls r3,r3,#16
 857 0058 FB60     	 str r3,[r7,#12]
 411:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->SC |= reg;
 858              	 .loc 1 411 0
 859 005a 7B68     	 ldr r3,[r7,#4]
 860 005c 9A68     	 ldr r2,[r3,#8]
 861 005e FB68     	 ldr r3,[r7,#12]
 862 0060 1A43     	 orrs r2,r2,r3
 863 0062 7B68     	 ldr r3,[r7,#4]
 864 0064 9A60     	 str r2,[r3,#8]
 412:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 413:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Comparator Initialization */
 414:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->CC = config->cmp_config.cc;
 865              	 .loc 1 414 0
 866 0066 3B68     	 ldr r3,[r7]
 867 0068 1A68     	 ldr r2,[r3]
 868 006a 7B68     	 ldr r3,[r7,#4]
 869 006c 1A62     	 str r2,[r3,#32]
 415:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 416:../Libraries/XMCLib/src/xmc_hrpwm.c ****   /* Blanking value */
 417:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->BLV = config->cmp_config.blanking_val;
 870              	 .loc 1 417 0
 871 006e 3B68     	 ldr r3,[r7]
 872 0070 5A68     	 ldr r2,[r3,#4]
 873 0072 7B68     	 ldr r3,[r7,#4]
 874 0074 9A62     	 str r2,[r3,#40]
 418:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 875              	 .loc 1 418 0
 876 0076 1437     	 adds r7,r7,#20
 877              	.LCFI49:
 878              	 .cfi_def_cfa_offset 4
 879 0078 BD46     	 mov sp,r7
 880              	.LCFI50:
 881              	 .cfi_def_cfa_register 13
 882              	 
 883 007a 5DF8047B 	 ldr r7,[sp],#4
 884              	.LCFI51:
 885              	 .cfi_restore 7
 886              	 .cfi_def_cfa_offset 0
 887 007e 7047     	 bx lr
 888              	 .cfi_endproc
 889              	.LFE208:
 891              	 .section .text.XMC_HRPWM_CSG_SetCMPInput,"ax",%progbits
 892              	 .align 2
 893              	 .global XMC_HRPWM_CSG_SetCMPInput
 894              	 .thumb
 895              	 .thumb_func
 897              	XMC_HRPWM_CSG_SetCMPInput:
 898              	.LFB209:
 419:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 420:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Set either CINA or CINB as inverting input of the comparator */
 421:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SetCMPInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_CMP_INPUT_t input)
 422:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 899              	 .loc 1 422 0
 900              	 .cfi_startproc
 901              	 
 902              	 
 903              	 
 904 0000 80B4     	 push {r7}
 905              	.LCFI52:
 906              	 .cfi_def_cfa_offset 4
 907              	 .cfi_offset 7,-4
 908 0002 83B0     	 sub sp,sp,#12
 909              	.LCFI53:
 910              	 .cfi_def_cfa_offset 16
 911 0004 00AF     	 add r7,sp,#0
 912              	.LCFI54:
 913              	 .cfi_def_cfa_register 7
 914 0006 7860     	 str r0,[r7,#4]
 915 0008 0B46     	 mov r3,r1
 916 000a FB70     	 strb r3,[r7,#3]
 423:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SetCMPInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 424:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 425:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if (input == XMC_HRPWM_CSG_CMP_INPUT_CINA)
 917              	 .loc 1 425 0
 918 000c FB78     	 ldrb r3,[r7,#3]
 919 000e 002B     	 cmp r3,#0
 920 0010 06D1     	 bne .L32
 426:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 427:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Inverting comparator input connected to CINA */
 428:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->CC &= ~((uint32_t)HRPWM0_CSG_CC_IMCS_Msk);
 921              	 .loc 1 428 0
 922 0012 7B68     	 ldr r3,[r7,#4]
 923 0014 1B6A     	 ldr r3,[r3,#32]
 924 0016 23F48072 	 bic r2,r3,#256
 925 001a 7B68     	 ldr r3,[r7,#4]
 926 001c 1A62     	 str r2,[r3,#32]
 927 001e 05E0     	 b .L31
 928              	.L32:
 429:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 430:../Libraries/XMCLib/src/xmc_hrpwm.c ****   else
 431:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 432:../Libraries/XMCLib/src/xmc_hrpwm.c ****     /* Inverting comparator input connected to CINB */    
 433:../Libraries/XMCLib/src/xmc_hrpwm.c ****     csg->CC |= (uint32_t)HRPWM0_CSG_CC_IMCS_Msk;
 929              	 .loc 1 433 0
 930 0020 7B68     	 ldr r3,[r7,#4]
 931 0022 1B6A     	 ldr r3,[r3,#32]
 932 0024 43F48072 	 orr r2,r3,#256
 933 0028 7B68     	 ldr r3,[r7,#4]
 934 002a 1A62     	 str r2,[r3,#32]
 935              	.L31:
 434:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 435:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 936              	 .loc 1 435 0
 937 002c 0C37     	 adds r7,r7,#12
 938              	.LCFI55:
 939              	 .cfi_def_cfa_offset 4
 940 002e BD46     	 mov sp,r7
 941              	.LCFI56:
 942              	 .cfi_def_cfa_register 13
 943              	 
 944 0030 5DF8047B 	 ldr r7,[sp],#4
 945              	.LCFI57:
 946              	 .cfi_restore 7
 947              	 .cfi_def_cfa_offset 0
 948 0034 7047     	 bx lr
 949              	 .cfi_endproc
 950              	.LFE209:
 952 0036 00BF     	 .section .text.XMC_HRPWM_CSG_SelBlankingInput,"ax",%progbits
 953              	 .align 2
 954              	 .global XMC_HRPWM_CSG_SelBlankingInput
 955              	 .thumb
 956              	 .thumb_func
 958              	XMC_HRPWM_CSG_SelBlankingInput:
 959              	.LFB210:
 436:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 437:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for Blanking function */
 438:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SelBlankingInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG_t 
 439:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 960              	 .loc 1 439 0
 961              	 .cfi_startproc
 962              	 
 963              	 
 964              	 
 965 0000 80B4     	 push {r7}
 966              	.LCFI58:
 967              	 .cfi_def_cfa_offset 4
 968              	 .cfi_offset 7,-4
 969 0002 85B0     	 sub sp,sp,#20
 970              	.LCFI59:
 971              	 .cfi_def_cfa_offset 24
 972 0004 00AF     	 add r7,sp,#0
 973              	.LCFI60:
 974              	 .cfi_def_cfa_register 7
 975 0006 7860     	 str r0,[r7,#4]
 976 0008 3960     	 str r1,[r7]
 440:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 441:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 442:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SelBlankingInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 443:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 444:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = csg->CC;
 977              	 .loc 1 444 0
 978 000a 7B68     	 ldr r3,[r7,#4]
 979 000c 1B6A     	 ldr r3,[r3,#32]
 980 000e FB60     	 str r3,[r7,#12]
 445:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 446:../Libraries/XMCLib/src/xmc_hrpwm.c ****   if ((reg & HRPWM0_CSG_CC_EBE_Msk) != 0U)  /* external blanking trigger enabled? */
 981              	 .loc 1 446 0
 982 0010 FB68     	 ldr r3,[r7,#12]
 983 0012 03F48033 	 and r3,r3,#65536
 984 0016 002B     	 cmp r3,#0
 985 0018 09D0     	 beq .L35
 447:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 448:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg &= ~((uint32_t)HRPWM0_CSG_CC_IBS_Msk);
 986              	 .loc 1 448 0
 987 001a FB68     	 ldr r3,[r7,#12]
 988 001c 23F00F03 	 bic r3,r3,#15
 989 0020 FB60     	 str r3,[r7,#12]
 449:../Libraries/XMCLib/src/xmc_hrpwm.c ****     reg |= (uint32_t) config->mapped_input;
 990              	 .loc 1 449 0
 991 0022 3B68     	 ldr r3,[r7]
 992 0024 1B78     	 ldrb r3,[r3]
 993 0026 1A46     	 mov r2,r3
 994 0028 FB68     	 ldr r3,[r7,#12]
 995 002a 1343     	 orrs r3,r3,r2
 996 002c FB60     	 str r3,[r7,#12]
 997              	.L35:
 450:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 451:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 452:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg &= ~((uint32_t)HRPWM0_CSG_CC_BLMC_Msk);
 998              	 .loc 1 452 0
 999 002e FB68     	 ldr r3,[r7,#12]
 1000 0030 23F44043 	 bic r3,r3,#49152
 1001 0034 FB60     	 str r3,[r7,#12]
 453:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t) config->edge) << HRPWM0_CSG_CC_BLMC_Pos;
 1002              	 .loc 1 453 0
 1003 0036 3B68     	 ldr r3,[r7]
 1004 0038 5B78     	 ldrb r3,[r3,#1]
 1005 003a 9B03     	 lsls r3,r3,#14
 1006 003c FA68     	 ldr r2,[r7,#12]
 1007 003e 1343     	 orrs r3,r3,r2
 1008 0040 FB60     	 str r3,[r7,#12]
 454:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 455:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->CC = reg;
 1009              	 .loc 1 455 0
 1010 0042 7B68     	 ldr r3,[r7,#4]
 1011 0044 FA68     	 ldr r2,[r7,#12]
 1012 0046 1A62     	 str r2,[r3,#32]
 456:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1013              	 .loc 1 456 0
 1014 0048 1437     	 adds r7,r7,#20
 1015              	.LCFI61:
 1016              	 .cfi_def_cfa_offset 4
 1017 004a BD46     	 mov sp,r7
 1018              	.LCFI62:
 1019              	 .cfi_def_cfa_register 13
 1020              	 
 1021 004c 5DF8047B 	 ldr r7,[sp],#4
 1022              	.LCFI63:
 1023              	 .cfi_restore 7
 1024              	 .cfi_def_cfa_offset 0
 1025 0050 7047     	 bx lr
 1026              	 .cfi_endproc
 1027              	.LFE210:
 1029 0052 00BF     	 .section .text.XMC_HRPWM_CSG_SelClampingInput,"ax",%progbits
 1030              	 .align 2
 1031              	 .global XMC_HRPWM_CSG_SelClampingInput
 1032              	 .thumb
 1033              	 .thumb_func
 1035              	XMC_HRPWM_CSG_SelClampingInput:
 1036              	.LFB211:
 457:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 458:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for Clamping */
 459:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SelClampingInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG_t 
 460:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1037              	 .loc 1 460 0
 1038              	 .cfi_startproc
 1039              	 
 1040              	 
 1041              	 
 1042 0000 80B4     	 push {r7}
 1043              	.LCFI64:
 1044              	 .cfi_def_cfa_offset 4
 1045              	 .cfi_offset 7,-4
 1046 0002 85B0     	 sub sp,sp,#20
 1047              	.LCFI65:
 1048              	 .cfi_def_cfa_offset 24
 1049 0004 00AF     	 add r7,sp,#0
 1050              	.LCFI66:
 1051              	 .cfi_def_cfa_register 7
 1052 0006 7860     	 str r0,[r7,#4]
 1053 0008 3960     	 str r1,[r7]
 461:../Libraries/XMCLib/src/xmc_hrpwm.c ****   uint32_t reg;
 462:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 463:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SelClampingInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 464:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 465:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg = csg->PLC;
 1054              	 .loc 1 465 0
 1055 000a 7B68     	 ldr r3,[r7,#4]
 1056 000c 5B6A     	 ldr r3,[r3,#36]
 1057 000e FB60     	 str r3,[r7,#12]
 466:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 467:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg &= ~((uint32_t)HRPWM0_CSG_PLC_IPLS_Msk);
 1058              	 .loc 1 467 0
 1059 0010 FB68     	 ldr r3,[r7,#12]
 1060 0012 23F00F03 	 bic r3,r3,#15
 1061 0016 FB60     	 str r3,[r7,#12]
 468:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= (uint32_t) config->mapped_input;
 1062              	 .loc 1 468 0
 1063 0018 3B68     	 ldr r3,[r7]
 1064 001a 1B78     	 ldrb r3,[r3]
 1065 001c 1A46     	 mov r2,r3
 1066 001e FB68     	 ldr r3,[r7,#12]
 1067 0020 1343     	 orrs r3,r3,r2
 1068 0022 FB60     	 str r3,[r7,#12]
 469:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 470:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg &= ~((uint32_t)HRPWM0_CSG_PLC_PLCL_Msk);
 1069              	 .loc 1 470 0
 1070 0024 FB68     	 ldr r3,[r7,#12]
 1071 0026 23F44073 	 bic r3,r3,#768
 1072 002a FB60     	 str r3,[r7,#12]
 471:../Libraries/XMCLib/src/xmc_hrpwm.c ****   reg |= ((uint32_t) config->level) << HRPWM0_CSG_PLC_PLCL_Pos;
 1073              	 .loc 1 471 0
 1074 002c 3B68     	 ldr r3,[r7]
 1075 002e 9B78     	 ldrb r3,[r3,#2]
 1076 0030 1B02     	 lsls r3,r3,#8
 1077 0032 FA68     	 ldr r2,[r7,#12]
 1078 0034 1343     	 orrs r3,r3,r2
 1079 0036 FB60     	 str r3,[r7,#12]
 472:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 473:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->PLC = reg;
 1080              	 .loc 1 473 0
 1081 0038 7B68     	 ldr r3,[r7,#4]
 1082 003a FA68     	 ldr r2,[r7,#12]
 1083 003c 5A62     	 str r2,[r3,#36]
 474:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1084              	 .loc 1 474 0
 1085 003e 1437     	 adds r7,r7,#20
 1086              	.LCFI67:
 1087              	 .cfi_def_cfa_offset 4
 1088 0040 BD46     	 mov sp,r7
 1089              	.LCFI68:
 1090              	 .cfi_def_cfa_register 13
 1091              	 
 1092 0042 5DF8047B 	 ldr r7,[sp],#4
 1093              	.LCFI69:
 1094              	 .cfi_restore 7
 1095              	 .cfi_def_cfa_offset 0
 1096 0046 7047     	 bx lr
 1097              	 .cfi_endproc
 1098              	.LFE211:
 1100              	 .section .text.XMC_HRPWM_CSG_StartSlopeGenConfig,"ax",%progbits
 1101              	 .align 2
 1102              	 .global XMC_HRPWM_CSG_StartSlopeGenConfig
 1103              	 .thumb
 1104              	 .thumb_func
 1106              	XMC_HRPWM_CSG_StartSlopeGenConfig:
 1107              	.LFB212:
 475:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 476:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection to start slope generation function */
 477:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_StartSlopeGenConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG
 478:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1108              	 .loc 1 478 0
 1109              	 .cfi_startproc
 1110              	 
 1111              	 
 1112              	 
 1113 0000 80B4     	 push {r7}
 1114              	.LCFI70:
 1115              	 .cfi_def_cfa_offset 4
 1116              	 .cfi_offset 7,-4
 1117 0002 83B0     	 sub sp,sp,#12
 1118              	.LCFI71:
 1119              	 .cfi_def_cfa_offset 16
 1120 0004 00AF     	 add r7,sp,#0
 1121              	.LCFI72:
 1122              	 .cfi_def_cfa_register 7
 1123 0006 7860     	 str r0,[r7,#4]
 1124 0008 3960     	 str r1,[r7]
 479:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_StartSlopeGenConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg))
 480:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 481:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_STRIS_Msk);
 1125              	 .loc 1 481 0
 1126 000a 7B68     	 ldr r3,[r7,#4]
 1127 000c 1B68     	 ldr r3,[r3]
 1128 000e 23F0F002 	 bic r2,r3,#240
 1129 0012 7B68     	 ldr r3,[r7,#4]
 1130 0014 1A60     	 str r2,[r3]
 482:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_STRIS_Pos;
 1131              	 .loc 1 482 0
 1132 0016 7B68     	 ldr r3,[r7,#4]
 1133 0018 1A68     	 ldr r2,[r3]
 1134 001a 3B68     	 ldr r3,[r7]
 1135 001c 1B78     	 ldrb r3,[r3]
 1136 001e 1B01     	 lsls r3,r3,#4
 1137 0020 1A43     	 orrs r2,r2,r3
 1138 0022 7B68     	 ldr r3,[r7,#4]
 1139 0024 1A60     	 str r2,[r3]
 483:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_STRES_Msk);
 1140              	 .loc 1 483 0
 1141 0026 7B68     	 ldr r3,[r7,#4]
 1142 0028 5B68     	 ldr r3,[r3,#4]
 1143 002a 23F00C02 	 bic r2,r3,#12
 1144 002e 7B68     	 ldr r3,[r7,#4]
 1145 0030 5A60     	 str r2,[r3,#4]
 484:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_STRES_Pos;
 1146              	 .loc 1 484 0
 1147 0032 7B68     	 ldr r3,[r7,#4]
 1148 0034 5A68     	 ldr r2,[r3,#4]
 1149 0036 3B68     	 ldr r3,[r7]
 1150 0038 5B78     	 ldrb r3,[r3,#1]
 1151 003a 9B00     	 lsls r3,r3,#2
 1152 003c 1A43     	 orrs r2,r2,r3
 1153 003e 7B68     	 ldr r3,[r7,#4]
 1154 0040 5A60     	 str r2,[r3,#4]
 485:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1155              	 .loc 1 485 0
 1156 0042 0C37     	 adds r7,r7,#12
 1157              	.LCFI73:
 1158              	 .cfi_def_cfa_offset 4
 1159 0044 BD46     	 mov sp,r7
 1160              	.LCFI74:
 1161              	 .cfi_def_cfa_register 13
 1162              	 
 1163 0046 5DF8047B 	 ldr r7,[sp],#4
 1164              	.LCFI75:
 1165              	 .cfi_restore 7
 1166              	 .cfi_def_cfa_offset 0
 1167 004a 7047     	 bx lr
 1168              	 .cfi_endproc
 1169              	.LFE212:
 1171              	 .section .text.XMC_HRPWM_CSG_StopSlopeGenConfig,"ax",%progbits
 1172              	 .align 2
 1173              	 .global XMC_HRPWM_CSG_StopSlopeGenConfig
 1174              	 .thumb
 1175              	 .thumb_func
 1177              	XMC_HRPWM_CSG_StopSlopeGenConfig:
 1178              	.LFB213:
 486:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 487:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection to stop slope generation function */
 488:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_StopSlopeGenConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFIG_
 489:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1179              	 .loc 1 489 0
 1180              	 .cfi_startproc
 1181              	 
 1182              	 
 1183              	 
 1184 0000 80B4     	 push {r7}
 1185              	.LCFI76:
 1186              	 .cfi_def_cfa_offset 4
 1187              	 .cfi_offset 7,-4
 1188 0002 83B0     	 sub sp,sp,#12
 1189              	.LCFI77:
 1190              	 .cfi_def_cfa_offset 16
 1191 0004 00AF     	 add r7,sp,#0
 1192              	.LCFI78:
 1193              	 .cfi_def_cfa_register 7
 1194 0006 7860     	 str r0,[r7,#4]
 1195 0008 3960     	 str r1,[r7]
 490:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_StopSlopeGenConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 491:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 492:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_STPIS_Msk);
 1196              	 .loc 1 492 0
 1197 000a 7B68     	 ldr r3,[r7,#4]
 1198 000c 1B68     	 ldr r3,[r3]
 1199 000e 23F47062 	 bic r2,r3,#3840
 1200 0012 7B68     	 ldr r3,[r7,#4]
 1201 0014 1A60     	 str r2,[r3]
 493:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_STPIS_Pos;
 1202              	 .loc 1 493 0
 1203 0016 7B68     	 ldr r3,[r7,#4]
 1204 0018 1A68     	 ldr r2,[r3]
 1205 001a 3B68     	 ldr r3,[r7]
 1206 001c 1B78     	 ldrb r3,[r3]
 1207 001e 1B02     	 lsls r3,r3,#8
 1208 0020 1A43     	 orrs r2,r2,r3
 1209 0022 7B68     	 ldr r3,[r7,#4]
 1210 0024 1A60     	 str r2,[r3]
 494:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_STPES_Msk);
 1211              	 .loc 1 494 0
 1212 0026 7B68     	 ldr r3,[r7,#4]
 1213 0028 5B68     	 ldr r3,[r3,#4]
 1214 002a 23F03002 	 bic r2,r3,#48
 1215 002e 7B68     	 ldr r3,[r7,#4]
 1216 0030 5A60     	 str r2,[r3,#4]
 495:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_STPES_Pos;
 1217              	 .loc 1 495 0
 1218 0032 7B68     	 ldr r3,[r7,#4]
 1219 0034 5A68     	 ldr r2,[r3,#4]
 1220 0036 3B68     	 ldr r3,[r7]
 1221 0038 5B78     	 ldrb r3,[r3,#1]
 1222 003a 1B01     	 lsls r3,r3,#4
 1223 003c 1A43     	 orrs r2,r2,r3
 1224 003e 7B68     	 ldr r3,[r7,#4]
 1225 0040 5A60     	 str r2,[r3,#4]
 496:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1226              	 .loc 1 496 0
 1227 0042 0C37     	 adds r7,r7,#12
 1228              	.LCFI79:
 1229              	 .cfi_def_cfa_offset 4
 1230 0044 BD46     	 mov sp,r7
 1231              	.LCFI80:
 1232              	 .cfi_def_cfa_register 13
 1233              	 
 1234 0046 5DF8047B 	 ldr r7,[sp],#4
 1235              	.LCFI81:
 1236              	 .cfi_restore 7
 1237              	 .cfi_def_cfa_offset 0
 1238 004a 7047     	 bx lr
 1239              	 .cfi_endproc
 1240              	.LFE213:
 1242              	 .section .text.XMC_HRPWM_CSG_TriggerDACConvConfig,"ax",%progbits
 1243              	 .align 2
 1244              	 .global XMC_HRPWM_CSG_TriggerDACConvConfig
 1245              	 .thumb
 1246              	 .thumb_func
 1248              	XMC_HRPWM_CSG_TriggerDACConvConfig:
 1249              	.LFB214:
 497:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 498:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for triggering DAC conversion */
 499:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_TriggerDACConvConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CONFI
 500:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1250              	 .loc 1 500 0
 1251              	 .cfi_startproc
 1252              	 
 1253              	 
 1254              	 
 1255 0000 80B4     	 push {r7}
 1256              	.LCFI82:
 1257              	 .cfi_def_cfa_offset 4
 1258              	 .cfi_offset 7,-4
 1259 0002 83B0     	 sub sp,sp,#12
 1260              	.LCFI83:
 1261              	 .cfi_def_cfa_offset 16
 1262 0004 00AF     	 add r7,sp,#0
 1263              	.LCFI84:
 1264              	 .cfi_def_cfa_register 7
 1265 0006 7860     	 str r0,[r7,#4]
 1266 0008 3960     	 str r1,[r7]
 501:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_TriggerDACConvConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg)
 502:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 503:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_TRGIS_Msk);
 1267              	 .loc 1 503 0
 1268 000a 7B68     	 ldr r3,[r7,#4]
 1269 000c 1B68     	 ldr r3,[r3]
 1270 000e 23F47042 	 bic r2,r3,#61440
 1271 0012 7B68     	 ldr r3,[r7,#4]
 1272 0014 1A60     	 str r2,[r3]
 504:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_TRGIS_Pos;
 1273              	 .loc 1 504 0
 1274 0016 7B68     	 ldr r3,[r7,#4]
 1275 0018 1A68     	 ldr r2,[r3]
 1276 001a 3B68     	 ldr r3,[r7]
 1277 001c 1B78     	 ldrb r3,[r3]
 1278 001e 1B03     	 lsls r3,r3,#12
 1279 0020 1A43     	 orrs r2,r2,r3
 1280 0022 7B68     	 ldr r3,[r7,#4]
 1281 0024 1A60     	 str r2,[r3]
 505:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_TRGES_Msk);
 1282              	 .loc 1 505 0
 1283 0026 7B68     	 ldr r3,[r7,#4]
 1284 0028 5B68     	 ldr r3,[r3,#4]
 1285 002a 23F0C002 	 bic r2,r3,#192
 1286 002e 7B68     	 ldr r3,[r7,#4]
 1287 0030 5A60     	 str r2,[r3,#4]
 506:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_TRGES_Pos;
 1288              	 .loc 1 506 0
 1289 0032 7B68     	 ldr r3,[r7,#4]
 1290 0034 5A68     	 ldr r2,[r3,#4]
 1291 0036 3B68     	 ldr r3,[r7]
 1292 0038 5B78     	 ldrb r3,[r3,#1]
 1293 003a 9B01     	 lsls r3,r3,#6
 1294 003c 1A43     	 orrs r2,r2,r3
 1295 003e 7B68     	 ldr r3,[r7,#4]
 1296 0040 5A60     	 str r2,[r3,#4]
 507:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1297              	 .loc 1 507 0
 1298 0042 0C37     	 adds r7,r7,#12
 1299              	.LCFI85:
 1300              	 .cfi_def_cfa_offset 4
 1301 0044 BD46     	 mov sp,r7
 1302              	.LCFI86:
 1303              	 .cfi_def_cfa_register 13
 1304              	 
 1305 0046 5DF8047B 	 ldr r7,[sp],#4
 1306              	.LCFI87:
 1307              	 .cfi_restore 7
 1308              	 .cfi_def_cfa_offset 0
 1309 004a 7047     	 bx lr
 1310              	 .cfi_endproc
 1311              	.LFE214:
 1313              	 .section .text.XMC_HRPWM_CSG_TriggerShadowXferConfig,"ax",%progbits
 1314              	 .align 2
 1315              	 .global XMC_HRPWM_CSG_TriggerShadowXferConfig
 1316              	 .thumb
 1317              	 .thumb_func
 1319              	XMC_HRPWM_CSG_TriggerShadowXferConfig:
 1320              	.LFB215:
 508:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 509:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for triggering shadow transfer */
 510:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_TriggerShadowXferConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_CO
 511:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1321              	 .loc 1 511 0
 1322              	 .cfi_startproc
 1323              	 
 1324              	 
 1325              	 
 1326 0000 80B4     	 push {r7}
 1327              	.LCFI88:
 1328              	 .cfi_def_cfa_offset 4
 1329              	 .cfi_offset 7,-4
 1330 0002 83B0     	 sub sp,sp,#12
 1331              	.LCFI89:
 1332              	 .cfi_def_cfa_offset 16
 1333 0004 00AF     	 add r7,sp,#0
 1334              	.LCFI90:
 1335              	 .cfi_def_cfa_register 7
 1336 0006 7860     	 str r0,[r7,#4]
 1337 0008 3960     	 str r1,[r7]
 512:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_TriggerShadowXferConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(c
 513:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 514:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_STIS_Msk);
 1338              	 .loc 1 514 0
 1339 000a 7B68     	 ldr r3,[r7,#4]
 1340 000c 1B68     	 ldr r3,[r3]
 1341 000e 23F47022 	 bic r2,r3,#983040
 1342 0012 7B68     	 ldr r3,[r7,#4]
 1343 0014 1A60     	 str r2,[r3]
 515:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_STIS_Pos;
 1344              	 .loc 1 515 0
 1345 0016 7B68     	 ldr r3,[r7,#4]
 1346 0018 1A68     	 ldr r2,[r3]
 1347 001a 3B68     	 ldr r3,[r7]
 1348 001c 1B78     	 ldrb r3,[r3]
 1349 001e 1B04     	 lsls r3,r3,#16
 1350 0020 1A43     	 orrs r2,r2,r3
 1351 0022 7B68     	 ldr r3,[r7,#4]
 1352 0024 1A60     	 str r2,[r3]
 516:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_STES_Msk);
 1353              	 .loc 1 516 0
 1354 0026 7B68     	 ldr r3,[r7,#4]
 1355 0028 5B68     	 ldr r3,[r3,#4]
 1356 002a 23F44072 	 bic r2,r3,#768
 1357 002e 7B68     	 ldr r3,[r7,#4]
 1358 0030 5A60     	 str r2,[r3,#4]
 517:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->edge) << HRPWM0_CSG_IES_STES_Pos;
 1359              	 .loc 1 517 0
 1360 0032 7B68     	 ldr r3,[r7,#4]
 1361 0034 5A68     	 ldr r2,[r3,#4]
 1362 0036 3B68     	 ldr r3,[r7]
 1363 0038 5B78     	 ldrb r3,[r3,#1]
 1364 003a 1B02     	 lsls r3,r3,#8
 1365 003c 1A43     	 orrs r2,r2,r3
 1366 003e 7B68     	 ldr r3,[r7,#4]
 1367 0040 5A60     	 str r2,[r3,#4]
 518:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1368              	 .loc 1 518 0
 1369 0042 0C37     	 adds r7,r7,#12
 1370              	.LCFI91:
 1371              	 .cfi_def_cfa_offset 4
 1372 0044 BD46     	 mov sp,r7
 1373              	.LCFI92:
 1374              	 .cfi_def_cfa_register 13
 1375              	 
 1376 0046 5DF8047B 	 ldr r7,[sp],#4
 1377              	.LCFI93:
 1378              	 .cfi_restore 7
 1379              	 .cfi_def_cfa_offset 0
 1380 004a 7047     	 bx lr
 1381              	 .cfi_endproc
 1382              	.LFE215:
 1384              	 .section .text.XMC_HRPWM_CSG_DACRefValSwitchingConfig,"ax",%progbits
 1385              	 .align 2
 1386              	 .global XMC_HRPWM_CSG_DACRefValSwitchingConfig
 1387              	 .thumb
 1388              	 .thumb_func
 1390              	XMC_HRPWM_CSG_DACRefValSwitchingConfig:
 1391              	.LFB216:
 519:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 520:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection to trigger a switch in DAC reference value. This is only applicable to
 521:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_DACRefValSwitchingConfig(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_INPUT_C
 522:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1392              	 .loc 1 522 0
 1393              	 .cfi_startproc
 1394              	 
 1395              	 
 1396              	 
 1397 0000 80B4     	 push {r7}
 1398              	.LCFI94:
 1399              	 .cfi_def_cfa_offset 4
 1400              	 .cfi_offset 7,-4
 1401 0002 83B0     	 sub sp,sp,#12
 1402              	.LCFI95:
 1403              	 .cfi_def_cfa_offset 16
 1404 0004 00AF     	 add r7,sp,#0
 1405              	.LCFI96:
 1406              	 .cfi_def_cfa_register 7
 1407 0006 7860     	 str r0,[r7,#4]
 1408 0008 3960     	 str r1,[r7]
 523:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_DACRefValSwitchingConfig:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(
 524:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 525:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_SVIS_Msk);
 1409              	 .loc 1 525 0
 1410 000a 7B68     	 ldr r3,[r7,#4]
 1411 000c 1B68     	 ldr r3,[r3]
 1412 000e 23F00F02 	 bic r2,r3,#15
 1413 0012 7B68     	 ldr r3,[r7,#4]
 1414 0014 1A60     	 str r2,[r3]
 526:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)config->mapped_input) << HRPWM0_CSG0_DCI_SVIS_Pos;
 1415              	 .loc 1 526 0
 1416 0016 7B68     	 ldr r3,[r7,#4]
 1417 0018 1B68     	 ldr r3,[r3]
 1418 001a 3A68     	 ldr r2,[r7]
 1419 001c 1278     	 ldrb r2,[r2]
 1420 001e 1A43     	 orrs r2,r2,r3
 1421 0020 7B68     	 ldr r3,[r7,#4]
 1422 0022 1A60     	 str r2,[r3]
 527:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES &= ~((uint32_t)HRPWM0_CSG_IES_SVLS_Msk);
 1423              	 .loc 1 527 0
 1424 0024 7B68     	 ldr r3,[r7,#4]
 1425 0026 5B68     	 ldr r3,[r3,#4]
 1426 0028 23F00302 	 bic r2,r3,#3
 1427 002c 7B68     	 ldr r3,[r7,#4]
 1428 002e 5A60     	 str r2,[r3,#4]
 528:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->IES |= ((uint32_t)config->level) << HRPWM0_CSG_IES_SVLS_Pos;
 1429              	 .loc 1 528 0
 1430 0030 7B68     	 ldr r3,[r7,#4]
 1431 0032 5B68     	 ldr r3,[r3,#4]
 1432 0034 3A68     	 ldr r2,[r7]
 1433 0036 9278     	 ldrb r2,[r2,#2]
 1434 0038 1A43     	 orrs r2,r2,r3
 1435 003a 7B68     	 ldr r3,[r7,#4]
 1436 003c 5A60     	 str r2,[r3,#4]
 529:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1437              	 .loc 1 529 0
 1438 003e 0C37     	 adds r7,r7,#12
 1439              	.LCFI97:
 1440              	 .cfi_def_cfa_offset 4
 1441 0040 BD46     	 mov sp,r7
 1442              	.LCFI98:
 1443              	 .cfi_def_cfa_register 13
 1444              	 
 1445 0042 5DF8047B 	 ldr r7,[sp],#4
 1446              	.LCFI99:
 1447              	 .cfi_restore 7
 1448              	 .cfi_def_cfa_offset 0
 1449 0046 7047     	 bx lr
 1450              	 .cfi_endproc
 1451              	.LFE216:
 1453              	 .section .text.XMC_HRPWM_CSG_SelSlopeGenClkInput,"ax",%progbits
 1454              	 .align 2
 1455              	 .global XMC_HRPWM_CSG_SelSlopeGenClkInput
 1456              	 .thumb
 1457              	 .thumb_func
 1459              	XMC_HRPWM_CSG_SelSlopeGenClkInput:
 1460              	.LFB217:
 530:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 531:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Configure input selection for clock selection used in slope generation */
 532:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SelSlopeGenClkInput(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_CLK_INPUT_t 
 533:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1461              	 .loc 1 533 0
 1462              	 .cfi_startproc
 1463              	 
 1464              	 
 1465              	 
 1466 0000 80B4     	 push {r7}
 1467              	.LCFI100:
 1468              	 .cfi_def_cfa_offset 4
 1469              	 .cfi_offset 7,-4
 1470 0002 83B0     	 sub sp,sp,#12
 1471              	.LCFI101:
 1472              	 .cfi_def_cfa_offset 16
 1473 0004 00AF     	 add r7,sp,#0
 1474              	.LCFI102:
 1475              	 .cfi_def_cfa_register 7
 1476 0006 7860     	 str r0,[r7,#4]
 1477 0008 0B46     	 mov r3,r1
 1478 000a FB70     	 strb r3,[r7,#3]
 534:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SelSlopeGenClkInput:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg))
 535:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 536:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI &= ~((uint32_t)HRPWM0_CSG0_DCI_SCS_Msk);
 1479              	 .loc 1 536 0
 1480 000c 7B68     	 ldr r3,[r7,#4]
 1481 000e 1B68     	 ldr r3,[r3]
 1482 0010 23F44012 	 bic r2,r3,#3145728
 1483 0014 7B68     	 ldr r3,[r7,#4]
 1484 0016 1A60     	 str r2,[r3]
 537:../Libraries/XMCLib/src/xmc_hrpwm.c ****   csg->DCI |= ((uint32_t)input_clk) << HRPWM0_CSG0_DCI_SCS_Pos;
 1485              	 .loc 1 537 0
 1486 0018 7B68     	 ldr r3,[r7,#4]
 1487 001a 1A68     	 ldr r2,[r3]
 1488 001c FB78     	 ldrb r3,[r7,#3]
 1489 001e 1B05     	 lsls r3,r3,#20
 1490 0020 1A43     	 orrs r2,r2,r3
 1491 0022 7B68     	 ldr r3,[r7,#4]
 1492 0024 1A60     	 str r2,[r3]
 538:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1493              	 .loc 1 538 0
 1494 0026 0C37     	 adds r7,r7,#12
 1495              	.LCFI103:
 1496              	 .cfi_def_cfa_offset 4
 1497 0028 BD46     	 mov sp,r7
 1498              	.LCFI104:
 1499              	 .cfi_def_cfa_register 13
 1500              	 
 1501 002a 5DF8047B 	 ldr r7,[sp],#4
 1502              	.LCFI105:
 1503              	 .cfi_restore 7
 1504              	 .cfi_def_cfa_offset 0
 1505 002e 7047     	 bx lr
 1506              	 .cfi_endproc
 1507              	.LFE217:
 1509              	 .section .text.XMC_HRPWM_CSG_SetSRNode,"ax",%progbits
 1510              	 .align 2
 1511              	 .global XMC_HRPWM_CSG_SetSRNode
 1512              	 .thumb
 1513              	 .thumb_func
 1515              	XMC_HRPWM_CSG_SetSRNode:
 1516              	.LFB218:
 539:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 540:../Libraries/XMCLib/src/xmc_hrpwm.c **** /* Set the service request interrupt node */
 541:../Libraries/XMCLib/src/xmc_hrpwm.c **** void XMC_HRPWM_CSG_SetSRNode(XMC_HRPWM_CSG_t *const csg, const XMC_HRPWM_CSG_IRQ_ID_t event,
 542:../Libraries/XMCLib/src/xmc_hrpwm.c ****                                    const XMC_HRPWM_CSG_IRQ_SR_LINE_t sr)
 543:../Libraries/XMCLib/src/xmc_hrpwm.c **** {
 1517              	 .loc 1 543 0
 1518              	 .cfi_startproc
 1519              	 
 1520              	 
 1521              	 
 1522 0000 80B4     	 push {r7}
 1523              	.LCFI106:
 1524              	 .cfi_def_cfa_offset 4
 1525              	 .cfi_offset 7,-4
 1526 0002 83B0     	 sub sp,sp,#12
 1527              	.LCFI107:
 1528              	 .cfi_def_cfa_offset 16
 1529 0004 00AF     	 add r7,sp,#0
 1530              	.LCFI108:
 1531              	 .cfi_def_cfa_register 7
 1532 0006 7860     	 str r0,[r7,#4]
 1533 0008 0B46     	 mov r3,r1
 1534 000a 7B80     	 strh r3,[r7,#2]
 1535 000c 1346     	 mov r3,r2
 1536 000e 7B70     	 strb r3,[r7,#1]
 544:../Libraries/XMCLib/src/xmc_hrpwm.c ****   XMC_ASSERT("XMC_HRPWM_CSG_SetSRNode:Invalid CSG pointer", XMC_HRPWM_CHECK_CSG_PTR(csg));
 545:../Libraries/XMCLib/src/xmc_hrpwm.c ****   
 546:../Libraries/XMCLib/src/xmc_hrpwm.c ****   switch (event)
 1537              	 .loc 1 546 0
 1538 0010 7B88     	 ldrh r3,[r7,#2]
 1539 0012 102B     	 cmp r3,#16
 1540 0014 43D0     	 beq .L45
 1541 0016 102B     	 cmp r3,#16
 1542 0018 0BDC     	 bgt .L46
 1543 001a 022B     	 cmp r3,#2
 1544 001c 23D0     	 beq .L47
 1545 001e 022B     	 cmp r3,#2
 1546 0020 02DC     	 bgt .L48
 1547 0022 012B     	 cmp r3,#1
 1548 0024 12D0     	 beq .L49
 547:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 548:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_VLS1):
 549:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_VLS1S_Msk);
 550:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= (uint32_t)sr;
 551:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 552:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 553:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_VLS2):
 554:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_VLS2S_Msk);
 555:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_VLS2S_Pos;
 556:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 557:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 558:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_TRGS):
 559:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_TRLS_Msk);
 560:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_TRLS_Pos;
 561:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 562:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 563:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_STRS):
 564:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_STPS):
 565:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_SSLS_Msk);
 566:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_SSLS_Pos;
 567:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 568:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 569:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_STD):
 570:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_STLS_Msk);
 571:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_STLS_Pos;
 572:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 573:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 574:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_CRSE):
 575:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_CFSE):
 576:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_CRFLS_Msk);
 577:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CRFLS_Pos;
 578:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 579:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 580:../Libraries/XMCLib/src/xmc_hrpwm.c ****     case (XMC_HRPWM_CSG_IRQ_ID_CSEE):
 581:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS &= ~((uint32_t)HRPWM0_CSG_SRS_CSLS_Msk);
 582:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CSLS_Pos;
 583:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 584:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 585:../Libraries/XMCLib/src/xmc_hrpwm.c ****     default:
 586:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1549              	 .loc 1 586 0
 1550 0026 72E0     	 b .L43
 1551              	.L48:
 546:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 1552              	 .loc 1 546 0
 1553 0028 042B     	 cmp r3,#4
 1554 002a 2AD0     	 beq .L50
 1555 002c 082B     	 cmp r3,#8
 1556 002e 36D0     	 beq .L45
 1557              	 .loc 1 586 0
 1558 0030 6DE0     	 b .L43
 1559              	.L46:
 546:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 1560              	 .loc 1 546 0
 1561 0032 402B     	 cmp r3,#64
 1562 0034 4FD0     	 beq .L51
 1563 0036 402B     	 cmp r3,#64
 1564 0038 02DC     	 bgt .L52
 1565 003a 202B     	 cmp r3,#32
 1566 003c 3DD0     	 beq .L53
 1567              	 .loc 1 586 0
 1568 003e 66E0     	 b .L43
 1569              	.L52:
 546:../Libraries/XMCLib/src/xmc_hrpwm.c ****   {
 1570              	 .loc 1 546 0
 1571 0040 802B     	 cmp r3,#128
 1572 0042 48D0     	 beq .L51
 1573 0044 B3F5807F 	 cmp r3,#256
 1574 0048 53D0     	 beq .L54
 1575              	 .loc 1 586 0
 1576 004a 60E0     	 b .L43
 1577              	.L49:
 549:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= (uint32_t)sr;
 1578              	 .loc 1 549 0
 1579 004c 7B68     	 ldr r3,[r7,#4]
 1580 004e 1B6B     	 ldr r3,[r3,#48]
 1581 0050 23F00302 	 bic r2,r3,#3
 1582 0054 7B68     	 ldr r3,[r7,#4]
 1583 0056 1A63     	 str r2,[r3,#48]
 550:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1584              	 .loc 1 550 0
 1585 0058 7B68     	 ldr r3,[r7,#4]
 1586 005a 1A6B     	 ldr r2,[r3,#48]
 1587 005c 7B78     	 ldrb r3,[r7,#1]
 1588 005e 1A43     	 orrs r2,r2,r3
 1589 0060 7B68     	 ldr r3,[r7,#4]
 1590 0062 1A63     	 str r2,[r3,#48]
 551:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1591              	 .loc 1 551 0
 1592 0064 53E0     	 b .L43
 1593              	.L47:
 554:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_VLS2S_Pos;
 1594              	 .loc 1 554 0
 1595 0066 7B68     	 ldr r3,[r7,#4]
 1596 0068 1B6B     	 ldr r3,[r3,#48]
 1597 006a 23F00C02 	 bic r2,r3,#12
 1598 006e 7B68     	 ldr r3,[r7,#4]
 1599 0070 1A63     	 str r2,[r3,#48]
 555:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1600              	 .loc 1 555 0
 1601 0072 7B68     	 ldr r3,[r7,#4]
 1602 0074 1A6B     	 ldr r2,[r3,#48]
 1603 0076 7B78     	 ldrb r3,[r7,#1]
 1604 0078 9B00     	 lsls r3,r3,#2
 1605 007a 1A43     	 orrs r2,r2,r3
 1606 007c 7B68     	 ldr r3,[r7,#4]
 1607 007e 1A63     	 str r2,[r3,#48]
 556:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1608              	 .loc 1 556 0
 1609 0080 45E0     	 b .L43
 1610              	.L50:
 559:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_TRLS_Pos;
 1611              	 .loc 1 559 0
 1612 0082 7B68     	 ldr r3,[r7,#4]
 1613 0084 1B6B     	 ldr r3,[r3,#48]
 1614 0086 23F03002 	 bic r2,r3,#48
 1615 008a 7B68     	 ldr r3,[r7,#4]
 1616 008c 1A63     	 str r2,[r3,#48]
 560:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1617              	 .loc 1 560 0
 1618 008e 7B68     	 ldr r3,[r7,#4]
 1619 0090 1A6B     	 ldr r2,[r3,#48]
 1620 0092 7B78     	 ldrb r3,[r7,#1]
 1621 0094 1B01     	 lsls r3,r3,#4
 1622 0096 1A43     	 orrs r2,r2,r3
 1623 0098 7B68     	 ldr r3,[r7,#4]
 1624 009a 1A63     	 str r2,[r3,#48]
 561:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1625              	 .loc 1 561 0
 1626 009c 37E0     	 b .L43
 1627              	.L45:
 565:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_SSLS_Pos;
 1628              	 .loc 1 565 0
 1629 009e 7B68     	 ldr r3,[r7,#4]
 1630 00a0 1B6B     	 ldr r3,[r3,#48]
 1631 00a2 23F0C002 	 bic r2,r3,#192
 1632 00a6 7B68     	 ldr r3,[r7,#4]
 1633 00a8 1A63     	 str r2,[r3,#48]
 566:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1634              	 .loc 1 566 0
 1635 00aa 7B68     	 ldr r3,[r7,#4]
 1636 00ac 1A6B     	 ldr r2,[r3,#48]
 1637 00ae 7B78     	 ldrb r3,[r7,#1]
 1638 00b0 9B01     	 lsls r3,r3,#6
 1639 00b2 1A43     	 orrs r2,r2,r3
 1640 00b4 7B68     	 ldr r3,[r7,#4]
 1641 00b6 1A63     	 str r2,[r3,#48]
 567:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1642              	 .loc 1 567 0
 1643 00b8 29E0     	 b .L43
 1644              	.L53:
 570:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_STLS_Pos;
 1645              	 .loc 1 570 0
 1646 00ba 7B68     	 ldr r3,[r7,#4]
 1647 00bc 1B6B     	 ldr r3,[r3,#48]
 1648 00be 23F44072 	 bic r2,r3,#768
 1649 00c2 7B68     	 ldr r3,[r7,#4]
 1650 00c4 1A63     	 str r2,[r3,#48]
 571:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1651              	 .loc 1 571 0
 1652 00c6 7B68     	 ldr r3,[r7,#4]
 1653 00c8 1A6B     	 ldr r2,[r3,#48]
 1654 00ca 7B78     	 ldrb r3,[r7,#1]
 1655 00cc 1B02     	 lsls r3,r3,#8
 1656 00ce 1A43     	 orrs r2,r2,r3
 1657 00d0 7B68     	 ldr r3,[r7,#4]
 1658 00d2 1A63     	 str r2,[r3,#48]
 572:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1659              	 .loc 1 572 0
 1660 00d4 1BE0     	 b .L43
 1661              	.L51:
 576:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CRFLS_Pos;
 1662              	 .loc 1 576 0
 1663 00d6 7B68     	 ldr r3,[r7,#4]
 1664 00d8 1B6B     	 ldr r3,[r3,#48]
 1665 00da 23F44062 	 bic r2,r3,#3072
 1666 00de 7B68     	 ldr r3,[r7,#4]
 1667 00e0 1A63     	 str r2,[r3,#48]
 577:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1668              	 .loc 1 577 0
 1669 00e2 7B68     	 ldr r3,[r7,#4]
 1670 00e4 1A6B     	 ldr r2,[r3,#48]
 1671 00e6 7B78     	 ldrb r3,[r7,#1]
 1672 00e8 9B02     	 lsls r3,r3,#10
 1673 00ea 1A43     	 orrs r2,r2,r3
 1674 00ec 7B68     	 ldr r3,[r7,#4]
 1675 00ee 1A63     	 str r2,[r3,#48]
 578:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1676              	 .loc 1 578 0
 1677 00f0 0DE0     	 b .L43
 1678              	.L54:
 581:../Libraries/XMCLib/src/xmc_hrpwm.c ****       csg->SRS |= ((uint32_t)sr) << HRPWM0_CSG_SRS_CSLS_Pos;
 1679              	 .loc 1 581 0
 1680 00f2 7B68     	 ldr r3,[r7,#4]
 1681 00f4 1B6B     	 ldr r3,[r3,#48]
 1682 00f6 23F44052 	 bic r2,r3,#12288
 1683 00fa 7B68     	 ldr r3,[r7,#4]
 1684 00fc 1A63     	 str r2,[r3,#48]
 582:../Libraries/XMCLib/src/xmc_hrpwm.c ****       break;
 1685              	 .loc 1 582 0
 1686 00fe 7B68     	 ldr r3,[r7,#4]
 1687 0100 1A6B     	 ldr r2,[r3,#48]
 1688 0102 7B78     	 ldrb r3,[r7,#1]
 1689 0104 1B03     	 lsls r3,r3,#12
 1690 0106 1A43     	 orrs r2,r2,r3
 1691 0108 7B68     	 ldr r3,[r7,#4]
 1692 010a 1A63     	 str r2,[r3,#48]
 583:../Libraries/XMCLib/src/xmc_hrpwm.c **** 
 1693              	 .loc 1 583 0
 1694 010c 00BF     	 nop
 1695              	.L43:
 587:../Libraries/XMCLib/src/xmc_hrpwm.c ****   }
 588:../Libraries/XMCLib/src/xmc_hrpwm.c **** }
 1696              	 .loc 1 588 0
 1697 010e 0C37     	 adds r7,r7,#12
 1698              	.LCFI109:
 1699              	 .cfi_def_cfa_offset 4
 1700 0110 BD46     	 mov sp,r7
 1701              	.LCFI110:
 1702              	 .cfi_def_cfa_register 13
 1703              	 
 1704 0112 5DF8047B 	 ldr r7,[sp],#4
 1705              	.LCFI111:
 1706              	 .cfi_restore 7
 1707              	 .cfi_def_cfa_offset 0
 1708 0116 7047     	 bx lr
 1709              	 .cfi_endproc
 1710              	.LFE218:
 1712              	 .text
 1713              	.Letext0:
 1714              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1715              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1716              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1717              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_hrpwm.h"
 1718              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 1719              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 1720              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_hrpwm.c
    {standard input}:19     .text.XMC_HRPWM_lDelay:00000000 $t
    {standard input}:23     .text.XMC_HRPWM_lDelay:00000000 XMC_HRPWM_lDelay
    {standard input}:72     .text.XMC_HRPWM_Init:00000000 $t
    {standard input}:77     .text.XMC_HRPWM_Init:00000000 XMC_HRPWM_Init
    {standard input}:291    .text.XMC_HRPWM_Init:0000014c $d
    {standard input}:303    .text.XMC_HRPWM_EnableGlobalHR:00000000 $t
    {standard input}:308    .text.XMC_HRPWM_EnableGlobalHR:00000000 XMC_HRPWM_EnableGlobalHR
    {standard input}:347    .text.XMC_HRPWM_DisableGlobalHR:00000000 $t
    {standard input}:352    .text.XMC_HRPWM_DisableGlobalHR:00000000 XMC_HRPWM_DisableGlobalHR
    {standard input}:393    .text.XMC_HRPWM_GetHRGenReadyStatus:00000000 $t
    {standard input}:398    .text.XMC_HRPWM_GetHRGenReadyStatus:00000000 XMC_HRPWM_GetHRGenReadyStatus
    {standard input}:450    .text.XMC_HRPWM_HRC_Init:00000000 $t
    {standard input}:455    .text.XMC_HRPWM_HRC_Init:00000000 XMC_HRPWM_HRC_Init
    {standard input}:501    .text.XMC_HRPWM_HRC_ConfigSourceSelect0:00000000 $t
    {standard input}:506    .text.XMC_HRPWM_HRC_ConfigSourceSelect0:00000000 XMC_HRPWM_HRC_ConfigSourceSelect0
    {standard input}:643    .text.XMC_HRPWM_HRC_ConfigSourceSelect1:00000000 $t
    {standard input}:648    .text.XMC_HRPWM_HRC_ConfigSourceSelect1:00000000 XMC_HRPWM_HRC_ConfigSourceSelect1
    {standard input}:786    .text.XMC_HRPWM_CSG_Init:00000000 $t
    {standard input}:791    .text.XMC_HRPWM_CSG_Init:00000000 XMC_HRPWM_CSG_Init
    {standard input}:892    .text.XMC_HRPWM_CSG_SetCMPInput:00000000 $t
    {standard input}:897    .text.XMC_HRPWM_CSG_SetCMPInput:00000000 XMC_HRPWM_CSG_SetCMPInput
    {standard input}:953    .text.XMC_HRPWM_CSG_SelBlankingInput:00000000 $t
    {standard input}:958    .text.XMC_HRPWM_CSG_SelBlankingInput:00000000 XMC_HRPWM_CSG_SelBlankingInput
    {standard input}:1030   .text.XMC_HRPWM_CSG_SelClampingInput:00000000 $t
    {standard input}:1035   .text.XMC_HRPWM_CSG_SelClampingInput:00000000 XMC_HRPWM_CSG_SelClampingInput
    {standard input}:1101   .text.XMC_HRPWM_CSG_StartSlopeGenConfig:00000000 $t
    {standard input}:1106   .text.XMC_HRPWM_CSG_StartSlopeGenConfig:00000000 XMC_HRPWM_CSG_StartSlopeGenConfig
    {standard input}:1172   .text.XMC_HRPWM_CSG_StopSlopeGenConfig:00000000 $t
    {standard input}:1177   .text.XMC_HRPWM_CSG_StopSlopeGenConfig:00000000 XMC_HRPWM_CSG_StopSlopeGenConfig
    {standard input}:1243   .text.XMC_HRPWM_CSG_TriggerDACConvConfig:00000000 $t
    {standard input}:1248   .text.XMC_HRPWM_CSG_TriggerDACConvConfig:00000000 XMC_HRPWM_CSG_TriggerDACConvConfig
    {standard input}:1314   .text.XMC_HRPWM_CSG_TriggerShadowXferConfig:00000000 $t
    {standard input}:1319   .text.XMC_HRPWM_CSG_TriggerShadowXferConfig:00000000 XMC_HRPWM_CSG_TriggerShadowXferConfig
    {standard input}:1385   .text.XMC_HRPWM_CSG_DACRefValSwitchingConfig:00000000 $t
    {standard input}:1390   .text.XMC_HRPWM_CSG_DACRefValSwitchingConfig:00000000 XMC_HRPWM_CSG_DACRefValSwitchingConfig
    {standard input}:1454   .text.XMC_HRPWM_CSG_SelSlopeGenClkInput:00000000 $t
    {standard input}:1459   .text.XMC_HRPWM_CSG_SelSlopeGenClkInput:00000000 XMC_HRPWM_CSG_SelSlopeGenClkInput
    {standard input}:1510   .text.XMC_HRPWM_CSG_SetSRNode:00000000 $t
    {standard input}:1515   .text.XMC_HRPWM_CSG_SetSRNode:00000000 XMC_HRPWM_CSG_SetSRNode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GetCcuClockFrequency
g_hrpwm_char_data
