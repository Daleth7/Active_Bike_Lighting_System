   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc4_rtc.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_RTC_IsRunning,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_RTC_IsRunning:
  24              	.LFB131:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_rtc.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @file xmc_rtc.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @date 2015-06-20 
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @cond
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** ***************************************************************************************************
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * All rights reserved.                        
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                                             
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * following conditions are met:   
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                                                                              
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * disclaimer.                        
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                                                                              
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                                                                              
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  **************************************************************************************************
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Change History
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * --------------
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 2015-02-20:
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *     - Initial
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *      
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 2015-05-20:
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *     - Documentation updates <br>
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *     - In xmc1_rtc file XMC_RTC_Init function
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *       is modified by adding the RTC running condition check
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *   
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 2015-06-20:
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @endcond 
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #ifndef XMC_RTC_H
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #define XMC_RTC_H
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**************************************************************************************************
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * HEADER FILES
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  **************************************************************************************************
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #include <xmc_common.h>
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #include <time.h>
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #if UC_FAMILY == XMC1
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #include "xmc1_rtc.h"
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #endif
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #if UC_FAMILY == XMC4
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #include "xmc4_rtc.h"
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #endif
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @{
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @addtogroup RTC
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @brief RTC driver for XMC microcontroller family.
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Real-time clock (RTC) is a clock that keeps track of the current time. Precise
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * real time keeping is with a 32.768 KHz external crystal clock or a 32.768 KHz
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * high precision internal clock. It provides a periodic time based interrupt and
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * a programmable alarm interrupt on time match. It also supports wakeup from
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * hibernate.
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The RTC low level driver provides functions to configure and initialize the RTC
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * hardware peripheral. 
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @{
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**************************************************************************************************
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * MACROS
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  **************************************************************************************************
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**************************************************************************************************
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * ENUMS
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  **************************************************************************************************
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *  Status return values for RTC low level driver
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** typedef enum XMC_RTC_STATUS
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_STATUS_OK    = 0U, /**< Operation successful */
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_STATUS_ERROR = 1U, /**< Operation unsuccessful */
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_STATUS_BUSY  = 2U  /**< Busy with a previous request */
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** } XMC_RTC_STATUS_t;
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Events which enables interrupt request generation
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** typedef enum XMC_RTC_EVENT
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_SECONDS = RTC_MSKSR_MPSE_Msk, /**< Mask value to enable an event on period
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_MINUTES = RTC_MSKSR_MPMI_Msk, /**< Mask value to enable an event on period
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_HOURS   = RTC_MSKSR_MPHO_Msk, /**< Mask value to enable an event on period
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_DAYS    = RTC_MSKSR_MPDA_Msk, /**< Mask value to enable an event on period
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_MONTHS  = RTC_MSKSR_MPMO_Msk, /**< Mask value to enable an event on period
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_YEARS   = RTC_MSKSR_MPYE_Msk, /**< Mask value to enable an event on period
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_EVENT_ALARM            = RTC_MSKSR_MAI_Msk   /**< Mask value to enable an event on period
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** } XMC_RTC_EVENT_t;
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *  Months used to program the date  
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** typedef enum XMC_RTC_MONTH
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_JANUARY   = 0U, 
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_FEBRUARY  = 1U,     
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_MARCH     = 2U,         
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_APRIL     = 3U,       
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_MAY       = 4U,         
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_JUNE      = 5U,         
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_JULY      = 6U,           
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_AUGUST    = 7U,         
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_SEPTEMBER = 8U,    
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_OCTOBER   = 9U,      
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_NOVEMBER  = 10U,     
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_MONTH_DECEMBER  = 11U     
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** } XMC_RTC_MONTH_t;
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *  Week days used program the date 
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** typedef enum XMC_RTC_WEEKDAY
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_SUNDAY    = 0U, 
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_MONDAY    = 1U,      
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_TUESDAY   = 2U,      
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_WEDNESDAY = 3U,    
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_THURSDAY  = 4U,     
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_FRIDAY    = 5U,       
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_SATURDAY  = 6U      
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** } XMC_RTC_WEEKDAY_t;
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**************************************************************************************************
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * DATA STRUCTURES
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  **************************************************************************************************
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /*Anonymous structure/union guard start*/
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #if defined(__CC_ARM)
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   #pragma push
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   #pragma anon_unions
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #elif defined(__TASKING__)
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   #pragma warning 586
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #endif
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Alarm time values of RTC  <br>
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The structure presents a convenient way to set/obtain the 
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * alarm time values for seconds, minutes, hours, days, month and year of RTC. 
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The XMC_RTC_SetAlarm() and XMC_RTC_GetAlarm() can be
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * used to populate the structure with the alarm time value of
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * RTC 
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */ 
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** typedef struct XMC_RTC_ALARM
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   union
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   {
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  uint32_t raw0;
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  struct
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  {
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t seconds  : 6; /**< Alarm seconds compare value (0-59: Above this causes this bitfield
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 2; 
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t minutes  : 6; /**< Alarm minutes compare value (0-59: Above this causes this bitfield
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 2;
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t hours    : 5; /**< Alarm hours compare value   (0-23: Above this causes this bitfield
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 3;
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t days     : 5; /**< Alarm days compare value (0-Actual days of month: Above this cause
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 3;
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  };
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   };
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   union
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   {
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****     uint32_t raw1;
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  struct
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  {
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 8;
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t month    : 4; /**< Alarm month compare value (0-11: Above this causes this bitfield t
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 4;
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t year     : 16; /**< Alarm year compare value */ 
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  };
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   };
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** } XMC_RTC_ALARM_t;
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Time values of RTC  <br>
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The structure presents a convenient way to set/obtain the 
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * time values for seconds, minutes, hours, days, month and year of RTC. 
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The XMC_RTC_SetTime() and XMC_RTC_GetTime() can be
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * used to populate the structure with the time value of
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * RTC 
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */ 
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** typedef struct XMC_RTC_TIME
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   union
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   {
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****     uint32_t raw0;
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  struct
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  {
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t seconds  : 6; /**< Seconds time value (0-59: Above this causes this bitfield to be se
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 2; 
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t minutes  : 6; /**< Minutes time value (0-59: Above this causes this bitfield to be se
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 2;
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t hours    : 5; /**< Hours time value   (0-23: Above this causes this bitfield to be se
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 3;
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t days     : 5; /**< Days time value (0-Actual days of month: Above this causes this bi
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t          : 3;
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  };
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   };
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   union
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   {
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****     uint32_t raw1;
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  struct
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	  {
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t daysofweek  : 3; /**< Days of week time value (0-6: Above this causes this bitfield t
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t             : 5;
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t month       : 4; /**< Month time value       (0-11: Above this causes this bitfield t
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t             : 4;
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	    uint32_t year        : 16; /**< Year time value */
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 	 };
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   };
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** } XMC_RTC_TIME_t;
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /*Anonymous structure/union guard end*/
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #if defined(__CC_ARM)
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   #pragma pop
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #elif defined(__TASKING__)
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   #pragma warning restore
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #endif
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * RTC initialization with time, alarm and clock divider(prescaler) configurations <br>
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The structure presents a convenient way to set/obtain the time and alarm configurations  
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * for RTC. The XMC_RTC_Init() can be used to populate the structure with the time and alarm
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * values of RTC.
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */  
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** typedef struct XMC_RTC_CONFIG
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_TIME_t    time;
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   XMC_RTC_ALARM_t   alarm;
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   uint16_t          prescaler;
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** } XMC_RTC_CONFIG_t;
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**************************************************************************************************
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * API PROTOTYPES
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  **************************************************************************************************
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #ifdef __cplusplus
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** extern "C" {
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** #endif
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param config Constant pointer to a constant ::XMC_RTC_CONFIG_t structure containing the
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *               time, alarm time and clock divider(prescaler) configuration. 
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return XMC_RTC_STATUS_t Always returns XMC_RTC_STATUS_OK (It contains only register assignment 
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Initialize the RTC peripheral <br>
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par \if XMC4
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function enables the hibernate domain for accessing RTC peripheral registers, configures 
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * internal clock divider, time and alarm values by writing to the CTR.DIV, TIM0, TIM1, ATIM0 and
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * ATIM1 registers.
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \if XMC1
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function ungates the peripheral clock for RTC, configures 
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * internal clock divider, time and alarm values by writing to the CTR.DIV, TIM0, TIM1, ATIM0 and
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * ATIM1 registers.
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** XMC_RTC_STATUS_t XMC_RTC_Init(const XMC_RTC_CONFIG_t *const config);
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /** 
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Enables RTC peripheral for programming its registers <br>
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par \if XMC4
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Enables the hibernate domain for accessing RTC peripheral registers.
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \if XMC1
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Ungates the peripheral clock.
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_Disable(), XMC_SCU_RESET_DeassertPeripheralReset()
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */ 
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_Enable(void);
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /** 
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Disables RTC peripheral for programming its registers <br>
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par \if XMC4
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Empty function (Hibernate domain is not disabled).
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \if XMC1
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Gates the peripheral clock.
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_SCU_RESET_AssertPeripheralReset()
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */ 
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_Disable(void);
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /** 
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Checks RTC peripheral is enabled for programming its registers <br>
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par \if XMC4
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Checks the hibernate domain is enabled or not.
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \if XMC1
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Checks peripheral clock is ungated or not.
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \endif
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_RTC_Disable(), XMC_SCU_RESET_DeassertPeripheralReset(),
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_SCU_RESET_AssertPeripheralReset()
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */ 
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** bool XMC_RTC_IsEnabled(void);
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Enables RTC peripheral to start counting time <br>
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function starts the RTC for counting time by setting 
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * CTR.ENB bit. Before starting the RTC, it should not be in
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * running mode and also hibernate domain should be enabled.
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_RTC_Stop(), XMC_SCU_RESET_DeassertPeripheralReset()
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */  
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_Start(void);
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Disables RTC peripheral to start counting time <br>
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function stops the RTC for counting time by resetting 
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * CTR.ENB. Before stopping the RTC, hibernate domain should be enabled.
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_RTC_Start(), XMC_SCU_RESET_AssertPeripheralReset()
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */  
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_Stop(void);
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param prescaler Prescaler value to be set                 
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Sets the RTC module prescaler value <br>
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function sets the CTR.DIV bitfield to configure the prescalar value. 
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The default value for the prescalar with the 32.768kHz crystal (or the internal clock) 
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * is 7FFFH for a time interval of 1 sec. Before setting the prescaler value RTC should be
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * in stop mode and hibernate domain should be enabled.
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_Stop(), XMC_RTC_Enable(), XMC_RTC_GetPrescaler()
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */   
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_SetPrescaler(uint16_t prescaler);
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Gets the RTC module prescaler value <br>
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function reads the CTR.DIV bitfield to get the prescalar value. The default value 
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * for the prescalar with the 32.768kHz crystal (or the internal clock) is 7FFFH for a 
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * time interval of 1 sec.
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_SetPrescaler()
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */   
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** __STATIC_INLINE uint32_t XMC_RTC_GetPrescaler(void)
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   return (uint32_t)(((uint32_t)RTC->CTR & (uint32_t)RTC_CTR_DIV_Msk) >> (uint32_t)RTC_CTR_DIV_Pos);
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** }
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param timeval Contstant pointer to a constant ::XMC_RTC_TIME_t structure containing the
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                time parameters seconds, minutes, hours, days, daysofweek, month and year.     
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Sets the RTC module time values <br>
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function sets the TIM0, TIM1 registers with time values.
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The values can only be written when RTC is disabled.
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_TIME_t for the valid range of time value parameters. <br>
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_GetTime(), XMC_RTC_Stop() 
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */    
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const timeval);
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param time Pointer to a constant ::XMC_RTC_TIME_t structure containing the time parameters
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *             seconds, minutes, hours, days, daysofweek, month and year. 
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Gets the RTC module time value <br>
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function gets the time values from TIM0, TIM1 registers. 
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_TIME_t for the valid range of time value parameters. <br>
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_SetTime()
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */    
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time);
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param stdtime Pointer to a constant ::tm structure containing the time parameters seconds,
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                minutes, hours, days, daysofweek, month, year(since 1900) and days in a   
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                year in standard format.           
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Gets the RTC module time value in standard format <br>
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function gets the time values from TIM0, TIM1 registers. 
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_TIME_t for the valid range of time value parameters. <br>
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * For days the valid range is (1 - Actual days of month), year (since 1900) and 
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * daysinyear (0 -365).
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_SetTime(), XMC_RTC_GetTime()
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */     
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime);
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param timeval Contstant pointer to a constant ::XMC_RTC_ALARM_t structure containing the
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                alarm time parameters alarm seconds, alarm minutes, alarm hours, alarm days, 
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                alarm daysofweek, alarm month and alarm year.           
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Sets the RTC module alarm time value <br>
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function sets the ATIM0, ATIM1 registers with alarm time values. 
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_ALARM_t for the valid range of alarm time value parameters. <br>
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_GetAlarm()
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */     
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm);
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param time Pointer to a constant ::XMC_RTC_ALARM_t structure containing the
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *             time parameters alarm seconds, alarm minutes, alarm hours, alarm days, 
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *             alarm daysofweek, alarm month and alarm year.           
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Gets the RTC module alarm time value <br>
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function gets the alarm time values from ATIM0, ATIM1 registers. 
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_ALARM_t for the valid range of alarm time value parameters. <br>
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_SetAlarm()
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */    
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm);
 515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param stdtime Pointer to a constant ::tm structure containing the time parameters alarm seconds
 518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                alarm minutes, alarm hours, alarm days, alarm daysofweek, alarm month,  
 519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *                alarm year(since 1900) and alarm days in a year in standard format.           
 520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Gets the RTC module alarm time value in standard format <br>
 524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function gets the alarm time values from ATIM0, ATIM1 registers. 
 527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_ALARM_t for the valid range of alarm time value parameters. <br>
 528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * For days the valid range is (1 - Actual days of month), year (since 1900) and 
 529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * daysinyear (0 -365).
 530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_SetAlarm(), XMC_RTC_GetAlarm()
 533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */     
 534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime);
 535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param event A valid RTC event (::XMC_RTC_EVENT_t) or a valid combination of
 538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *              logically OR'd events
 539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Enable RTC periodic and alarm event(s) <br>
 543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function sets the bitfields of MSKSR register to enable interrupt generation 
 546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * for requested RTC event(s). 
 547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Setting the masking value for the event(s) containing in the ::XMC_RTC_EVENT_t leads 
 548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * to a generation of the interrupt.
 549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_DisableEvent()
 552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_EnableEvent(const uint32_t event);
 554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param event A valid RTC event (::XMC_RTC_EVENT_t) or a valid combination of
 557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *              logically OR'd events
 558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Disable RTC periodic and alarm event(s) <br>
 562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function resets the bitfields of MSKSR register to disable interrupt generation 
 565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * for requested RTC event(s). 
 566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Resetting the masking value for the the event(s) containing in the ::XMC_RTC_EVENT_t blocks 
 567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * the generation of the interrupt.
 568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 
 569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_EnableEvent()
 571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_DisableEvent(const uint32_t event);
 573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @param event A valid RTC event (::XMC_RTC_EVENT_t) or a valid combination of
 576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *              logically OR'd events
 577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Clears periodic and alarm event(s) status <br>
 581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function sets the bitfields of CLRSR register to clear status bits in RAWSTAT and STSSR regi
 584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Setting the value for the the RTC event(s) containing in the ::XMC_RTC_EVENT_t clears the 
 585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * corresponding status bits in RAWSTAT and STSSR registers.
 586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 
 587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_GetEventStatus()
 589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */ 
 590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** void XMC_RTC_ClearEvent(const uint32_t event);
 591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return None
 594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Gets the RTC periodic and alarm event(s) status <br>
 597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function reads the bitfields of STSSR register 
 600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * to get the status of RTC events. 
 601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Reading the value of the register STSSR gives the status of the event(s) containing in the ::XMC
 602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * 
 603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_ClearEvent()
 605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */
 606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** uint32_t XMC_RTC_GetEventStatus(void);
 607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** 
 608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** /**
 609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * @return bool true if RTC is running
 610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *              false if RTC is not running
 611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 612:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 613:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * Checks the running status of the RTC <br>
 614:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 615:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par
 616:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * The function reads the bitfield ENB of CTR register 
 617:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * to get the running status of RTC. 
 618:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  *
 619:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 620:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  * XMC_RTC_Start(), XMC_RTC_Stop()
 621:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****  */ 
 622:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** __STATIC_INLINE bool XMC_RTC_IsRunning(void)
 623:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** {
  26              	 .loc 1 623 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 00AF     	 add r7,sp,#0
  36              	.LCFI1:
  37              	 .cfi_def_cfa_register 7
 624:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h ****   return (bool)(RTC->CTR & RTC_CTR_ENB_Msk);
  38              	 .loc 1 624 0
  39 0004 064B     	 ldr r3,.L3
  40 0006 5B68     	 ldr r3,[r3,#4]
  41 0008 03F00103 	 and r3,r3,#1
  42 000c 002B     	 cmp r3,#0
  43 000e 14BF     	 ite ne
  44 0010 0123     	 movne r3,#1
  45 0012 0023     	 moveq r3,#0
  46 0014 DBB2     	 uxtb r3,r3
 625:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_rtc.h **** }
  47              	 .loc 1 625 0
  48 0016 1846     	 mov r0,r3
  49 0018 BD46     	 mov sp,r7
  50              	.LCFI2:
  51              	 .cfi_def_cfa_register 13
  52              	 
  53 001a 5DF8047B 	 ldr r7,[sp],#4
  54              	.LCFI3:
  55              	 .cfi_restore 7
  56              	 .cfi_def_cfa_offset 0
  57 001e 7047     	 bx lr
  58              	.L4:
  59              	 .align 2
  60              	.L3:
  61 0020 004A0050 	 .word 1342196224
  62              	 .cfi_endproc
  63              	.LFE131:
  65              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_SCU_GetMirrorStatus:
  71              	.LFB153:
  72              	 .file 2 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_scu.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @date 2015-06-20 
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @cond
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                             
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * following conditions are met:   
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                                                              
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * disclaimer.                        
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                                                              
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                                                                              
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Change History
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * --------------
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 2015-02-20:
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Initial <br>
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 2015-05-20:
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 2015-06-20:
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *      
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @endcond 
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #ifndef XMC_SCU_H
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #define XMC_SCU_H
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * HEADER FILES
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #include <xmc_common.h>
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @{
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @addtogroup SCU
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SCU provides the following features,
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Power control
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4 
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Hibernate control 
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Reset control
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Clock control
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clock driver features:
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC1
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Reset driver features:
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC1
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif <br>
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Interrupt driver features:
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Hibernate driver features:
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Trap driver features:
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Parity driver features:
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Power driver features:
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Miscellaneous features:
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC4
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \if XMC1
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  \endif
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @{
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 	* MACROS
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * ENUMS
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY    ,   /**< Cannot execute the SCU related operation request because
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****                                   processing another request. */
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * DATA TYPES
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurence.
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #include <xmc1_scu.h>
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #include <xmc4_scu.h>
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #else
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #error "Unspecified chipset"
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #endif
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**************************************************************************************************
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * API Prototypes
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  **************************************************************************************************
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #ifdef __cplusplus
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** extern "C" {
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #endif
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    combined using \a OR operation.
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the timer using this API.<BR>
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    combined using \a OR operation.
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the timer using this API.<BR>
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                parameters of clock setup.
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Disables generation of interrupt on occurence of the input event.\n\n
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the cause of reset. 
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None 
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   SCU_RESET->RSTCLR |= (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   return SystemCoreClock;
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * bit fields are handled internally.
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * 
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    to identify the peripheral.
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return None
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * peripherals that support clock gating.
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC1
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \if XMC4
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \endif
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * It is recommended to use this API before
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** #endif
 520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** 
 522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** /**
 523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *                    using \a OR operation.
 527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  *
 528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * \par<b>Description</b><br>
 529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****  */
 537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** {
  73              	 .loc 2 538 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78 0000 80B4     	 push {r7}
  79              	.LCFI4:
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 00AF     	 add r7,sp,#0
  83              	.LCFI5:
  84              	 .cfi_def_cfa_register 7
 539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
  85              	 .loc 2 539 0
  86 0004 034B     	 ldr r3,.L7
  87 0006 D3F8C430 	 ldr r3,[r3,#196]
 540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_scu.h **** }
  88              	 .loc 2 540 0
  89 000a 1846     	 mov r0,r3
  90 000c BD46     	 mov sp,r7
  91              	.LCFI6:
  92              	 .cfi_def_cfa_register 13
  93              	 
  94 000e 5DF8047B 	 ldr r7,[sp],#4
  95              	.LCFI7:
  96              	 .cfi_restore 7
  97              	 .cfi_def_cfa_offset 0
  98 0012 7047     	 bx lr
  99              	.L8:
 100              	 .align 2
 101              	.L7:
 102 0014 00400050 	 .word 1342193664
 103              	 .cfi_endproc
 104              	.LFE153:
 106              	 .section .text.XMC_RTC_Enable,"ax",%progbits
 107              	 .align 2
 108              	 .global XMC_RTC_Enable
 109              	 .thumb
 110              	 .thumb_func
 112              	XMC_RTC_Enable:
 113              	.LFB154:
 114              	 .file 3 "../Libraries/XMCLib/src/xmc4_rtc.c"
   1:../Libraries/XMCLib/src/xmc4_rtc.c **** /**
   2:../Libraries/XMCLib/src/xmc4_rtc.c ****  * @file xmc4_rtc.c
   3:../Libraries/XMCLib/src/xmc4_rtc.c ****  * @date 2015-06-20 
   4:../Libraries/XMCLib/src/xmc4_rtc.c ****  *
   5:../Libraries/XMCLib/src/xmc4_rtc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc4_rtc.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc4_rtc.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc4_rtc.c ****  *
   9:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc4_rtc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc4_rtc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc4_rtc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc4_rtc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc4_rtc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc4_rtc.c ****  * 
  18:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc4_rtc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc4_rtc.c ****  * 
  21:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc4_rtc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc4_rtc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc4_rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc4_rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc4_rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc4_rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc4_rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc4_rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc4_rtc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc4_rtc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc4_rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc4_rtc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc4_rtc.c ****  *
  36:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc4_rtc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc4_rtc.c ****  *
  39:../Libraries/XMCLib/src/xmc4_rtc.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc4_rtc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc4_rtc.c ****  *      
  42:../Libraries/XMCLib/src/xmc4_rtc.c ****  * @endcond 
  43:../Libraries/XMCLib/src/xmc4_rtc.c ****  *
  44:../Libraries/XMCLib/src/xmc4_rtc.c ****  */
  45:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  46:../Libraries/XMCLib/src/xmc4_rtc.c **** /**
  47:../Libraries/XMCLib/src/xmc4_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  48:../Libraries/XMCLib/src/xmc4_rtc.c ****  *
  49:../Libraries/XMCLib/src/xmc4_rtc.c ****  */
  50:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  51:../Libraries/XMCLib/src/xmc4_rtc.c **** /**************************************************************************************************
  52:../Libraries/XMCLib/src/xmc4_rtc.c ****  * HEADER FILES
  53:../Libraries/XMCLib/src/xmc4_rtc.c ****  **************************************************************************************************
  54:../Libraries/XMCLib/src/xmc4_rtc.c **** #include <xmc_rtc.h>
  55:../Libraries/XMCLib/src/xmc4_rtc.c **** #include <xmc_scu.h>
  56:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  57:../Libraries/XMCLib/src/xmc4_rtc.c **** #if UC_FAMILY == XMC4
  58:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  59:../Libraries/XMCLib/src/xmc4_rtc.c **** /**************************************************************************************************
  60:../Libraries/XMCLib/src/xmc4_rtc.c ****  * API IMPLEMENTATION
  61:../Libraries/XMCLib/src/xmc4_rtc.c ****  **************************************************************************************************
  62:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  63:../Libraries/XMCLib/src/xmc4_rtc.c **** /*
  64:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Enables RTC peripheral for programming its registers
  65:../Libraries/XMCLib/src/xmc4_rtc.c ****  */
  66:../Libraries/XMCLib/src/xmc4_rtc.c **** void XMC_RTC_Enable(void)
  67:../Libraries/XMCLib/src/xmc4_rtc.c **** {
 115              	 .loc 3 67 0
 116              	 .cfi_startproc
 117              	 
 118              	 
 119 0000 80B5     	 push {r7,lr}
 120              	.LCFI8:
 121              	 .cfi_def_cfa_offset 8
 122              	 .cfi_offset 7,-8
 123              	 .cfi_offset 14,-4
 124 0002 00AF     	 add r7,sp,#0
 125              	.LCFI9:
 126              	 .cfi_def_cfa_register 7
  68:../Libraries/XMCLib/src/xmc4_rtc.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 127              	 .loc 3 68 0
 128 0004 FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
  69:../Libraries/XMCLib/src/xmc4_rtc.c **** }
 129              	 .loc 3 69 0
 130 0008 80BD     	 pop {r7,pc}
 131              	 .cfi_endproc
 132              	.LFE154:
 134 000a 00BF     	 .section .text.XMC_RTC_Disable,"ax",%progbits
 135              	 .align 2
 136              	 .global XMC_RTC_Disable
 137              	 .thumb
 138              	 .thumb_func
 140              	XMC_RTC_Disable:
 141              	.LFB155:
  70:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  71:../Libraries/XMCLib/src/xmc4_rtc.c **** /*
  72:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Disables RTC peripheral for programming its registers
  73:../Libraries/XMCLib/src/xmc4_rtc.c ****  */
  74:../Libraries/XMCLib/src/xmc4_rtc.c **** void XMC_RTC_Disable(void)
  75:../Libraries/XMCLib/src/xmc4_rtc.c **** {
 142              	 .loc 3 75 0
 143              	 .cfi_startproc
 144              	 
 145              	 
 146              	 
 147 0000 80B4     	 push {r7}
 148              	.LCFI10:
 149              	 .cfi_def_cfa_offset 4
 150              	 .cfi_offset 7,-4
 151 0002 00AF     	 add r7,sp,#0
 152              	.LCFI11:
 153              	 .cfi_def_cfa_register 7
  76:../Libraries/XMCLib/src/xmc4_rtc.c ****   /*
  77:../Libraries/XMCLib/src/xmc4_rtc.c ****    * Empty because disabling the hibernate
  78:../Libraries/XMCLib/src/xmc4_rtc.c ****    * domain is not done intentionally.
  79:../Libraries/XMCLib/src/xmc4_rtc.c ****    */
  80:../Libraries/XMCLib/src/xmc4_rtc.c **** }
 154              	 .loc 3 80 0
 155 0004 BD46     	 mov sp,r7
 156              	.LCFI12:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 0006 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI13:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 000a 7047     	 bx lr
 164              	 .cfi_endproc
 165              	.LFE155:
 167              	 .section .text.XMC_RTC_IsEnabled,"ax",%progbits
 168              	 .align 2
 169              	 .global XMC_RTC_IsEnabled
 170              	 .thumb
 171              	 .thumb_func
 173              	XMC_RTC_IsEnabled:
 174              	.LFB156:
  81:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  82:../Libraries/XMCLib/src/xmc4_rtc.c **** /*
  83:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Checks RTC peripheral is enabled for programming to its registers
  84:../Libraries/XMCLib/src/xmc4_rtc.c ****  */
  85:../Libraries/XMCLib/src/xmc4_rtc.c **** bool XMC_RTC_IsEnabled(void)
  86:../Libraries/XMCLib/src/xmc4_rtc.c **** {
 175              	 .loc 3 86 0
 176              	 .cfi_startproc
 177              	 
 178              	 
 179 0000 80B5     	 push {r7,lr}
 180              	.LCFI14:
 181              	 .cfi_def_cfa_offset 8
 182              	 .cfi_offset 7,-8
 183              	 .cfi_offset 14,-4
 184 0002 00AF     	 add r7,sp,#0
 185              	.LCFI15:
 186              	 .cfi_def_cfa_register 7
  87:../Libraries/XMCLib/src/xmc4_rtc.c ****   return XMC_SCU_HIB_IsHibernateDomainEnabled();
 187              	 .loc 3 87 0
 188 0004 FFF7FEFF 	 bl XMC_SCU_HIB_IsHibernateDomainEnabled
 189 0008 0346     	 mov r3,r0
  88:../Libraries/XMCLib/src/xmc4_rtc.c **** }
 190              	 .loc 3 88 0
 191 000a 1846     	 mov r0,r3
 192 000c 80BD     	 pop {r7,pc}
 193              	 .cfi_endproc
 194              	.LFE156:
 196 000e 00BF     	 .section .text.XMC_RTC_Init,"ax",%progbits
 197              	 .align 2
 198              	 .global XMC_RTC_Init
 199              	 .thumb
 200              	 .thumb_func
 202              	XMC_RTC_Init:
 203              	.LFB157:
  89:../Libraries/XMCLib/src/xmc4_rtc.c **** 
  90:../Libraries/XMCLib/src/xmc4_rtc.c **** /*
  91:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Initialize the RTC peripheral
  92:../Libraries/XMCLib/src/xmc4_rtc.c ****  */
  93:../Libraries/XMCLib/src/xmc4_rtc.c **** XMC_RTC_STATUS_t XMC_RTC_Init(const XMC_RTC_CONFIG_t *const config)
  94:../Libraries/XMCLib/src/xmc4_rtc.c **** {
 204              	 .loc 3 94 0
 205              	 .cfi_startproc
 206              	 
 207              	 
 208 0000 80B5     	 push {r7,lr}
 209              	.LCFI16:
 210              	 .cfi_def_cfa_offset 8
 211              	 .cfi_offset 7,-8
 212              	 .cfi_offset 14,-4
 213 0002 82B0     	 sub sp,sp,#8
 214              	.LCFI17:
 215              	 .cfi_def_cfa_offset 16
 216 0004 00AF     	 add r7,sp,#0
 217              	.LCFI18:
 218              	 .cfi_def_cfa_register 7
 219 0006 7860     	 str r0,[r7,#4]
  95:../Libraries/XMCLib/src/xmc4_rtc.c ****   if (XMC_RTC_IsRunning() == false)
 220              	 .loc 3 95 0
 221 0008 FFF7FEFF 	 bl XMC_RTC_IsRunning
 222 000c 0346     	 mov r3,r0
 223 000e 83F00103 	 eor r3,r3,#1
 224 0012 DBB2     	 uxtb r3,r3
 225 0014 002B     	 cmp r3,#0
 226 0016 3ED0     	 beq .L14
  96:../Libraries/XMCLib/src/xmc4_rtc.c ****   {
  97:../Libraries/XMCLib/src/xmc4_rtc.c ****     if (XMC_SCU_HIB_IsHibernateDomainEnabled() == false)
 227              	 .loc 3 97 0
 228 0018 FFF7FEFF 	 bl XMC_SCU_HIB_IsHibernateDomainEnabled
 229 001c 0346     	 mov r3,r0
 230 001e 83F00103 	 eor r3,r3,#1
 231 0022 DBB2     	 uxtb r3,r3
 232 0024 002B     	 cmp r3,#0
 233 0026 01D0     	 beq .L15
  98:../Libraries/XMCLib/src/xmc4_rtc.c ****     {
  99:../Libraries/XMCLib/src/xmc4_rtc.c ****       XMC_SCU_HIB_EnableHibernateDomain();
 234              	 .loc 3 99 0
 235 0028 FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 236              	.L15:
 100:../Libraries/XMCLib/src/xmc4_rtc.c ****     }
 101:../Libraries/XMCLib/src/xmc4_rtc.c ****     
 102:../Libraries/XMCLib/src/xmc4_rtc.c ****     XMC_RTC_SetPrescaler(config->prescaler);
 237              	 .loc 3 102 0
 238 002c 7B68     	 ldr r3,[r7,#4]
 239 002e 1B8A     	 ldrh r3,[r3,#16]
 240 0030 1846     	 mov r0,r3
 241 0032 FFF7FEFF 	 bl XMC_RTC_SetPrescaler
 103:../Libraries/XMCLib/src/xmc4_rtc.c **** 		
 104:../Libraries/XMCLib/src/xmc4_rtc.c **** 	  while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 242              	 .loc 3 104 0
 243 0036 00BF     	 nop
 244              	.L16:
 245              	 .loc 3 104 0 is_stmt 0 discriminator 1
 246 0038 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 247 003c 0346     	 mov r3,r0
 248 003e 03F40063 	 and r3,r3,#2048
 249 0042 002B     	 cmp r3,#0
 250 0044 F8D1     	 bne .L16
 105:../Libraries/XMCLib/src/xmc4_rtc.c **** 	  {
 106:../Libraries/XMCLib/src/xmc4_rtc.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 107:../Libraries/XMCLib/src/xmc4_rtc.c ****     }
 108:../Libraries/XMCLib/src/xmc4_rtc.c **** 	  RTC->TIM0 = config->time.raw0;
 251              	 .loc 3 108 0 is_stmt 1
 252 0046 164A     	 ldr r2,.L21
 253 0048 7B68     	 ldr r3,[r7,#4]
 254 004a 1B68     	 ldr r3,[r3]
 255 004c 1362     	 str r3,[r2,#32]
 109:../Libraries/XMCLib/src/xmc4_rtc.c ****     
 110:../Libraries/XMCLib/src/xmc4_rtc.c ****     while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 256              	 .loc 3 110 0
 257 004e 00BF     	 nop
 258              	.L17:
 259              	 .loc 3 110 0 is_stmt 0 discriminator 1
 260 0050 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 261 0054 0346     	 mov r3,r0
 262 0056 03F48053 	 and r3,r3,#4096
 263 005a 002B     	 cmp r3,#0
 264 005c F8D1     	 bne .L17
 111:../Libraries/XMCLib/src/xmc4_rtc.c **** 	  {
 112:../Libraries/XMCLib/src/xmc4_rtc.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 113:../Libraries/XMCLib/src/xmc4_rtc.c ****     }
 114:../Libraries/XMCLib/src/xmc4_rtc.c **** 	  RTC->TIM1 = config->time.raw1;
 265              	 .loc 3 114 0 is_stmt 1
 266 005e 104A     	 ldr r2,.L21
 267 0060 7B68     	 ldr r3,[r7,#4]
 268 0062 5B68     	 ldr r3,[r3,#4]
 269 0064 5362     	 str r3,[r2,#36]
 115:../Libraries/XMCLib/src/xmc4_rtc.c ****     
 116:../Libraries/XMCLib/src/xmc4_rtc.c ****     while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 270              	 .loc 3 116 0
 271 0066 00BF     	 nop
 272              	.L18:
 273              	 .loc 3 116 0 is_stmt 0 discriminator 1
 274 0068 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 275 006c 0346     	 mov r3,r0
 276 006e 03F40073 	 and r3,r3,#512
 277 0072 002B     	 cmp r3,#0
 278 0074 F8D1     	 bne .L18
 117:../Libraries/XMCLib/src/xmc4_rtc.c ****     {
 118:../Libraries/XMCLib/src/xmc4_rtc.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 119:../Libraries/XMCLib/src/xmc4_rtc.c ****     }
 120:../Libraries/XMCLib/src/xmc4_rtc.c ****     RTC->ATIM0 = config->alarm.raw0;
 279              	 .loc 3 120 0 is_stmt 1
 280 0076 0A4A     	 ldr r2,.L21
 281 0078 7B68     	 ldr r3,[r7,#4]
 282 007a 9B68     	 ldr r3,[r3,#8]
 283 007c 9361     	 str r3,[r2,#24]
 121:../Libraries/XMCLib/src/xmc4_rtc.c ****     
 122:../Libraries/XMCLib/src/xmc4_rtc.c ****     while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 284              	 .loc 3 122 0
 285 007e 00BF     	 nop
 286              	.L19:
 287              	 .loc 3 122 0 is_stmt 0 discriminator 1
 288 0080 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 289 0084 0346     	 mov r3,r0
 290 0086 03F48063 	 and r3,r3,#1024
 291 008a 002B     	 cmp r3,#0
 292 008c F8D1     	 bne .L19
 123:../Libraries/XMCLib/src/xmc4_rtc.c ****     {
 124:../Libraries/XMCLib/src/xmc4_rtc.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 125:../Libraries/XMCLib/src/xmc4_rtc.c ****     }
 126:../Libraries/XMCLib/src/xmc4_rtc.c ****     RTC->ATIM1 = config->alarm.raw1;    
 293              	 .loc 3 126 0 is_stmt 1
 294 008e 044A     	 ldr r2,.L21
 295 0090 7B68     	 ldr r3,[r7,#4]
 296 0092 DB68     	 ldr r3,[r3,#12]
 297 0094 D361     	 str r3,[r2,#28]
 298              	.L14:
 127:../Libraries/XMCLib/src/xmc4_rtc.c ****   }  
 128:../Libraries/XMCLib/src/xmc4_rtc.c ****   return XMC_RTC_STATUS_OK;
 299              	 .loc 3 128 0
 300 0096 0023     	 movs r3,#0
 129:../Libraries/XMCLib/src/xmc4_rtc.c **** }
 301              	 .loc 3 129 0
 302 0098 1846     	 mov r0,r3
 303 009a 0837     	 adds r7,r7,#8
 304              	.LCFI19:
 305              	 .cfi_def_cfa_offset 8
 306 009c BD46     	 mov sp,r7
 307              	.LCFI20:
 308              	 .cfi_def_cfa_register 13
 309              	 
 310 009e 80BD     	 pop {r7,pc}
 311              	.L22:
 312              	 .align 2
 313              	.L21:
 314 00a0 004A0050 	 .word 1342196224
 315              	 .cfi_endproc
 316              	.LFE157:
 318              	 .section .text.XMC_RTC_EnableEvent,"ax",%progbits
 319              	 .align 2
 320              	 .global XMC_RTC_EnableEvent
 321              	 .thumb
 322              	 .thumb_func
 324              	XMC_RTC_EnableEvent:
 325              	.LFB158:
 130:../Libraries/XMCLib/src/xmc4_rtc.c **** 
 131:../Libraries/XMCLib/src/xmc4_rtc.c **** /*
 132:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Enable RTC periodic and alarm event(s)
 133:../Libraries/XMCLib/src/xmc4_rtc.c ****  */ 
 134:../Libraries/XMCLib/src/xmc4_rtc.c **** void XMC_RTC_EnableEvent(const uint32_t event)
 135:../Libraries/XMCLib/src/xmc4_rtc.c **** {
 326              	 .loc 3 135 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI21:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 82B0     	 sub sp,sp,#8
 336              	.LCFI22:
 337              	 .cfi_def_cfa_offset 16
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI23:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 136:../Libraries/XMCLib/src/xmc4_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_MSKSR_Msk) != 0U)
 342              	 .loc 3 136 0
 343 0008 00BF     	 nop
 344              	.L24:
 345              	 .loc 3 136 0 is_stmt 0 discriminator 1
 346 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 347 000e 0346     	 mov r3,r0
 348 0010 03F48043 	 and r3,r3,#16384
 349 0014 002B     	 cmp r3,#0
 350 0016 F8D1     	 bne .L24
 137:../Libraries/XMCLib/src/xmc4_rtc.c ****   {
 138:../Libraries/XMCLib/src/xmc4_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 139:../Libraries/XMCLib/src/xmc4_rtc.c ****   }
 140:../Libraries/XMCLib/src/xmc4_rtc.c ****   RTC->MSKSR |= event;
 351              	 .loc 3 140 0 is_stmt 1
 352 0018 0449     	 ldr r1,.L25
 353 001a 044B     	 ldr r3,.L25
 354 001c 1A69     	 ldr r2,[r3,#16]
 355 001e 7B68     	 ldr r3,[r7,#4]
 356 0020 1343     	 orrs r3,r3,r2
 357 0022 0B61     	 str r3,[r1,#16]
 141:../Libraries/XMCLib/src/xmc4_rtc.c **** }
 358              	 .loc 3 141 0
 359 0024 0837     	 adds r7,r7,#8
 360              	.LCFI24:
 361              	 .cfi_def_cfa_offset 8
 362 0026 BD46     	 mov sp,r7
 363              	.LCFI25:
 364              	 .cfi_def_cfa_register 13
 365              	 
 366 0028 80BD     	 pop {r7,pc}
 367              	.L26:
 368 002a 00BF     	 .align 2
 369              	.L25:
 370 002c 004A0050 	 .word 1342196224
 371              	 .cfi_endproc
 372              	.LFE158:
 374              	 .section .text.XMC_RTC_DisableEvent,"ax",%progbits
 375              	 .align 2
 376              	 .global XMC_RTC_DisableEvent
 377              	 .thumb
 378              	 .thumb_func
 380              	XMC_RTC_DisableEvent:
 381              	.LFB159:
 142:../Libraries/XMCLib/src/xmc4_rtc.c **** 
 143:../Libraries/XMCLib/src/xmc4_rtc.c **** /*
 144:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Disable RTC periodic and alarm event(s)
 145:../Libraries/XMCLib/src/xmc4_rtc.c ****  */ 
 146:../Libraries/XMCLib/src/xmc4_rtc.c **** void XMC_RTC_DisableEvent(const uint32_t event)
 147:../Libraries/XMCLib/src/xmc4_rtc.c **** {
 382              	 .loc 3 147 0
 383              	 .cfi_startproc
 384              	 
 385              	 
 386 0000 80B5     	 push {r7,lr}
 387              	.LCFI26:
 388              	 .cfi_def_cfa_offset 8
 389              	 .cfi_offset 7,-8
 390              	 .cfi_offset 14,-4
 391 0002 82B0     	 sub sp,sp,#8
 392              	.LCFI27:
 393              	 .cfi_def_cfa_offset 16
 394 0004 00AF     	 add r7,sp,#0
 395              	.LCFI28:
 396              	 .cfi_def_cfa_register 7
 397 0006 7860     	 str r0,[r7,#4]
 148:../Libraries/XMCLib/src/xmc4_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_MSKSR_Msk) != 0U)
 398              	 .loc 3 148 0
 399 0008 00BF     	 nop
 400              	.L28:
 401              	 .loc 3 148 0 is_stmt 0 discriminator 1
 402 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 403 000e 0346     	 mov r3,r0
 404 0010 03F48043 	 and r3,r3,#16384
 405 0014 002B     	 cmp r3,#0
 406 0016 F8D1     	 bne .L28
 149:../Libraries/XMCLib/src/xmc4_rtc.c ****   {
 150:../Libraries/XMCLib/src/xmc4_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 151:../Libraries/XMCLib/src/xmc4_rtc.c ****   }
 152:../Libraries/XMCLib/src/xmc4_rtc.c ****   RTC->MSKSR &= ~event;
 407              	 .loc 3 152 0 is_stmt 1
 408 0018 0449     	 ldr r1,.L29
 409 001a 044B     	 ldr r3,.L29
 410 001c 1A69     	 ldr r2,[r3,#16]
 411 001e 7B68     	 ldr r3,[r7,#4]
 412 0020 DB43     	 mvns r3,r3
 413 0022 1340     	 ands r3,r3,r2
 414 0024 0B61     	 str r3,[r1,#16]
 153:../Libraries/XMCLib/src/xmc4_rtc.c **** }
 415              	 .loc 3 153 0
 416 0026 0837     	 adds r7,r7,#8
 417              	.LCFI29:
 418              	 .cfi_def_cfa_offset 8
 419 0028 BD46     	 mov sp,r7
 420              	.LCFI30:
 421              	 .cfi_def_cfa_register 13
 422              	 
 423 002a 80BD     	 pop {r7,pc}
 424              	.L30:
 425              	 .align 2
 426              	.L29:
 427 002c 004A0050 	 .word 1342196224
 428              	 .cfi_endproc
 429              	.LFE159:
 431              	 .section .text.XMC_RTC_ClearEvent,"ax",%progbits
 432              	 .align 2
 433              	 .global XMC_RTC_ClearEvent
 434              	 .thumb
 435              	 .thumb_func
 437              	XMC_RTC_ClearEvent:
 438              	.LFB160:
 154:../Libraries/XMCLib/src/xmc4_rtc.c **** 
 155:../Libraries/XMCLib/src/xmc4_rtc.c **** /*
 156:../Libraries/XMCLib/src/xmc4_rtc.c ****  * Clear RTC periodic and alarm event(s)
 157:../Libraries/XMCLib/src/xmc4_rtc.c ****  */ 
 158:../Libraries/XMCLib/src/xmc4_rtc.c **** void XMC_RTC_ClearEvent(const uint32_t event)
 159:../Libraries/XMCLib/src/xmc4_rtc.c **** {
 439              	 .loc 3 159 0
 440              	 .cfi_startproc
 441              	 
 442              	 
 443 0000 80B5     	 push {r7,lr}
 444              	.LCFI31:
 445              	 .cfi_def_cfa_offset 8
 446              	 .cfi_offset 7,-8
 447              	 .cfi_offset 14,-4
 448 0002 82B0     	 sub sp,sp,#8
 449              	.LCFI32:
 450              	 .cfi_def_cfa_offset 16
 451 0004 00AF     	 add r7,sp,#0
 452              	.LCFI33:
 453              	 .cfi_def_cfa_register 7
 454 0006 7860     	 str r0,[r7,#4]
 160:../Libraries/XMCLib/src/xmc4_rtc.c ****   while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CLRSR_Msk) != 0U)
 455              	 .loc 3 160 0
 456 0008 00BF     	 nop
 457              	.L32:
 458              	 .loc 3 160 0 is_stmt 0 discriminator 1
 459 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 460 000e 0346     	 mov r3,r0
 461 0010 03F40043 	 and r3,r3,#32768
 462 0014 002B     	 cmp r3,#0
 463 0016 F8D1     	 bne .L32
 161:../Libraries/XMCLib/src/xmc4_rtc.c ****   {
 162:../Libraries/XMCLib/src/xmc4_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 163:../Libraries/XMCLib/src/xmc4_rtc.c ****   }
 164:../Libraries/XMCLib/src/xmc4_rtc.c ****   RTC->CLRSR |= event;
 464              	 .loc 3 164 0 is_stmt 1
 465 0018 0449     	 ldr r1,.L33
 466 001a 044B     	 ldr r3,.L33
 467 001c 5A69     	 ldr r2,[r3,#20]
 468 001e 7B68     	 ldr r3,[r7,#4]
 469 0020 1343     	 orrs r3,r3,r2
 470 0022 4B61     	 str r3,[r1,#20]
 165:../Libraries/XMCLib/src/xmc4_rtc.c **** }
 471              	 .loc 3 165 0
 472 0024 0837     	 adds r7,r7,#8
 473              	.LCFI34:
 474              	 .cfi_def_cfa_offset 8
 475 0026 BD46     	 mov sp,r7
 476              	.LCFI35:
 477              	 .cfi_def_cfa_register 13
 478              	 
 479 0028 80BD     	 pop {r7,pc}
 480              	.L34:
 481 002a 00BF     	 .align 2
 482              	.L33:
 483 002c 004A0050 	 .word 1342196224
 484              	 .cfi_endproc
 485              	.LFE160:
 487              	 .text
 488              	.Letext0:
 489              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 490              	 .file 5 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 491              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 492              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 493              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_rtc.c
    {standard input}:19     .text.XMC_RTC_IsRunning:00000000 $t
    {standard input}:23     .text.XMC_RTC_IsRunning:00000000 XMC_RTC_IsRunning
    {standard input}:61     .text.XMC_RTC_IsRunning:00000020 $d
    {standard input}:66     .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:70     .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:102    .text.XMC_SCU_GetMirrorStatus:00000014 $d
    {standard input}:107    .text.XMC_RTC_Enable:00000000 $t
    {standard input}:112    .text.XMC_RTC_Enable:00000000 XMC_RTC_Enable
    {standard input}:135    .text.XMC_RTC_Disable:00000000 $t
    {standard input}:140    .text.XMC_RTC_Disable:00000000 XMC_RTC_Disable
    {standard input}:168    .text.XMC_RTC_IsEnabled:00000000 $t
    {standard input}:173    .text.XMC_RTC_IsEnabled:00000000 XMC_RTC_IsEnabled
    {standard input}:197    .text.XMC_RTC_Init:00000000 $t
    {standard input}:202    .text.XMC_RTC_Init:00000000 XMC_RTC_Init
    {standard input}:314    .text.XMC_RTC_Init:000000a0 $d
    {standard input}:319    .text.XMC_RTC_EnableEvent:00000000 $t
    {standard input}:324    .text.XMC_RTC_EnableEvent:00000000 XMC_RTC_EnableEvent
    {standard input}:370    .text.XMC_RTC_EnableEvent:0000002c $d
    {standard input}:375    .text.XMC_RTC_DisableEvent:00000000 $t
    {standard input}:380    .text.XMC_RTC_DisableEvent:00000000 XMC_RTC_DisableEvent
    {standard input}:427    .text.XMC_RTC_DisableEvent:0000002c $d
    {standard input}:432    .text.XMC_RTC_ClearEvent:00000000 $t
    {standard input}:437    .text.XMC_RTC_ClearEvent:00000000 XMC_RTC_ClearEvent
    {standard input}:483    .text.XMC_RTC_ClearEvent:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_HIB_EnableHibernateDomain
XMC_SCU_HIB_IsHibernateDomainEnabled
XMC_RTC_SetPrescaler
