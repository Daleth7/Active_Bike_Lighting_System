   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_eru.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_ERU_ETL_Init,"ax",%progbits
  19              	 .align 2
  20              	 .global XMC_ERU_ETL_Init
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ERU_ETL_Init:
  25              	.LFB132:
  26              	 .file 1 "../Libraries/XMCLib/src/xmc_eru.c"
   1:../Libraries/XMCLib/src/xmc_eru.c **** /**
   2:../Libraries/XMCLib/src/xmc_eru.c ****  * @file xmc_eru.c
   3:../Libraries/XMCLib/src/xmc_eru.c ****  * @date 2015-06-20 
   4:../Libraries/XMCLib/src/xmc_eru.c ****  *
   5:../Libraries/XMCLib/src/xmc_eru.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_eru.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:../Libraries/XMCLib/src/xmc_eru.c ****  *
   9:../Libraries/XMCLib/src/xmc_eru.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_eru.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_eru.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_eru.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_eru.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_eru.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_eru.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_eru.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_eru.c ****  * 
  18:../Libraries/XMCLib/src/xmc_eru.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_eru.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_eru.c ****  * 
  21:../Libraries/XMCLib/src/xmc_eru.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_eru.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_eru.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_eru.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_eru.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_eru.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_eru.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_eru.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_eru.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_eru.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_eru.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_eru.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_eru.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_eru.c ****  *
  36:../Libraries/XMCLib/src/xmc_eru.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_eru.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_eru.c ****  *
  39:../Libraries/XMCLib/src/xmc_eru.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_eru.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_eru.c ****  *
  42:../Libraries/XMCLib/src/xmc_eru.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_eru.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_eru.c ****  *
  45:../Libraries/XMCLib/src/xmc_eru.c ****  * @endcond
  46:../Libraries/XMCLib/src/xmc_eru.c ****  */
  47:../Libraries/XMCLib/src/xmc_eru.c **** 
  48:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
  49:../Libraries/XMCLib/src/xmc_eru.c ****  * HEADER FILES
  50:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  51:../Libraries/XMCLib/src/xmc_eru.c **** 
  52:../Libraries/XMCLib/src/xmc_eru.c **** #include "xmc_eru.h"
  53:../Libraries/XMCLib/src/xmc_eru.c **** 
  54:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
  55:../Libraries/XMCLib/src/xmc_eru.c ****  * MACROS
  56:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  57:../Libraries/XMCLib/src/xmc_eru.c **** 
  58:../Libraries/XMCLib/src/xmc_eru.c **** #define ERU_EXISEL_BITSIZE (4UL) /* Used to set the input for path A and path B based on the channe
  59:../Libraries/XMCLib/src/xmc_eru.c **** #define ERU_EXISEL_INPUT_BITSIZE (2UL)
  60:../Libraries/XMCLib/src/xmc_eru.c **** 
  61:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_A(input) \
  62:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_A0) || \
  63:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A1) || \
  64:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A2) || \
  65:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A3))
  66:../Libraries/XMCLib/src/xmc_eru.c **** 
  67:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_B(input) \
  68:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_B0) || \
  69:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B1) || \
  70:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B2) || \
  71:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B3))
  72:../Libraries/XMCLib/src/xmc_eru.c **** 
  73:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_STATUS_FLAG_MODE(mode) \
  74:../Libraries/XMCLib/src/xmc_eru.c ****     ((mode == XMC_ERU_ETL_STATUS_FLAG_MODE_SWCTRL) || \
  75:../Libraries/XMCLib/src/xmc_eru.c ****      (mode == XMC_ERU_ETL_STATUS_FLAG_MODE_HWCTRL))
  76:../Libraries/XMCLib/src/xmc_eru.c **** 
  77:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_EVENT_SOURCE(source) \
  78:../Libraries/XMCLib/src/xmc_eru.c ****     ((source == XMC_ERU_ETL_SOURCE_A)              || \
  79:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_B)              || \
  80:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_B)         || \
  81:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_B)        || \
  82:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A)          || \
  83:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_B)     || \
  84:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_B)    || \
  85:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_B)          || \
  86:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_NOT_B)     || \
  87:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_NOT_B)    || \
  88:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_NOT_B) || \
  89:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_NOT_B))
  90:../Libraries/XMCLib/src/xmc_eru.c **** 
  91:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_EDGE(edge) \
  92:../Libraries/XMCLib/src/xmc_eru.c ****     ((edge == XMC_ERU_ETL_EDGE_DETECTION_DISABLED) || \
  93:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_RISING) || \
  94:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_FALLING) || \
  95:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_BOTH))
  96:../Libraries/XMCLib/src/xmc_eru.c **** 
  97:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_CHANNEL(channel) \
  98:../Libraries/XMCLib/src/xmc_eru.c ****     ((channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL0) || \
  99:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL1) || \
 100:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL2) || \
 101:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL3))
 102:../Libraries/XMCLib/src/xmc_eru.c **** 
 103:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PATTERN_INPUT(input) \
 104:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT0) || \
 105:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT1) || \
 106:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT2) || \
 107:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT3))
 108:../Libraries/XMCLib/src/xmc_eru.c **** 
 109:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(trigger) \
 110:../Libraries/XMCLib/src/xmc_eru.c ****     ((trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER1) || \
 111:../Libraries/XMCLib/src/xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER2) || \
 112:../Libraries/XMCLib/src/xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER3))
 113:../Libraries/XMCLib/src/xmc_eru.c **** 
 114:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_SERIVCE_REQUEST(service) \
 115:../Libraries/XMCLib/src/xmc_eru.c ****     ((service == XMC_ERU_OGU_SERVICE_REQUEST_DISABLED) || \
 116:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER) || \
 117:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MATCH) || \
 118:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MISMATCH))
 119:../Libraries/XMCLib/src/xmc_eru.c ****  
 120:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
 121:../Libraries/XMCLib/src/xmc_eru.c ****  * API IMPLEMENTATION
 122:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
 123:../Libraries/XMCLib/src/xmc_eru.c **** 
 124:../Libraries/XMCLib/src/xmc_eru.c **** /* Initializes the selected ERU_ETLx channel with the config structure.  */
 125:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_Init(XMC_ERU_t *const eru,
 126:../Libraries/XMCLib/src/xmc_eru.c ****                       const uint8_t channel,
 127:../Libraries/XMCLib/src/xmc_eru.c ****                       const XMC_ERU_ETL_CONFIG_t *const config)
 128:../Libraries/XMCLib/src/xmc_eru.c **** { 
  27              	 .loc 1 128 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 80B5     	 push {r7,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 8
  34              	 .cfi_offset 7,-8
  35              	 .cfi_offset 14,-4
  36 0002 84B0     	 sub sp,sp,#16
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 0B46     	 mov r3,r1
  44 000a 7A60     	 str r2,[r7,#4]
  45 000c FB72     	 strb r3,[r7,#11]
 129:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 130:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Channel Number", (channel < 4U));
 131:../Libraries/XMCLib/src/xmc_eru.c **** 
 132:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ERU_Enable(eru);
  46              	 .loc 1 132 0
  47 000e F868     	 ldr r0,[r7,#12]
  48 0010 FFF7FEFF 	 bl XMC_ERU_Enable
 133:../Libraries/XMCLib/src/xmc_eru.c **** 
 134:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXISEL = (eru->EXISEL & 
  49              	 .loc 1 134 0
  50 0014 FB68     	 ldr r3,[r7,#12]
  51 0016 1A68     	 ldr r2,[r3]
 135:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  52              	 .loc 1 135 0
  53 0018 FB7A     	 ldrb r3,[r7,#11]
  54 001a 9B00     	 lsls r3,r3,#2
  55 001c 1946     	 mov r1,r3
  56 001e 0F23     	 movs r3,#15
  57 0020 8B40     	 lsls r3,r3,r1
  58 0022 DB43     	 mvns r3,r3
 134:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  59              	 .loc 1 134 0
  60 0024 1A40     	 ands r2,r2,r3
 136:../Libraries/XMCLib/src/xmc_eru.c ****                 (config->input << (channel * (uint32_t)ERU_EXISEL_BITSIZE));
  61              	 .loc 1 136 0
  62 0026 7B68     	 ldr r3,[r7,#4]
  63 0028 1B68     	 ldr r3,[r3]
  64 002a F97A     	 ldrb r1,[r7,#11]
  65 002c 8900     	 lsls r1,r1,#2
  66 002e 8B40     	 lsls r3,r3,r1
 135:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  67              	 .loc 1 135 0
  68 0030 1A43     	 orrs r2,r2,r3
 134:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  69              	 .loc 1 134 0
  70 0032 FB68     	 ldr r3,[r7,#12]
  71 0034 1A60     	 str r2,[r3]
 137:../Libraries/XMCLib/src/xmc_eru.c ****   
 138:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON[channel] = config->raw;
  72              	 .loc 1 138 0
  73 0036 FA7A     	 ldrb r2,[r7,#11]
  74 0038 7B68     	 ldr r3,[r7,#4]
  75 003a 5968     	 ldr r1,[r3,#4]
  76 003c FB68     	 ldr r3,[r7,#12]
  77 003e 0432     	 adds r2,r2,#4
  78 0040 43F82210 	 str r1,[r3,r2,lsl#2]
 139:../Libraries/XMCLib/src/xmc_eru.c **** }
  79              	 .loc 1 139 0
  80 0044 1037     	 adds r7,r7,#16
  81              	.LCFI3:
  82              	 .cfi_def_cfa_offset 8
  83 0046 BD46     	 mov sp,r7
  84              	.LCFI4:
  85              	 .cfi_def_cfa_register 13
  86              	 
  87 0048 80BD     	 pop {r7,pc}
  88              	 .cfi_endproc
  89              	.LFE132:
  91 004a 00BF     	 .section .text.XMC_ERU_OGU_Init,"ax",%progbits
  92              	 .align 2
  93              	 .global XMC_ERU_OGU_Init
  94              	 .thumb
  95              	 .thumb_func
  97              	XMC_ERU_OGU_Init:
  98              	.LFB133:
 140:../Libraries/XMCLib/src/xmc_eru.c **** 
 141:../Libraries/XMCLib/src/xmc_eru.c **** /* Initializes the selected ERU_OGUy channel with the config structure.  */
 142:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_Init(XMC_ERU_t *const eru,
 143:../Libraries/XMCLib/src/xmc_eru.c ****                       const uint8_t channel,
 144:../Libraries/XMCLib/src/xmc_eru.c ****                       const XMC_ERU_OGU_CONFIG_t *const config)
 145:../Libraries/XMCLib/src/xmc_eru.c **** {
  99              	 .loc 1 145 0
 100              	 .cfi_startproc
 101              	 
 102              	 
 103 0000 80B5     	 push {r7,lr}
 104              	.LCFI5:
 105              	 .cfi_def_cfa_offset 8
 106              	 .cfi_offset 7,-8
 107              	 .cfi_offset 14,-4
 108 0002 84B0     	 sub sp,sp,#16
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 24
 111 0004 00AF     	 add r7,sp,#0
 112              	.LCFI7:
 113              	 .cfi_def_cfa_register 7
 114 0006 F860     	 str r0,[r7,#12]
 115 0008 0B46     	 mov r3,r1
 116 000a 7A60     	 str r2,[r7,#4]
 117 000c FB72     	 strb r3,[r7,#11]
 146:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 147:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Channel Number", (channel < 4U));
 148:../Libraries/XMCLib/src/xmc_eru.c **** 
 149:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ERU_Enable(eru);
 118              	 .loc 1 149 0
 119 000e F868     	 ldr r0,[r7,#12]
 120 0010 FFF7FEFF 	 bl XMC_ERU_Enable
 150:../Libraries/XMCLib/src/xmc_eru.c **** 
 151:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON[channel] = config->raw;
 121              	 .loc 1 151 0
 122 0014 FA7A     	 ldrb r2,[r7,#11]
 123 0016 7B68     	 ldr r3,[r7,#4]
 124 0018 1968     	 ldr r1,[r3]
 125 001a FB68     	 ldr r3,[r7,#12]
 126 001c 0832     	 adds r2,r2,#8
 127 001e 43F82210 	 str r1,[r3,r2,lsl#2]
 152:../Libraries/XMCLib/src/xmc_eru.c **** }
 128              	 .loc 1 152 0
 129 0022 1037     	 adds r7,r7,#16
 130              	.LCFI8:
 131              	 .cfi_def_cfa_offset 8
 132 0024 BD46     	 mov sp,r7
 133              	.LCFI9:
 134              	 .cfi_def_cfa_register 13
 135              	 
 136 0026 80BD     	 pop {r7,pc}
 137              	 .cfi_endproc
 138              	.LFE133:
 140              	 .section .text.XMC_ERU_ETL_SetInput,"ax",%progbits
 141              	 .align 2
 142              	 .global XMC_ERU_ETL_SetInput
 143              	 .thumb
 144              	 .thumb_func
 146              	XMC_ERU_ETL_SetInput:
 147              	.LFB134:
 153:../Libraries/XMCLib/src/xmc_eru.c **** 
 154:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures the event source for path A and path B, with selected input_a and input_b respectivel
 155:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetInput(XMC_ERU_t *const eru,
 156:../Libraries/XMCLib/src/xmc_eru.c ****                           const uint8_t channel,
 157:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_A_t input_a,
 158:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_B_t input_b)
 159:../Libraries/XMCLib/src/xmc_eru.c **** {
 148              	 .loc 1 159 0
 149              	 .cfi_startproc
 150              	 
 151              	 
 152              	 
 153 0000 80B4     	 push {r7}
 154              	.LCFI10:
 155              	 .cfi_def_cfa_offset 4
 156              	 .cfi_offset 7,-4
 157 0002 83B0     	 sub sp,sp,#12
 158              	.LCFI11:
 159              	 .cfi_def_cfa_offset 16
 160 0004 00AF     	 add r7,sp,#0
 161              	.LCFI12:
 162              	 .cfi_def_cfa_register 7
 163 0006 7860     	 str r0,[r7,#4]
 164 0008 0846     	 mov r0,r1
 165 000a 1146     	 mov r1,r2
 166 000c 1A46     	 mov r2,r3
 167 000e 0346     	 mov r3,r0
 168 0010 FB70     	 strb r3,[r7,#3]
 169 0012 0B46     	 mov r3,r1
 170 0014 BB70     	 strb r3,[r7,#2]
 171 0016 1346     	 mov r3,r2
 172 0018 7B70     	 strb r3,[r7,#1]
 160:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 161:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Channel Number", (channel < 4U));
 162:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid A", XMC_ERU_ETL_CHECK_INPUT_A(input_a));
 163:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid B", XMC_ERU_ETL_CHECK_INPUT_B(input_b));
 164:../Libraries/XMCLib/src/xmc_eru.c **** 
 165:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXISEL = (eru->EXISEL & ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channe
 173              	 .loc 1 165 0
 174 001a 7B68     	 ldr r3,[r7,#4]
 175 001c 1A68     	 ldr r2,[r3]
 176 001e FB78     	 ldrb r3,[r7,#3]
 177 0020 9B00     	 lsls r3,r3,#2
 178 0022 1946     	 mov r1,r3
 179 0024 0F23     	 movs r3,#15
 180 0026 8B40     	 lsls r3,r3,r1
 181 0028 DB43     	 mvns r3,r3
 182 002a 1A40     	 ands r2,r2,r3
 166:../Libraries/XMCLib/src/xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 183              	 .loc 1 166 0
 184 002c BB78     	 ldrb r3,[r7,#2]
 185 002e 7978     	 ldrb r1,[r7,#1]
 186 0030 8900     	 lsls r1,r1,#2
 187 0032 0B43     	 orrs r3,r3,r1
 188 0034 F978     	 ldrb r1,[r7,#3]
 189 0036 8900     	 lsls r1,r1,#2
 190 0038 8B40     	 lsls r3,r3,r1
 165:../Libraries/XMCLib/src/xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 191              	 .loc 1 165 0
 192 003a 1A43     	 orrs r2,r2,r3
 193 003c 7B68     	 ldr r3,[r7,#4]
 194 003e 1A60     	 str r2,[r3]
 167:../Libraries/XMCLib/src/xmc_eru.c **** }
 195              	 .loc 1 167 0
 196 0040 0C37     	 adds r7,r7,#12
 197              	.LCFI13:
 198              	 .cfi_def_cfa_offset 4
 199 0042 BD46     	 mov sp,r7
 200              	.LCFI14:
 201              	 .cfi_def_cfa_register 13
 202              	 
 203 0044 5DF8047B 	 ldr r7,[sp],#4
 204              	.LCFI15:
 205              	 .cfi_restore 7
 206              	 .cfi_def_cfa_offset 0
 207 0048 7047     	 bx lr
 208              	 .cfi_endproc
 209              	.LFE134:
 211 004a 00BF     	 .section .text.XMC_ERU_ETL_SetSource,"ax",%progbits
 212              	 .align 2
 213              	 .global XMC_ERU_ETL_SetSource
 214              	 .thumb
 215              	 .thumb_func
 217              	XMC_ERU_ETL_SetSource:
 218              	.LFB135:
 168:../Libraries/XMCLib/src/xmc_eru.c **** 
 169:../Libraries/XMCLib/src/xmc_eru.c **** /* Select input path combination along with polarity for event generation by setting (SS, NA, NB) b
 170:../Libraries/XMCLib/src/xmc_eru.c ****    EXICONx(x = [0 to 3]) register */
 171:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetSource(XMC_ERU_t *const eru,
 172:../Libraries/XMCLib/src/xmc_eru.c ****                           const uint8_t channel,
 173:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_SOURCE_t source)
 174:../Libraries/XMCLib/src/xmc_eru.c **** {
 219              	 .loc 1 174 0
 220              	 .cfi_startproc
 221              	 
 222              	 
 223              	 
 224 0000 80B4     	 push {r7}
 225              	.LCFI16:
 226              	 .cfi_def_cfa_offset 4
 227              	 .cfi_offset 7,-4
 228 0002 83B0     	 sub sp,sp,#12
 229              	.LCFI17:
 230              	 .cfi_def_cfa_offset 16
 231 0004 00AF     	 add r7,sp,#0
 232              	.LCFI18:
 233              	 .cfi_def_cfa_register 7
 234 0006 7860     	 str r0,[r7,#4]
 235 0008 0B46     	 mov r3,r1
 236 000a FB70     	 strb r3,[r7,#3]
 237 000c 1346     	 mov r3,r2
 238 000e BB70     	 strb r3,[r7,#2]
 175:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 176:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Channel Number", (channel < 4U));
 177:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Source", XMC_ERU_ETL_CHECK_EVENT_SOURCE(source));
 178:../Libraries/XMCLib/src/xmc_eru.c **** 
 179:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].SS = (uint8_t)source;
 239              	 .loc 1 179 0
 240 0010 FA78     	 ldrb r2,[r7,#3]
 241 0012 BB78     	 ldrb r3,[r7,#2]
 242 0014 03F00F03 	 and r3,r3,#15
 243 0018 D9B2     	 uxtb r1,r3
 244 001a 7B68     	 ldr r3,[r7,#4]
 245 001c 0432     	 adds r2,r2,#4
 246 001e 01F00F01 	 and r1,r1,#15
 247 0022 0902     	 lsls r1,r1,#8
 248 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 249 0028 20F47060 	 bic r0,r0,#3840
 250 002c 0143     	 orrs r1,r1,r0
 251 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 180:../Libraries/XMCLib/src/xmc_eru.c **** }
 252              	 .loc 1 180 0
 253 0032 0C37     	 adds r7,r7,#12
 254              	.LCFI19:
 255              	 .cfi_def_cfa_offset 4
 256 0034 BD46     	 mov sp,r7
 257              	.LCFI20:
 258              	 .cfi_def_cfa_register 13
 259              	 
 260 0036 5DF8047B 	 ldr r7,[sp],#4
 261              	.LCFI21:
 262              	 .cfi_restore 7
 263              	 .cfi_def_cfa_offset 0
 264 003a 7047     	 bx lr
 265              	 .cfi_endproc
 266              	.LFE135:
 268              	 .section .text.XMC_ERU_ETL_SetEdgeDetection,"ax",%progbits
 269              	 .align 2
 270              	 .global XMC_ERU_ETL_SetEdgeDetection
 271              	 .thumb
 272              	 .thumb_func
 274              	XMC_ERU_ETL_SetEdgeDetection:
 275              	.LFB136:
 181:../Libraries/XMCLib/src/xmc_eru.c **** 
 182:../Libraries/XMCLib/src/xmc_eru.c **** /* Configure event trigger edge/s by setting (RE, FE) bits of EXICONx(x = [0 to 3]) register.*/
 183:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetEdgeDetection(XMC_ERU_t *const eru,
 184:../Libraries/XMCLib/src/xmc_eru.c ****                                   const uint8_t channel,
 185:../Libraries/XMCLib/src/xmc_eru.c ****                                   const XMC_ERU_ETL_EDGE_DETECTION_t edge_detection)
 186:../Libraries/XMCLib/src/xmc_eru.c **** {
 276              	 .loc 1 186 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280              	 
 281 0000 80B4     	 push {r7}
 282              	.LCFI22:
 283              	 .cfi_def_cfa_offset 4
 284              	 .cfi_offset 7,-4
 285 0002 83B0     	 sub sp,sp,#12
 286              	.LCFI23:
 287              	 .cfi_def_cfa_offset 16
 288 0004 00AF     	 add r7,sp,#0
 289              	.LCFI24:
 290              	 .cfi_def_cfa_register 7
 291 0006 7860     	 str r0,[r7,#4]
 292 0008 0B46     	 mov r3,r1
 293 000a FB70     	 strb r3,[r7,#3]
 294 000c 1346     	 mov r3,r2
 295 000e BB70     	 strb r3,[r7,#2]
 187:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 188:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Channel Number", (channel < 4U));
 189:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Trigger Edge", XMC_ERU_ETL_CHECK_TRIGGER_EDGE(ed
 190:../Libraries/XMCLib/src/xmc_eru.c **** 
 191:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].ED = (uint8_t)edge_detection;
 296              	 .loc 1 191 0
 297 0010 FA78     	 ldrb r2,[r7,#3]
 298 0012 BB78     	 ldrb r3,[r7,#2]
 299 0014 03F00303 	 and r3,r3,#3
 300 0018 D9B2     	 uxtb r1,r3
 301 001a 7B68     	 ldr r3,[r7,#4]
 302 001c 0432     	 adds r2,r2,#4
 303 001e 01F00301 	 and r1,r1,#3
 304 0022 8900     	 lsls r1,r1,#2
 305 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 306 0028 20F00C00 	 bic r0,r0,#12
 307 002c 0143     	 orrs r1,r1,r0
 308 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 192:../Libraries/XMCLib/src/xmc_eru.c **** }
 309              	 .loc 1 192 0
 310 0032 0C37     	 adds r7,r7,#12
 311              	.LCFI25:
 312              	 .cfi_def_cfa_offset 4
 313 0034 BD46     	 mov sp,r7
 314              	.LCFI26:
 315              	 .cfi_def_cfa_register 13
 316              	 
 317 0036 5DF8047B 	 ldr r7,[sp],#4
 318              	.LCFI27:
 319              	 .cfi_restore 7
 320              	 .cfi_def_cfa_offset 0
 321 003a 7047     	 bx lr
 322              	 .cfi_endproc
 323              	.LFE136:
 325              	 .section .text.XMC_ERU_ETL_SetStatusFlagMode,"ax",%progbits
 326              	 .align 2
 327              	 .global XMC_ERU_ETL_SetStatusFlagMode
 328              	 .thumb
 329              	 .thumb_func
 331              	XMC_ERU_ETL_SetStatusFlagMode:
 332              	.LFB137:
 193:../Libraries/XMCLib/src/xmc_eru.c **** 
 194:../Libraries/XMCLib/src/xmc_eru.c **** /* Set the status flag bit(FL) in EXICONx(x = [0 to 3]). */
 195:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetStatusFlagMode(XMC_ERU_t *const eru,
 196:../Libraries/XMCLib/src/xmc_eru.c ****                                    const uint8_t channel,
 197:../Libraries/XMCLib/src/xmc_eru.c ****                                    const XMC_ERU_ETL_STATUS_FLAG_MODE_t mode)
 198:../Libraries/XMCLib/src/xmc_eru.c **** {
 333              	 .loc 1 198 0
 334              	 .cfi_startproc
 335              	 
 336              	 
 337              	 
 338 0000 80B4     	 push {r7}
 339              	.LCFI28:
 340              	 .cfi_def_cfa_offset 4
 341              	 .cfi_offset 7,-4
 342 0002 83B0     	 sub sp,sp,#12
 343              	.LCFI29:
 344              	 .cfi_def_cfa_offset 16
 345 0004 00AF     	 add r7,sp,#0
 346              	.LCFI30:
 347              	 .cfi_def_cfa_register 7
 348 0006 7860     	 str r0,[r7,#4]
 349 0008 0B46     	 mov r3,r1
 350 000a FB70     	 strb r3,[r7,#3]
 351 000c 1346     	 mov r3,r2
 352 000e BB70     	 strb r3,[r7,#2]
 199:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru))
 200:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Channel Number", (channel < 4U));
 201:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Status Flag Mode", XMC_ERU_ETL_CHECK_STATUS_FLA
 202:../Libraries/XMCLib/src/xmc_eru.c **** 
 203:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].LD = (uint8_t)mode;
 353              	 .loc 1 203 0
 354 0010 FA78     	 ldrb r2,[r7,#3]
 355 0012 BB78     	 ldrb r3,[r7,#2]
 356 0014 03F00103 	 and r3,r3,#1
 357 0018 D9B2     	 uxtb r1,r3
 358 001a 7B68     	 ldr r3,[r7,#4]
 359 001c 0432     	 adds r2,r2,#4
 360 001e 01F00101 	 and r1,r1,#1
 361 0022 4900     	 lsls r1,r1,#1
 362 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 363 0028 20F00200 	 bic r0,r0,#2
 364 002c 0143     	 orrs r1,r1,r0
 365 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 204:../Libraries/XMCLib/src/xmc_eru.c **** }
 366              	 .loc 1 204 0
 367 0032 0C37     	 adds r7,r7,#12
 368              	.LCFI31:
 369              	 .cfi_def_cfa_offset 4
 370 0034 BD46     	 mov sp,r7
 371              	.LCFI32:
 372              	 .cfi_def_cfa_register 13
 373              	 
 374 0036 5DF8047B 	 ldr r7,[sp],#4
 375              	.LCFI33:
 376              	 .cfi_restore 7
 377              	 .cfi_def_cfa_offset 0
 378 003a 7047     	 bx lr
 379              	 .cfi_endproc
 380              	.LFE137:
 382              	 .section .text.XMC_ERU_ETL_EnableOutputTrigger,"ax",%progbits
 383              	 .align 2
 384              	 .global XMC_ERU_ETL_EnableOutputTrigger
 385              	 .thumb
 386              	 .thumb_func
 388              	XMC_ERU_ETL_EnableOutputTrigger:
 389              	.LFB138:
 205:../Libraries/XMCLib/src/xmc_eru.c **** 
 206:../Libraries/XMCLib/src/xmc_eru.c **** /* Configure which Channel of OGUy(Output gating unit y = [0 to 3]) to be mapped by the trigger pul
 207:../Libraries/XMCLib/src/xmc_eru.c ****  * ETLx(Event Trigger Logic, x = [0 to 3]) by setting (OCS and PE) bit fields. */
 208:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_EnableOutputTrigger(XMC_ERU_t *const eru,
 209:../Libraries/XMCLib/src/xmc_eru.c ****                                      const uint8_t channel,
 210:../Libraries/XMCLib/src/xmc_eru.c ****                                      const XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL_t trigger)
 211:../Libraries/XMCLib/src/xmc_eru.c **** {
 390              	 .loc 1 211 0
 391              	 .cfi_startproc
 392              	 
 393              	 
 394              	 
 395 0000 80B4     	 push {r7}
 396              	.LCFI34:
 397              	 .cfi_def_cfa_offset 4
 398              	 .cfi_offset 7,-4
 399 0002 83B0     	 sub sp,sp,#12
 400              	.LCFI35:
 401              	 .cfi_def_cfa_offset 16
 402 0004 00AF     	 add r7,sp,#0
 403              	.LCFI36:
 404              	 .cfi_def_cfa_register 7
 405 0006 7860     	 str r0,[r7,#4]
 406 0008 0B46     	 mov r3,r1
 407 000a FB70     	 strb r3,[r7,#3]
 408 000c 1346     	 mov r3,r2
 409 000e BB70     	 strb r3,[r7,#2]
 212:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru
 213:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Channel Number", (channel < 4U));
 214:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Output Channel", XMC_ERU_ETL_CHECK_TRIGGER_CH
 215:../Libraries/XMCLib/src/xmc_eru.c **** 
 216:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].OCS = (uint8_t)trigger;
 410              	 .loc 1 216 0
 411 0010 FA78     	 ldrb r2,[r7,#3]
 412 0012 BB78     	 ldrb r3,[r7,#2]
 413 0014 03F00703 	 and r3,r3,#7
 414 0018 D9B2     	 uxtb r1,r3
 415 001a 7B68     	 ldr r3,[r7,#4]
 416 001c 0432     	 adds r2,r2,#4
 417 001e 01F00701 	 and r1,r1,#7
 418 0022 0901     	 lsls r1,r1,#4
 419 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 420 0028 20F07000 	 bic r0,r0,#112
 421 002c 0143     	 orrs r1,r1,r0
 422 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 217:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].PE = (uint8_t)true;
 423              	 .loc 1 217 0
 424 0032 FA78     	 ldrb r2,[r7,#3]
 425 0034 7B68     	 ldr r3,[r7,#4]
 426 0036 0432     	 adds r2,r2,#4
 427 0038 53F82210 	 ldr r1,[r3,r2,lsl#2]
 428 003c 41F00101 	 orr r1,r1,#1
 429 0040 43F82210 	 str r1,[r3,r2,lsl#2]
 218:../Libraries/XMCLib/src/xmc_eru.c **** }
 430              	 .loc 1 218 0
 431 0044 0C37     	 adds r7,r7,#12
 432              	.LCFI37:
 433              	 .cfi_def_cfa_offset 4
 434 0046 BD46     	 mov sp,r7
 435              	.LCFI38:
 436              	 .cfi_def_cfa_register 13
 437              	 
 438 0048 5DF8047B 	 ldr r7,[sp],#4
 439              	.LCFI39:
 440              	 .cfi_restore 7
 441              	 .cfi_def_cfa_offset 0
 442 004c 7047     	 bx lr
 443              	 .cfi_endproc
 444              	.LFE138:
 446 004e 00BF     	 .section .text.XMC_ERU_ETL_DisableOutputTrigger,"ax",%progbits
 447              	 .align 2
 448              	 .global XMC_ERU_ETL_DisableOutputTrigger
 449              	 .thumb
 450              	 .thumb_func
 452              	XMC_ERU_ETL_DisableOutputTrigger:
 453              	.LFB139:
 219:../Libraries/XMCLib/src/xmc_eru.c **** 
 220:../Libraries/XMCLib/src/xmc_eru.c **** /* Disables the trigger pulse generation by clearing the (PE) of the EXICONx(x = [0 to 3]). */
 221:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_DisableOutputTrigger(XMC_ERU_t *const eru, const uint8_t channel)
 222:../Libraries/XMCLib/src/xmc_eru.c **** {
 454              	 .loc 1 222 0
 455              	 .cfi_startproc
 456              	 
 457              	 
 458              	 
 459 0000 80B4     	 push {r7}
 460              	.LCFI40:
 461              	 .cfi_def_cfa_offset 4
 462              	 .cfi_offset 7,-4
 463 0002 83B0     	 sub sp,sp,#12
 464              	.LCFI41:
 465              	 .cfi_def_cfa_offset 16
 466 0004 00AF     	 add r7,sp,#0
 467              	.LCFI42:
 468              	 .cfi_def_cfa_register 7
 469 0006 7860     	 str r0,[r7,#4]
 470 0008 0B46     	 mov r3,r1
 471 000a FB70     	 strb r3,[r7,#3]
 223:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(er
 224:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Channel Number", (channel < 4U));
 225:../Libraries/XMCLib/src/xmc_eru.c **** 
 226:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].PE = false;
 472              	 .loc 1 226 0
 473 000c FA78     	 ldrb r2,[r7,#3]
 474 000e 7B68     	 ldr r3,[r7,#4]
 475 0010 0432     	 adds r2,r2,#4
 476 0012 53F82210 	 ldr r1,[r3,r2,lsl#2]
 477 0016 21F00101 	 bic r1,r1,#1
 478 001a 43F82210 	 str r1,[r3,r2,lsl#2]
 227:../Libraries/XMCLib/src/xmc_eru.c **** }
 479              	 .loc 1 227 0
 480 001e 0C37     	 adds r7,r7,#12
 481              	.LCFI43:
 482              	 .cfi_def_cfa_offset 4
 483 0020 BD46     	 mov sp,r7
 484              	.LCFI44:
 485              	 .cfi_def_cfa_register 13
 486              	 
 487 0022 5DF8047B 	 ldr r7,[sp],#4
 488              	.LCFI45:
 489              	 .cfi_restore 7
 490              	 .cfi_def_cfa_offset 0
 491 0026 7047     	 bx lr
 492              	 .cfi_endproc
 493              	.LFE139:
 495              	 .section .text.XMC_ERU_OGU_EnablePatternDetection,"ax",%progbits
 496              	 .align 2
 497              	 .global XMC_ERU_OGU_EnablePatternDetection
 498              	 .thumb
 499              	 .thumb_func
 501              	XMC_ERU_OGU_EnablePatternDetection:
 502              	.LFB140:
 228:../Libraries/XMCLib/src/xmc_eru.c **** 
 229:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures ERU_ETLx(x = [0 to 3]) for pattern match detection by setting IPENx(x = [0 to 3) and 
 230:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_EnablePatternDetection(XMC_ERU_t *const eru,
 231:../Libraries/XMCLib/src/xmc_eru.c ****                                         const uint8_t channel,
 232:../Libraries/XMCLib/src/xmc_eru.c ****                                         const XMC_ERU_OGU_PATTERN_DETECTION_INPUT_t input)
 233:../Libraries/XMCLib/src/xmc_eru.c **** {
 503              	 .loc 1 233 0
 504              	 .cfi_startproc
 505              	 
 506              	 
 507              	 
 508 0000 80B4     	 push {r7}
 509              	.LCFI46:
 510              	 .cfi_def_cfa_offset 4
 511              	 .cfi_offset 7,-4
 512 0002 83B0     	 sub sp,sp,#12
 513              	.LCFI47:
 514              	 .cfi_def_cfa_offset 16
 515 0004 00AF     	 add r7,sp,#0
 516              	.LCFI48:
 517              	 .cfi_def_cfa_register 7
 518 0006 7860     	 str r0,[r7,#4]
 519 0008 0B46     	 mov r3,r1
 520 000a FB70     	 strb r3,[r7,#3]
 521 000c 1346     	 mov r3,r2
 522 000e BB70     	 strb r3,[r7,#2]
 234:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(
 235:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Channel Number", (channel < 4U));
 236:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Pattern input", XMC_ERU_OGU_CHECK_PATTERN_
 237:../Libraries/XMCLib/src/xmc_eru.c **** 
 238:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].IPEN = (uint8_t)input;
 523              	 .loc 1 238 0
 524 0010 FA78     	 ldrb r2,[r7,#3]
 525 0012 BB78     	 ldrb r3,[r7,#2]
 526 0014 03F00F03 	 and r3,r3,#15
 527 0018 D9B2     	 uxtb r1,r3
 528 001a 7B68     	 ldr r3,[r7,#4]
 529 001c 0832     	 adds r2,r2,#8
 530 001e 01F00F01 	 and r1,r1,#15
 531 0022 0903     	 lsls r1,r1,#12
 532 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 533 0028 20F47040 	 bic r0,r0,#61440
 534 002c 0143     	 orrs r1,r1,r0
 535 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 239:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = true;
 536              	 .loc 1 239 0
 537 0032 FA78     	 ldrb r2,[r7,#3]
 538 0034 7B68     	 ldr r3,[r7,#4]
 539 0036 0832     	 adds r2,r2,#8
 540 0038 53F82210 	 ldr r1,[r3,r2,lsl#2]
 541 003c 41F00401 	 orr r1,r1,#4
 542 0040 43F82210 	 str r1,[r3,r2,lsl#2]
 240:../Libraries/XMCLib/src/xmc_eru.c **** }
 543              	 .loc 1 240 0
 544 0044 0C37     	 adds r7,r7,#12
 545              	.LCFI49:
 546              	 .cfi_def_cfa_offset 4
 547 0046 BD46     	 mov sp,r7
 548              	.LCFI50:
 549              	 .cfi_def_cfa_register 13
 550              	 
 551 0048 5DF8047B 	 ldr r7,[sp],#4
 552              	.LCFI51:
 553              	 .cfi_restore 7
 554              	 .cfi_def_cfa_offset 0
 555 004c 7047     	 bx lr
 556              	 .cfi_endproc
 557              	.LFE140:
 559 004e 00BF     	 .section .text.XMC_ERU_OGU_DisablePatternDetection,"ax",%progbits
 560              	 .align 2
 561              	 .global XMC_ERU_OGU_DisablePatternDetection
 562              	 .thumb
 563              	 .thumb_func
 565              	XMC_ERU_OGU_DisablePatternDetection:
 566              	.LFB141:
 241:../Libraries/XMCLib/src/xmc_eru.c **** 
 242:../Libraries/XMCLib/src/xmc_eru.c **** /* Disable the pattern detection by clearing (GEEN) bit. */
 243:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_DisablePatternDetection(XMC_ERU_t *const eru, const uint8_t channel)
 244:../Libraries/XMCLib/src/xmc_eru.c **** {
 567              	 .loc 1 244 0
 568              	 .cfi_startproc
 569              	 
 570              	 
 571              	 
 572 0000 80B4     	 push {r7}
 573              	.LCFI52:
 574              	 .cfi_def_cfa_offset 4
 575              	 .cfi_offset 7,-4
 576 0002 83B0     	 sub sp,sp,#12
 577              	.LCFI53:
 578              	 .cfi_def_cfa_offset 16
 579 0004 00AF     	 add r7,sp,#0
 580              	.LCFI54:
 581              	 .cfi_def_cfa_register 7
 582 0006 7860     	 str r0,[r7,#4]
 583 0008 0B46     	 mov r3,r1
 584 000a FB70     	 strb r3,[r7,#3]
 245:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 246:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Channel Number", (channel < 4U));
 247:../Libraries/XMCLib/src/xmc_eru.c **** 
 248:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = false;
 585              	 .loc 1 248 0
 586 000c FA78     	 ldrb r2,[r7,#3]
 587 000e 7B68     	 ldr r3,[r7,#4]
 588 0010 0832     	 adds r2,r2,#8
 589 0012 53F82210 	 ldr r1,[r3,r2,lsl#2]
 590 0016 21F00401 	 bic r1,r1,#4
 591 001a 43F82210 	 str r1,[r3,r2,lsl#2]
 249:../Libraries/XMCLib/src/xmc_eru.c **** }
 592              	 .loc 1 249 0
 593 001e 0C37     	 adds r7,r7,#12
 594              	.LCFI55:
 595              	 .cfi_def_cfa_offset 4
 596 0020 BD46     	 mov sp,r7
 597              	.LCFI56:
 598              	 .cfi_def_cfa_register 13
 599              	 
 600 0022 5DF8047B 	 ldr r7,[sp],#4
 601              	.LCFI57:
 602              	 .cfi_restore 7
 603              	 .cfi_def_cfa_offset 0
 604 0026 7047     	 bx lr
 605              	 .cfi_endproc
 606              	.LFE141:
 608              	 .section .text.XMC_ERU_OGU_EnablePeripheralTrigger,"ax",%progbits
 609              	 .align 2
 610              	 .global XMC_ERU_OGU_EnablePeripheralTrigger
 611              	 .thumb
 612              	 .thumb_func
 614              	XMC_ERU_OGU_EnablePeripheralTrigger:
 615              	.LFB142:
 250:../Libraries/XMCLib/src/xmc_eru.c **** 
 251:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures peripheral trigger input, by setting (ISS) bit. */
 252:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_EnablePeripheralTrigger(XMC_ERU_t *const eru,
 253:../Libraries/XMCLib/src/xmc_eru.c ****                                          const uint8_t channel,
 254:../Libraries/XMCLib/src/xmc_eru.c ****                                          const XMC_ERU_OGU_PERIPHERAL_TRIGGER_t peripheral_trigger)
 255:../Libraries/XMCLib/src/xmc_eru.c **** {
 616              	 .loc 1 255 0
 617              	 .cfi_startproc
 618              	 
 619              	 
 620              	 
 621 0000 80B4     	 push {r7}
 622              	.LCFI58:
 623              	 .cfi_def_cfa_offset 4
 624              	 .cfi_offset 7,-4
 625 0002 83B0     	 sub sp,sp,#12
 626              	.LCFI59:
 627              	 .cfi_def_cfa_offset 16
 628 0004 00AF     	 add r7,sp,#0
 629              	.LCFI60:
 630              	 .cfi_def_cfa_register 7
 631 0006 7860     	 str r0,[r7,#4]
 632 0008 0B46     	 mov r3,r1
 633 000a FB70     	 strb r3,[r7,#3]
 634 000c 1346     	 mov r3,r2
 635 000e BB70     	 strb r3,[r7,#2]
 256:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 257:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 258:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Peripheral Trigger Input", 
 259:../Libraries/XMCLib/src/xmc_eru.c ****               XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(peripheral_trigger));
 260:../Libraries/XMCLib/src/xmc_eru.c **** 
 261:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)peripheral_trigger;
 636              	 .loc 1 261 0
 637 0010 FA78     	 ldrb r2,[r7,#3]
 638 0012 BB78     	 ldrb r3,[r7,#2]
 639 0014 03F00303 	 and r3,r3,#3
 640 0018 D9B2     	 uxtb r1,r3
 641 001a 7B68     	 ldr r3,[r7,#4]
 642 001c 0832     	 adds r2,r2,#8
 643 001e 01F00301 	 and r1,r1,#3
 644 0022 53F82200 	 ldr r0,[r3,r2,lsl#2]
 645 0026 20F00300 	 bic r0,r0,#3
 646 002a 0143     	 orrs r1,r1,r0
 647 002c 43F82210 	 str r1,[r3,r2,lsl#2]
 262:../Libraries/XMCLib/src/xmc_eru.c **** }
 648              	 .loc 1 262 0
 649 0030 0C37     	 adds r7,r7,#12
 650              	.LCFI61:
 651              	 .cfi_def_cfa_offset 4
 652 0032 BD46     	 mov sp,r7
 653              	.LCFI62:
 654              	 .cfi_def_cfa_register 13
 655              	 
 656 0034 5DF8047B 	 ldr r7,[sp],#4
 657              	.LCFI63:
 658              	 .cfi_restore 7
 659              	 .cfi_def_cfa_offset 0
 660 0038 7047     	 bx lr
 661              	 .cfi_endproc
 662              	.LFE142:
 664 003a 00BF     	 .section .text.XMC_ERU_OGU_DisablePeripheralTrigger,"ax",%progbits
 665              	 .align 2
 666              	 .global XMC_ERU_OGU_DisablePeripheralTrigger
 667              	 .thumb
 668              	 .thumb_func
 670              	XMC_ERU_OGU_DisablePeripheralTrigger:
 671              	.LFB143:
 263:../Libraries/XMCLib/src/xmc_eru.c **** 
 264:../Libraries/XMCLib/src/xmc_eru.c **** /* Disables event generation based on peripheral trigger by clearing (ISS) bit. */
 265:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_DisablePeripheralTrigger(XMC_ERU_t *const eru,
 266:../Libraries/XMCLib/src/xmc_eru.c ****                                           const uint8_t channel)
 267:../Libraries/XMCLib/src/xmc_eru.c **** {
 672              	 .loc 1 267 0
 673              	 .cfi_startproc
 674              	 
 675              	 
 676              	 
 677 0000 80B4     	 push {r7}
 678              	.LCFI64:
 679              	 .cfi_def_cfa_offset 4
 680              	 .cfi_offset 7,-4
 681 0002 83B0     	 sub sp,sp,#12
 682              	.LCFI65:
 683              	 .cfi_def_cfa_offset 16
 684 0004 00AF     	 add r7,sp,#0
 685              	.LCFI66:
 686              	 .cfi_def_cfa_register 7
 687 0006 7860     	 str r0,[r7,#4]
 688 0008 0B46     	 mov r3,r1
 689 000a FB70     	 strb r3,[r7,#3]
 268:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PT
 269:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 270:../Libraries/XMCLib/src/xmc_eru.c **** 
 271:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)0;
 690              	 .loc 1 271 0
 691 000c FA78     	 ldrb r2,[r7,#3]
 692 000e 7B68     	 ldr r3,[r7,#4]
 693 0010 0832     	 adds r2,r2,#8
 694 0012 53F82210 	 ldr r1,[r3,r2,lsl#2]
 695 0016 21F00301 	 bic r1,r1,#3
 696 001a 43F82210 	 str r1,[r3,r2,lsl#2]
 272:../Libraries/XMCLib/src/xmc_eru.c **** }
 697              	 .loc 1 272 0
 698 001e 0C37     	 adds r7,r7,#12
 699              	.LCFI67:
 700              	 .cfi_def_cfa_offset 4
 701 0020 BD46     	 mov sp,r7
 702              	.LCFI68:
 703              	 .cfi_def_cfa_register 13
 704              	 
 705 0022 5DF8047B 	 ldr r7,[sp],#4
 706              	.LCFI69:
 707              	 .cfi_restore 7
 708              	 .cfi_def_cfa_offset 0
 709 0026 7047     	 bx lr
 710              	 .cfi_endproc
 711              	.LFE143:
 713              	 .section .text.XMC_ERU_OGU_SetServiceRequestMode,"ax",%progbits
 714              	 .align 2
 715              	 .global XMC_ERU_OGU_SetServiceRequestMode
 716              	 .thumb
 717              	 .thumb_func
 719              	XMC_ERU_OGU_SetServiceRequestMode:
 720              	.LFB144:
 273:../Libraries/XMCLib/src/xmc_eru.c **** 
 274:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures the gating scheme for service request generation by setting (GP) bit. */
 275:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_SetServiceRequestMode(XMC_ERU_t *const eru,
 276:../Libraries/XMCLib/src/xmc_eru.c ****                                        const uint8_t channel,
 277:../Libraries/XMCLib/src/xmc_eru.c ****                                        const XMC_ERU_OGU_SERVICE_REQUEST_t mode)
 278:../Libraries/XMCLib/src/xmc_eru.c **** {
 721              	 .loc 1 278 0
 722              	 .cfi_startproc
 723              	 
 724              	 
 725              	 
 726 0000 80B4     	 push {r7}
 727              	.LCFI70:
 728              	 .cfi_def_cfa_offset 4
 729              	 .cfi_offset 7,-4
 730 0002 83B0     	 sub sp,sp,#12
 731              	.LCFI71:
 732              	 .cfi_def_cfa_offset 16
 733 0004 00AF     	 add r7,sp,#0
 734              	.LCFI72:
 735              	 .cfi_def_cfa_register 7
 736 0006 7860     	 str r0,[r7,#4]
 737 0008 0B46     	 mov r3,r1
 738 000a FB70     	 strb r3,[r7,#3]
 739 000c 1346     	 mov r3,r2
 740 000e BB70     	 strb r3,[r7,#2]
 279:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(e
 280:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Channel Number", (channel < 4U));
 281:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Service Request Mode", XMC_ERU_OGU_CHECK_SE
 282:../Libraries/XMCLib/src/xmc_eru.c **** 
 283:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GP = (uint8_t)mode;
 741              	 .loc 1 283 0
 742 0010 FA78     	 ldrb r2,[r7,#3]
 743 0012 BB78     	 ldrb r3,[r7,#2]
 744 0014 03F00303 	 and r3,r3,#3
 745 0018 D9B2     	 uxtb r1,r3
 746 001a 7B68     	 ldr r3,[r7,#4]
 747 001c 0832     	 adds r2,r2,#8
 748 001e 01F00301 	 and r1,r1,#3
 749 0022 0901     	 lsls r1,r1,#4
 750 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 751 0028 20F03000 	 bic r0,r0,#48
 752 002c 0143     	 orrs r1,r1,r0
 753 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 284:../Libraries/XMCLib/src/xmc_eru.c **** 
 285:../Libraries/XMCLib/src/xmc_eru.c **** }
 754              	 .loc 1 285 0
 755 0032 0C37     	 adds r7,r7,#12
 756              	.LCFI73:
 757              	 .cfi_def_cfa_offset 4
 758 0034 BD46     	 mov sp,r7
 759              	.LCFI74:
 760              	 .cfi_def_cfa_register 13
 761              	 
 762 0036 5DF8047B 	 ldr r7,[sp],#4
 763              	.LCFI75:
 764              	 .cfi_restore 7
 765              	 .cfi_def_cfa_offset 0
 766 003a 7047     	 bx lr
 767              	 .cfi_endproc
 768              	.LFE144:
 770              	 .text
 771              	.Letext0:
 772              	 .file 2 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 773              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 774              	 .file 4 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_eru.h"
 775              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eru.c
    {standard input}:19     .text.XMC_ERU_ETL_Init:00000000 $t
    {standard input}:24     .text.XMC_ERU_ETL_Init:00000000 XMC_ERU_ETL_Init
    {standard input}:92     .text.XMC_ERU_OGU_Init:00000000 $t
    {standard input}:97     .text.XMC_ERU_OGU_Init:00000000 XMC_ERU_OGU_Init
    {standard input}:141    .text.XMC_ERU_ETL_SetInput:00000000 $t
    {standard input}:146    .text.XMC_ERU_ETL_SetInput:00000000 XMC_ERU_ETL_SetInput
    {standard input}:212    .text.XMC_ERU_ETL_SetSource:00000000 $t
    {standard input}:217    .text.XMC_ERU_ETL_SetSource:00000000 XMC_ERU_ETL_SetSource
    {standard input}:269    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 $t
    {standard input}:274    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 XMC_ERU_ETL_SetEdgeDetection
    {standard input}:326    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 $t
    {standard input}:331    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 XMC_ERU_ETL_SetStatusFlagMode
    {standard input}:383    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 $t
    {standard input}:388    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 XMC_ERU_ETL_EnableOutputTrigger
    {standard input}:447    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 $t
    {standard input}:452    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 XMC_ERU_ETL_DisableOutputTrigger
    {standard input}:496    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 $t
    {standard input}:501    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 XMC_ERU_OGU_EnablePatternDetection
    {standard input}:560    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 $t
    {standard input}:565    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 XMC_ERU_OGU_DisablePatternDetection
    {standard input}:609    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 $t
    {standard input}:614    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 XMC_ERU_OGU_EnablePeripheralTrigger
    {standard input}:665    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 $t
    {standard input}:670    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 XMC_ERU_OGU_DisablePeripheralTrigger
    {standard input}:714    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 $t
    {standard input}:719    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 XMC_ERU_OGU_SetServiceRequestMode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_ERU_Enable
