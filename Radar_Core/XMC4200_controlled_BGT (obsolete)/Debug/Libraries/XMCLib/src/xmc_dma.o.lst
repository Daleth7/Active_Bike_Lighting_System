   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "xmc_dma.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_DMA_GetEventStatus,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_DMA_GetEventStatus:
  24              	.LFB128:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_dma.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @file xmc_dma.h
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @date 2015-06-20 
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @cond
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  **************************************************************************************************
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Copyright (c) 2015, Infineon Technologies AG
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * All rights reserved.                        
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *                                             
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * following conditions are met:   
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *                                                                              
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * disclaimer.                        
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * 
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * 
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * products derived from this software without specific prior written permission.                  
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *                                                                              
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *                                                                              
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  **************************************************************************************************
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Change History
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * --------------
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * 2015-02-20:
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *     - Initial <br>
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * 2015-06-20:
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *     - Documentation updates <br>
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @endcond
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #ifndef XMC_DMA_H
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #define XMC_DMA_H
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /*******************************************************************************
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * HEADER FILES
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *******************************************************************************/
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #include "xmc_common.h"
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #if defined (GPDMA0)
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #include "xmc_dma_map.h"
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @{
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @addtogroup DMA
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * hardware peripheral.
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @{
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /*******************************************************************************
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * MACROS
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *******************************************************************************/
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #if defined (GPDMA0)
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #endif
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #if defined (GPDMA1)
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #endif
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /*******************************************************************************
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * ENUMS
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *******************************************************************************/
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA transfer types
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA transfer flow modes
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Valid burst length values
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Valid transfer width values
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA address count mode
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA channel priorities
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Source handshake interface
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Destination handshake interface
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA hardware handshaking interface
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA events
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Transaction types
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA channel status values
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /*******************************************************************************
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DATA STRUCTURES
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *******************************************************************************/
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * modes and the like.
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef struct {
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  SAR;
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  DAR;
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  LLP;
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  SGR;
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  DSR;
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } GPDMA_CH_t;
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA device structure <br>
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef struct {
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  ID;
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_t;
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #if defined (__CC_ARM)
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   #pragma push
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   #pragma anon_unions
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #elif defined (__TASKING__)
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   #pragma warning 586
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #endif
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA channel linked list item.
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Note: Needs to be word aligned
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   union
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   {
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     struct
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     {
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     };
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     uint32_t control;
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   };
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA channel configuration structure
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   union
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   {
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     uint32_t control;
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     struct
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     {
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t : 1;                             
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t : 9;                             
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     };
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   };
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   union
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   {
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     uint32_t src_gather_control;
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     struct
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     {
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     };
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   };
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   union
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   {
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     struct
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     {
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****     };
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   };
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [1-204
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type */
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority */
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface */
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request */
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface */
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request */
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #if defined (__CC_ARM)
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   #pragma pop
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #elif defined (__TASKING__)
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   #pragma warning restore
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #endif
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA channel event handler
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /*******************************************************************************
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * API PROTOTYPES
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *******************************************************************************/
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #ifdef __cplusplus
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** extern "C" {
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** #endif
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return None
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * peripheral.
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return None
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return None
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return bool
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * is enabled.
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return uint32_t DMA event status
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Get DMA event status <br>
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
  26              	 .loc 1 526 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	.LCFI2:
  40              	 .cfi_def_cfa_register 7
  41 0006 7860     	 str r0,[r7,#4]
 527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   return (dma->STATUSGLEV);
  42              	 .loc 1 527 0
  43 0008 7B68     	 ldr r3,[r7,#4]
  44 000a D3F86033 	 ldr r3,[r3,#864]
 528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** }
  45              	 .loc 1 528 0
  46 000e 1846     	 mov r0,r3
  47 0010 0C37     	 adds r7,r7,#12
  48              	.LCFI3:
  49              	 .cfi_def_cfa_offset 4
  50 0012 BD46     	 mov sp,r7
  51              	.LCFI4:
  52              	 .cfi_def_cfa_register 13
  53              	 
  54 0014 5DF8047B 	 ldr r7,[sp],#4
  55              	.LCFI5:
  56              	 .cfi_restore 7
  57              	 .cfi_def_cfa_offset 0
  58 0018 7047     	 bx lr
  59              	 .cfi_endproc
  60              	.LFE128:
  62 001a 00BF     	 .section .text.XMC_DMA_GetChannelsTransferCompleteStatus,"ax",%progbits
  63              	 .align 2
  64              	 .thumb
  65              	 .thumb_func
  67              	XMC_DMA_GetChannelsTransferCompleteStatus:
  68              	.LFB129:
 529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Get transfer complete status <br>
 536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
  69              	 .loc 1 541 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI6:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	.LCFI7:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI8:
  83              	 .cfi_def_cfa_register 7
  84 0006 7860     	 str r0,[r7,#4]
 542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
  85              	 .loc 1 542 0
  86 0008 7B68     	 ldr r3,[r7,#4]
  87 000a D3F8E832 	 ldr r3,[r3,#744]
 543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** }
  88              	 .loc 1 543 0
  89 000e 1846     	 mov r0,r3
  90 0010 0C37     	 adds r7,r7,#12
  91              	.LCFI9:
  92              	 .cfi_def_cfa_offset 4
  93 0012 BD46     	 mov sp,r7
  94              	.LCFI10:
  95              	 .cfi_def_cfa_register 13
  96              	 
  97 0014 5DF8047B 	 ldr r7,[sp],#4
  98              	.LCFI11:
  99              	 .cfi_restore 7
 100              	 .cfi_def_cfa_offset 0
 101 0018 7047     	 bx lr
 102              	 .cfi_endproc
 103              	.LFE129:
 105 001a 00BF     	 .section .text.XMC_DMA_GetChannelsBlockCompleteStatus,"ax",%progbits
 106              	 .align 2
 107              	 .thumb
 108              	 .thumb_func
 110              	XMC_DMA_GetChannelsBlockCompleteStatus:
 111              	.LFB130:
 544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Get block transfer complete status <br>
 551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 112              	 .loc 1 556 0
 113              	 .cfi_startproc
 114              	 
 115              	 
 116              	 
 117 0000 80B4     	 push {r7}
 118              	.LCFI12:
 119              	 .cfi_def_cfa_offset 4
 120              	 .cfi_offset 7,-4
 121 0002 83B0     	 sub sp,sp,#12
 122              	.LCFI13:
 123              	 .cfi_def_cfa_offset 16
 124 0004 00AF     	 add r7,sp,#0
 125              	.LCFI14:
 126              	 .cfi_def_cfa_register 7
 127 0006 7860     	 str r0,[r7,#4]
 557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 128              	 .loc 1 557 0
 129 0008 7B68     	 ldr r3,[r7,#4]
 130 000a D3F8F032 	 ldr r3,[r3,#752]
 558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** }
 131              	 .loc 1 558 0
 132 000e 1846     	 mov r0,r3
 133 0010 0C37     	 adds r7,r7,#12
 134              	.LCFI15:
 135              	 .cfi_def_cfa_offset 4
 136 0012 BD46     	 mov sp,r7
 137              	.LCFI16:
 138              	 .cfi_def_cfa_register 13
 139              	 
 140 0014 5DF8047B 	 ldr r7,[sp],#4
 141              	.LCFI17:
 142              	 .cfi_restore 7
 143              	 .cfi_def_cfa_offset 0
 144 0018 7047     	 bx lr
 145              	 .cfi_endproc
 146              	.LFE130:
 148 001a 00BF     	 .section .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus,"ax",%progbits
 149              	 .align 2
 150              	 .thumb
 151              	 .thumb_func
 153              	XMC_DMA_GetChannelsSourceTransactionCompleteStatus:
 154              	.LFB131:
 559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return uint32_t DMA event status
 563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Get source transaction complete status <br>
 566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * ignored.
 573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 155              	 .loc 1 575 0
 156              	 .cfi_startproc
 157              	 
 158              	 
 159              	 
 160 0000 80B4     	 push {r7}
 161              	.LCFI18:
 162              	 .cfi_def_cfa_offset 4
 163              	 .cfi_offset 7,-4
 164 0002 83B0     	 sub sp,sp,#12
 165              	.LCFI19:
 166              	 .cfi_def_cfa_offset 16
 167 0004 00AF     	 add r7,sp,#0
 168              	.LCFI20:
 169              	 .cfi_def_cfa_register 7
 170 0006 7860     	 str r0,[r7,#4]
 576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 171              	 .loc 1 576 0
 172 0008 7B68     	 ldr r3,[r7,#4]
 173 000a D3F8F832 	 ldr r3,[r3,#760]
 577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** }
 174              	 .loc 1 577 0
 175 000e 1846     	 mov r0,r3
 176 0010 0C37     	 adds r7,r7,#12
 177              	.LCFI21:
 178              	 .cfi_def_cfa_offset 4
 179 0012 BD46     	 mov sp,r7
 180              	.LCFI22:
 181              	 .cfi_def_cfa_register 13
 182              	 
 183 0014 5DF8047B 	 ldr r7,[sp],#4
 184              	.LCFI23:
 185              	 .cfi_restore 7
 186              	 .cfi_def_cfa_offset 0
 187 0018 7047     	 bx lr
 188              	 .cfi_endproc
 189              	.LFE131:
 191 001a 00BF     	 .section .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus,"ax",%progbits
 192              	 .align 2
 193              	 .thumb
 194              	 .thumb_func
 196              	XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:
 197              	.LFB132:
 578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return uint32_t DMA event status
 582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * interrupt is ignored.
 592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 198              	 .loc 1 594 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI24:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 83B0     	 sub sp,sp,#12
 208              	.LCFI25:
 209              	 .cfi_def_cfa_offset 16
 210 0004 00AF     	 add r7,sp,#0
 211              	.LCFI26:
 212              	 .cfi_def_cfa_register 7
 213 0006 7860     	 str r0,[r7,#4]
 595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 214              	 .loc 1 595 0
 215 0008 7B68     	 ldr r3,[r7,#4]
 216 000a D3F80033 	 ldr r3,[r3,#768]
 596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** }
 217              	 .loc 1 596 0
 218 000e 1846     	 mov r0,r3
 219 0010 0C37     	 adds r7,r7,#12
 220              	.LCFI27:
 221              	 .cfi_def_cfa_offset 4
 222 0012 BD46     	 mov sp,r7
 223              	.LCFI28:
 224              	 .cfi_def_cfa_register 13
 225              	 
 226 0014 5DF8047B 	 ldr r7,[sp],#4
 227              	.LCFI29:
 228              	 .cfi_restore 7
 229              	 .cfi_def_cfa_offset 0
 230 0018 7047     	 bx lr
 231              	 .cfi_endproc
 232              	.LFE132:
 234 001a 00BF     	 .section .text.XMC_DMA_GetChannelsErrorStatus,"ax",%progbits
 235              	 .align 2
 236              	 .thumb
 237              	 .thumb_func
 239              	XMC_DMA_GetChannelsErrorStatus:
 240              	.LFB133:
 597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** 
 598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** /**
 599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * Get DMA error event status <br>
 604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  *
 605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * \par
 606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****  */
 608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** {
 241              	 .loc 1 609 0
 242              	 .cfi_startproc
 243              	 
 244              	 
 245              	 
 246 0000 80B4     	 push {r7}
 247              	.LCFI30:
 248              	 .cfi_def_cfa_offset 4
 249              	 .cfi_offset 7,-4
 250 0002 83B0     	 sub sp,sp,#12
 251              	.LCFI31:
 252              	 .cfi_def_cfa_offset 16
 253 0004 00AF     	 add r7,sp,#0
 254              	.LCFI32:
 255              	 .cfi_def_cfa_register 7
 256 0006 7860     	 str r0,[r7,#4]
 610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 257              	 .loc 1 610 0
 258 0008 7B68     	 ldr r3,[r7,#4]
 259 000a D3F80833 	 ldr r3,[r3,#776]
 611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_dma.h **** }
 260              	 .loc 1 611 0
 261 000e 1846     	 mov r0,r3
 262 0010 0C37     	 adds r7,r7,#12
 263              	.LCFI33:
 264              	 .cfi_def_cfa_offset 4
 265 0012 BD46     	 mov sp,r7
 266              	.LCFI34:
 267              	 .cfi_def_cfa_register 13
 268              	 
 269 0014 5DF8047B 	 ldr r7,[sp],#4
 270              	.LCFI35:
 271              	 .cfi_restore 7
 272              	 .cfi_def_cfa_offset 0
 273 0018 7047     	 bx lr
 274              	 .cfi_endproc
 275              	.LFE133:
 277              	 .comm dma0_event_handlers,32,4
 278 001a 00BF     	 .section .text.XMC_DMA_Init,"ax",%progbits
 279              	 .align 2
 280              	 .global XMC_DMA_Init
 281              	 .thumb
 282              	 .thumb_func
 284              	XMC_DMA_Init:
 285              	.LFB160:
 286              	 .file 2 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2015-06-20 
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../Libraries/XMCLib/src/xmc_dma.c ****  * following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * products derived from this software without specific prior written permission.                  
  24:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../Libraries/XMCLib/src/xmc_dma.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_dma.c ****  *
  40:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_dma.c ****  *
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  45:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *
  51:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  56:../Libraries/XMCLib/src/xmc_dma.c ****  *
  57:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  58:../Libraries/XMCLib/src/xmc_dma.c ****  */
  59:../Libraries/XMCLib/src/xmc_dma.c **** 
  60:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  61:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  62:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  63:../Libraries/XMCLib/src/xmc_dma.c **** 
  64:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  65:../Libraries/XMCLib/src/xmc_dma.c **** 
  66:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  67:../Libraries/XMCLib/src/xmc_dma.c **** 
  68:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  69:../Libraries/XMCLib/src/xmc_dma.c **** 
  70:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  71:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  72:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  73:../Libraries/XMCLib/src/xmc_dma.c **** 
  74:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  75:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  76:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  77:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  78:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  79:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
  80:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
  81:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
  82:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
  83:../Libraries/XMCLib/src/xmc_dma.c **** 
  84:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  85:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
  86:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  87:../Libraries/XMCLib/src/xmc_dma.c **** 
  88:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  89:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
  90:../Libraries/XMCLib/src/xmc_dma.c **** #endif
  91:../Libraries/XMCLib/src/xmc_dma.c **** 
  92:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
  93:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
  94:../Libraries/XMCLib/src/xmc_dma.c **** #endif
  95:../Libraries/XMCLib/src/xmc_dma.c ****  
  96:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  97:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
  98:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  99:../Libraries/XMCLib/src/xmc_dma.c **** 
 100:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 101:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 102:../Libraries/XMCLib/src/xmc_dma.c **** {
 287              	 .loc 2 102 0
 288              	 .cfi_startproc
 289              	 
 290              	 
 291 0000 80B5     	 push {r7,lr}
 292              	.LCFI36:
 293              	 .cfi_def_cfa_offset 8
 294              	 .cfi_offset 7,-8
 295              	 .cfi_offset 14,-4
 296 0002 82B0     	 sub sp,sp,#8
 297              	.LCFI37:
 298              	 .cfi_def_cfa_offset 16
 299 0004 00AF     	 add r7,sp,#0
 300              	.LCFI38:
 301              	 .cfi_def_cfa_register 7
 302 0006 7860     	 str r0,[r7,#4]
 103:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 303              	 .loc 2 103 0
 304 0008 7868     	 ldr r0,[r7,#4]
 305 000a FFF7FEFF 	 bl XMC_DMA_Enable
 104:../Libraries/XMCLib/src/xmc_dma.c **** }
 306              	 .loc 2 104 0
 307 000e 0837     	 adds r7,r7,#8
 308              	.LCFI39:
 309              	 .cfi_def_cfa_offset 8
 310 0010 BD46     	 mov sp,r7
 311              	.LCFI40:
 312              	 .cfi_def_cfa_register 13
 313              	 
 314 0012 80BD     	 pop {r7,pc}
 315              	 .cfi_endproc
 316              	.LFE160:
 318              	 .section .text.XMC_DMA_Enable,"ax",%progbits
 319              	 .align 2
 320              	 .global XMC_DMA_Enable
 321              	 .thumb
 322              	 .thumb_func
 324              	XMC_DMA_Enable:
 325              	.LFB161:
 105:../Libraries/XMCLib/src/xmc_dma.c **** 
 106:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 107:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 108:../Libraries/XMCLib/src/xmc_dma.c **** {
 326              	 .loc 2 108 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI41:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 82B0     	 sub sp,sp,#8
 336              	.LCFI42:
 337              	 .cfi_def_cfa_offset 16
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI43:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 109:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 110:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 111:../Libraries/XMCLib/src/xmc_dma.c ****   {
 112:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 113:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 114:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 342              	 .loc 2 114 0
 343 0008 0648     	 ldr r0,.L15
 344 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 115:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 116:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 345              	 .loc 2 116 0
 346 000e 0548     	 ldr r0,.L15
 347 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 117:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 118:../Libraries/XMCLib/src/xmc_dma.c ****   }
 119:../Libraries/XMCLib/src/xmc_dma.c ****   else
 120:../Libraries/XMCLib/src/xmc_dma.c ****   {
 121:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 122:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 123:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 124:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 125:../Libraries/XMCLib/src/xmc_dma.c ****   }
 126:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 127:../Libraries/XMCLib/src/xmc_dma.c **** 
 128:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
 348              	 .loc 2 128 0
 349 0014 7B68     	 ldr r3,[r7,#4]
 350 0016 0122     	 movs r2,#1
 351 0018 C3F89823 	 str r2,[r3,#920]
 129:../Libraries/XMCLib/src/xmc_dma.c **** }
 352              	 .loc 2 129 0
 353 001c 0837     	 adds r7,r7,#8
 354              	.LCFI44:
 355              	 .cfi_def_cfa_offset 8
 356 001e BD46     	 mov sp,r7
 357              	.LCFI45:
 358              	 .cfi_def_cfa_register 13
 359              	 
 360 0020 80BD     	 pop {r7,pc}
 361              	.L16:
 362 0022 00BF     	 .align 2
 363              	.L15:
 364 0024 10000020 	 .word 536870928
 365              	 .cfi_endproc
 366              	.LFE161:
 368              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 369              	 .align 2
 370              	 .global XMC_DMA_Disable
 371              	 .thumb
 372              	 .thumb_func
 374              	XMC_DMA_Disable:
 375              	.LFB162:
 130:../Libraries/XMCLib/src/xmc_dma.c **** 
 131:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 132:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 133:../Libraries/XMCLib/src/xmc_dma.c **** {
 376              	 .loc 2 133 0
 377              	 .cfi_startproc
 378              	 
 379              	 
 380 0000 80B5     	 push {r7,lr}
 381              	.LCFI46:
 382              	 .cfi_def_cfa_offset 8
 383              	 .cfi_offset 7,-8
 384              	 .cfi_offset 14,-4
 385 0002 82B0     	 sub sp,sp,#8
 386              	.LCFI47:
 387              	 .cfi_def_cfa_offset 16
 388 0004 00AF     	 add r7,sp,#0
 389              	.LCFI48:
 390              	 .cfi_def_cfa_register 7
 391 0006 7860     	 str r0,[r7,#4]
 134:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 392              	 .loc 2 134 0
 393 0008 7B68     	 ldr r3,[r7,#4]
 394 000a 0022     	 movs r2,#0
 395 000c C3F89823 	 str r2,[r3,#920]
 135:../Libraries/XMCLib/src/xmc_dma.c **** 
 136:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 137:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 138:../Libraries/XMCLib/src/xmc_dma.c ****   {
 139:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 140:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 396              	 .loc 2 140 0
 397 0010 0448     	 ldr r0,.L18
 398 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 141:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 142:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 399              	 .loc 2 142 0
 400 0016 0348     	 ldr r0,.L18
 401 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 143:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 144:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 145:../Libraries/XMCLib/src/xmc_dma.c ****   }
 146:../Libraries/XMCLib/src/xmc_dma.c ****   else
 147:../Libraries/XMCLib/src/xmc_dma.c ****   {
 148:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 149:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 150:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 151:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 152:../Libraries/XMCLib/src/xmc_dma.c ****   }
 153:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 154:../Libraries/XMCLib/src/xmc_dma.c **** }
 402              	 .loc 2 154 0
 403 001c 0837     	 adds r7,r7,#8
 404              	.LCFI49:
 405              	 .cfi_def_cfa_offset 8
 406 001e BD46     	 mov sp,r7
 407              	.LCFI50:
 408              	 .cfi_def_cfa_register 13
 409              	 
 410 0020 80BD     	 pop {r7,pc}
 411              	.L19:
 412 0022 00BF     	 .align 2
 413              	.L18:
 414 0024 10000020 	 .word 536870928
 415              	 .cfi_endproc
 416              	.LFE162:
 418              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 419              	 .align 2
 420              	 .global XMC_DMA_IsEnabled
 421              	 .thumb
 422              	 .thumb_func
 424              	XMC_DMA_IsEnabled:
 425              	.LFB163:
 155:../Libraries/XMCLib/src/xmc_dma.c **** 
 156:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 157:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 158:../Libraries/XMCLib/src/xmc_dma.c **** {
 426              	 .loc 2 158 0
 427              	 .cfi_startproc
 428              	 
 429              	 
 430 0000 80B5     	 push {r7,lr}
 431              	.LCFI51:
 432              	 .cfi_def_cfa_offset 8
 433              	 .cfi_offset 7,-8
 434              	 .cfi_offset 14,-4
 435 0002 84B0     	 sub sp,sp,#16
 436              	.LCFI52:
 437              	 .cfi_def_cfa_offset 24
 438 0004 00AF     	 add r7,sp,#0
 439              	.LCFI53:
 440              	 .cfi_def_cfa_register 7
 441 0006 7860     	 str r0,[r7,#4]
 159:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 160:../Libraries/XMCLib/src/xmc_dma.c **** 
 161:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 162:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 163:../Libraries/XMCLib/src/xmc_dma.c ****   {
 164:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 165:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 442              	 .loc 2 165 0
 443 0008 1E48     	 ldr r0,.L27
 444 000a FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 445 000e 0346     	 mov r3,r0
 446 0010 002B     	 cmp r3,#0
 447 0012 14BF     	 ite ne
 448 0014 0123     	 movne r3,#1
 449 0016 0023     	 moveq r3,#0
 450 0018 DBB2     	 uxtb r3,r3
 451 001a 83F00103 	 eor r3,r3,#1
 452 001e DBB2     	 uxtb r3,r3
 453 0020 FB73     	 strb r3,[r7,#15]
 454 0022 FB7B     	 ldrb r3,[r7,#15]
 455 0024 03F00103 	 and r3,r3,#1
 456 0028 FB73     	 strb r3,[r7,#15]
 166:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 167:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 457              	 .loc 2 167 0
 458 002a FB7B     	 ldrb r3,[r7,#15]
 459 002c 002B     	 cmp r3,#0
 460 002e 0AD0     	 beq .L21
 461              	 .loc 2 167 0 is_stmt 0 discriminator 1
 462 0030 1448     	 ldr r0,.L27
 463 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 464 0036 0346     	 mov r3,r0
 465 0038 83F00103 	 eor r3,r3,#1
 466 003c DBB2     	 uxtb r3,r3
 467 003e 002B     	 cmp r3,#0
 468 0040 01D0     	 beq .L21
 469              	 .loc 2 167 0 discriminator 3
 470 0042 0123     	 movs r3,#1
 471 0044 00E0     	 b .L22
 472              	.L21:
 473              	 .loc 2 167 0 discriminator 4
 474 0046 0023     	 movs r3,#0
 475              	.L22:
 476              	 .loc 2 167 0 discriminator 6
 477 0048 FB73     	 strb r3,[r7,#15]
 478 004a FB7B     	 ldrb r3,[r7,#15]
 479 004c 03F00103 	 and r3,r3,#1
 480 0050 FB73     	 strb r3,[r7,#15]
 168:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 169:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 170:../Libraries/XMCLib/src/xmc_dma.c ****   }
 171:../Libraries/XMCLib/src/xmc_dma.c ****   else
 172:../Libraries/XMCLib/src/xmc_dma.c ****   {
 173:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 174:../Libraries/XMCLib/src/xmc_dma.c **** #if (UC_SERIES != XMC45)
 175:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 176:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 177:../Libraries/XMCLib/src/xmc_dma.c ****   }
 178:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 179:../Libraries/XMCLib/src/xmc_dma.c **** 
 180:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 181:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 481              	 .loc 2 181 0 is_stmt 1 discriminator 6
 482 0052 FB7B     	 ldrb r3,[r7,#15]
 483 0054 002B     	 cmp r3,#0
 484 0056 0FD0     	 beq .L23
 182:../Libraries/XMCLib/src/xmc_dma.c ****   {
 183:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 485              	 .loc 2 183 0
 486 0058 FB7B     	 ldrb r3,[r7,#15]
 487 005a 002B     	 cmp r3,#0
 488 005c 06D0     	 beq .L24
 489              	 .loc 2 183 0 is_stmt 0 discriminator 1
 490 005e 7B68     	 ldr r3,[r7,#4]
 491 0060 D3F89833 	 ldr r3,[r3,#920]
 492 0064 002B     	 cmp r3,#0
 493 0066 01D0     	 beq .L24
 494              	 .loc 2 183 0 discriminator 3
 495 0068 0123     	 movs r3,#1
 496 006a 00E0     	 b .L25
 497              	.L24:
 498              	 .loc 2 183 0 discriminator 4
 499 006c 0023     	 movs r3,#0
 500              	.L25:
 501              	 .loc 2 183 0 discriminator 6
 502 006e FB73     	 strb r3,[r7,#15]
 503 0070 FB7B     	 ldrb r3,[r7,#15]
 504 0072 03F00103 	 and r3,r3,#1
 505 0076 FB73     	 strb r3,[r7,#15]
 506              	.L23:
 184:../Libraries/XMCLib/src/xmc_dma.c ****   }
 185:../Libraries/XMCLib/src/xmc_dma.c **** 
 186:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 507              	 .loc 2 186 0 is_stmt 1
 508 0078 FB7B     	 ldrb r3,[r7,#15]
 187:../Libraries/XMCLib/src/xmc_dma.c **** }
 509              	 .loc 2 187 0
 510 007a 1846     	 mov r0,r3
 511 007c 1037     	 adds r7,r7,#16
 512              	.LCFI54:
 513              	 .cfi_def_cfa_offset 8
 514 007e BD46     	 mov sp,r7
 515              	.LCFI55:
 516              	 .cfi_def_cfa_register 13
 517              	 
 518 0080 80BD     	 pop {r7,pc}
 519              	.L28:
 520 0082 00BF     	 .align 2
 521              	.L27:
 522 0084 10000020 	 .word 536870928
 523              	 .cfi_endproc
 524              	.LFE163:
 526              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 527              	 .align 2
 528              	 .global XMC_DMA_EnableRequestLine
 529              	 .thumb
 530              	 .thumb_func
 532              	XMC_DMA_EnableRequestLine:
 533              	.LFB164:
 188:../Libraries/XMCLib/src/xmc_dma.c **** 
 189:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 190:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 191:../Libraries/XMCLib/src/xmc_dma.c **** {
 534              	 .loc 2 191 0
 535              	 .cfi_startproc
 536              	 
 537              	 
 538              	 
 539 0000 80B4     	 push {r7}
 540              	.LCFI56:
 541              	 .cfi_def_cfa_offset 4
 542              	 .cfi_offset 7,-4
 543 0002 83B0     	 sub sp,sp,#12
 544              	.LCFI57:
 545              	 .cfi_def_cfa_offset 16
 546 0004 00AF     	 add r7,sp,#0
 547              	.LCFI58:
 548              	 .cfi_def_cfa_register 7
 549 0006 7860     	 str r0,[r7,#4]
 550 0008 0B46     	 mov r3,r1
 551 000a FB70     	 strb r3,[r7,#3]
 552 000c 1346     	 mov r3,r2
 553 000e BB70     	 strb r3,[r7,#2]
 192:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 193:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 194:../Libraries/XMCLib/src/xmc_dma.c ****   {
 195:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 196:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 554              	 .loc 2 196 0
 555 0010 0F48     	 ldr r0,.L30
 556 0012 0F4B     	 ldr r3,.L30
 557 0014 9A68     	 ldr r2,[r3,#8]
 558 0016 FB78     	 ldrb r3,[r7,#3]
 559 0018 9B00     	 lsls r3,r3,#2
 560 001a 1946     	 mov r1,r3
 561 001c 0F23     	 movs r3,#15
 562 001e 8B40     	 lsls r3,r3,r1
 563 0020 DB43     	 mvns r3,r3
 564 0022 1A40     	 ands r2,r2,r3
 197:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 565              	 .loc 2 197 0
 566 0024 BB78     	 ldrb r3,[r7,#2]
 567 0026 F978     	 ldrb r1,[r7,#3]
 568 0028 8900     	 lsls r1,r1,#2
 569 002a 8B40     	 lsls r3,r3,r1
 196:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 570              	 .loc 2 196 0
 571 002c 1343     	 orrs r3,r3,r2
 572 002e 8360     	 str r3,[r0,#8]
 198:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 573              	 .loc 2 198 0
 574 0030 0749     	 ldr r1,.L30
 575 0032 074B     	 ldr r3,.L30
 576 0034 1A69     	 ldr r2,[r3,#16]
 577 0036 FB78     	 ldrb r3,[r7,#3]
 578 0038 03F00703 	 and r3,r3,#7
 579 003c 0120     	 movs r0,#1
 580 003e 00FA03F3 	 lsl r3,r0,r3
 581 0042 1343     	 orrs r3,r3,r2
 582 0044 0B61     	 str r3,[r1,#16]
 199:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 200:../Libraries/XMCLib/src/xmc_dma.c ****   }
 201:../Libraries/XMCLib/src/xmc_dma.c ****   else
 202:../Libraries/XMCLib/src/xmc_dma.c ****   {
 203:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 204:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 205:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 206:../Libraries/XMCLib/src/xmc_dma.c ****   }
 207:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 208:../Libraries/XMCLib/src/xmc_dma.c **** }
 583              	 .loc 2 208 0
 584 0046 0C37     	 adds r7,r7,#12
 585              	.LCFI59:
 586              	 .cfi_def_cfa_offset 4
 587 0048 BD46     	 mov sp,r7
 588              	.LCFI60:
 589              	 .cfi_def_cfa_register 13
 590              	 
 591 004a 5DF8047B 	 ldr r7,[sp],#4
 592              	.LCFI61:
 593              	 .cfi_restore 7
 594              	 .cfi_def_cfa_offset 0
 595 004e 7047     	 bx lr
 596              	.L31:
 597              	 .align 2
 598              	.L30:
 599 0050 00490050 	 .word 1342195968
 600              	 .cfi_endproc
 601              	.LFE164:
 603              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 604              	 .align 2
 605              	 .global XMC_DMA_DisableRequestLine
 606              	 .thumb
 607              	 .thumb_func
 609              	XMC_DMA_DisableRequestLine:
 610              	.LFB165:
 209:../Libraries/XMCLib/src/xmc_dma.c **** 
 210:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 211:../Libraries/XMCLib/src/xmc_dma.c **** {
 611              	 .loc 2 211 0
 612              	 .cfi_startproc
 613              	 
 614              	 
 615              	 
 616 0000 80B4     	 push {r7}
 617              	.LCFI62:
 618              	 .cfi_def_cfa_offset 4
 619              	 .cfi_offset 7,-4
 620 0002 83B0     	 sub sp,sp,#12
 621              	.LCFI63:
 622              	 .cfi_def_cfa_offset 16
 623 0004 00AF     	 add r7,sp,#0
 624              	.LCFI64:
 625              	 .cfi_def_cfa_register 7
 626 0006 7860     	 str r0,[r7,#4]
 627 0008 0B46     	 mov r3,r1
 628 000a FB70     	 strb r3,[r7,#3]
 212:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 213:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 214:../Libraries/XMCLib/src/xmc_dma.c ****   {
 215:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 216:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 629              	 .loc 2 216 0
 630 000c 0749     	 ldr r1,.L33
 631 000e 074B     	 ldr r3,.L33
 632 0010 1A69     	 ldr r2,[r3,#16]
 633 0012 FB78     	 ldrb r3,[r7,#3]
 634 0014 0120     	 movs r0,#1
 635 0016 00FA03F3 	 lsl r3,r0,r3
 636 001a DB43     	 mvns r3,r3
 637 001c 1340     	 ands r3,r3,r2
 638 001e 0B61     	 str r3,[r1,#16]
 217:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 218:../Libraries/XMCLib/src/xmc_dma.c ****   }
 219:../Libraries/XMCLib/src/xmc_dma.c ****   else
 220:../Libraries/XMCLib/src/xmc_dma.c ****   {
 221:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 222:../Libraries/XMCLib/src/xmc_dma.c ****   }
 223:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 224:../Libraries/XMCLib/src/xmc_dma.c **** }
 639              	 .loc 2 224 0
 640 0020 0C37     	 adds r7,r7,#12
 641              	.LCFI65:
 642              	 .cfi_def_cfa_offset 4
 643 0022 BD46     	 mov sp,r7
 644              	.LCFI66:
 645              	 .cfi_def_cfa_register 13
 646              	 
 647 0024 5DF8047B 	 ldr r7,[sp],#4
 648              	.LCFI67:
 649              	 .cfi_restore 7
 650              	 .cfi_def_cfa_offset 0
 651 0028 7047     	 bx lr
 652              	.L34:
 653 002a 00BF     	 .align 2
 654              	.L33:
 655 002c 00490050 	 .word 1342195968
 656              	 .cfi_endproc
 657              	.LFE165:
 659              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 660              	 .align 2
 661              	 .global XMC_DMA_ClearRequestLine
 662              	 .thumb
 663              	 .thumb_func
 665              	XMC_DMA_ClearRequestLine:
 666              	.LFB166:
 225:../Libraries/XMCLib/src/xmc_dma.c **** 
 226:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 227:../Libraries/XMCLib/src/xmc_dma.c **** {
 667              	 .loc 2 227 0
 668              	 .cfi_startproc
 669              	 
 670              	 
 671              	 
 672 0000 80B4     	 push {r7}
 673              	.LCFI68:
 674              	 .cfi_def_cfa_offset 4
 675              	 .cfi_offset 7,-4
 676 0002 83B0     	 sub sp,sp,#12
 677              	.LCFI69:
 678              	 .cfi_def_cfa_offset 16
 679 0004 00AF     	 add r7,sp,#0
 680              	.LCFI70:
 681              	 .cfi_def_cfa_register 7
 682 0006 7860     	 str r0,[r7,#4]
 683 0008 0B46     	 mov r3,r1
 684 000a FB70     	 strb r3,[r7,#3]
 228:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 229:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 230:../Libraries/XMCLib/src/xmc_dma.c ****   {
 231:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 232:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 685              	 .loc 2 232 0
 686 000c 0B49     	 ldr r1,.L36
 687 000e 0B4B     	 ldr r3,.L36
 688 0010 1A69     	 ldr r2,[r3,#16]
 689 0012 FB78     	 ldrb r3,[r7,#3]
 690 0014 0120     	 movs r0,#1
 691 0016 00FA03F3 	 lsl r3,r0,r3
 692 001a DB43     	 mvns r3,r3
 693 001c 1340     	 ands r3,r3,r2
 694 001e 0B61     	 str r3,[r1,#16]
 233:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 695              	 .loc 2 233 0
 696 0020 0649     	 ldr r1,.L36
 697 0022 064B     	 ldr r3,.L36
 698 0024 1A69     	 ldr r2,[r3,#16]
 699 0026 FB78     	 ldrb r3,[r7,#3]
 700 0028 0120     	 movs r0,#1
 701 002a 00FA03F3 	 lsl r3,r0,r3
 702 002e 1343     	 orrs r3,r3,r2
 703 0030 0B61     	 str r3,[r1,#16]
 234:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 235:../Libraries/XMCLib/src/xmc_dma.c ****   }
 236:../Libraries/XMCLib/src/xmc_dma.c ****   else
 237:../Libraries/XMCLib/src/xmc_dma.c ****   {
 238:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 239:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x100UL << line;
 240:../Libraries/XMCLib/src/xmc_dma.c ****   }
 241:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 242:../Libraries/XMCLib/src/xmc_dma.c **** }
 704              	 .loc 2 242 0
 705 0032 0C37     	 adds r7,r7,#12
 706              	.LCFI71:
 707              	 .cfi_def_cfa_offset 4
 708 0034 BD46     	 mov sp,r7
 709              	.LCFI72:
 710              	 .cfi_def_cfa_register 13
 711              	 
 712 0036 5DF8047B 	 ldr r7,[sp],#4
 713              	.LCFI73:
 714              	 .cfi_restore 7
 715              	 .cfi_def_cfa_offset 0
 716 003a 7047     	 bx lr
 717              	.L37:
 718              	 .align 2
 719              	.L36:
 720 003c 00490050 	 .word 1342195968
 721              	 .cfi_endproc
 722              	.LFE166:
 724              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 725              	 .align 2
 726              	 .global XMC_DMA_GetOverrunStatus
 727              	 .thumb
 728              	 .thumb_func
 730              	XMC_DMA_GetOverrunStatus:
 731              	.LFB167:
 243:../Libraries/XMCLib/src/xmc_dma.c **** 
 244:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 245:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 246:../Libraries/XMCLib/src/xmc_dma.c **** {
 732              	 .loc 2 246 0
 733              	 .cfi_startproc
 734              	 
 735              	 
 736              	 
 737 0000 80B4     	 push {r7}
 738              	.LCFI74:
 739              	 .cfi_def_cfa_offset 4
 740              	 .cfi_offset 7,-4
 741 0002 85B0     	 sub sp,sp,#20
 742              	.LCFI75:
 743              	 .cfi_def_cfa_offset 24
 744 0004 00AF     	 add r7,sp,#0
 745              	.LCFI76:
 746              	 .cfi_def_cfa_register 7
 747 0006 7860     	 str r0,[r7,#4]
 748 0008 0B46     	 mov r3,r1
 749 000a FB70     	 strb r3,[r7,#3]
 247:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 248:../Libraries/XMCLib/src/xmc_dma.c **** 
 249:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 250:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 251:../Libraries/XMCLib/src/xmc_dma.c ****   {
 252:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 253:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 750              	 .loc 2 253 0
 751 000c 094B     	 ldr r3,.L40
 752 000e 1A68     	 ldr r2,[r3]
 753 0010 FB78     	 ldrb r3,[r7,#3]
 754 0012 22FA03F3 	 lsr r3,r2,r3
 755 0016 03F00103 	 and r3,r3,#1
 756 001a 002B     	 cmp r3,#0
 757 001c 14BF     	 ite ne
 758 001e 0123     	 movne r3,#1
 759 0020 0023     	 moveq r3,#0
 760 0022 FB73     	 strb r3,[r7,#15]
 254:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 255:../Libraries/XMCLib/src/xmc_dma.c ****   }
 256:../Libraries/XMCLib/src/xmc_dma.c ****   else
 257:../Libraries/XMCLib/src/xmc_dma.c ****   {
 258:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 259:../Libraries/XMCLib/src/xmc_dma.c ****   }
 260:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 261:../Libraries/XMCLib/src/xmc_dma.c **** 
 262:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 761              	 .loc 2 262 0
 762 0024 FB7B     	 ldrb r3,[r7,#15]
 263:../Libraries/XMCLib/src/xmc_dma.c **** }
 763              	 .loc 2 263 0
 764 0026 1846     	 mov r0,r3
 765 0028 1437     	 adds r7,r7,#20
 766              	.LCFI77:
 767              	 .cfi_def_cfa_offset 4
 768 002a BD46     	 mov sp,r7
 769              	.LCFI78:
 770              	 .cfi_def_cfa_register 13
 771              	 
 772 002c 5DF8047B 	 ldr r7,[sp],#4
 773              	.LCFI79:
 774              	 .cfi_restore 7
 775              	 .cfi_def_cfa_offset 0
 776 0030 7047     	 bx lr
 777              	.L41:
 778 0032 00BF     	 .align 2
 779              	.L40:
 780 0034 00490050 	 .word 1342195968
 781              	 .cfi_endproc
 782              	.LFE167:
 784              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 785              	 .align 2
 786              	 .global XMC_DMA_ClearOverrunStatus
 787              	 .thumb
 788              	 .thumb_func
 790              	XMC_DMA_ClearOverrunStatus:
 791              	.LFB168:
 264:../Libraries/XMCLib/src/xmc_dma.c **** 
 265:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 266:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 267:../Libraries/XMCLib/src/xmc_dma.c **** {
 792              	 .loc 2 267 0
 793              	 .cfi_startproc
 794              	 
 795              	 
 796              	 
 797 0000 80B4     	 push {r7}
 798              	.LCFI80:
 799              	 .cfi_def_cfa_offset 4
 800              	 .cfi_offset 7,-4
 801 0002 83B0     	 sub sp,sp,#12
 802              	.LCFI81:
 803              	 .cfi_def_cfa_offset 16
 804 0004 00AF     	 add r7,sp,#0
 805              	.LCFI82:
 806              	 .cfi_def_cfa_register 7
 807 0006 7860     	 str r0,[r7,#4]
 808 0008 0B46     	 mov r3,r1
 809 000a FB70     	 strb r3,[r7,#3]
 268:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 269:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 270:../Libraries/XMCLib/src/xmc_dma.c ****   {
 271:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 272:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR |= (uint32_t)(0x1UL << line);
 810              	 .loc 2 272 0
 811 000c 0649     	 ldr r1,.L43
 812 000e 064B     	 ldr r3,.L43
 813 0010 5A68     	 ldr r2,[r3,#4]
 814 0012 FB78     	 ldrb r3,[r7,#3]
 815 0014 0120     	 movs r0,#1
 816 0016 00FA03F3 	 lsl r3,r0,r3
 817 001a 1343     	 orrs r3,r3,r2
 818 001c 4B60     	 str r3,[r1,#4]
 273:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 274:../Libraries/XMCLib/src/xmc_dma.c ****   }
 275:../Libraries/XMCLib/src/xmc_dma.c ****   else
 276:../Libraries/XMCLib/src/xmc_dma.c ****   {
 277:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR |= (uint32_t)(0x100UL << line);
 278:../Libraries/XMCLib/src/xmc_dma.c ****   }
 279:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 280:../Libraries/XMCLib/src/xmc_dma.c **** }
 819              	 .loc 2 280 0
 820 001e 0C37     	 adds r7,r7,#12
 821              	.LCFI83:
 822              	 .cfi_def_cfa_offset 4
 823 0020 BD46     	 mov sp,r7
 824              	.LCFI84:
 825              	 .cfi_def_cfa_register 13
 826              	 
 827 0022 5DF8047B 	 ldr r7,[sp],#4
 828              	.LCFI85:
 829              	 .cfi_restore 7
 830              	 .cfi_def_cfa_offset 0
 831 0026 7047     	 bx lr
 832              	.L44:
 833              	 .align 2
 834              	.L43:
 835 0028 00490050 	 .word 1342195968
 836              	 .cfi_endproc
 837              	.LFE168:
 839              	 .section .text.XMC_DMA_CH_Enable,"ax",%progbits
 840              	 .align 2
 841              	 .global XMC_DMA_CH_Enable
 842              	 .thumb
 843              	 .thumb_func
 845              	XMC_DMA_CH_Enable:
 846              	.LFB169:
 281:../Libraries/XMCLib/src/xmc_dma.c **** 
 282:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable DMA channel */
 283:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Enable(XMC_DMA_t *const dma, const uint8_t channel)
 284:../Libraries/XMCLib/src/xmc_dma.c **** {
 847              	 .loc 2 284 0
 848              	 .cfi_startproc
 849              	 
 850              	 
 851              	 
 852 0000 80B4     	 push {r7}
 853              	.LCFI86:
 854              	 .cfi_def_cfa_offset 4
 855              	 .cfi_offset 7,-4
 856 0002 83B0     	 sub sp,sp,#12
 857              	.LCFI87:
 858              	 .cfi_def_cfa_offset 16
 859 0004 00AF     	 add r7,sp,#0
 860              	.LCFI88:
 861              	 .cfi_def_cfa_register 7
 862 0006 7860     	 str r0,[r7,#4]
 863 0008 0B46     	 mov r3,r1
 864 000a FB70     	 strb r3,[r7,#3]
 285:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x101UL << channel);
 865              	 .loc 2 285 0
 866 000c FB78     	 ldrb r3,[r7,#3]
 867 000e 40F20112 	 movw r2,#257
 868 0012 9A40     	 lsls r2,r2,r3
 869 0014 7B68     	 ldr r3,[r7,#4]
 870 0016 C3F8A023 	 str r2,[r3,#928]
 286:../Libraries/XMCLib/src/xmc_dma.c **** }
 871              	 .loc 2 286 0
 872 001a 0C37     	 adds r7,r7,#12
 873              	.LCFI89:
 874              	 .cfi_def_cfa_offset 4
 875 001c BD46     	 mov sp,r7
 876              	.LCFI90:
 877              	 .cfi_def_cfa_register 13
 878              	 
 879 001e 5DF8047B 	 ldr r7,[sp],#4
 880              	.LCFI91:
 881              	 .cfi_restore 7
 882              	 .cfi_def_cfa_offset 0
 883 0022 7047     	 bx lr
 884              	 .cfi_endproc
 885              	.LFE169:
 887              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 888              	 .align 2
 889              	 .global XMC_DMA_CH_Disable
 890              	 .thumb
 891              	 .thumb_func
 893              	XMC_DMA_CH_Disable:
 894              	.LFB170:
 287:../Libraries/XMCLib/src/xmc_dma.c **** 
 288:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 289:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 290:../Libraries/XMCLib/src/xmc_dma.c **** {
 895              	 .loc 2 290 0
 896              	 .cfi_startproc
 897              	 
 898              	 
 899              	 
 900 0000 80B4     	 push {r7}
 901              	.LCFI92:
 902              	 .cfi_def_cfa_offset 4
 903              	 .cfi_offset 7,-4
 904 0002 83B0     	 sub sp,sp,#12
 905              	.LCFI93:
 906              	 .cfi_def_cfa_offset 16
 907 0004 00AF     	 add r7,sp,#0
 908              	.LCFI94:
 909              	 .cfi_def_cfa_register 7
 910 0006 7860     	 str r0,[r7,#4]
 911 0008 0B46     	 mov r3,r1
 912 000a FB70     	 strb r3,[r7,#3]
 291:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 913              	 .loc 2 291 0
 914 000c FB78     	 ldrb r3,[r7,#3]
 915 000e 4FF48072 	 mov r2,#256
 916 0012 9A40     	 lsls r2,r2,r3
 917 0014 7B68     	 ldr r3,[r7,#4]
 918 0016 C3F8A023 	 str r2,[r3,#928]
 292:../Libraries/XMCLib/src/xmc_dma.c ****   while((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 919              	 .loc 2 292 0
 920 001a 00BF     	 nop
 921              	.L47:
 922              	 .loc 2 292 0 is_stmt 0 discriminator 1
 923 001c 7B68     	 ldr r3,[r7,#4]
 924 001e D3F8A023 	 ldr r2,[r3,#928]
 925 0022 FB78     	 ldrb r3,[r7,#3]
 926 0024 22FA03F3 	 lsr r3,r2,r3
 927 0028 03F00103 	 and r3,r3,#1
 928 002c 002B     	 cmp r3,#0
 929 002e F5D1     	 bne .L47
 293:../Libraries/XMCLib/src/xmc_dma.c ****   {
 294:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 295:../Libraries/XMCLib/src/xmc_dma.c ****   }
 296:../Libraries/XMCLib/src/xmc_dma.c **** }
 930              	 .loc 2 296 0 is_stmt 1
 931 0030 0C37     	 adds r7,r7,#12
 932              	.LCFI95:
 933              	 .cfi_def_cfa_offset 4
 934 0032 BD46     	 mov sp,r7
 935              	.LCFI96:
 936              	 .cfi_def_cfa_register 13
 937              	 
 938 0034 5DF8047B 	 ldr r7,[sp],#4
 939              	.LCFI97:
 940              	 .cfi_restore 7
 941              	 .cfi_def_cfa_offset 0
 942 0038 7047     	 bx lr
 943              	 .cfi_endproc
 944              	.LFE170:
 946 003a 00BF     	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 947              	 .align 2
 948              	 .global XMC_DMA_CH_IsEnabled
 949              	 .thumb
 950              	 .thumb_func
 952              	XMC_DMA_CH_IsEnabled:
 953              	.LFB171:
 297:../Libraries/XMCLib/src/xmc_dma.c **** 
 298:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 299:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 300:../Libraries/XMCLib/src/xmc_dma.c **** {
 954              	 .loc 2 300 0
 955              	 .cfi_startproc
 956              	 
 957              	 
 958              	 
 959 0000 80B4     	 push {r7}
 960              	.LCFI98:
 961              	 .cfi_def_cfa_offset 4
 962              	 .cfi_offset 7,-4
 963 0002 83B0     	 sub sp,sp,#12
 964              	.LCFI99:
 965              	 .cfi_def_cfa_offset 16
 966 0004 00AF     	 add r7,sp,#0
 967              	.LCFI100:
 968              	 .cfi_def_cfa_register 7
 969 0006 7860     	 str r0,[r7,#4]
 970 0008 0B46     	 mov r3,r1
 971 000a FB70     	 strb r3,[r7,#3]
 301:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 972              	 .loc 2 301 0
 973 000c 7B68     	 ldr r3,[r7,#4]
 974 000e D3F8A023 	 ldr r2,[r3,#928]
 975 0012 FB78     	 ldrb r3,[r7,#3]
 976 0014 22FA03F3 	 lsr r3,r2,r3
 977 0018 03F00103 	 and r3,r3,#1
 978 001c 002B     	 cmp r3,#0
 979 001e 14BF     	 ite ne
 980 0020 0123     	 movne r3,#1
 981 0022 0023     	 moveq r3,#0
 982 0024 DBB2     	 uxtb r3,r3
 302:../Libraries/XMCLib/src/xmc_dma.c **** }
 983              	 .loc 2 302 0
 984 0026 1846     	 mov r0,r3
 985 0028 0C37     	 adds r7,r7,#12
 986              	.LCFI101:
 987              	 .cfi_def_cfa_offset 4
 988 002a BD46     	 mov sp,r7
 989              	.LCFI102:
 990              	 .cfi_def_cfa_register 13
 991              	 
 992 002c 5DF8047B 	 ldr r7,[sp],#4
 993              	.LCFI103:
 994              	 .cfi_restore 7
 995              	 .cfi_def_cfa_offset 0
 996 0030 7047     	 bx lr
 997              	 .cfi_endproc
 998              	.LFE171:
 1000 0032 00BF     	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 1001              	 .align 2
 1002              	 .global XMC_DMA_CH_Init
 1003              	 .thumb
 1004              	 .thumb_func
 1006              	XMC_DMA_CH_Init:
 1007              	.LFB172:
 303:../Libraries/XMCLib/src/xmc_dma.c **** 
 304:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 305:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 306:../Libraries/XMCLib/src/xmc_dma.c **** {
 1008              	 .loc 2 306 0
 1009              	 .cfi_startproc
 1010              	 
 1011              	 
 1012 0000 80B5     	 push {r7,lr}
 1013              	.LCFI104:
 1014              	 .cfi_def_cfa_offset 8
 1015              	 .cfi_offset 7,-8
 1016              	 .cfi_offset 14,-4
 1017 0002 86B0     	 sub sp,sp,#24
 1018              	.LCFI105:
 1019              	 .cfi_def_cfa_offset 32
 1020 0004 00AF     	 add r7,sp,#0
 1021              	.LCFI106:
 1022              	 .cfi_def_cfa_register 7
 1023 0006 F860     	 str r0,[r7,#12]
 1024 0008 0B46     	 mov r3,r1
 1025 000a 7A60     	 str r2,[r7,#4]
 1026 000c FB72     	 strb r3,[r7,#11]
 307:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 308:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 309:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 310:../Libraries/XMCLib/src/xmc_dma.c **** 
 311:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 1027              	 .loc 2 311 0
 1028 000e F868     	 ldr r0,[r7,#12]
 1029 0010 FFF7FEFF 	 bl XMC_DMA_IsEnabled
 1030 0014 0346     	 mov r3,r0
 1031 0016 002B     	 cmp r3,#0
 1032 0018 00F0DB81 	 beq .L51
 312:../Libraries/XMCLib/src/xmc_dma.c ****   {
 313:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 1033              	 .loc 2 313 0
 1034 001c FB7A     	 ldrb r3,[r7,#11]
 1035 001e F868     	 ldr r0,[r7,#12]
 1036 0020 1946     	 mov r1,r3
 1037 0022 FFF7FEFF 	 bl XMC_DMA_CH_IsEnabled
 1038 0026 0346     	 mov r3,r0
 1039 0028 83F00103 	 eor r3,r3,#1
 1040 002c DBB2     	 uxtb r3,r3
 1041 002e 002B     	 cmp r3,#0
 1042 0030 00F0CC81 	 beq .L52
 314:../Libraries/XMCLib/src/xmc_dma.c ****     {
 315:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 1043              	 .loc 2 315 0
 1044 0034 FB7A     	 ldrb r3,[r7,#11]
 1045 0036 7A68     	 ldr r2,[r7,#4]
 1046 0038 5268     	 ldr r2,[r2,#4]
 1047 003a F968     	 ldr r1,[r7,#12]
 1048 003c 5820     	 movs r0,#88
 1049 003e 00FB03F3 	 mul r3,r0,r3
 1050 0042 0B44     	 add r3,r3,r1
 1051 0044 1A60     	 str r2,[r3]
 316:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 1052              	 .loc 2 316 0
 1053 0046 FB7A     	 ldrb r3,[r7,#11]
 1054 0048 7A68     	 ldr r2,[r7,#4]
 1055 004a 9268     	 ldr r2,[r2,#8]
 1056 004c F968     	 ldr r1,[r7,#12]
 1057 004e 5820     	 movs r0,#88
 1058 0050 00FB03F3 	 mul r3,r0,r3
 1059 0054 0B44     	 add r3,r3,r1
 1060 0056 0833     	 adds r3,r3,#8
 1061 0058 1A60     	 str r2,[r3]
 317:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 1062              	 .loc 2 317 0
 1063 005a FB7A     	 ldrb r3,[r7,#11]
 1064 005c 7A68     	 ldr r2,[r7,#4]
 1065 005e D268     	 ldr r2,[r2,#12]
 1066 0060 1046     	 mov r0,r2
 1067 0062 FA68     	 ldr r2,[r7,#12]
 1068 0064 5821     	 movs r1,#88
 1069 0066 01FB03F3 	 mul r3,r1,r3
 1070 006a 1344     	 add r3,r3,r2
 1071 006c 1033     	 adds r3,r3,#16
 1072 006e 1860     	 str r0,[r3]
 318:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 1073              	 .loc 2 318 0
 1074 0070 FB7A     	 ldrb r3,[r7,#11]
 1075 0072 7A68     	 ldr r2,[r7,#4]
 1076 0074 128B     	 ldrh r2,[r2,#24]
 1077 0076 1046     	 mov r0,r2
 1078 0078 FA68     	 ldr r2,[r7,#12]
 1079 007a 5821     	 movs r1,#88
 1080 007c 01FB03F3 	 mul r3,r1,r3
 1081 0080 1344     	 add r3,r3,r2
 1082 0082 1833     	 adds r3,r3,#24
 1083 0084 5860     	 str r0,[r3,#4]
 319:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 1084              	 .loc 2 319 0
 1085 0086 FB7A     	 ldrb r3,[r7,#11]
 1086 0088 7A68     	 ldr r2,[r7,#4]
 1087 008a 1268     	 ldr r2,[r2]
 1088 008c F968     	 ldr r1,[r7,#12]
 1089 008e 5820     	 movs r0,#88
 1090 0090 00FB03F3 	 mul r3,r0,r3
 1091 0094 0B44     	 add r3,r3,r1
 1092 0096 1833     	 adds r3,r3,#24
 1093 0098 1A60     	 str r2,[r3]
 320:../Libraries/XMCLib/src/xmc_dma.c **** 
 321:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 1094              	 .loc 2 321 0
 1095 009a FB7A     	 ldrb r3,[r7,#11]
 1096 009c 7A68     	 ldr r2,[r7,#4]
 1097 009e D27E     	 ldrb r2,[r2,#27]
 1098 00a0 42F44062 	 orr r2,r2,#3072
 1099 00a4 F968     	 ldr r1,[r7,#12]
 1100 00a6 5820     	 movs r0,#88
 1101 00a8 00FB03F3 	 mul r3,r0,r3
 1102 00ac 0B44     	 add r3,r3,r1
 1103 00ae 4033     	 adds r3,r3,#64
 1104 00b0 1A60     	 str r2,[r3]
 322:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 323:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 324:../Libraries/XMCLib/src/xmc_dma.c **** 
 325:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 1105              	 .loc 2 325 0
 1106 00b2 FB68     	 ldr r3,[r7,#12]
 1107 00b4 A64A     	 ldr r2,.L74
 1108 00b6 9342     	 cmp r3,r2
 1109 00b8 16D1     	 bne .L53
 1110              	 .loc 2 325 0 is_stmt 0 discriminator 1
 1111 00ba FB7A     	 ldrb r3,[r7,#11]
 1112 00bc 012B     	 cmp r3,#1
 1113 00be 13D8     	 bhi .L53
 326:../Libraries/XMCLib/src/xmc_dma.c ****       {
 327:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 328:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 1114              	 .loc 2 328 0 is_stmt 1
 1115 00c0 FB7A     	 ldrb r3,[r7,#11]
 1116 00c2 7A68     	 ldr r2,[r7,#4]
 1117 00c4 1269     	 ldr r2,[r2,#16]
 1118 00c6 F968     	 ldr r1,[r7,#12]
 1119 00c8 5820     	 movs r0,#88
 1120 00ca 00FB03F3 	 mul r3,r0,r3
 1121 00ce 0B44     	 add r3,r3,r1
 1122 00d0 4833     	 adds r3,r3,#72
 1123 00d2 1A60     	 str r2,[r3]
 329:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 1124              	 .loc 2 329 0
 1125 00d4 FB7A     	 ldrb r3,[r7,#11]
 1126 00d6 7A68     	 ldr r2,[r7,#4]
 1127 00d8 5269     	 ldr r2,[r2,#20]
 1128 00da F968     	 ldr r1,[r7,#12]
 1129 00dc 5820     	 movs r0,#88
 1130 00de 00FB03F3 	 mul r3,r0,r3
 1131 00e2 0B44     	 add r3,r3,r1
 1132 00e4 5033     	 adds r3,r3,#80
 1133 00e6 1A60     	 str r2,[r3]
 1134              	.L53:
 330:../Libraries/XMCLib/src/xmc_dma.c ****       }
 331:../Libraries/XMCLib/src/xmc_dma.c **** 
 332:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 1135              	 .loc 2 332 0
 1136 00e8 7B68     	 ldr r3,[r7,#4]
 1137 00ea 1B8C     	 ldrh r3,[r3,#32]
 1138 00ec 002B     	 cmp r3,#0
 1139 00ee 44D1     	 bne .L54
 333:../Libraries/XMCLib/src/xmc_dma.c ****       {
 334:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 335:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 1140              	 .loc 2 335 0
 1141 00f0 7B68     	 ldr r3,[r7,#4]
 1142 00f2 9B78     	 ldrb r3,[r3,#2]
 1143 00f4 03F07003 	 and r3,r3,#112
 1144 00f8 DBB2     	 uxtb r3,r3
 1145 00fa 102B     	 cmp r3,#16
 1146 00fc 06D0     	 beq .L55
 336:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1147              	 .loc 2 336 0 discriminator 1
 1148 00fe 7B68     	 ldr r3,[r7,#4]
 1149 0100 9B78     	 ldrb r3,[r3,#2]
 1150 0102 03F07003 	 and r3,r3,#112
 1151 0106 DBB2     	 uxtb r3,r3
 335:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1152              	 .loc 2 335 0 discriminator 1
 1153 0108 302B     	 cmp r3,#48
 1154 010a 36D1     	 bne .L54
 1155              	.L55:
 337:../Libraries/XMCLib/src/xmc_dma.c ****         {
 338:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 339:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 340:../Libraries/XMCLib/src/xmc_dma.c ****           {
 341:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 342:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1156              	 .loc 2 342 0
 1157 010c 7B68     	 ldr r3,[r7,#4]
 1158 010e 93F82230 	 ldrb r3,[r3,#34]
 1159 0112 03F00703 	 and r3,r3,#7
 1160 0116 BB75     	 strb r3,[r7,#22]
 343:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 344:../Libraries/XMCLib/src/xmc_dma.c ****           }
 345:../Libraries/XMCLib/src/xmc_dma.c ****           else
 346:../Libraries/XMCLib/src/xmc_dma.c ****           {
 347:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 348:../Libraries/XMCLib/src/xmc_dma.c ****           }
 349:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 350:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1161              	 .loc 2 350 0
 1162 0118 7B68     	 ldr r3,[r7,#4]
 1163 011a 93F82230 	 ldrb r3,[r3,#34]
 1164 011e 1B09     	 lsrs r3,r3,#4
 1165 0120 7B75     	 strb r3,[r7,#21]
 351:../Libraries/XMCLib/src/xmc_dma.c **** 
 352:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 1166              	 .loc 2 352 0
 1167 0122 FB7A     	 ldrb r3,[r7,#11]
 1168 0124 FA7A     	 ldrb r2,[r7,#11]
 1169 0126 F968     	 ldr r1,[r7,#12]
 1170 0128 5820     	 movs r0,#88
 1171 012a 00FB02F2 	 mul r2,r0,r2
 1172 012e 0A44     	 add r2,r2,r1
 1173 0130 4032     	 adds r2,r2,#64
 1174 0132 5168     	 ldr r1,[r2,#4]
 1175 0134 BA7D     	 ldrb r2,[r7,#22]
 1176 0136 D202     	 lsls r2,r2,#11
 1177 0138 0A43     	 orrs r2,r2,r1
 1178 013a F968     	 ldr r1,[r7,#12]
 1179 013c 5820     	 movs r0,#88
 1180 013e 00FB03F3 	 mul r3,r0,r3
 1181 0142 0B44     	 add r3,r3,r1
 1182 0144 4033     	 adds r3,r3,#64
 1183 0146 5A60     	 str r2,[r3,#4]
 353:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1184              	 .loc 2 353 0
 1185 0148 BA7D     	 ldrb r2,[r7,#22]
 1186 014a 7B7D     	 ldrb r3,[r7,#21]
 1187 014c F868     	 ldr r0,[r7,#12]
 1188 014e 1146     	 mov r1,r2
 1189 0150 1A46     	 mov r2,r3
 1190 0152 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 354:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 1191              	 .loc 2 354 0
 1192 0156 FB7A     	 ldrb r3,[r7,#11]
 1193 0158 FA7A     	 ldrb r2,[r7,#11]
 1194 015a F968     	 ldr r1,[r7,#12]
 1195 015c 5820     	 movs r0,#88
 1196 015e 00FB02F2 	 mul r2,r0,r2
 1197 0162 0A44     	 add r2,r2,r1
 1198 0164 4032     	 adds r2,r2,#64
 1199 0166 1268     	 ldr r2,[r2]
 1200 0168 22F48062 	 bic r2,r2,#1024
 1201 016c F968     	 ldr r1,[r7,#12]
 1202 016e 5820     	 movs r0,#88
 1203 0170 00FB03F3 	 mul r3,r0,r3
 1204 0174 0B44     	 add r3,r3,r1
 1205 0176 4033     	 adds r3,r3,#64
 1206 0178 1A60     	 str r2,[r3]
 1207              	.L54:
 355:../Libraries/XMCLib/src/xmc_dma.c ****         }
 356:../Libraries/XMCLib/src/xmc_dma.c ****       }
 357:../Libraries/XMCLib/src/xmc_dma.c **** 
 358:../Libraries/XMCLib/src/xmc_dma.c **** 
 359:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 1208              	 .loc 2 359 0
 1209 017a 7B68     	 ldr r3,[r7,#4]
 1210 017c 9B8B     	 ldrh r3,[r3,#28]
 1211 017e 002B     	 cmp r3,#0
 1212 0180 42D1     	 bne .L56
 360:../Libraries/XMCLib/src/xmc_dma.c ****       {
 361:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 1213              	 .loc 2 361 0
 1214 0182 7B68     	 ldr r3,[r7,#4]
 1215 0184 9B78     	 ldrb r3,[r3,#2]
 1216 0186 03F07003 	 and r3,r3,#112
 1217 018a DBB2     	 uxtb r3,r3
 1218 018c 202B     	 cmp r3,#32
 1219 018e 06D0     	 beq .L57
 362:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1220              	 .loc 2 362 0 discriminator 1
 1221 0190 7B68     	 ldr r3,[r7,#4]
 1222 0192 9B78     	 ldrb r3,[r3,#2]
 1223 0194 03F07003 	 and r3,r3,#112
 1224 0198 DBB2     	 uxtb r3,r3
 361:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1225              	 .loc 2 361 0 discriminator 1
 1226 019a 302B     	 cmp r3,#48
 1227 019c 34D1     	 bne .L56
 1228              	.L57:
 363:../Libraries/XMCLib/src/xmc_dma.c ****         {
 364:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 365:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 366:../Libraries/XMCLib/src/xmc_dma.c ****           {
 367:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 368:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1229              	 .loc 2 368 0
 1230 019e 7B68     	 ldr r3,[r7,#4]
 1231 01a0 9B7F     	 ldrb r3,[r3,#30]
 1232 01a2 03F00703 	 and r3,r3,#7
 1233 01a6 BB75     	 strb r3,[r7,#22]
 369:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 370:../Libraries/XMCLib/src/xmc_dma.c ****           }
 371:../Libraries/XMCLib/src/xmc_dma.c ****           else
 372:../Libraries/XMCLib/src/xmc_dma.c ****           {
 373:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 374:../Libraries/XMCLib/src/xmc_dma.c ****           }
 375:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 376:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1234              	 .loc 2 376 0
 1235 01a8 7B68     	 ldr r3,[r7,#4]
 1236 01aa 9B7F     	 ldrb r3,[r3,#30]
 1237 01ac 1B09     	 lsrs r3,r3,#4
 1238 01ae 7B75     	 strb r3,[r7,#21]
 377:../Libraries/XMCLib/src/xmc_dma.c **** 
 378:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 1239              	 .loc 2 378 0
 1240 01b0 FB7A     	 ldrb r3,[r7,#11]
 1241 01b2 FA7A     	 ldrb r2,[r7,#11]
 1242 01b4 F968     	 ldr r1,[r7,#12]
 1243 01b6 5820     	 movs r0,#88
 1244 01b8 00FB02F2 	 mul r2,r0,r2
 1245 01bc 0A44     	 add r2,r2,r1
 1246 01be 4032     	 adds r2,r2,#64
 1247 01c0 5168     	 ldr r1,[r2,#4]
 1248 01c2 BA7D     	 ldrb r2,[r7,#22]
 1249 01c4 D201     	 lsls r2,r2,#7
 1250 01c6 0A43     	 orrs r2,r2,r1
 1251 01c8 F968     	 ldr r1,[r7,#12]
 1252 01ca 5820     	 movs r0,#88
 1253 01cc 00FB03F3 	 mul r3,r0,r3
 1254 01d0 0B44     	 add r3,r3,r1
 1255 01d2 4033     	 adds r3,r3,#64
 1256 01d4 5A60     	 str r2,[r3,#4]
 379:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1257              	 .loc 2 379 0
 1258 01d6 BA7D     	 ldrb r2,[r7,#22]
 1259 01d8 7B7D     	 ldrb r3,[r7,#21]
 1260 01da F868     	 ldr r0,[r7,#12]
 1261 01dc 1146     	 mov r1,r2
 1262 01de 1A46     	 mov r2,r3
 1263 01e0 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 380:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 1264              	 .loc 2 380 0
 1265 01e4 FB7A     	 ldrb r3,[r7,#11]
 1266 01e6 FA7A     	 ldrb r2,[r7,#11]
 1267 01e8 F968     	 ldr r1,[r7,#12]
 1268 01ea 5820     	 movs r0,#88
 1269 01ec 00FB02F2 	 mul r2,r0,r2
 1270 01f0 0A44     	 add r2,r2,r1
 1271 01f2 4032     	 adds r2,r2,#64
 1272 01f4 1268     	 ldr r2,[r2]
 1273 01f6 22F40062 	 bic r2,r2,#2048
 1274 01fa F968     	 ldr r1,[r7,#12]
 1275 01fc 5820     	 movs r0,#88
 1276 01fe 00FB03F3 	 mul r3,r0,r3
 1277 0202 0B44     	 add r3,r3,r1
 1278 0204 4033     	 adds r3,r3,#64
 1279 0206 1A60     	 str r2,[r3]
 1280              	.L56:
 381:../Libraries/XMCLib/src/xmc_dma.c ****         }
 382:../Libraries/XMCLib/src/xmc_dma.c ****       }
 383:../Libraries/XMCLib/src/xmc_dma.c ****       
 384:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 1281              	 .loc 2 384 0
 1282 0208 FB7A     	 ldrb r3,[r7,#11]
 1283 020a F868     	 ldr r0,[r7,#12]
 1284 020c 1946     	 mov r1,r3
 1285 020e 1F22     	 movs r2,#31
 1286 0210 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 385:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFE
 386:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 387:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 388:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 389:../Libraries/XMCLib/src/xmc_dma.c **** 
 390:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 1287              	 .loc 2 390 0
 1288 0214 7B68     	 ldr r3,[r7,#4]
 1289 0216 9B7E     	 ldrb r3,[r3,#26]
 1290 0218 082B     	 cmp r3,#8
 1291 021a 00F2D380 	 bhi .L73
 1292 021e 01A2     	 adr r2,.L60
 1293 0220 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1294              	 .p2align 2
 1295              	.L60:
 1296 0224 C5030000 	 .word .L73+1
 1297 0228 49020000 	 .word .L61+1
 1298 022c 6F020000 	 .word .L62+1
 1299 0230 95020000 	 .word .L63+1
 1300 0234 BB020000 	 .word .L64+1
 1301 0238 E1020000 	 .word .L65+1
 1302 023c 2B030000 	 .word .L66+1
 1303 0240 55030000 	 .word .L67+1
 1304 0244 9F030000 	 .word .L68+1
 1305              	 .p2align 1
 1306              	.L61:
 391:../Libraries/XMCLib/src/xmc_dma.c ****       {
 392:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 393:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 394:../Libraries/XMCLib/src/xmc_dma.c **** 
 395:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 396:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1307              	 .loc 2 396 0
 1308 0248 FB7A     	 ldrb r3,[r7,#11]
 1309 024a FA7A     	 ldrb r2,[r7,#11]
 1310 024c F968     	 ldr r1,[r7,#12]
 1311 024e 5820     	 movs r0,#88
 1312 0250 00FB02F2 	 mul r2,r0,r2
 1313 0254 0A44     	 add r2,r2,r1
 1314 0256 4032     	 adds r2,r2,#64
 1315 0258 1268     	 ldr r2,[r2]
 1316 025a 42F00042 	 orr r2,r2,#-2147483648
 1317 025e F968     	 ldr r1,[r7,#12]
 1318 0260 5820     	 movs r0,#88
 1319 0262 00FB03F3 	 mul r3,r0,r3
 1320 0266 0B44     	 add r3,r3,r1
 1321 0268 4033     	 adds r3,r3,#64
 1322 026a 1A60     	 str r2,[r3]
 397:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1323              	 .loc 2 397 0
 1324 026c ABE0     	 b .L69
 1325              	.L62:
 398:../Libraries/XMCLib/src/xmc_dma.c **** 
 399:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 400:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1326              	 .loc 2 400 0
 1327 026e FB7A     	 ldrb r3,[r7,#11]
 1328 0270 FA7A     	 ldrb r2,[r7,#11]
 1329 0272 F968     	 ldr r1,[r7,#12]
 1330 0274 5820     	 movs r0,#88
 1331 0276 00FB02F2 	 mul r2,r0,r2
 1332 027a 0A44     	 add r2,r2,r1
 1333 027c 4032     	 adds r2,r2,#64
 1334 027e 1268     	 ldr r2,[r2]
 1335 0280 42F08042 	 orr r2,r2,#1073741824
 1336 0284 F968     	 ldr r1,[r7,#12]
 1337 0286 5820     	 movs r0,#88
 1338 0288 00FB03F3 	 mul r3,r0,r3
 1339 028c 0B44     	 add r3,r3,r1
 1340 028e 4033     	 adds r3,r3,#64
 1341 0290 1A60     	 str r2,[r3]
 401:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1342              	 .loc 2 401 0
 1343 0292 98E0     	 b .L69
 1344              	.L63:
 402:../Libraries/XMCLib/src/xmc_dma.c **** 
 403:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 404:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 1345              	 .loc 2 404 0
 1346 0294 FB7A     	 ldrb r3,[r7,#11]
 1347 0296 FA7A     	 ldrb r2,[r7,#11]
 1348 0298 F968     	 ldr r1,[r7,#12]
 1349 029a 5820     	 movs r0,#88
 1350 029c 00FB02F2 	 mul r2,r0,r2
 1351 02a0 0A44     	 add r2,r2,r1
 1352 02a2 4032     	 adds r2,r2,#64
 1353 02a4 1268     	 ldr r2,[r2]
 1354 02a6 42F04042 	 orr r2,r2,#-1073741824
 1355 02aa F968     	 ldr r1,[r7,#12]
 1356 02ac 5820     	 movs r0,#88
 1357 02ae 00FB03F3 	 mul r3,r0,r3
 1358 02b2 0B44     	 add r3,r3,r1
 1359 02b4 4033     	 adds r3,r3,#64
 1360 02b6 1A60     	 str r2,[r3]
 405:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 406:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1361              	 .loc 2 406 0
 1362 02b8 85E0     	 b .L69
 1363              	.L64:
 407:../Libraries/XMCLib/src/xmc_dma.c **** 
 408:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 409:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1364              	 .loc 2 409 0
 1365 02ba FB7A     	 ldrb r3,[r7,#11]
 1366 02bc FA7A     	 ldrb r2,[r7,#11]
 1367 02be F968     	 ldr r1,[r7,#12]
 1368 02c0 5820     	 movs r0,#88
 1369 02c2 00FB02F2 	 mul r2,r0,r2
 1370 02c6 0A44     	 add r2,r2,r1
 1371 02c8 1832     	 adds r2,r2,#24
 1372 02ca 1268     	 ldr r2,[r2]
 1373 02cc 42F00062 	 orr r2,r2,#134217728
 1374 02d0 F968     	 ldr r1,[r7,#12]
 1375 02d2 5820     	 movs r0,#88
 1376 02d4 00FB03F3 	 mul r3,r0,r3
 1377 02d8 0B44     	 add r3,r3,r1
 1378 02da 1833     	 adds r3,r3,#24
 1379 02dc 1A60     	 str r2,[r3]
 410:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1380              	 .loc 2 410 0
 1381 02de 72E0     	 b .L69
 1382              	.L65:
 411:../Libraries/XMCLib/src/xmc_dma.c **** 
 412:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 413:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1383              	 .loc 2 413 0
 1384 02e0 FB7A     	 ldrb r3,[r7,#11]
 1385 02e2 FA7A     	 ldrb r2,[r7,#11]
 1386 02e4 F968     	 ldr r1,[r7,#12]
 1387 02e6 5820     	 movs r0,#88
 1388 02e8 00FB02F2 	 mul r2,r0,r2
 1389 02ec 0A44     	 add r2,r2,r1
 1390 02ee 4032     	 adds r2,r2,#64
 1391 02f0 1268     	 ldr r2,[r2]
 1392 02f2 42F08042 	 orr r2,r2,#1073741824
 1393 02f6 F968     	 ldr r1,[r7,#12]
 1394 02f8 5820     	 movs r0,#88
 1395 02fa 00FB03F3 	 mul r3,r0,r3
 1396 02fe 0B44     	 add r3,r3,r1
 1397 0300 4033     	 adds r3,r3,#64
 1398 0302 1A60     	 str r2,[r3]
 414:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1399              	 .loc 2 414 0
 1400 0304 FB7A     	 ldrb r3,[r7,#11]
 1401 0306 FA7A     	 ldrb r2,[r7,#11]
 1402 0308 F968     	 ldr r1,[r7,#12]
 1403 030a 5820     	 movs r0,#88
 1404 030c 00FB02F2 	 mul r2,r0,r2
 1405 0310 0A44     	 add r2,r2,r1
 1406 0312 1832     	 adds r2,r2,#24
 1407 0314 1268     	 ldr r2,[r2]
 1408 0316 42F00062 	 orr r2,r2,#134217728
 1409 031a F968     	 ldr r1,[r7,#12]
 1410 031c 5820     	 movs r0,#88
 1411 031e 00FB03F3 	 mul r3,r0,r3
 1412 0322 0B44     	 add r3,r3,r1
 1413 0324 1833     	 adds r3,r3,#24
 1414 0326 1A60     	 str r2,[r3]
 415:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1415              	 .loc 2 415 0
 1416 0328 4DE0     	 b .L69
 1417              	.L66:
 416:../Libraries/XMCLib/src/xmc_dma.c **** 
 417:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 418:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1418              	 .loc 2 418 0
 1419 032a FB7A     	 ldrb r3,[r7,#11]
 1420 032c FA7A     	 ldrb r2,[r7,#11]
 1421 032e F968     	 ldr r1,[r7,#12]
 1422 0330 5820     	 movs r0,#88
 1423 0332 00FB02F2 	 mul r2,r0,r2
 1424 0336 0A44     	 add r2,r2,r1
 1425 0338 1832     	 adds r2,r2,#24
 1426 033a 1268     	 ldr r2,[r2]
 1427 033c 42F08052 	 orr r2,r2,#268435456
 1428 0340 F968     	 ldr r1,[r7,#12]
 1429 0342 5820     	 movs r0,#88
 1430 0344 00FB03F3 	 mul r3,r0,r3
 1431 0348 0B44     	 add r3,r3,r1
 1432 034a 1833     	 adds r3,r3,#24
 1433 034c 1A60     	 str r2,[r3]
 419:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1434              	 .loc 2 419 0
 1435 034e 3AE0     	 b .L69
 1436              	.L75:
 1437              	 .align 2
 1438              	.L74:
 1439 0350 00400150 	 .word 1342259200
 1440              	.L67:
 420:../Libraries/XMCLib/src/xmc_dma.c **** 
 421:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 422:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1441              	 .loc 2 422 0
 1442 0354 FB7A     	 ldrb r3,[r7,#11]
 1443 0356 FA7A     	 ldrb r2,[r7,#11]
 1444 0358 F968     	 ldr r1,[r7,#12]
 1445 035a 5820     	 movs r0,#88
 1446 035c 00FB02F2 	 mul r2,r0,r2
 1447 0360 0A44     	 add r2,r2,r1
 1448 0362 4032     	 adds r2,r2,#64
 1449 0364 1268     	 ldr r2,[r2]
 1450 0366 42F00042 	 orr r2,r2,#-2147483648
 1451 036a F968     	 ldr r1,[r7,#12]
 1452 036c 5820     	 movs r0,#88
 1453 036e 00FB03F3 	 mul r3,r0,r3
 1454 0372 0B44     	 add r3,r3,r1
 1455 0374 4033     	 adds r3,r3,#64
 1456 0376 1A60     	 str r2,[r3]
 423:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1457              	 .loc 2 423 0
 1458 0378 FB7A     	 ldrb r3,[r7,#11]
 1459 037a FA7A     	 ldrb r2,[r7,#11]
 1460 037c F968     	 ldr r1,[r7,#12]
 1461 037e 5820     	 movs r0,#88
 1462 0380 00FB02F2 	 mul r2,r0,r2
 1463 0384 0A44     	 add r2,r2,r1
 1464 0386 1832     	 adds r2,r2,#24
 1465 0388 1268     	 ldr r2,[r2]
 1466 038a 42F08052 	 orr r2,r2,#268435456
 1467 038e F968     	 ldr r1,[r7,#12]
 1468 0390 5820     	 movs r0,#88
 1469 0392 00FB03F3 	 mul r3,r0,r3
 1470 0396 0B44     	 add r3,r3,r1
 1471 0398 1833     	 adds r3,r3,#24
 1472 039a 1A60     	 str r2,[r3]
 424:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1473              	 .loc 2 424 0
 1474 039c 13E0     	 b .L69
 1475              	.L68:
 425:../Libraries/XMCLib/src/xmc_dma.c **** 
 426:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 427:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 1476              	 .loc 2 427 0
 1477 039e FB7A     	 ldrb r3,[r7,#11]
 1478 03a0 FA7A     	 ldrb r2,[r7,#11]
 1479 03a2 F968     	 ldr r1,[r7,#12]
 1480 03a4 5820     	 movs r0,#88
 1481 03a6 00FB02F2 	 mul r2,r0,r2
 1482 03aa 0A44     	 add r2,r2,r1
 1483 03ac 1832     	 adds r2,r2,#24
 1484 03ae 1268     	 ldr r2,[r2]
 1485 03b0 42F0C052 	 orr r2,r2,#402653184
 1486 03b4 F968     	 ldr r1,[r7,#12]
 1487 03b6 5820     	 movs r0,#88
 1488 03b8 00FB03F3 	 mul r3,r0,r3
 1489 03bc 0B44     	 add r3,r3,r1
 1490 03be 1833     	 adds r3,r3,#24
 1491 03c0 1A60     	 str r2,[r3]
 428:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 429:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1492              	 .loc 2 429 0
 1493 03c2 00E0     	 b .L69
 1494              	.L73:
 430:../Libraries/XMCLib/src/xmc_dma.c **** 
 431:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 432:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1495              	 .loc 2 432 0
 1496 03c4 00BF     	 nop
 1497              	.L69:
 433:../Libraries/XMCLib/src/xmc_dma.c ****       }
 434:../Libraries/XMCLib/src/xmc_dma.c **** 
 435:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 1498              	 .loc 2 435 0
 1499 03c6 0023     	 movs r3,#0
 1500 03c8 FB75     	 strb r3,[r7,#23]
 1501 03ca 04E0     	 b .L71
 1502              	.L52:
 436:../Libraries/XMCLib/src/xmc_dma.c **** 
 437:../Libraries/XMCLib/src/xmc_dma.c ****     }
 438:../Libraries/XMCLib/src/xmc_dma.c ****     else
 439:../Libraries/XMCLib/src/xmc_dma.c ****     {
 440:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 1503              	 .loc 2 440 0
 1504 03cc 0223     	 movs r3,#2
 1505 03ce FB75     	 strb r3,[r7,#23]
 1506 03d0 01E0     	 b .L71
 1507              	.L51:
 441:../Libraries/XMCLib/src/xmc_dma.c ****     }
 442:../Libraries/XMCLib/src/xmc_dma.c ****   }
 443:../Libraries/XMCLib/src/xmc_dma.c ****   else 
 444:../Libraries/XMCLib/src/xmc_dma.c ****   {
 445:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 1508              	 .loc 2 445 0
 1509 03d2 0123     	 movs r3,#1
 1510 03d4 FB75     	 strb r3,[r7,#23]
 1511              	.L71:
 446:../Libraries/XMCLib/src/xmc_dma.c ****   }
 447:../Libraries/XMCLib/src/xmc_dma.c ****   
 448:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1512              	 .loc 2 448 0
 1513 03d6 FB7D     	 ldrb r3,[r7,#23]
 449:../Libraries/XMCLib/src/xmc_dma.c **** }
 1514              	 .loc 2 449 0
 1515 03d8 1846     	 mov r0,r3
 1516 03da 1837     	 adds r7,r7,#24
 1517              	.LCFI107:
 1518              	 .cfi_def_cfa_offset 8
 1519 03dc BD46     	 mov sp,r7
 1520              	.LCFI108:
 1521              	 .cfi_def_cfa_register 13
 1522              	 
 1523 03de 80BD     	 pop {r7,pc}
 1524              	 .cfi_endproc
 1525              	.LFE172:
 1527              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1528              	 .align 2
 1529              	 .global XMC_DMA_CH_Suspend
 1530              	 .thumb
 1531              	 .thumb_func
 1533              	XMC_DMA_CH_Suspend:
 1534              	.LFB173:
 450:../Libraries/XMCLib/src/xmc_dma.c **** 
 451:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 452:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 453:../Libraries/XMCLib/src/xmc_dma.c **** {
 1535              	 .loc 2 453 0
 1536              	 .cfi_startproc
 1537              	 
 1538              	 
 1539              	 
 1540 0000 80B4     	 push {r7}
 1541              	.LCFI109:
 1542              	 .cfi_def_cfa_offset 4
 1543              	 .cfi_offset 7,-4
 1544 0002 83B0     	 sub sp,sp,#12
 1545              	.LCFI110:
 1546              	 .cfi_def_cfa_offset 16
 1547 0004 00AF     	 add r7,sp,#0
 1548              	.LCFI111:
 1549              	 .cfi_def_cfa_register 7
 1550 0006 7860     	 str r0,[r7,#4]
 1551 0008 0B46     	 mov r3,r1
 1552 000a FB70     	 strb r3,[r7,#3]
 454:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1553              	 .loc 2 454 0
 1554 000c FB78     	 ldrb r3,[r7,#3]
 1555 000e FA78     	 ldrb r2,[r7,#3]
 1556 0010 7968     	 ldr r1,[r7,#4]
 1557 0012 5820     	 movs r0,#88
 1558 0014 00FB02F2 	 mul r2,r0,r2
 1559 0018 0A44     	 add r2,r2,r1
 1560 001a 4032     	 adds r2,r2,#64
 1561 001c 1268     	 ldr r2,[r2]
 1562 001e 42F48072 	 orr r2,r2,#256
 1563 0022 7968     	 ldr r1,[r7,#4]
 1564 0024 5820     	 movs r0,#88
 1565 0026 00FB03F3 	 mul r3,r0,r3
 1566 002a 0B44     	 add r3,r3,r1
 1567 002c 4033     	 adds r3,r3,#64
 1568 002e 1A60     	 str r2,[r3]
 455:../Libraries/XMCLib/src/xmc_dma.c **** }
 1569              	 .loc 2 455 0
 1570 0030 0C37     	 adds r7,r7,#12
 1571              	.LCFI112:
 1572              	 .cfi_def_cfa_offset 4
 1573 0032 BD46     	 mov sp,r7
 1574              	.LCFI113:
 1575              	 .cfi_def_cfa_register 13
 1576              	 
 1577 0034 5DF8047B 	 ldr r7,[sp],#4
 1578              	.LCFI114:
 1579              	 .cfi_restore 7
 1580              	 .cfi_def_cfa_offset 0
 1581 0038 7047     	 bx lr
 1582              	 .cfi_endproc
 1583              	.LFE173:
 1585 003a 00BF     	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1586              	 .align 2
 1587              	 .global XMC_DMA_CH_Resume
 1588              	 .thumb
 1589              	 .thumb_func
 1591              	XMC_DMA_CH_Resume:
 1592              	.LFB174:
 456:../Libraries/XMCLib/src/xmc_dma.c **** 
 457:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 458:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 459:../Libraries/XMCLib/src/xmc_dma.c **** {
 1593              	 .loc 2 459 0
 1594              	 .cfi_startproc
 1595              	 
 1596              	 
 1597              	 
 1598 0000 80B4     	 push {r7}
 1599              	.LCFI115:
 1600              	 .cfi_def_cfa_offset 4
 1601              	 .cfi_offset 7,-4
 1602 0002 83B0     	 sub sp,sp,#12
 1603              	.LCFI116:
 1604              	 .cfi_def_cfa_offset 16
 1605 0004 00AF     	 add r7,sp,#0
 1606              	.LCFI117:
 1607              	 .cfi_def_cfa_register 7
 1608 0006 7860     	 str r0,[r7,#4]
 1609 0008 0B46     	 mov r3,r1
 1610 000a FB70     	 strb r3,[r7,#3]
 460:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1611              	 .loc 2 460 0
 1612 000c FB78     	 ldrb r3,[r7,#3]
 1613 000e FA78     	 ldrb r2,[r7,#3]
 1614 0010 7968     	 ldr r1,[r7,#4]
 1615 0012 5820     	 movs r0,#88
 1616 0014 00FB02F2 	 mul r2,r0,r2
 1617 0018 0A44     	 add r2,r2,r1
 1618 001a 4032     	 adds r2,r2,#64
 1619 001c 1268     	 ldr r2,[r2]
 1620 001e 22F48072 	 bic r2,r2,#256
 1621 0022 7968     	 ldr r1,[r7,#4]
 1622 0024 5820     	 movs r0,#88
 1623 0026 00FB03F3 	 mul r3,r0,r3
 1624 002a 0B44     	 add r3,r3,r1
 1625 002c 4033     	 adds r3,r3,#64
 1626 002e 1A60     	 str r2,[r3]
 461:../Libraries/XMCLib/src/xmc_dma.c **** }
 1627              	 .loc 2 461 0
 1628 0030 0C37     	 adds r7,r7,#12
 1629              	.LCFI118:
 1630              	 .cfi_def_cfa_offset 4
 1631 0032 BD46     	 mov sp,r7
 1632              	.LCFI119:
 1633              	 .cfi_def_cfa_register 13
 1634              	 
 1635 0034 5DF8047B 	 ldr r7,[sp],#4
 1636              	.LCFI120:
 1637              	 .cfi_restore 7
 1638              	 .cfi_def_cfa_offset 0
 1639 0038 7047     	 bx lr
 1640              	 .cfi_endproc
 1641              	.LFE174:
 1643 003a 00BF     	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1644              	 .align 2
 1645              	 .global XMC_DMA_CH_IsSuspended
 1646              	 .thumb
 1647              	 .thumb_func
 1649              	XMC_DMA_CH_IsSuspended:
 1650              	.LFB175:
 462:../Libraries/XMCLib/src/xmc_dma.c **** 
 463:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 464:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 465:../Libraries/XMCLib/src/xmc_dma.c **** {
 1651              	 .loc 2 465 0
 1652              	 .cfi_startproc
 1653              	 
 1654              	 
 1655              	 
 1656 0000 80B4     	 push {r7}
 1657              	.LCFI121:
 1658              	 .cfi_def_cfa_offset 4
 1659              	 .cfi_offset 7,-4
 1660 0002 83B0     	 sub sp,sp,#12
 1661              	.LCFI122:
 1662              	 .cfi_def_cfa_offset 16
 1663 0004 00AF     	 add r7,sp,#0
 1664              	.LCFI123:
 1665              	 .cfi_def_cfa_register 7
 1666 0006 7860     	 str r0,[r7,#4]
 1667 0008 0B46     	 mov r3,r1
 1668 000a FB70     	 strb r3,[r7,#3]
 466:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 1669              	 .loc 2 466 0
 1670 000c FB78     	 ldrb r3,[r7,#3]
 1671 000e 7A68     	 ldr r2,[r7,#4]
 1672 0010 5821     	 movs r1,#88
 1673 0012 01FB03F3 	 mul r3,r1,r3
 1674 0016 1344     	 add r3,r3,r2
 1675 0018 4033     	 adds r3,r3,#64
 1676 001a 1B68     	 ldr r3,[r3]
 1677 001c 03F48073 	 and r3,r3,#256
 1678 0020 002B     	 cmp r3,#0
 1679 0022 14BF     	 ite ne
 1680 0024 0123     	 movne r3,#1
 1681 0026 0023     	 moveq r3,#0
 1682 0028 DBB2     	 uxtb r3,r3
 467:../Libraries/XMCLib/src/xmc_dma.c **** }
 1683              	 .loc 2 467 0
 1684 002a 1846     	 mov r0,r3
 1685 002c 0C37     	 adds r7,r7,#12
 1686              	.LCFI124:
 1687              	 .cfi_def_cfa_offset 4
 1688 002e BD46     	 mov sp,r7
 1689              	.LCFI125:
 1690              	 .cfi_def_cfa_register 13
 1691              	 
 1692 0030 5DF8047B 	 ldr r7,[sp],#4
 1693              	.LCFI126:
 1694              	 .cfi_restore 7
 1695              	 .cfi_def_cfa_offset 0
 1696 0034 7047     	 bx lr
 1697              	 .cfi_endproc
 1698              	.LFE175:
 1700 0036 00BF     	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 1701              	 .align 2
 1702              	 .global XMC_DMA_CH_EnableEvent
 1703              	 .thumb
 1704              	 .thumb_func
 1706              	XMC_DMA_CH_EnableEvent:
 1707              	.LFB176:
 468:../Libraries/XMCLib/src/xmc_dma.c **** 
 469:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 470:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 471:../Libraries/XMCLib/src/xmc_dma.c **** {
 1708              	 .loc 2 471 0
 1709              	 .cfi_startproc
 1710              	 
 1711              	 
 1712              	 
 1713 0000 80B4     	 push {r7}
 1714              	.LCFI127:
 1715              	 .cfi_def_cfa_offset 4
 1716              	 .cfi_offset 7,-4
 1717 0002 87B0     	 sub sp,sp,#28
 1718              	.LCFI128:
 1719              	 .cfi_def_cfa_offset 32
 1720 0004 00AF     	 add r7,sp,#0
 1721              	.LCFI129:
 1722              	 .cfi_def_cfa_register 7
 1723 0006 F860     	 str r0,[r7,#12]
 1724 0008 0B46     	 mov r3,r1
 1725 000a 7A60     	 str r2,[r7,#4]
 1726 000c FB72     	 strb r3,[r7,#11]
 472:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 473:../Libraries/XMCLib/src/xmc_dma.c **** 
 474:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1727              	 .loc 2 474 0
 1728 000e 0023     	 movs r3,#0
 1729 0010 7B61     	 str r3,[r7,#20]
 1730 0012 1CE0     	 b .L81
 1731              	.L83:
 475:../Libraries/XMCLib/src/xmc_dma.c ****   {
 476:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1732              	 .loc 2 476 0
 1733 0014 7B69     	 ldr r3,[r7,#20]
 1734 0016 7A68     	 ldr r2,[r7,#4]
 1735 0018 22FA03F3 	 lsr r3,r2,r3
 1736 001c 03F00103 	 and r3,r3,#1
 1737 0020 002B     	 cmp r3,#0
 1738 0022 11D0     	 beq .L82
 477:../Libraries/XMCLib/src/xmc_dma.c ****     {
 478:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] |= ((uint32_t)0x101UL << channel);
 1739              	 .loc 2 478 0
 1740 0024 7B69     	 ldr r3,[r7,#20]
 1741 0026 5A00     	 lsls r2,r3,#1
 1742 0028 7B69     	 ldr r3,[r7,#20]
 1743 002a 5900     	 lsls r1,r3,#1
 1744 002c FB68     	 ldr r3,[r7,#12]
 1745 002e C431     	 adds r1,r1,#196
 1746 0030 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1747 0034 FB7A     	 ldrb r3,[r7,#11]
 1748 0036 40F20110 	 movw r0,#257
 1749 003a 00FA03F3 	 lsl r3,r0,r3
 1750 003e 1943     	 orrs r1,r1,r3
 1751 0040 FB68     	 ldr r3,[r7,#12]
 1752 0042 C432     	 adds r2,r2,#196
 1753 0044 43F82210 	 str r1,[r3,r2,lsl#2]
 1754              	.L82:
 474:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1755              	 .loc 2 474 0 discriminator 2
 1756 0048 7B69     	 ldr r3,[r7,#20]
 1757 004a 0133     	 adds r3,r3,#1
 1758 004c 7B61     	 str r3,[r7,#20]
 1759              	.L81:
 474:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1760              	 .loc 2 474 0 is_stmt 0 discriminator 1
 1761 004e 7B69     	 ldr r3,[r7,#20]
 1762 0050 042B     	 cmp r3,#4
 1763 0052 DFD9     	 bls .L83
 479:../Libraries/XMCLib/src/xmc_dma.c ****     }
 480:../Libraries/XMCLib/src/xmc_dma.c ****   }
 481:../Libraries/XMCLib/src/xmc_dma.c **** }
 1764              	 .loc 2 481 0 is_stmt 1
 1765 0054 1C37     	 adds r7,r7,#28
 1766              	.LCFI130:
 1767              	 .cfi_def_cfa_offset 4
 1768 0056 BD46     	 mov sp,r7
 1769              	.LCFI131:
 1770              	 .cfi_def_cfa_register 13
 1771              	 
 1772 0058 5DF8047B 	 ldr r7,[sp],#4
 1773              	.LCFI132:
 1774              	 .cfi_restore 7
 1775              	 .cfi_def_cfa_offset 0
 1776 005c 7047     	 bx lr
 1777              	 .cfi_endproc
 1778              	.LFE176:
 1780 005e 00BF     	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 1781              	 .align 2
 1782              	 .global XMC_DMA_CH_DisableEvent
 1783              	 .thumb
 1784              	 .thumb_func
 1786              	XMC_DMA_CH_DisableEvent:
 1787              	.LFB177:
 482:../Libraries/XMCLib/src/xmc_dma.c **** 
 483:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 484:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 485:../Libraries/XMCLib/src/xmc_dma.c **** {
 1788              	 .loc 2 485 0
 1789              	 .cfi_startproc
 1790              	 
 1791              	 
 1792              	 
 1793 0000 80B4     	 push {r7}
 1794              	.LCFI133:
 1795              	 .cfi_def_cfa_offset 4
 1796              	 .cfi_offset 7,-4
 1797 0002 87B0     	 sub sp,sp,#28
 1798              	.LCFI134:
 1799              	 .cfi_def_cfa_offset 32
 1800 0004 00AF     	 add r7,sp,#0
 1801              	.LCFI135:
 1802              	 .cfi_def_cfa_register 7
 1803 0006 F860     	 str r0,[r7,#12]
 1804 0008 0B46     	 mov r3,r1
 1805 000a 7A60     	 str r2,[r7,#4]
 1806 000c FB72     	 strb r3,[r7,#11]
 486:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 487:../Libraries/XMCLib/src/xmc_dma.c **** 
 488:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1807              	 .loc 2 488 0
 1808 000e 0023     	 movs r3,#0
 1809 0010 7B61     	 str r3,[r7,#20]
 1810 0012 1CE0     	 b .L85
 1811              	.L87:
 489:../Libraries/XMCLib/src/xmc_dma.c ****   {
 490:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1812              	 .loc 2 490 0
 1813 0014 7B69     	 ldr r3,[r7,#20]
 1814 0016 7A68     	 ldr r2,[r7,#4]
 1815 0018 22FA03F3 	 lsr r3,r2,r3
 1816 001c 03F00103 	 and r3,r3,#1
 1817 0020 002B     	 cmp r3,#0
 1818 0022 11D0     	 beq .L86
 491:../Libraries/XMCLib/src/xmc_dma.c ****     {
 492:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] |= ((uint32_t)0x100UL << channel);
 1819              	 .loc 2 492 0
 1820 0024 7B69     	 ldr r3,[r7,#20]
 1821 0026 5A00     	 lsls r2,r3,#1
 1822 0028 7B69     	 ldr r3,[r7,#20]
 1823 002a 5900     	 lsls r1,r3,#1
 1824 002c FB68     	 ldr r3,[r7,#12]
 1825 002e C431     	 adds r1,r1,#196
 1826 0030 53F82110 	 ldr r1,[r3,r1,lsl#2]
 1827 0034 FB7A     	 ldrb r3,[r7,#11]
 1828 0036 4FF48070 	 mov r0,#256
 1829 003a 00FA03F3 	 lsl r3,r0,r3
 1830 003e 1943     	 orrs r1,r1,r3
 1831 0040 FB68     	 ldr r3,[r7,#12]
 1832 0042 C432     	 adds r2,r2,#196
 1833 0044 43F82210 	 str r1,[r3,r2,lsl#2]
 1834              	.L86:
 488:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1835              	 .loc 2 488 0 discriminator 2
 1836 0048 7B69     	 ldr r3,[r7,#20]
 1837 004a 0133     	 adds r3,r3,#1
 1838 004c 7B61     	 str r3,[r7,#20]
 1839              	.L85:
 488:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1840              	 .loc 2 488 0 is_stmt 0 discriminator 1
 1841 004e 7B69     	 ldr r3,[r7,#20]
 1842 0050 042B     	 cmp r3,#4
 1843 0052 DFD9     	 bls .L87
 493:../Libraries/XMCLib/src/xmc_dma.c ****     }
 494:../Libraries/XMCLib/src/xmc_dma.c ****   }
 495:../Libraries/XMCLib/src/xmc_dma.c **** }
 1844              	 .loc 2 495 0 is_stmt 1
 1845 0054 1C37     	 adds r7,r7,#28
 1846              	.LCFI136:
 1847              	 .cfi_def_cfa_offset 4
 1848 0056 BD46     	 mov sp,r7
 1849              	.LCFI137:
 1850              	 .cfi_def_cfa_register 13
 1851              	 
 1852 0058 5DF8047B 	 ldr r7,[sp],#4
 1853              	.LCFI138:
 1854              	 .cfi_restore 7
 1855              	 .cfi_def_cfa_offset 0
 1856 005c 7047     	 bx lr
 1857              	 .cfi_endproc
 1858              	.LFE177:
 1860 005e 00BF     	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 1861              	 .align 2
 1862              	 .global XMC_DMA_CH_ClearEventStatus
 1863              	 .thumb
 1864              	 .thumb_func
 1866              	XMC_DMA_CH_ClearEventStatus:
 1867              	.LFB178:
 496:../Libraries/XMCLib/src/xmc_dma.c **** 
 497:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 498:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 499:../Libraries/XMCLib/src/xmc_dma.c **** {
 1868              	 .loc 2 499 0
 1869              	 .cfi_startproc
 1870              	 
 1871              	 
 1872              	 
 1873 0000 80B4     	 push {r7}
 1874              	.LCFI139:
 1875              	 .cfi_def_cfa_offset 4
 1876              	 .cfi_offset 7,-4
 1877 0002 87B0     	 sub sp,sp,#28
 1878              	.LCFI140:
 1879              	 .cfi_def_cfa_offset 32
 1880 0004 00AF     	 add r7,sp,#0
 1881              	.LCFI141:
 1882              	 .cfi_def_cfa_register 7
 1883 0006 F860     	 str r0,[r7,#12]
 1884 0008 0B46     	 mov r3,r1
 1885 000a 7A60     	 str r2,[r7,#4]
 1886 000c FB72     	 strb r3,[r7,#11]
 500:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 501:../Libraries/XMCLib/src/xmc_dma.c **** 
 502:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1887              	 .loc 2 502 0
 1888 000e 0023     	 movs r3,#0
 1889 0010 7B61     	 str r3,[r7,#20]
 1890 0012 13E0     	 b .L89
 1891              	.L91:
 503:../Libraries/XMCLib/src/xmc_dma.c ****   {
 504:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 1892              	 .loc 2 504 0
 1893 0014 7B69     	 ldr r3,[r7,#20]
 1894 0016 7A68     	 ldr r2,[r7,#4]
 1895 0018 22FA03F3 	 lsr r3,r2,r3
 1896 001c 03F00103 	 and r3,r3,#1
 1897 0020 002B     	 cmp r3,#0
 1898 0022 08D0     	 beq .L90
 505:../Libraries/XMCLib/src/xmc_dma.c ****     {
 506:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 1899              	 .loc 2 506 0
 1900 0024 7B69     	 ldr r3,[r7,#20]
 1901 0026 5A00     	 lsls r2,r3,#1
 1902 0028 FB7A     	 ldrb r3,[r7,#11]
 1903 002a 0121     	 movs r1,#1
 1904 002c 9940     	 lsls r1,r1,r3
 1905 002e FB68     	 ldr r3,[r7,#12]
 1906 0030 CE32     	 adds r2,r2,#206
 1907 0032 43F82210 	 str r1,[r3,r2,lsl#2]
 1908              	.L90:
 502:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1909              	 .loc 2 502 0 discriminator 2
 1910 0036 7B69     	 ldr r3,[r7,#20]
 1911 0038 0133     	 adds r3,r3,#1
 1912 003a 7B61     	 str r3,[r7,#20]
 1913              	.L89:
 502:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1914              	 .loc 2 502 0 is_stmt 0 discriminator 1
 1915 003c 7B69     	 ldr r3,[r7,#20]
 1916 003e 042B     	 cmp r3,#4
 1917 0040 E8D9     	 bls .L91
 507:../Libraries/XMCLib/src/xmc_dma.c ****     }
 508:../Libraries/XMCLib/src/xmc_dma.c ****   }
 509:../Libraries/XMCLib/src/xmc_dma.c **** 
 510:../Libraries/XMCLib/src/xmc_dma.c **** }
 1918              	 .loc 2 510 0 is_stmt 1
 1919 0042 1C37     	 adds r7,r7,#28
 1920              	.LCFI142:
 1921              	 .cfi_def_cfa_offset 4
 1922 0044 BD46     	 mov sp,r7
 1923              	.LCFI143:
 1924              	 .cfi_def_cfa_register 13
 1925              	 
 1926 0046 5DF8047B 	 ldr r7,[sp],#4
 1927              	.LCFI144:
 1928              	 .cfi_restore 7
 1929              	 .cfi_def_cfa_offset 0
 1930 004a 7047     	 bx lr
 1931              	 .cfi_endproc
 1932              	.LFE178:
 1934              	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 1935              	 .align 2
 1936              	 .global XMC_DMA_CH_GetEventStatus
 1937              	 .thumb
 1938              	 .thumb_func
 1940              	XMC_DMA_CH_GetEventStatus:
 1941              	.LFB179:
 511:../Libraries/XMCLib/src/xmc_dma.c **** 
 512:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 513:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 514:../Libraries/XMCLib/src/xmc_dma.c **** {
 1942              	 .loc 2 514 0
 1943              	 .cfi_startproc
 1944              	 
 1945              	 
 1946              	 
 1947 0000 80B4     	 push {r7}
 1948              	.LCFI145:
 1949              	 .cfi_def_cfa_offset 4
 1950              	 .cfi_offset 7,-4
 1951 0002 85B0     	 sub sp,sp,#20
 1952              	.LCFI146:
 1953              	 .cfi_def_cfa_offset 24
 1954 0004 00AF     	 add r7,sp,#0
 1955              	.LCFI147:
 1956              	 .cfi_def_cfa_register 7
 1957 0006 7860     	 str r0,[r7,#4]
 1958 0008 0B46     	 mov r3,r1
 1959 000a FB70     	 strb r3,[r7,#3]
 515:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 516:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 1960              	 .loc 2 516 0
 1961 000c 0023     	 movs r3,#0
 1962 000e BB60     	 str r3,[r7,#8]
 517:../Libraries/XMCLib/src/xmc_dma.c **** 
 518:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1963              	 .loc 2 518 0
 1964 0010 0023     	 movs r3,#0
 1965 0012 FB60     	 str r3,[r7,#12]
 1966 0014 18E0     	 b .L93
 1967              	.L96:
 519:../Libraries/XMCLib/src/xmc_dma.c ****   {
 520:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 1968              	 .loc 2 520 0
 1969 0016 FB68     	 ldr r3,[r7,#12]
 1970 0018 5A00     	 lsls r2,r3,#1
 1971 001a 7B68     	 ldr r3,[r7,#4]
 1972 001c BA32     	 adds r2,r2,#186
 1973 001e 53F82220 	 ldr r2,[r3,r2,lsl#2]
 1974 0022 FB78     	 ldrb r3,[r7,#3]
 1975 0024 22FA03F3 	 lsr r3,r2,r3
 1976 0028 03F00103 	 and r3,r3,#1
 1977 002c 002B     	 cmp r3,#0
 1978 002e 04D0     	 beq .L94
 1979              	 .loc 2 520 0 is_stmt 0 discriminator 1
 1980 0030 FB68     	 ldr r3,[r7,#12]
 1981 0032 0122     	 movs r2,#1
 1982 0034 02FA03F3 	 lsl r3,r2,r3
 1983 0038 00E0     	 b .L95
 1984              	.L94:
 1985              	 .loc 2 520 0 discriminator 2
 1986 003a 0023     	 movs r3,#0
 1987              	.L95:
 1988              	 .loc 2 520 0 discriminator 4
 1989 003c BA68     	 ldr r2,[r7,#8]
 1990 003e 1343     	 orrs r3,r3,r2
 1991 0040 BB60     	 str r3,[r7,#8]
 518:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1992              	 .loc 2 518 0 is_stmt 1 discriminator 4
 1993 0042 FB68     	 ldr r3,[r7,#12]
 1994 0044 0133     	 adds r3,r3,#1
 1995 0046 FB60     	 str r3,[r7,#12]
 1996              	.L93:
 518:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1997              	 .loc 2 518 0 is_stmt 0 discriminator 2
 1998 0048 FB68     	 ldr r3,[r7,#12]
 1999 004a 042B     	 cmp r3,#4
 2000 004c E3D9     	 bls .L96
 521:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 522:../Libraries/XMCLib/src/xmc_dma.c ****   }
 523:../Libraries/XMCLib/src/xmc_dma.c **** 
 524:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 2001              	 .loc 2 524 0 is_stmt 1
 2002 004e BB68     	 ldr r3,[r7,#8]
 525:../Libraries/XMCLib/src/xmc_dma.c **** }
 2003              	 .loc 2 525 0
 2004 0050 1846     	 mov r0,r3
 2005 0052 1437     	 adds r7,r7,#20
 2006              	.LCFI148:
 2007              	 .cfi_def_cfa_offset 4
 2008 0054 BD46     	 mov sp,r7
 2009              	.LCFI149:
 2010              	 .cfi_def_cfa_register 13
 2011              	 
 2012 0056 5DF8047B 	 ldr r7,[sp],#4
 2013              	.LCFI150:
 2014              	 .cfi_restore 7
 2015              	 .cfi_def_cfa_offset 0
 2016 005a 7047     	 bx lr
 2017              	 .cfi_endproc
 2018              	.LFE179:
 2020              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 2021              	 .align 2
 2022              	 .global XMC_DMA_CH_EnableSourceGather
 2023              	 .thumb
 2024              	 .thumb_func
 2026              	XMC_DMA_CH_EnableSourceGather:
 2027              	.LFB180:
 526:../Libraries/XMCLib/src/xmc_dma.c **** 
 527:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 528:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 529:../Libraries/XMCLib/src/xmc_dma.c **** {
 2028              	 .loc 2 529 0
 2029              	 .cfi_startproc
 2030              	 
 2031              	 
 2032              	 
 2033 0000 80B4     	 push {r7}
 2034              	.LCFI151:
 2035              	 .cfi_def_cfa_offset 4
 2036              	 .cfi_offset 7,-4
 2037 0002 85B0     	 sub sp,sp,#20
 2038              	.LCFI152:
 2039              	 .cfi_def_cfa_offset 24
 2040 0004 00AF     	 add r7,sp,#0
 2041              	.LCFI153:
 2042              	 .cfi_def_cfa_register 7
 2043 0006 F860     	 str r0,[r7,#12]
 2044 0008 7A60     	 str r2,[r7,#4]
 2045 000a 1A46     	 mov r2,r3
 2046 000c 0B46     	 mov r3,r1
 2047 000e FB72     	 strb r3,[r7,#11]
 2048 0010 1346     	 mov r3,r2
 2049 0012 3B81     	 strh r3,[r7,#8]
 530:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2050              	 .loc 2 530 0
 2051 0014 FB7A     	 ldrb r3,[r7,#11]
 2052 0016 FA7A     	 ldrb r2,[r7,#11]
 2053 0018 F968     	 ldr r1,[r7,#12]
 2054 001a 5820     	 movs r0,#88
 2055 001c 00FB02F2 	 mul r2,r0,r2
 2056 0020 0A44     	 add r2,r2,r1
 2057 0022 1832     	 adds r2,r2,#24
 2058 0024 1268     	 ldr r2,[r2]
 2059 0026 42F40032 	 orr r2,r2,#131072
 2060 002a F968     	 ldr r1,[r7,#12]
 2061 002c 5820     	 movs r0,#88
 2062 002e 00FB03F3 	 mul r3,r0,r3
 2063 0032 0B44     	 add r3,r3,r1
 2064 0034 1833     	 adds r3,r3,#24
 2065 0036 1A60     	 str r2,[r3]
 531:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 2066              	 .loc 2 531 0
 2067 0038 FB7A     	 ldrb r3,[r7,#11]
 2068 003a 3A89     	 ldrh r2,[r7,#8]
 2069 003c 1105     	 lsls r1,r2,#20
 2070 003e 7A68     	 ldr r2,[r7,#4]
 2071 0040 0A43     	 orrs r2,r2,r1
 2072 0042 F968     	 ldr r1,[r7,#12]
 2073 0044 5820     	 movs r0,#88
 2074 0046 00FB03F3 	 mul r3,r0,r3
 2075 004a 0B44     	 add r3,r3,r1
 2076 004c 4833     	 adds r3,r3,#72
 2077 004e 1A60     	 str r2,[r3]
 532:../Libraries/XMCLib/src/xmc_dma.c **** }
 2078              	 .loc 2 532 0
 2079 0050 1437     	 adds r7,r7,#20
 2080              	.LCFI154:
 2081              	 .cfi_def_cfa_offset 4
 2082 0052 BD46     	 mov sp,r7
 2083              	.LCFI155:
 2084              	 .cfi_def_cfa_register 13
 2085              	 
 2086 0054 5DF8047B 	 ldr r7,[sp],#4
 2087              	.LCFI156:
 2088              	 .cfi_restore 7
 2089              	 .cfi_def_cfa_offset 0
 2090 0058 7047     	 bx lr
 2091              	 .cfi_endproc
 2092              	.LFE180:
 2094 005a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 2095              	 .align 2
 2096              	 .global XMC_DMA_CH_DisableSourceGather
 2097              	 .thumb
 2098              	 .thumb_func
 2100              	XMC_DMA_CH_DisableSourceGather:
 2101              	.LFB181:
 533:../Libraries/XMCLib/src/xmc_dma.c **** 
 534:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 535:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 536:../Libraries/XMCLib/src/xmc_dma.c **** {
 2102              	 .loc 2 536 0
 2103              	 .cfi_startproc
 2104              	 
 2105              	 
 2106              	 
 2107 0000 80B4     	 push {r7}
 2108              	.LCFI157:
 2109              	 .cfi_def_cfa_offset 4
 2110              	 .cfi_offset 7,-4
 2111 0002 83B0     	 sub sp,sp,#12
 2112              	.LCFI158:
 2113              	 .cfi_def_cfa_offset 16
 2114 0004 00AF     	 add r7,sp,#0
 2115              	.LCFI159:
 2116              	 .cfi_def_cfa_register 7
 2117 0006 7860     	 str r0,[r7,#4]
 2118 0008 0B46     	 mov r3,r1
 2119 000a FB70     	 strb r3,[r7,#3]
 537:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2120              	 .loc 2 537 0
 2121 000c FB78     	 ldrb r3,[r7,#3]
 2122 000e FA78     	 ldrb r2,[r7,#3]
 2123 0010 7968     	 ldr r1,[r7,#4]
 2124 0012 5820     	 movs r0,#88
 2125 0014 00FB02F2 	 mul r2,r0,r2
 2126 0018 0A44     	 add r2,r2,r1
 2127 001a 1832     	 adds r2,r2,#24
 2128 001c 1268     	 ldr r2,[r2]
 2129 001e 22F40032 	 bic r2,r2,#131072
 2130 0022 7968     	 ldr r1,[r7,#4]
 2131 0024 5820     	 movs r0,#88
 2132 0026 00FB03F3 	 mul r3,r0,r3
 2133 002a 0B44     	 add r3,r3,r1
 2134 002c 1833     	 adds r3,r3,#24
 2135 002e 1A60     	 str r2,[r3]
 538:../Libraries/XMCLib/src/xmc_dma.c **** }
 2136              	 .loc 2 538 0
 2137 0030 0C37     	 adds r7,r7,#12
 2138              	.LCFI160:
 2139              	 .cfi_def_cfa_offset 4
 2140 0032 BD46     	 mov sp,r7
 2141              	.LCFI161:
 2142              	 .cfi_def_cfa_register 13
 2143              	 
 2144 0034 5DF8047B 	 ldr r7,[sp],#4
 2145              	.LCFI162:
 2146              	 .cfi_restore 7
 2147              	 .cfi_def_cfa_offset 0
 2148 0038 7047     	 bx lr
 2149              	 .cfi_endproc
 2150              	.LFE181:
 2152 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 2153              	 .align 2
 2154              	 .global XMC_DMA_CH_EnableDestinationScatter
 2155              	 .thumb
 2156              	 .thumb_func
 2158              	XMC_DMA_CH_EnableDestinationScatter:
 2159              	.LFB182:
 539:../Libraries/XMCLib/src/xmc_dma.c **** 
 540:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 541:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 542:../Libraries/XMCLib/src/xmc_dma.c **** {
 2160              	 .loc 2 542 0
 2161              	 .cfi_startproc
 2162              	 
 2163              	 
 2164              	 
 2165 0000 80B4     	 push {r7}
 2166              	.LCFI163:
 2167              	 .cfi_def_cfa_offset 4
 2168              	 .cfi_offset 7,-4
 2169 0002 85B0     	 sub sp,sp,#20
 2170              	.LCFI164:
 2171              	 .cfi_def_cfa_offset 24
 2172 0004 00AF     	 add r7,sp,#0
 2173              	.LCFI165:
 2174              	 .cfi_def_cfa_register 7
 2175 0006 F860     	 str r0,[r7,#12]
 2176 0008 7A60     	 str r2,[r7,#4]
 2177 000a 1A46     	 mov r2,r3
 2178 000c 0B46     	 mov r3,r1
 2179 000e FB72     	 strb r3,[r7,#11]
 2180 0010 1346     	 mov r3,r2
 2181 0012 3B81     	 strh r3,[r7,#8]
 543:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2182              	 .loc 2 543 0
 2183 0014 FB7A     	 ldrb r3,[r7,#11]
 2184 0016 FA7A     	 ldrb r2,[r7,#11]
 2185 0018 F968     	 ldr r1,[r7,#12]
 2186 001a 5820     	 movs r0,#88
 2187 001c 00FB02F2 	 mul r2,r0,r2
 2188 0020 0A44     	 add r2,r2,r1
 2189 0022 1832     	 adds r2,r2,#24
 2190 0024 1268     	 ldr r2,[r2]
 2191 0026 42F48022 	 orr r2,r2,#262144
 2192 002a F968     	 ldr r1,[r7,#12]
 2193 002c 5820     	 movs r0,#88
 2194 002e 00FB03F3 	 mul r3,r0,r3
 2195 0032 0B44     	 add r3,r3,r1
 2196 0034 1833     	 adds r3,r3,#24
 2197 0036 1A60     	 str r2,[r3]
 544:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 2198              	 .loc 2 544 0
 2199 0038 FB7A     	 ldrb r3,[r7,#11]
 2200 003a 3A89     	 ldrh r2,[r7,#8]
 2201 003c 1105     	 lsls r1,r2,#20
 2202 003e 7A68     	 ldr r2,[r7,#4]
 2203 0040 0A43     	 orrs r2,r2,r1
 2204 0042 F968     	 ldr r1,[r7,#12]
 2205 0044 5820     	 movs r0,#88
 2206 0046 00FB03F3 	 mul r3,r0,r3
 2207 004a 0B44     	 add r3,r3,r1
 2208 004c 5033     	 adds r3,r3,#80
 2209 004e 1A60     	 str r2,[r3]
 545:../Libraries/XMCLib/src/xmc_dma.c **** }
 2210              	 .loc 2 545 0
 2211 0050 1437     	 adds r7,r7,#20
 2212              	.LCFI166:
 2213              	 .cfi_def_cfa_offset 4
 2214 0052 BD46     	 mov sp,r7
 2215              	.LCFI167:
 2216              	 .cfi_def_cfa_register 13
 2217              	 
 2218 0054 5DF8047B 	 ldr r7,[sp],#4
 2219              	.LCFI168:
 2220              	 .cfi_restore 7
 2221              	 .cfi_def_cfa_offset 0
 2222 0058 7047     	 bx lr
 2223              	 .cfi_endproc
 2224              	.LFE182:
 2226 005a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 2227              	 .align 2
 2228              	 .global XMC_DMA_CH_DisableDestinationScatter
 2229              	 .thumb
 2230              	 .thumb_func
 2232              	XMC_DMA_CH_DisableDestinationScatter:
 2233              	.LFB183:
 546:../Libraries/XMCLib/src/xmc_dma.c **** 
 547:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 548:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 549:../Libraries/XMCLib/src/xmc_dma.c **** {
 2234              	 .loc 2 549 0
 2235              	 .cfi_startproc
 2236              	 
 2237              	 
 2238              	 
 2239 0000 80B4     	 push {r7}
 2240              	.LCFI169:
 2241              	 .cfi_def_cfa_offset 4
 2242              	 .cfi_offset 7,-4
 2243 0002 83B0     	 sub sp,sp,#12
 2244              	.LCFI170:
 2245              	 .cfi_def_cfa_offset 16
 2246 0004 00AF     	 add r7,sp,#0
 2247              	.LCFI171:
 2248              	 .cfi_def_cfa_register 7
 2249 0006 7860     	 str r0,[r7,#4]
 2250 0008 0B46     	 mov r3,r1
 2251 000a FB70     	 strb r3,[r7,#3]
 550:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2252              	 .loc 2 550 0
 2253 000c FB78     	 ldrb r3,[r7,#3]
 2254 000e FA78     	 ldrb r2,[r7,#3]
 2255 0010 7968     	 ldr r1,[r7,#4]
 2256 0012 5820     	 movs r0,#88
 2257 0014 00FB02F2 	 mul r2,r0,r2
 2258 0018 0A44     	 add r2,r2,r1
 2259 001a 1832     	 adds r2,r2,#24
 2260 001c 1268     	 ldr r2,[r2]
 2261 001e 22F48022 	 bic r2,r2,#262144
 2262 0022 7968     	 ldr r1,[r7,#4]
 2263 0024 5820     	 movs r0,#88
 2264 0026 00FB03F3 	 mul r3,r0,r3
 2265 002a 0B44     	 add r3,r3,r1
 2266 002c 1833     	 adds r3,r3,#24
 2267 002e 1A60     	 str r2,[r3]
 551:../Libraries/XMCLib/src/xmc_dma.c **** }
 2268              	 .loc 2 551 0
 2269 0030 0C37     	 adds r7,r7,#12
 2270              	.LCFI172:
 2271              	 .cfi_def_cfa_offset 4
 2272 0032 BD46     	 mov sp,r7
 2273              	.LCFI173:
 2274              	 .cfi_def_cfa_register 13
 2275              	 
 2276 0034 5DF8047B 	 ldr r7,[sp],#4
 2277              	.LCFI174:
 2278              	 .cfi_restore 7
 2279              	 .cfi_def_cfa_offset 0
 2280 0038 7047     	 bx lr
 2281              	 .cfi_endproc
 2282              	.LFE183:
 2284 003a 00BF     	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 2285              	 .align 2
 2286              	 .global XMC_DMA_CH_TriggerSourceRequest
 2287              	 .thumb
 2288              	 .thumb_func
 2290              	XMC_DMA_CH_TriggerSourceRequest:
 2291              	.LFB184:
 552:../Libraries/XMCLib/src/xmc_dma.c **** 
 553:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 554:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 555:../Libraries/XMCLib/src/xmc_dma.c **** {
 2292              	 .loc 2 555 0
 2293              	 .cfi_startproc
 2294              	 
 2295              	 
 2296              	 
 2297 0000 80B4     	 push {r7}
 2298              	.LCFI175:
 2299              	 .cfi_def_cfa_offset 4
 2300              	 .cfi_offset 7,-4
 2301 0002 83B0     	 sub sp,sp,#12
 2302              	.LCFI176:
 2303              	 .cfi_def_cfa_offset 16
 2304 0004 00AF     	 add r7,sp,#0
 2305              	.LCFI177:
 2306              	 .cfi_def_cfa_register 7
 2307 0006 7860     	 str r0,[r7,#4]
 2308 0008 0846     	 mov r0,r1
 2309 000a 1146     	 mov r1,r2
 2310 000c 1A46     	 mov r2,r3
 2311 000e 0346     	 mov r3,r0
 2312 0010 FB70     	 strb r3,[r7,#3]
 2313 0012 0B46     	 mov r3,r1
 2314 0014 BB70     	 strb r3,[r7,#2]
 2315 0016 1346     	 mov r3,r2
 2316 0018 7B70     	 strb r3,[r7,#1]
 556:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2317              	 .loc 2 556 0
 2318 001a BB78     	 ldrb r3,[r7,#2]
 2319 001c 002B     	 cmp r3,#0
 2320 001e 06D1     	 bne .L103
 557:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 558:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 2321              	 .loc 2 558 0
 2322 0020 FB78     	 ldrb r3,[r7,#3]
 2323 0022 40F20112 	 movw r2,#257
 2324 0026 9A40     	 lsls r2,r2,r3
 2325 0028 7B68     	 ldr r3,[r7,#4]
 2326 002a C3F87823 	 str r2,[r3,#888]
 2327              	.L103:
 559:../Libraries/XMCLib/src/xmc_dma.c ****   }
 560:../Libraries/XMCLib/src/xmc_dma.c **** 
 561:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2328              	 .loc 2 561 0
 2329 002e 7B78     	 ldrb r3,[r7,#1]
 2330 0030 002B     	 cmp r3,#0
 2331 0032 06D0     	 beq .L104
 562:../Libraries/XMCLib/src/xmc_dma.c ****   {
 563:../Libraries/XMCLib/src/xmc_dma.c ****   dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 2332              	 .loc 2 563 0
 2333 0034 FB78     	 ldrb r3,[r7,#3]
 2334 0036 40F20112 	 movw r2,#257
 2335 003a 9A40     	 lsls r2,r2,r3
 2336 003c 7B68     	 ldr r3,[r7,#4]
 2337 003e C3F88823 	 str r2,[r3,#904]
 2338              	.L104:
 564:../Libraries/XMCLib/src/xmc_dma.c ****   }
 565:../Libraries/XMCLib/src/xmc_dma.c ****   
 566:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 2339              	 .loc 2 566 0
 2340 0042 FB78     	 ldrb r3,[r7,#3]
 2341 0044 40F20112 	 movw r2,#257
 2342 0048 9A40     	 lsls r2,r2,r3
 2343 004a 7B68     	 ldr r3,[r7,#4]
 2344 004c C3F86823 	 str r2,[r3,#872]
 567:../Libraries/XMCLib/src/xmc_dma.c **** }
 2345              	 .loc 2 567 0
 2346 0050 0C37     	 adds r7,r7,#12
 2347              	.LCFI178:
 2348              	 .cfi_def_cfa_offset 4
 2349 0052 BD46     	 mov sp,r7
 2350              	.LCFI179:
 2351              	 .cfi_def_cfa_register 13
 2352              	 
 2353 0054 5DF8047B 	 ldr r7,[sp],#4
 2354              	.LCFI180:
 2355              	 .cfi_restore 7
 2356              	 .cfi_def_cfa_offset 0
 2357 0058 7047     	 bx lr
 2358              	 .cfi_endproc
 2359              	.LFE184:
 2361 005a 00BF     	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 2362              	 .align 2
 2363              	 .global XMC_DMA_CH_TriggerDestinationRequest
 2364              	 .thumb
 2365              	 .thumb_func
 2367              	XMC_DMA_CH_TriggerDestinationRequest:
 2368              	.LFB185:
 568:../Libraries/XMCLib/src/xmc_dma.c **** 
 569:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 570:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 571:../Libraries/XMCLib/src/xmc_dma.c **** {
 2369              	 .loc 2 571 0
 2370              	 .cfi_startproc
 2371              	 
 2372              	 
 2373              	 
 2374 0000 80B4     	 push {r7}
 2375              	.LCFI181:
 2376              	 .cfi_def_cfa_offset 4
 2377              	 .cfi_offset 7,-4
 2378 0002 83B0     	 sub sp,sp,#12
 2379              	.LCFI182:
 2380              	 .cfi_def_cfa_offset 16
 2381 0004 00AF     	 add r7,sp,#0
 2382              	.LCFI183:
 2383              	 .cfi_def_cfa_register 7
 2384 0006 7860     	 str r0,[r7,#4]
 2385 0008 0846     	 mov r0,r1
 2386 000a 1146     	 mov r1,r2
 2387 000c 1A46     	 mov r2,r3
 2388 000e 0346     	 mov r3,r0
 2389 0010 FB70     	 strb r3,[r7,#3]
 2390 0012 0B46     	 mov r3,r1
 2391 0014 BB70     	 strb r3,[r7,#2]
 2392 0016 1346     	 mov r3,r2
 2393 0018 7B70     	 strb r3,[r7,#1]
 572:../Libraries/XMCLib/src/xmc_dma.c ****   if(type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2394              	 .loc 2 572 0
 2395 001a BB78     	 ldrb r3,[r7,#2]
 2396 001c 002B     	 cmp r3,#0
 2397 001e 06D1     	 bne .L106
 573:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 574:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 2398              	 .loc 2 574 0
 2399 0020 FB78     	 ldrb r3,[r7,#3]
 2400 0022 40F20112 	 movw r2,#257
 2401 0026 9A40     	 lsls r2,r2,r3
 2402 0028 7B68     	 ldr r3,[r7,#4]
 2403 002a C3F88023 	 str r2,[r3,#896]
 2404              	.L106:
 575:../Libraries/XMCLib/src/xmc_dma.c ****   }
 576:../Libraries/XMCLib/src/xmc_dma.c **** 
 577:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2405              	 .loc 2 577 0
 2406 002e 7B78     	 ldrb r3,[r7,#1]
 2407 0030 002B     	 cmp r3,#0
 2408 0032 06D0     	 beq .L107
 578:../Libraries/XMCLib/src/xmc_dma.c ****   {
 579:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 2409              	 .loc 2 579 0
 2410 0034 FB78     	 ldrb r3,[r7,#3]
 2411 0036 40F20112 	 movw r2,#257
 2412 003a 9A40     	 lsls r2,r2,r3
 2413 003c 7B68     	 ldr r3,[r7,#4]
 2414 003e C3F89023 	 str r2,[r3,#912]
 2415              	.L107:
 580:../Libraries/XMCLib/src/xmc_dma.c ****   }
 581:../Libraries/XMCLib/src/xmc_dma.c **** 
 582:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 2416              	 .loc 2 582 0
 2417 0042 FB78     	 ldrb r3,[r7,#3]
 2418 0044 40F20112 	 movw r2,#257
 2419 0048 9A40     	 lsls r2,r2,r3
 2420 004a 7B68     	 ldr r3,[r7,#4]
 2421 004c C3F87023 	 str r2,[r3,#880]
 583:../Libraries/XMCLib/src/xmc_dma.c **** }
 2422              	 .loc 2 583 0
 2423 0050 0C37     	 adds r7,r7,#12
 2424              	.LCFI184:
 2425              	 .cfi_def_cfa_offset 4
 2426 0052 BD46     	 mov sp,r7
 2427              	.LCFI185:
 2428              	 .cfi_def_cfa_register 13
 2429              	 
 2430 0054 5DF8047B 	 ldr r7,[sp],#4
 2431              	.LCFI186:
 2432              	 .cfi_restore 7
 2433              	 .cfi_def_cfa_offset 0
 2434 0058 7047     	 bx lr
 2435              	 .cfi_endproc
 2436              	.LFE185:
 2438 005a 00BF     	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 2439              	 .align 2
 2440              	 .global XMC_DMA_CH_EnableSourceAddressReload
 2441              	 .thumb
 2442              	 .thumb_func
 2444              	XMC_DMA_CH_EnableSourceAddressReload:
 2445              	.LFB186:
 584:../Libraries/XMCLib/src/xmc_dma.c **** 
 585:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 586:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 587:../Libraries/XMCLib/src/xmc_dma.c **** {
 2446              	 .loc 2 587 0
 2447              	 .cfi_startproc
 2448              	 
 2449              	 
 2450              	 
 2451 0000 80B4     	 push {r7}
 2452              	.LCFI187:
 2453              	 .cfi_def_cfa_offset 4
 2454              	 .cfi_offset 7,-4
 2455 0002 83B0     	 sub sp,sp,#12
 2456              	.LCFI188:
 2457              	 .cfi_def_cfa_offset 16
 2458 0004 00AF     	 add r7,sp,#0
 2459              	.LCFI189:
 2460              	 .cfi_def_cfa_register 7
 2461 0006 7860     	 str r0,[r7,#4]
 2462 0008 0B46     	 mov r3,r1
 2463 000a FB70     	 strb r3,[r7,#3]
 588:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2464              	 .loc 2 588 0
 2465 000c FB78     	 ldrb r3,[r7,#3]
 2466 000e FA78     	 ldrb r2,[r7,#3]
 2467 0010 7968     	 ldr r1,[r7,#4]
 2468 0012 5820     	 movs r0,#88
 2469 0014 00FB02F2 	 mul r2,r0,r2
 2470 0018 0A44     	 add r2,r2,r1
 2471 001a 4032     	 adds r2,r2,#64
 2472 001c 1268     	 ldr r2,[r2]
 2473 001e 42F08042 	 orr r2,r2,#1073741824
 2474 0022 7968     	 ldr r1,[r7,#4]
 2475 0024 5820     	 movs r0,#88
 2476 0026 00FB03F3 	 mul r3,r0,r3
 2477 002a 0B44     	 add r3,r3,r1
 2478 002c 4033     	 adds r3,r3,#64
 2479 002e 1A60     	 str r2,[r3]
 589:../Libraries/XMCLib/src/xmc_dma.c **** }
 2480              	 .loc 2 589 0
 2481 0030 0C37     	 adds r7,r7,#12
 2482              	.LCFI190:
 2483              	 .cfi_def_cfa_offset 4
 2484 0032 BD46     	 mov sp,r7
 2485              	.LCFI191:
 2486              	 .cfi_def_cfa_register 13
 2487              	 
 2488 0034 5DF8047B 	 ldr r7,[sp],#4
 2489              	.LCFI192:
 2490              	 .cfi_restore 7
 2491              	 .cfi_def_cfa_offset 0
 2492 0038 7047     	 bx lr
 2493              	 .cfi_endproc
 2494              	.LFE186:
 2496 003a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 2497              	 .align 2
 2498              	 .global XMC_DMA_CH_DisableSourceAddressReload
 2499              	 .thumb
 2500              	 .thumb_func
 2502              	XMC_DMA_CH_DisableSourceAddressReload:
 2503              	.LFB187:
 590:../Libraries/XMCLib/src/xmc_dma.c **** 
 591:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 592:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 593:../Libraries/XMCLib/src/xmc_dma.c **** {
 2504              	 .loc 2 593 0
 2505              	 .cfi_startproc
 2506              	 
 2507              	 
 2508              	 
 2509 0000 80B4     	 push {r7}
 2510              	.LCFI193:
 2511              	 .cfi_def_cfa_offset 4
 2512              	 .cfi_offset 7,-4
 2513 0002 83B0     	 sub sp,sp,#12
 2514              	.LCFI194:
 2515              	 .cfi_def_cfa_offset 16
 2516 0004 00AF     	 add r7,sp,#0
 2517              	.LCFI195:
 2518              	 .cfi_def_cfa_register 7
 2519 0006 7860     	 str r0,[r7,#4]
 2520 0008 0B46     	 mov r3,r1
 2521 000a FB70     	 strb r3,[r7,#3]
 594:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2522              	 .loc 2 594 0
 2523 000c FB78     	 ldrb r3,[r7,#3]
 2524 000e FA78     	 ldrb r2,[r7,#3]
 2525 0010 7968     	 ldr r1,[r7,#4]
 2526 0012 5820     	 movs r0,#88
 2527 0014 00FB02F2 	 mul r2,r0,r2
 2528 0018 0A44     	 add r2,r2,r1
 2529 001a 4032     	 adds r2,r2,#64
 2530 001c 1268     	 ldr r2,[r2]
 2531 001e 22F08042 	 bic r2,r2,#1073741824
 2532 0022 7968     	 ldr r1,[r7,#4]
 2533 0024 5820     	 movs r0,#88
 2534 0026 00FB03F3 	 mul r3,r0,r3
 2535 002a 0B44     	 add r3,r3,r1
 2536 002c 4033     	 adds r3,r3,#64
 2537 002e 1A60     	 str r2,[r3]
 595:../Libraries/XMCLib/src/xmc_dma.c **** }
 2538              	 .loc 2 595 0
 2539 0030 0C37     	 adds r7,r7,#12
 2540              	.LCFI196:
 2541              	 .cfi_def_cfa_offset 4
 2542 0032 BD46     	 mov sp,r7
 2543              	.LCFI197:
 2544              	 .cfi_def_cfa_register 13
 2545              	 
 2546 0034 5DF8047B 	 ldr r7,[sp],#4
 2547              	.LCFI198:
 2548              	 .cfi_restore 7
 2549              	 .cfi_def_cfa_offset 0
 2550 0038 7047     	 bx lr
 2551              	 .cfi_endproc
 2552              	.LFE187:
 2554 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 2555              	 .align 2
 2556              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 2557              	 .thumb
 2558              	 .thumb_func
 2560              	XMC_DMA_CH_EnableDestinationAddressReload:
 2561              	.LFB188:
 596:../Libraries/XMCLib/src/xmc_dma.c **** 
 597:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 598:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 599:../Libraries/XMCLib/src/xmc_dma.c **** {
 2562              	 .loc 2 599 0
 2563              	 .cfi_startproc
 2564              	 
 2565              	 
 2566              	 
 2567 0000 80B4     	 push {r7}
 2568              	.LCFI199:
 2569              	 .cfi_def_cfa_offset 4
 2570              	 .cfi_offset 7,-4
 2571 0002 83B0     	 sub sp,sp,#12
 2572              	.LCFI200:
 2573              	 .cfi_def_cfa_offset 16
 2574 0004 00AF     	 add r7,sp,#0
 2575              	.LCFI201:
 2576              	 .cfi_def_cfa_register 7
 2577 0006 7860     	 str r0,[r7,#4]
 2578 0008 0B46     	 mov r3,r1
 2579 000a FB70     	 strb r3,[r7,#3]
 600:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2580              	 .loc 2 600 0
 2581 000c FB78     	 ldrb r3,[r7,#3]
 2582 000e FA78     	 ldrb r2,[r7,#3]
 2583 0010 7968     	 ldr r1,[r7,#4]
 2584 0012 5820     	 movs r0,#88
 2585 0014 00FB02F2 	 mul r2,r0,r2
 2586 0018 0A44     	 add r2,r2,r1
 2587 001a 4032     	 adds r2,r2,#64
 2588 001c 1268     	 ldr r2,[r2]
 2589 001e 42F00042 	 orr r2,r2,#-2147483648
 2590 0022 7968     	 ldr r1,[r7,#4]
 2591 0024 5820     	 movs r0,#88
 2592 0026 00FB03F3 	 mul r3,r0,r3
 2593 002a 0B44     	 add r3,r3,r1
 2594 002c 4033     	 adds r3,r3,#64
 2595 002e 1A60     	 str r2,[r3]
 601:../Libraries/XMCLib/src/xmc_dma.c **** }
 2596              	 .loc 2 601 0
 2597 0030 0C37     	 adds r7,r7,#12
 2598              	.LCFI202:
 2599              	 .cfi_def_cfa_offset 4
 2600 0032 BD46     	 mov sp,r7
 2601              	.LCFI203:
 2602              	 .cfi_def_cfa_register 13
 2603              	 
 2604 0034 5DF8047B 	 ldr r7,[sp],#4
 2605              	.LCFI204:
 2606              	 .cfi_restore 7
 2607              	 .cfi_def_cfa_offset 0
 2608 0038 7047     	 bx lr
 2609              	 .cfi_endproc
 2610              	.LFE188:
 2612 003a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 2613              	 .align 2
 2614              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 2615              	 .thumb
 2616              	 .thumb_func
 2618              	XMC_DMA_CH_DisableDestinationAddressReload:
 2619              	.LFB189:
 602:../Libraries/XMCLib/src/xmc_dma.c **** 
 603:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 604:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 605:../Libraries/XMCLib/src/xmc_dma.c **** {
 2620              	 .loc 2 605 0
 2621              	 .cfi_startproc
 2622              	 
 2623              	 
 2624              	 
 2625 0000 80B4     	 push {r7}
 2626              	.LCFI205:
 2627              	 .cfi_def_cfa_offset 4
 2628              	 .cfi_offset 7,-4
 2629 0002 83B0     	 sub sp,sp,#12
 2630              	.LCFI206:
 2631              	 .cfi_def_cfa_offset 16
 2632 0004 00AF     	 add r7,sp,#0
 2633              	.LCFI207:
 2634              	 .cfi_def_cfa_register 7
 2635 0006 7860     	 str r0,[r7,#4]
 2636 0008 0B46     	 mov r3,r1
 2637 000a FB70     	 strb r3,[r7,#3]
 606:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2638              	 .loc 2 606 0
 2639 000c FB78     	 ldrb r3,[r7,#3]
 2640 000e FA78     	 ldrb r2,[r7,#3]
 2641 0010 7968     	 ldr r1,[r7,#4]
 2642 0012 5820     	 movs r0,#88
 2643 0014 00FB02F2 	 mul r2,r0,r2
 2644 0018 0A44     	 add r2,r2,r1
 2645 001a 4032     	 adds r2,r2,#64
 2646 001c 1268     	 ldr r2,[r2]
 2647 001e 22F00042 	 bic r2,r2,#-2147483648
 2648 0022 7968     	 ldr r1,[r7,#4]
 2649 0024 5820     	 movs r0,#88
 2650 0026 00FB03F3 	 mul r3,r0,r3
 2651 002a 0B44     	 add r3,r3,r1
 2652 002c 4033     	 adds r3,r3,#64
 2653 002e 1A60     	 str r2,[r3]
 607:../Libraries/XMCLib/src/xmc_dma.c **** }
 2654              	 .loc 2 607 0
 2655 0030 0C37     	 adds r7,r7,#12
 2656              	.LCFI208:
 2657              	 .cfi_def_cfa_offset 4
 2658 0032 BD46     	 mov sp,r7
 2659              	.LCFI209:
 2660              	 .cfi_def_cfa_register 13
 2661              	 
 2662 0034 5DF8047B 	 ldr r7,[sp],#4
 2663              	.LCFI210:
 2664              	 .cfi_restore 7
 2665              	 .cfi_def_cfa_offset 0
 2666 0038 7047     	 bx lr
 2667              	 .cfi_endproc
 2668              	.LFE189:
 2670 003a 00BF     	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 2671              	 .align 2
 2672              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 2673              	 .thumb
 2674              	 .thumb_func
 2676              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 2677              	.LFB190:
 608:../Libraries/XMCLib/src/xmc_dma.c **** 
 609:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 610:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 611:../Libraries/XMCLib/src/xmc_dma.c **** {
 2678              	 .loc 2 611 0
 2679              	 .cfi_startproc
 2680              	 
 2681              	 
 2682              	 
 2683 0000 80B4     	 push {r7}
 2684              	.LCFI211:
 2685              	 .cfi_def_cfa_offset 4
 2686              	 .cfi_offset 7,-4
 2687 0002 83B0     	 sub sp,sp,#12
 2688              	.LCFI212:
 2689              	 .cfi_def_cfa_offset 16
 2690 0004 00AF     	 add r7,sp,#0
 2691              	.LCFI213:
 2692              	 .cfi_def_cfa_register 7
 2693 0006 7860     	 str r0,[r7,#4]
 2694 0008 0B46     	 mov r3,r1
 2695 000a FB70     	 strb r3,[r7,#3]
 612:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 2696              	 .loc 2 612 0
 2697 000c FB78     	 ldrb r3,[r7,#3]
 2698 000e FA78     	 ldrb r2,[r7,#3]
 2699 0010 7968     	 ldr r1,[r7,#4]
 2700 0012 5820     	 movs r0,#88
 2701 0014 00FB02F2 	 mul r2,r0,r2
 2702 0018 0A44     	 add r2,r2,r1
 2703 001a 4032     	 adds r2,r2,#64
 2704 001c 1268     	 ldr r2,[r2]
 2705 001e 22F04042 	 bic r2,r2,#-1073741824
 2706 0022 7968     	 ldr r1,[r7,#4]
 2707 0024 5820     	 movs r0,#88
 2708 0026 00FB03F3 	 mul r3,r0,r3
 2709 002a 0B44     	 add r3,r3,r1
 2710 002c 4033     	 adds r3,r3,#64
 2711 002e 1A60     	 str r2,[r3]
 613:../Libraries/XMCLib/src/xmc_dma.c **** }
 2712              	 .loc 2 613 0
 2713 0030 0C37     	 adds r7,r7,#12
 2714              	.LCFI214:
 2715              	 .cfi_def_cfa_offset 4
 2716 0032 BD46     	 mov sp,r7
 2717              	.LCFI215:
 2718              	 .cfi_def_cfa_register 13
 2719              	 
 2720 0034 5DF8047B 	 ldr r7,[sp],#4
 2721              	.LCFI216:
 2722              	 .cfi_restore 7
 2723              	 .cfi_def_cfa_offset 0
 2724 0038 7047     	 bx lr
 2725              	 .cfi_endproc
 2726              	.LFE190:
 2728 003a 00BF     	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 2729              	 .align 2
 2730              	 .global XMC_DMA_CH_SetEventHandler
 2731              	 .thumb
 2732              	 .thumb_func
 2734              	XMC_DMA_CH_SetEventHandler:
 2735              	.LFB191:
 614:../Libraries/XMCLib/src/xmc_dma.c **** 
 615:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 616:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 617:../Libraries/XMCLib/src/xmc_dma.c **** {
 2736              	 .loc 2 617 0
 2737              	 .cfi_startproc
 2738              	 
 2739              	 
 2740              	 
 2741 0000 80B4     	 push {r7}
 2742              	.LCFI217:
 2743              	 .cfi_def_cfa_offset 4
 2744              	 .cfi_offset 7,-4
 2745 0002 85B0     	 sub sp,sp,#20
 2746              	.LCFI218:
 2747              	 .cfi_def_cfa_offset 24
 2748 0004 00AF     	 add r7,sp,#0
 2749              	.LCFI219:
 2750              	 .cfi_def_cfa_register 7
 2751 0006 F860     	 str r0,[r7,#12]
 2752 0008 0B46     	 mov r3,r1
 2753 000a 7A60     	 str r2,[r7,#4]
 2754 000c FB72     	 strb r3,[r7,#11]
 618:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 619:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 620:../Libraries/XMCLib/src/xmc_dma.c ****   {
 621:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 622:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 2755              	 .loc 2 622 0
 2756 000e FB7A     	 ldrb r3,[r7,#11]
 2757 0010 0449     	 ldr r1,.L114
 2758 0012 7A68     	 ldr r2,[r7,#4]
 2759 0014 41F82320 	 str r2,[r1,r3,lsl#2]
 623:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 624:../Libraries/XMCLib/src/xmc_dma.c ****   }
 625:../Libraries/XMCLib/src/xmc_dma.c ****   else
 626:../Libraries/XMCLib/src/xmc_dma.c ****   {
 627:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 628:../Libraries/XMCLib/src/xmc_dma.c ****   }
 629:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 630:../Libraries/XMCLib/src/xmc_dma.c **** }
 2760              	 .loc 2 630 0
 2761 0018 1437     	 adds r7,r7,#20
 2762              	.LCFI220:
 2763              	 .cfi_def_cfa_offset 4
 2764 001a BD46     	 mov sp,r7
 2765              	.LCFI221:
 2766              	 .cfi_def_cfa_register 13
 2767              	 
 2768 001c 5DF8047B 	 ldr r7,[sp],#4
 2769              	.LCFI222:
 2770              	 .cfi_restore 7
 2771              	 .cfi_def_cfa_offset 0
 2772 0020 7047     	 bx lr
 2773              	.L115:
 2774 0022 00BF     	 .align 2
 2775              	.L114:
 2776 0024 00000000 	 .word dma0_event_handlers
 2777              	 .cfi_endproc
 2778              	.LFE191:
 2780              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 2781              	 .align 2
 2782              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 2783              	 .thumb
 2784              	 .thumb_func
 2786              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 2787              	.LFB192:
 631:../Libraries/XMCLib/src/xmc_dma.c **** 
 632:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 633:../Libraries/XMCLib/src/xmc_dma.c **** {
 2788              	 .loc 2 633 0
 2789              	 .cfi_startproc
 2790              	 
 2791              	 
 2792 0000 80B5     	 push {r7,lr}
 2793              	.LCFI223:
 2794              	 .cfi_def_cfa_offset 8
 2795              	 .cfi_offset 7,-8
 2796              	 .cfi_offset 14,-4
 2797 0002 84B0     	 sub sp,sp,#16
 2798              	.LCFI224:
 2799              	 .cfi_def_cfa_offset 24
 2800 0004 00AF     	 add r7,sp,#0
 2801              	.LCFI225:
 2802              	 .cfi_def_cfa_register 7
 2803 0006 7860     	 str r0,[r7,#4]
 2804 0008 0B46     	 mov r3,r1
 2805 000a FB70     	 strb r3,[r7,#3]
 634:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 635:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 2806              	 .loc 2 635 0
 2807 000c FB78     	 ldrb r3,[r7,#3]
 2808 000e 7A68     	 ldr r2,[r7,#4]
 2809 0010 5821     	 movs r1,#88
 2810 0012 01FB03F3 	 mul r3,r1,r3
 2811 0016 1344     	 add r3,r3,r2
 2812 0018 4033     	 adds r3,r3,#64
 2813 001a 5B68     	 ldr r3,[r3,#4]
 2814 001c 03F4F063 	 and r3,r3,#1920
 2815 0020 DB09     	 lsrs r3,r3,#7
 2816 0022 FB60     	 str r3,[r7,#12]
 636:../Libraries/XMCLib/src/xmc_dma.c **** 
 637:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2817              	 .loc 2 637 0
 2818 0024 FB68     	 ldr r3,[r7,#12]
 2819 0026 DBB2     	 uxtb r3,r3
 2820 0028 7868     	 ldr r0,[r7,#4]
 2821 002a 1946     	 mov r1,r3
 2822 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 638:../Libraries/XMCLib/src/xmc_dma.c **** }
 2823              	 .loc 2 638 0
 2824 0030 1037     	 adds r7,r7,#16
 2825              	.LCFI226:
 2826              	 .cfi_def_cfa_offset 8
 2827 0032 BD46     	 mov sp,r7
 2828              	.LCFI227:
 2829              	 .cfi_def_cfa_register 13
 2830              	 
 2831 0034 80BD     	 pop {r7,pc}
 2832              	 .cfi_endproc
 2833              	.LFE192:
 2835 0036 00BF     	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 2836              	 .align 2
 2837              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 2838              	 .thumb
 2839              	 .thumb_func
 2841              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 2842              	.LFB193:
 639:../Libraries/XMCLib/src/xmc_dma.c **** 
 640:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 641:../Libraries/XMCLib/src/xmc_dma.c **** {
 2843              	 .loc 2 641 0
 2844              	 .cfi_startproc
 2845              	 
 2846              	 
 2847 0000 80B5     	 push {r7,lr}
 2848              	.LCFI228:
 2849              	 .cfi_def_cfa_offset 8
 2850              	 .cfi_offset 7,-8
 2851              	 .cfi_offset 14,-4
 2852 0002 84B0     	 sub sp,sp,#16
 2853              	.LCFI229:
 2854              	 .cfi_def_cfa_offset 24
 2855 0004 00AF     	 add r7,sp,#0
 2856              	.LCFI230:
 2857              	 .cfi_def_cfa_register 7
 2858 0006 7860     	 str r0,[r7,#4]
 2859 0008 0B46     	 mov r3,r1
 2860 000a FB70     	 strb r3,[r7,#3]
 642:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 643:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 2861              	 .loc 2 643 0
 2862 000c FB78     	 ldrb r3,[r7,#3]
 2863 000e 7A68     	 ldr r2,[r7,#4]
 2864 0010 5821     	 movs r1,#88
 2865 0012 01FB03F3 	 mul r3,r1,r3
 2866 0016 1344     	 add r3,r3,r2
 2867 0018 4033     	 adds r3,r3,#64
 2868 001a 5B68     	 ldr r3,[r3,#4]
 2869 001c 03F4F043 	 and r3,r3,#30720
 2870 0020 DB0A     	 lsrs r3,r3,#11
 2871 0022 FB60     	 str r3,[r7,#12]
 644:../Libraries/XMCLib/src/xmc_dma.c **** 
 645:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2872              	 .loc 2 645 0
 2873 0024 FB68     	 ldr r3,[r7,#12]
 2874 0026 DBB2     	 uxtb r3,r3
 2875 0028 7868     	 ldr r0,[r7,#4]
 2876 002a 1946     	 mov r1,r3
 2877 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 646:../Libraries/XMCLib/src/xmc_dma.c **** }
 2878              	 .loc 2 646 0
 2879 0030 1037     	 adds r7,r7,#16
 2880              	.LCFI231:
 2881              	 .cfi_def_cfa_offset 8
 2882 0032 BD46     	 mov sp,r7
 2883              	.LCFI232:
 2884              	 .cfi_def_cfa_register 13
 2885              	 
 2886 0034 80BD     	 pop {r7,pc}
 2887              	 .cfi_endproc
 2888              	.LFE193:
 2890 0036 00BF     	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 2891              	 .align 2
 2892              	 .global XMC_DMA_IRQHandler
 2893              	 .thumb
 2894              	 .thumb_func
 2896              	XMC_DMA_IRQHandler:
 2897              	.LFB194:
 647:../Libraries/XMCLib/src/xmc_dma.c **** 
 648:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 649:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 650:../Libraries/XMCLib/src/xmc_dma.c **** {
 2898              	 .loc 2 650 0
 2899              	 .cfi_startproc
 2900              	 
 2901              	 
 2902 0000 80B5     	 push {r7,lr}
 2903              	.LCFI233:
 2904              	 .cfi_def_cfa_offset 8
 2905              	 .cfi_offset 7,-8
 2906              	 .cfi_offset 14,-4
 2907 0002 88B0     	 sub sp,sp,#32
 2908              	.LCFI234:
 2909              	 .cfi_def_cfa_offset 40
 2910 0004 00AF     	 add r7,sp,#0
 2911              	.LCFI235:
 2912              	 .cfi_def_cfa_register 7
 2913 0006 7860     	 str r0,[r7,#4]
 651:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 652:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 653:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 654:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 655:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 656:../Libraries/XMCLib/src/xmc_dma.c **** 
 657:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 658:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 659:../Libraries/XMCLib/src/xmc_dma.c ****   {
 660:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 661:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 2914              	 .loc 2 661 0
 2915 0008 7C4B     	 ldr r3,.L149
 2916 000a BB61     	 str r3,[r7,#24]
 662:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 663:../Libraries/XMCLib/src/xmc_dma.c ****   }
 664:../Libraries/XMCLib/src/xmc_dma.c ****   else
 665:../Libraries/XMCLib/src/xmc_dma.c ****   {
 666:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 667:../Libraries/XMCLib/src/xmc_dma.c ****   }
 668:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 669:../Libraries/XMCLib/src/xmc_dma.c ****   
 670:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 2917              	 .loc 2 670 0
 2918 000c 7868     	 ldr r0,[r7,#4]
 2919 000e FFF7FEFF 	 bl XMC_DMA_GetEventStatus
 2920 0012 7861     	 str r0,[r7,#20]
 671:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 2921              	 .loc 2 671 0
 2922 0014 0023     	 movs r3,#0
 2923 0016 FB61     	 str r3,[r7,#28]
 672:../Libraries/XMCLib/src/xmc_dma.c **** 
 673:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 2924              	 .loc 2 673 0
 2925 0018 7B69     	 ldr r3,[r7,#20]
 2926 001a 03F01003 	 and r3,r3,#16
 2927 001e 002B     	 cmp r3,#0
 2928 0020 2AD0     	 beq .L119
 674:../Libraries/XMCLib/src/xmc_dma.c ****   {
 675:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 2929              	 .loc 2 675 0
 2930 0022 7868     	 ldr r0,[r7,#4]
 2931 0024 FFF7FEFF 	 bl XMC_DMA_GetChannelsErrorStatus
 2932 0028 7861     	 str r0,[r7,#20]
 676:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 2933              	 .loc 2 676 0
 2934 002a 21E0     	 b .L120
 2935              	.L124:
 677:../Libraries/XMCLib/src/xmc_dma.c ****     {
 678:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 2936              	 .loc 2 678 0
 2937 002c 0122     	 movs r2,#1
 2938 002e FB69     	 ldr r3,[r7,#28]
 2939 0030 02FA03F3 	 lsl r3,r2,r3
 2940 0034 3B61     	 str r3,[r7,#16]
 679:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 2941              	 .loc 2 679 0
 2942 0036 7A69     	 ldr r2,[r7,#20]
 2943 0038 3B69     	 ldr r3,[r7,#16]
 2944 003a 1340     	 ands r3,r3,r2
 2945 003c 002B     	 cmp r3,#0
 2946 003e 14D0     	 beq .L121
 680:../Libraries/XMCLib/src/xmc_dma.c ****       {
 681:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 2947              	 .loc 2 681 0
 2948 0040 FB69     	 ldr r3,[r7,#28]
 2949 0042 9B00     	 lsls r3,r3,#2
 2950 0044 BA69     	 ldr r2,[r7,#24]
 2951 0046 1344     	 add r3,r3,r2
 2952 0048 1B68     	 ldr r3,[r3]
 2953 004a FB60     	 str r3,[r7,#12]
 682:../Libraries/XMCLib/src/xmc_dma.c **** 
 683:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 684:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 2954              	 .loc 2 684 0
 2955 004c FB68     	 ldr r3,[r7,#12]
 2956 004e 002B     	 cmp r3,#0
 2957 0050 02D0     	 beq .L122
 685:../Libraries/XMCLib/src/xmc_dma.c ****         {
 686:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 2958              	 .loc 2 686 0
 2959 0052 FB68     	 ldr r3,[r7,#12]
 2960 0054 1020     	 movs r0,#16
 2961 0056 9847     	 blx r3
 2962              	.L122:
 687:../Libraries/XMCLib/src/xmc_dma.c ****         }
 688:../Libraries/XMCLib/src/xmc_dma.c **** 
 689:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 2963              	 .loc 2 689 0
 2964 0058 FB69     	 ldr r3,[r7,#28]
 2965 005a DBB2     	 uxtb r3,r3
 2966 005c 7868     	 ldr r0,[r7,#4]
 2967 005e 1946     	 mov r1,r3
 2968 0060 1022     	 movs r2,#16
 2969 0062 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 690:../Libraries/XMCLib/src/xmc_dma.c ****         
 691:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 2970              	 .loc 2 691 0
 2971 0066 00BF     	 nop
 2972 0068 C5E0     	 b .L118
 2973              	.L121:
 692:../Libraries/XMCLib/src/xmc_dma.c ****       }
 693:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 2974              	 .loc 2 693 0
 2975 006a FB69     	 ldr r3,[r7,#28]
 2976 006c 0133     	 adds r3,r3,#1
 2977 006e FB61     	 str r3,[r7,#28]
 2978              	.L120:
 676:../Libraries/XMCLib/src/xmc_dma.c ****     {
 2979              	 .loc 2 676 0
 2980 0070 7B69     	 ldr r3,[r7,#20]
 2981 0072 002B     	 cmp r3,#0
 2982 0074 DAD1     	 bne .L124
 2983 0076 BEE0     	 b .L118
 2984              	.L119:
 694:../Libraries/XMCLib/src/xmc_dma.c ****     }
 695:../Libraries/XMCLib/src/xmc_dma.c ****   }
 696:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 2985              	 .loc 2 696 0
 2986 0078 7B69     	 ldr r3,[r7,#20]
 2987 007a 03F00103 	 and r3,r3,#1
 2988 007e 002B     	 cmp r3,#0
 2989 0080 2AD0     	 beq .L126
 697:../Libraries/XMCLib/src/xmc_dma.c ****   {
 698:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 2990              	 .loc 2 698 0
 2991 0082 7868     	 ldr r0,[r7,#4]
 2992 0084 FFF7FEFF 	 bl XMC_DMA_GetChannelsTransferCompleteStatus
 2993 0088 7861     	 str r0,[r7,#20]
 699:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 2994              	 .loc 2 699 0
 2995 008a 21E0     	 b .L127
 2996              	.L131:
 700:../Libraries/XMCLib/src/xmc_dma.c ****     {
 701:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 2997              	 .loc 2 701 0
 2998 008c 0122     	 movs r2,#1
 2999 008e FB69     	 ldr r3,[r7,#28]
 3000 0090 02FA03F3 	 lsl r3,r2,r3
 3001 0094 3B61     	 str r3,[r7,#16]
 702:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3002              	 .loc 2 702 0
 3003 0096 7A69     	 ldr r2,[r7,#20]
 3004 0098 3B69     	 ldr r3,[r7,#16]
 3005 009a 1340     	 ands r3,r3,r2
 3006 009c 002B     	 cmp r3,#0
 3007 009e 14D0     	 beq .L128
 703:../Libraries/XMCLib/src/xmc_dma.c ****       {
 704:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3008              	 .loc 2 704 0
 3009 00a0 FB69     	 ldr r3,[r7,#28]
 3010 00a2 9B00     	 lsls r3,r3,#2
 3011 00a4 BA69     	 ldr r2,[r7,#24]
 3012 00a6 1344     	 add r3,r3,r2
 3013 00a8 1B68     	 ldr r3,[r3]
 3014 00aa FB60     	 str r3,[r7,#12]
 705:../Libraries/XMCLib/src/xmc_dma.c **** 
 706:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 707:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3015              	 .loc 2 707 0
 3016 00ac FB68     	 ldr r3,[r7,#12]
 3017 00ae 002B     	 cmp r3,#0
 3018 00b0 02D0     	 beq .L129
 708:../Libraries/XMCLib/src/xmc_dma.c ****         {
 709:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 3019              	 .loc 2 709 0
 3020 00b2 FB68     	 ldr r3,[r7,#12]
 3021 00b4 0120     	 movs r0,#1
 3022 00b6 9847     	 blx r3
 3023              	.L129:
 710:../Libraries/XMCLib/src/xmc_dma.c ****         }
 711:../Libraries/XMCLib/src/xmc_dma.c **** 
 712:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 3024              	 .loc 2 712 0
 3025 00b8 FB69     	 ldr r3,[r7,#28]
 3026 00ba DBB2     	 uxtb r3,r3
 3027 00bc 7868     	 ldr r0,[r7,#4]
 3028 00be 1946     	 mov r1,r3
 3029 00c0 0F22     	 movs r2,#15
 3030 00c2 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 713:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_BL
 714:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 715:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 716:../Libraries/XMCLib/src/xmc_dma.c **** 																	  
 717:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3031              	 .loc 2 717 0
 3032 00c6 00BF     	 nop
 3033 00c8 95E0     	 b .L118
 3034              	.L128:
 718:../Libraries/XMCLib/src/xmc_dma.c ****       }
 719:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3035              	 .loc 2 719 0
 3036 00ca FB69     	 ldr r3,[r7,#28]
 3037 00cc 0133     	 adds r3,r3,#1
 3038 00ce FB61     	 str r3,[r7,#28]
 3039              	.L127:
 699:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3040              	 .loc 2 699 0
 3041 00d0 7B69     	 ldr r3,[r7,#20]
 3042 00d2 002B     	 cmp r3,#0
 3043 00d4 DAD1     	 bne .L131
 3044 00d6 8EE0     	 b .L118
 3045              	.L126:
 720:../Libraries/XMCLib/src/xmc_dma.c ****     }
 721:../Libraries/XMCLib/src/xmc_dma.c ****   }
 722:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3046              	 .loc 2 722 0
 3047 00d8 7B69     	 ldr r3,[r7,#20]
 3048 00da 03F00203 	 and r3,r3,#2
 3049 00de 002B     	 cmp r3,#0
 3050 00e0 2AD0     	 beq .L132
 723:../Libraries/XMCLib/src/xmc_dma.c ****   {
 724:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 3051              	 .loc 2 724 0
 3052 00e2 7868     	 ldr r0,[r7,#4]
 3053 00e4 FFF7FEFF 	 bl XMC_DMA_GetChannelsBlockCompleteStatus
 3054 00e8 7861     	 str r0,[r7,#20]
 725:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3055              	 .loc 2 725 0
 3056 00ea 21E0     	 b .L133
 3057              	.L137:
 726:../Libraries/XMCLib/src/xmc_dma.c ****     {
 727:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3058              	 .loc 2 727 0
 3059 00ec 0122     	 movs r2,#1
 3060 00ee FB69     	 ldr r3,[r7,#28]
 3061 00f0 02FA03F3 	 lsl r3,r2,r3
 3062 00f4 3B61     	 str r3,[r7,#16]
 728:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3063              	 .loc 2 728 0
 3064 00f6 7A69     	 ldr r2,[r7,#20]
 3065 00f8 3B69     	 ldr r3,[r7,#16]
 3066 00fa 1340     	 ands r3,r3,r2
 3067 00fc 002B     	 cmp r3,#0
 3068 00fe 14D0     	 beq .L134
 729:../Libraries/XMCLib/src/xmc_dma.c ****       {
 730:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3069              	 .loc 2 730 0
 3070 0100 FB69     	 ldr r3,[r7,#28]
 3071 0102 9B00     	 lsls r3,r3,#2
 3072 0104 BA69     	 ldr r2,[r7,#24]
 3073 0106 1344     	 add r3,r3,r2
 3074 0108 1B68     	 ldr r3,[r3]
 3075 010a FB60     	 str r3,[r7,#12]
 731:../Libraries/XMCLib/src/xmc_dma.c **** 
 732:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 733:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3076              	 .loc 2 733 0
 3077 010c FB68     	 ldr r3,[r7,#12]
 3078 010e 002B     	 cmp r3,#0
 3079 0110 02D0     	 beq .L135
 734:../Libraries/XMCLib/src/xmc_dma.c ****         {
 735:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 3080              	 .loc 2 735 0
 3081 0112 FB68     	 ldr r3,[r7,#12]
 3082 0114 0220     	 movs r0,#2
 3083 0116 9847     	 blx r3
 3084              	.L135:
 736:../Libraries/XMCLib/src/xmc_dma.c ****         }
 737:../Libraries/XMCLib/src/xmc_dma.c **** 
 738:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 3085              	 .loc 2 738 0
 3086 0118 FB69     	 ldr r3,[r7,#28]
 3087 011a DBB2     	 uxtb r3,r3
 3088 011c 7868     	 ldr r0,[r7,#4]
 3089 011e 1946     	 mov r1,r3
 3090 0120 0E22     	 movs r2,#14
 3091 0122 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 739:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 740:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 741:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3092              	 .loc 2 741 0
 3093 0126 00BF     	 nop
 3094 0128 65E0     	 b .L118
 3095              	.L134:
 742:../Libraries/XMCLib/src/xmc_dma.c ****       }
 743:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3096              	 .loc 2 743 0
 3097 012a FB69     	 ldr r3,[r7,#28]
 3098 012c 0133     	 adds r3,r3,#1
 3099 012e FB61     	 str r3,[r7,#28]
 3100              	.L133:
 725:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3101              	 .loc 2 725 0
 3102 0130 7B69     	 ldr r3,[r7,#20]
 3103 0132 002B     	 cmp r3,#0
 3104 0134 DAD1     	 bne .L137
 3105 0136 5EE0     	 b .L118
 3106              	.L132:
 744:../Libraries/XMCLib/src/xmc_dma.c ****     }
 745:../Libraries/XMCLib/src/xmc_dma.c ****   }
 746:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3107              	 .loc 2 746 0
 3108 0138 7B69     	 ldr r3,[r7,#20]
 3109 013a 03F00403 	 and r3,r3,#4
 3110 013e 002B     	 cmp r3,#0
 3111 0140 2AD0     	 beq .L138
 747:../Libraries/XMCLib/src/xmc_dma.c ****   {
 748:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 3112              	 .loc 2 748 0
 3113 0142 7868     	 ldr r0,[r7,#4]
 3114 0144 FFF7FEFF 	 bl XMC_DMA_GetChannelsSourceTransactionCompleteStatus
 3115 0148 7861     	 str r0,[r7,#20]
 749:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3116              	 .loc 2 749 0
 3117 014a 21E0     	 b .L139
 3118              	.L143:
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 751:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3119              	 .loc 2 751 0
 3120 014c 0122     	 movs r2,#1
 3121 014e FB69     	 ldr r3,[r7,#28]
 3122 0150 02FA03F3 	 lsl r3,r2,r3
 3123 0154 3B61     	 str r3,[r7,#16]
 752:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3124              	 .loc 2 752 0
 3125 0156 7A69     	 ldr r2,[r7,#20]
 3126 0158 3B69     	 ldr r3,[r7,#16]
 3127 015a 1340     	 ands r3,r3,r2
 3128 015c 002B     	 cmp r3,#0
 3129 015e 14D0     	 beq .L140
 753:../Libraries/XMCLib/src/xmc_dma.c ****       {
 754:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3130              	 .loc 2 754 0
 3131 0160 FB69     	 ldr r3,[r7,#28]
 3132 0162 9B00     	 lsls r3,r3,#2
 3133 0164 BA69     	 ldr r2,[r7,#24]
 3134 0166 1344     	 add r3,r3,r2
 3135 0168 1B68     	 ldr r3,[r3]
 3136 016a FB60     	 str r3,[r7,#12]
 755:../Libraries/XMCLib/src/xmc_dma.c **** 
 756:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 757:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3137              	 .loc 2 757 0
 3138 016c FB68     	 ldr r3,[r7,#12]
 3139 016e 002B     	 cmp r3,#0
 3140 0170 02D0     	 beq .L141
 758:../Libraries/XMCLib/src/xmc_dma.c ****         {
 759:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 3141              	 .loc 2 759 0
 3142 0172 FB68     	 ldr r3,[r7,#12]
 3143 0174 0420     	 movs r0,#4
 3144 0176 9847     	 blx r3
 3145              	.L141:
 760:../Libraries/XMCLib/src/xmc_dma.c ****         }
 761:../Libraries/XMCLib/src/xmc_dma.c **** 
 762:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 3146              	 .loc 2 762 0
 3147 0178 FB69     	 ldr r3,[r7,#28]
 3148 017a DBB2     	 uxtb r3,r3
 3149 017c 7868     	 ldr r0,[r7,#4]
 3150 017e 1946     	 mov r1,r3
 3151 0180 0422     	 movs r2,#4
 3152 0182 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 763:../Libraries/XMCLib/src/xmc_dma.c ****         
 764:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3153              	 .loc 2 764 0
 3154 0186 00BF     	 nop
 3155 0188 35E0     	 b .L118
 3156              	.L140:
 765:../Libraries/XMCLib/src/xmc_dma.c ****       }
 766:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3157              	 .loc 2 766 0
 3158 018a FB69     	 ldr r3,[r7,#28]
 3159 018c 0133     	 adds r3,r3,#1
 3160 018e FB61     	 str r3,[r7,#28]
 3161              	.L139:
 749:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3162              	 .loc 2 749 0
 3163 0190 7B69     	 ldr r3,[r7,#20]
 3164 0192 002B     	 cmp r3,#0
 3165 0194 DAD1     	 bne .L143
 3166 0196 2EE0     	 b .L118
 3167              	.L138:
 767:../Libraries/XMCLib/src/xmc_dma.c ****     }
 768:../Libraries/XMCLib/src/xmc_dma.c ****   }
 769:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3168              	 .loc 2 769 0
 3169 0198 7B69     	 ldr r3,[r7,#20]
 3170 019a 03F00803 	 and r3,r3,#8
 3171 019e 002B     	 cmp r3,#0
 3172 01a0 29D0     	 beq .L118
 770:../Libraries/XMCLib/src/xmc_dma.c ****   {
 771:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 3173              	 .loc 2 771 0
 3174 01a2 7868     	 ldr r0,[r7,#4]
 3175 01a4 FFF7FEFF 	 bl XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
 3176 01a8 7861     	 str r0,[r7,#20]
 772:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3177              	 .loc 2 772 0
 3178 01aa 21E0     	 b .L144
 3179              	.L148:
 773:../Libraries/XMCLib/src/xmc_dma.c ****     {
 774:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3180              	 .loc 2 774 0
 3181 01ac 0122     	 movs r2,#1
 3182 01ae FB69     	 ldr r3,[r7,#28]
 3183 01b0 02FA03F3 	 lsl r3,r2,r3
 3184 01b4 3B61     	 str r3,[r7,#16]
 775:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3185              	 .loc 2 775 0
 3186 01b6 7A69     	 ldr r2,[r7,#20]
 3187 01b8 3B69     	 ldr r3,[r7,#16]
 3188 01ba 1340     	 ands r3,r3,r2
 3189 01bc 002B     	 cmp r3,#0
 3190 01be 14D0     	 beq .L145
 776:../Libraries/XMCLib/src/xmc_dma.c ****       {
 777:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3191              	 .loc 2 777 0
 3192 01c0 FB69     	 ldr r3,[r7,#28]
 3193 01c2 9B00     	 lsls r3,r3,#2
 3194 01c4 BA69     	 ldr r2,[r7,#24]
 3195 01c6 1344     	 add r3,r3,r2
 3196 01c8 1B68     	 ldr r3,[r3]
 3197 01ca FB60     	 str r3,[r7,#12]
 778:../Libraries/XMCLib/src/xmc_dma.c **** 
 779:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 780:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3198              	 .loc 2 780 0
 3199 01cc FB68     	 ldr r3,[r7,#12]
 3200 01ce 002B     	 cmp r3,#0
 3201 01d0 02D0     	 beq .L146
 781:../Libraries/XMCLib/src/xmc_dma.c ****         {
 782:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 3202              	 .loc 2 782 0
 3203 01d2 FB68     	 ldr r3,[r7,#12]
 3204 01d4 0820     	 movs r0,#8
 3205 01d6 9847     	 blx r3
 3206              	.L146:
 783:../Libraries/XMCLib/src/xmc_dma.c ****         }
 784:../Libraries/XMCLib/src/xmc_dma.c ****         
 785:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 3207              	 .loc 2 785 0
 3208 01d8 FB69     	 ldr r3,[r7,#28]
 3209 01da DBB2     	 uxtb r3,r3
 3210 01dc 7868     	 ldr r0,[r7,#4]
 3211 01de 1946     	 mov r1,r3
 3212 01e0 0822     	 movs r2,#8
 3213 01e2 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 786:../Libraries/XMCLib/src/xmc_dma.c **** 
 787:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3214              	 .loc 2 787 0
 3215 01e6 00BF     	 nop
 3216 01e8 05E0     	 b .L118
 3217              	.L145:
 788:../Libraries/XMCLib/src/xmc_dma.c ****       }
 789:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3218              	 .loc 2 789 0
 3219 01ea FB69     	 ldr r3,[r7,#28]
 3220 01ec 0133     	 adds r3,r3,#1
 3221 01ee FB61     	 str r3,[r7,#28]
 3222              	.L144:
 772:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3223              	 .loc 2 772 0
 3224 01f0 7B69     	 ldr r3,[r7,#20]
 3225 01f2 002B     	 cmp r3,#0
 3226 01f4 DAD1     	 bne .L148
 3227              	.L118:
 790:../Libraries/XMCLib/src/xmc_dma.c ****     }
 791:../Libraries/XMCLib/src/xmc_dma.c ****   }
 792:../Libraries/XMCLib/src/xmc_dma.c ****   else
 793:../Libraries/XMCLib/src/xmc_dma.c ****   {
 794:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 795:../Libraries/XMCLib/src/xmc_dma.c ****   }
 796:../Libraries/XMCLib/src/xmc_dma.c **** 
 797:../Libraries/XMCLib/src/xmc_dma.c **** }
 3228              	 .loc 2 797 0
 3229 01f6 2037     	 adds r7,r7,#32
 3230              	.LCFI236:
 3231              	 .cfi_def_cfa_offset 8
 3232 01f8 BD46     	 mov sp,r7
 3233              	.LCFI237:
 3234              	 .cfi_def_cfa_register 13
 3235              	 
 3236 01fa 80BD     	 pop {r7,pc}
 3237              	.L150:
 3238              	 .align 2
 3239              	.L149:
 3240 01fc 00000000 	 .word dma0_event_handlers
 3241              	 .cfi_endproc
 3242              	.LFE194:
 3244              	 .text
 3245              	.Letext0:
 3246              	 .file 3 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3247              	 .file 4 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3248              	 .file 5 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 3249              	 .file 6 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 3250              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 3251              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:19     .text.XMC_DMA_GetEventStatus:00000000 $t
    {standard input}:23     .text.XMC_DMA_GetEventStatus:00000000 XMC_DMA_GetEventStatus
    {standard input}:63     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 $t
    {standard input}:67     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 XMC_DMA_GetChannelsTransferCompleteStatus
    {standard input}:106    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 $t
    {standard input}:110    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 XMC_DMA_GetChannelsBlockCompleteStatus
    {standard input}:149    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 $t
    {standard input}:153    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsSourceTransactionCompleteStatus
    {standard input}:192    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 $t
    {standard input}:196    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
    {standard input}:235    .text.XMC_DMA_GetChannelsErrorStatus:00000000 $t
    {standard input}:239    .text.XMC_DMA_GetChannelsErrorStatus:00000000 XMC_DMA_GetChannelsErrorStatus
                            *COM*:00000020 dma0_event_handlers
    {standard input}:279    .text.XMC_DMA_Init:00000000 $t
    {standard input}:284    .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:324    .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:319    .text.XMC_DMA_Enable:00000000 $t
    {standard input}:364    .text.XMC_DMA_Enable:00000024 $d
    {standard input}:369    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:374    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:414    .text.XMC_DMA_Disable:00000024 $d
    {standard input}:419    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:424    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:522    .text.XMC_DMA_IsEnabled:00000084 $d
    {standard input}:527    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:532    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:599    .text.XMC_DMA_EnableRequestLine:00000050 $d
    {standard input}:604    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:609    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:655    .text.XMC_DMA_DisableRequestLine:0000002c $d
    {standard input}:660    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:665    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:720    .text.XMC_DMA_ClearRequestLine:0000003c $d
    {standard input}:725    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:730    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:780    .text.XMC_DMA_GetOverrunStatus:00000034 $d
    {standard input}:785    .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:790    .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:835    .text.XMC_DMA_ClearOverrunStatus:00000028 $d
    {standard input}:840    .text.XMC_DMA_CH_Enable:00000000 $t
    {standard input}:845    .text.XMC_DMA_CH_Enable:00000000 XMC_DMA_CH_Enable
    {standard input}:888    .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:893    .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:947    .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:952    .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:1001   .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:1006   .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:1866   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1296   .text.XMC_DMA_CH_Init:00000224 $d
    {standard input}:1305   .text.XMC_DMA_CH_Init:00000248 $t
    {standard input}:1439   .text.XMC_DMA_CH_Init:00000350 $d
    {standard input}:1442   .text.XMC_DMA_CH_Init:00000354 $t
    {standard input}:1528   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1533   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1586   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1591   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1644   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1649   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:1701   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:1706   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:1781   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:1786   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:1861   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:1935   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:1940   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:2021   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:2026   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:2095   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:2100   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:2153   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:2158   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:2227   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:2232   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:2285   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:2290   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:2362   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:2367   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:2439   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:2444   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:2497   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:2502   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:2555   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:2560   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:2613   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:2618   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:2671   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:2676   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:2729   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:2734   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:2776   .text.XMC_DMA_CH_SetEventHandler:00000024 $d
    {standard input}:2781   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:2786   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:2836   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:2841   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:2891   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:2896   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:3240   .text.XMC_DMA_IRQHandler:000001fc $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_IsPeripheralClockGated
