   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .fpu softvfp
   4              	 .eabi_attribute 20,1
   5              	 .eabi_attribute 21,1
   6              	 .eabi_attribute 23,3
   7              	 .eabi_attribute 24,1
   8              	 .eabi_attribute 25,1
   9              	 .eabi_attribute 26,1
  10              	 .eabi_attribute 30,6
  11              	 .eabi_attribute 34,1
  12              	 .eabi_attribute 18,4
  13              	 .thumb
  14              	 .file "main.c"
  15              	 .text
  16              	.Ltext0:
  17              	 .cfi_sections .debug_frame
  18              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
  19              	 .align 2
  20              	 .thumb
  21              	 .thumb_func
  23              	XMC_GPIO_SetOutputHigh:
  24              	.LFB129:
  25              	 .file 1 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_gpio.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @cond
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * XMClib v2.0.0 - XMC Peripheral Driver Library
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                             
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                                                              
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * 
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * 
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                                                              
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *                                                                              
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Change History
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * --------------
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *      
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @endcond
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /*******************************************************************************
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * HEADER FILES
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *******************************************************************************/
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @{
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Input mode features:
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC1
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * 
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Output mode features:
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC4
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *@{
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /*******************************************************************************
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * MACROS
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *******************************************************************************/
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk 	/**< Port input output control register(Pn_IOCR),
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 													 PCx bit field-Mask :0xf8 */
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U) 	/**< Port input output control register(Pn_IOCR),
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 													 PCx bit field-shift size */
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****                                             
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****                                             
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /*******************************************************************************
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * ENUMS
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *******************************************************************************/
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Defines the direction and characteristics of a pin. Use type \a XMC_GPIO_MODE_t for this enum. F
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * with alternate functions, the port pins are directly connected to input or output functions of t
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** typedef enum XMC_GPIO_MODE
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** {
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_TRISTATE = 0x00UL, 	/**<  No internal pull device active */
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_PULL_DOWN = 0x08UL, 	/**<  Internal pull-down device active */
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_PULL_UP = 0x10UL, 	/**<  Internal pull-up device active */
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_SAMPLING = 0x18UL, 	/**<  No internal pull device active;Pn_OUTx continuously
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   	  	  	  	  	  	  	  	  	  	  	  	  input value */
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_INVERTED_TRISTATE = 0x20UL, 	/**<  Inverted no internal pull device active */
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_INVERTED_PULL_DOWN = 0x28UL, 	/**<  Inverted internal pull-down device active
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_INVERTED_PULL_UP = 0x30UL, 	/**<  Inverted internal pull-up device active */
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_INPUT_INVERTED_SAMPLING = 0x38UL, 	/**<  Inverted no internal pull device active;Pn
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   	  	  	  	  	  	  	  	  	  	  	  	  	  	  samples the input value */
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL = 0x80UL, 			/**< Push-pull general-purpose output */
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1 = 0x88UL, 	/**<  Push-pull alternate output function 1 */
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT2 = 0x90UL, 	/**<  Push-pull alternate output function 2 */
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT3 = 0x98UL, 	/**<  Push-pull alternate output function 3 */
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT4 = 0xA0UL, 	/**<  Push-pull alternate output function 4 */
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT5 = 0xA8UL, 	/**<  Push-pull alternate output function 5 */
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT6 = 0xB0UL, 	/**<  Push-pull alternate output function 6 */
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT7 = 0xB8UL, 	/**<  Push-pull alternate output function 7 */
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN = 0xc0UL, 		/**< Open-drain general-purpose output */
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT1 = 0xc8UL, 	/**<  Push-pull alternate output function 1 */
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT2 = 0xD0UL, 	/**<  Push-pull alternate output function 2 */
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT3 = 0xD8UL, 	/**<  Push-pull alternate output function 3 */
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT4 = 0xE0UL, 	/**<  Push-pull alternate output function 4 */
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT5 = 0xE8UL, 	/**<  Push-pull alternate output function 5 */
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT6 = 0xF0UL, 	/**<  Push-pull alternate output function 6 */
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_MODE_OUTPUT_OPEN_DRAIN_ALT7 = 0xF8UL 	/**<  Push-pull alternate output function 7 */
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** } XMC_GPIO_MODE_t;
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** {
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** {
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /*******************************************************************************
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *******************************************************************************/
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #else
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #error "xmc_gpio.h: familiy device not supported"
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #endif
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /*******************************************************************************
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * API PROTOTYPES
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *******************************************************************************/
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #ifdef __cplusplus
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** extern "C" {
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** #endif
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC1
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \if XMC4
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \endif
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *  None
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *  None
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** {
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** }
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return None
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** {
  26              	 .loc 1 291 0
  27              	 .cfi_startproc
  28              	 
  29              	 
  30              	 
  31 0000 80B4     	 push {r7}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 4
  34              	 .cfi_offset 7,-4
  35 0002 83B0     	 sub sp,sp,#12
  36              	.LCFI1:
  37              	 .cfi_def_cfa_offset 16
  38 0004 00AF     	 add r7,sp,#0
  39              	.LCFI2:
  40              	 .cfi_def_cfa_register 7
  41 0006 7860     	 str r0,[r7,#4]
  42 0008 0B46     	 mov r3,r1
  43 000a FB70     	 strb r3,[r7,#3]
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
  44              	 .loc 1 294 0
  45 000c FB78     	 ldrb r3,[r7,#3]
  46 000e 0122     	 movs r2,#1
  47 0010 9A40     	 lsls r2,r2,r3
  48 0012 7B68     	 ldr r3,[r7,#4]
  49 0014 5A60     	 str r2,[r3,#4]
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** }
  50              	 .loc 1 295 0
  51 0016 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0018 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 001a 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 001e 7047     	 bx lr
  63              	 .cfi_endproc
  64              	.LFE129:
  66              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
  67              	 .align 2
  68              	 .thumb
  69              	 .thumb_func
  71              	XMC_GPIO_SetOutputLow:
  72              	.LFB130:
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** /**
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @param  pin	port pin number.
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * @return  None
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  *
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****  */
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** {
  73              	 .loc 1 317 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78 0000 80B4     	 push {r7}
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 83B0     	 sub sp,sp,#12
  83              	.LCFI7:
  84              	 .cfi_def_cfa_offset 16
  85 0004 00AF     	 add r7,sp,#0
  86              	.LCFI8:
  87              	 .cfi_def_cfa_register 7
  88 0006 7860     	 str r0,[r7,#4]
  89 0008 0B46     	 mov r3,r1
  90 000a FB70     	 strb r3,[r7,#3]
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** 
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
  91              	 .loc 1 320 0
  92 000c FB78     	 ldrb r3,[r7,#3]
  93 000e 4FF48032 	 mov r2,#65536
  94 0012 9A40     	 lsls r2,r2,r3
  95 0014 7B68     	 ldr r3,[r7,#4]
  96 0016 5A60     	 str r2,[r3,#4]
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Libraries\XMCLib\inc\xmc_gpio.h **** }
  97              	 .loc 1 321 0
  98 0018 0C37     	 adds r7,r7,#12
  99              	.LCFI9:
 100              	 .cfi_def_cfa_offset 4
 101 001a BD46     	 mov sp,r7
 102              	.LCFI10:
 103              	 .cfi_def_cfa_register 13
 104              	 
 105 001c 5DF8047B 	 ldr r7,[sp],#4
 106              	.LCFI11:
 107              	 .cfi_restore 7
 108              	 .cfi_def_cfa_offset 0
 109 0020 7047     	 bx lr
 110              	 .cfi_endproc
 111              	.LFE130:
 113 0022 00BF     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 114              	 .align 2
 115              	 .thumb
 116              	 .thumb_func
 118              	DIGITAL_IO_SetOutputHigh:
 119              	.LFB137:
 120              	 .file 2 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/DIGITAL_IO/digital_io.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.c
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-06-20
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.6 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  *
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  */
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #endif
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @{
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** {
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @}
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @{
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t *const gpio_config;   /**< mode, initial output level and pad driver stre
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @}
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** #endif
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @{
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  }
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * None
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   else
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     {
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  }
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return None
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * {
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   else
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     {
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     }
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   {
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   }
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * }
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 121              	 .loc 2 263 0
 122              	 .cfi_startproc
 123              	 
 124              	 
 125 0000 80B5     	 push {r7,lr}
 126              	.LCFI12:
 127              	 .cfi_def_cfa_offset 8
 128              	 .cfi_offset 7,-8
 129              	 .cfi_offset 14,-4
 130 0002 82B0     	 sub sp,sp,#8
 131              	.LCFI13:
 132              	 .cfi_def_cfa_offset 16
 133 0004 00AF     	 add r7,sp,#0
 134              	.LCFI14:
 135              	 .cfi_def_cfa_register 7
 136 0006 7860     	 str r0,[r7,#4]
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 137              	 .loc 2 265 0
 138 0008 7B68     	 ldr r3,[r7,#4]
 139 000a 5A68     	 ldr r2,[r3,#4]
 140 000c 7B68     	 ldr r3,[r7,#4]
 141 000e 1B7A     	 ldrb r3,[r3,#8]
 142 0010 1046     	 mov r0,r2
 143 0012 1946     	 mov r1,r3
 144 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** }
 145              	 .loc 2 266 0
 146 0018 0837     	 adds r7,r7,#8
 147              	.LCFI15:
 148              	 .cfi_def_cfa_offset 8
 149 001a BD46     	 mov sp,r7
 150              	.LCFI16:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 001c 80BD     	 pop {r7,pc}
 154              	 .cfi_endproc
 155              	.LFE137:
 157 001e 00BF     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 158              	 .align 2
 159              	 .thumb
 160              	 .thumb_func
 162              	DIGITAL_IO_SetOutputLow:
 163              	.LFB138:
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** /**
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @return None
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * @code
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  {
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    {
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    }
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    else
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *      {
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *      }
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    }
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    {
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *    }
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** * }
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** */
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** 
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** {
 164              	 .loc 2 310 0
 165              	 .cfi_startproc
 166              	 
 167              	 
 168 0000 80B5     	 push {r7,lr}
 169              	.LCFI17:
 170              	 .cfi_def_cfa_offset 8
 171              	 .cfi_offset 7,-8
 172              	 .cfi_offset 14,-4
 173 0002 82B0     	 sub sp,sp,#8
 174              	.LCFI18:
 175              	 .cfi_def_cfa_offset 16
 176 0004 00AF     	 add r7,sp,#0
 177              	.LCFI19:
 178              	 .cfi_def_cfa_register 7
 179 0006 7860     	 str r0,[r7,#4]
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 180              	 .loc 2 312 0
 181 0008 7B68     	 ldr r3,[r7,#4]
 182 000a 5A68     	 ldr r2,[r3,#4]
 183 000c 7B68     	 ldr r3,[r7,#4]
 184 000e 1B7A     	 ldrb r3,[r3,#8]
 185 0010 1046     	 mov r0,r2
 186 0012 1946     	 mov r1,r3
 187 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DIGITAL_IO\digital_io.h **** }
 188              	 .loc 2 313 0
 189 0018 0837     	 adds r7,r7,#8
 190              	.LCFI20:
 191              	 .cfi_def_cfa_offset 8
 192 001a BD46     	 mov sp,r7
 193              	.LCFI21:
 194              	 .cfi_def_cfa_register 13
 195              	 
 196 001c 80BD     	 pop {r7,pc}
 197              	 .cfi_endproc
 198              	.LFE138:
 200 001e 00BF     	 .section .text.DMA_CH_Enable,"ax",%progbits
 201              	 .align 2
 202              	 .thumb
 203              	 .thumb_func
 205              	DMA_CH_Enable:
 206              	.LFB430:
 207              	 .file 3 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/DMA_CH/dma_ch.h"
   1:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
   2:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
   3:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @file dma_ch.h
   4:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @date 2015-07-09
   5:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
   6:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * NOTE:
   7:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
   9:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @cond
  10:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  **************************************************************************************************
  11:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * DMA_CH v4.1.4 - Perform single and multi-block data transfer using the GPDMA module
  12:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  13:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * All rights reserved.
  15:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  16:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * following conditions are met:
  18:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  19:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   disclaimer.
  21:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  22:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  25:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   products derived from this software without specific prior written permission.
  27:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  28:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  36:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  **************************************************************************************************
  39:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  40:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Change History
  41:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * --------------
  42:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  43:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * 2015-02-20:
  44:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     - Initial version <br>
  45:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  46:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * 2015-04-15:
  47:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     - Handle src/dst address updates with new APIs in DMA LLD <br>
  48:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     - Documentation updates <br>
  49:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  50:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * 2015-05-20:
  51:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     - Some of the functions are now static inline <br>
  52:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     - Type changes in formal arguments <br>
  53:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  54:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * 2015-06-20:
  55:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     - Added new API DMA_CH_Reload() <br>
  56:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
  57:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcond
  58:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
  59:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  
  60:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #ifndef DMA_CH_H
  61:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #define DMA_CH_H
  62:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
  63:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**************************************************************************************************
  64:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * HEADER FILES
  65:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  **************************************************************************************************
  66:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
  67:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #include "xmc_dma.h"
  68:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
  69:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  70:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  71:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  72:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #error "DMA_CH requires XMC Peripheral Library v2.0.0 or higher"
  73:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #endif
  74:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
  75:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #include "DAVE_Common.h"
  76:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #include "../GLOBAL_DMA/global_dma.h"
  77:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
  78:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**************************************************************************************************
  79:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * MACROS
  80:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  **************************************************************************************************
  81:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
  82:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**************************************************************************************************
  83:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * ENUMERATIONS
  84:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  **************************************************************************************************
  85:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
  86:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
  87:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @ingroup DMA_CH_enumerations
  88:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @{
  89:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
  90:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   
  91:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
  92:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Describe return status of DMA_CH APP functions
  93:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
  94:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** typedef enum DMA_CH_STATUS_t
  95:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
  96:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   DMA_CH_STATUS_SUCCESS = 0U, /**< DMA operation successful */
  97:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   DMA_CH_STATUS_FAILURE,      /**< DMA operation failure */
  98:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   DMA_CH_STATUS_CHANNEL_BUSY  /**< DMA channel busy */
  99:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** } DMA_CH_STATUS_t;
 100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @}
 103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  
 105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**************************************************************************************************
 106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * DATA STRUCTURES
 107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  **************************************************************************************************
 108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  
 109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @ingroup DMA_CH_datastructures
 111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @{
 112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief DMA channel configuration structure
 116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** typedef struct DMA_CH_CONFIG
 118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_CONFIG_t ch_config; /**< A pointer to DMA channel configuration */
 120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_EVENT_HANDLER_t callback; /**< User callback for DMA events */
 121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   uint32_t events; /**< DMA events */
 122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** } DMA_CH_CONFIG_t;
 123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief DMA_CH APP structure
 126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** typedef struct DMA_CH_t
 128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   GLOBAL_DMA_t *const dma_global; /**< A pointer to GLOBAL_DMA handle structure */
 130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   DMA_CH_CONFIG_t *const config; /**< A pointer to DMA_CH configuration structure */
 131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   void (*reload)(struct DMA_CH_t *obj);
 132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   uint8_t ch_num; /**< Channel number */
 133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** } DMA_CH_t;
 134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @}
 137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /* Support for C++ */
 140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #ifdef __cplusplus
 141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** extern "C" {
 142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** #endif
 143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**************************************************************************************************
 145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * API PROTOTYPES
 146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  **************************************************************************************************
 147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  
 148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @ingroup DMA_CH_apidoc
 150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @{
 151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Get DMA_CH APP version
 155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return DAVE_APP_VERSION_t APP version details (major, minor and patch number)
 156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function can be used to check application software compatibility with a
 159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * specific version of the APP.
 160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
 167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_APP_VERSION_t version;
 169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Initialize DMA_CH APP. The GLOBAL_DMA APP
 171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // is initialized in the DMA_CH initialization
 172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // routine
 173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
 174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   version = DMA_CH_GetAppVersion();
 176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (version.major != 4U)
 177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Probably, not the right version.
 179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 180:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 181:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // More code here
 182:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while(1)
 183:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 184:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 185:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   return (0);
 186:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 187:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 188:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 189:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** DAVE_APP_VERSION_t DMA_CH_GetAppVersion(void);
 190:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 191:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 192:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Enable DMA channel
 193:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to DMA_CH_t, pointing to the DMA_CH handle configuration
 194:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
 195:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 196:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 197:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function enables a DMA channel. All DMA transactions are triggered when the
 198:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * channels are enabled.
 199:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 200:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 201:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 202:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 203:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <XMC4500.h>
 204:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 205:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 206:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
 207:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 208:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_STATUS_t status;
 209:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 210:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   status = DAVE_Init();
 211:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 212:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (status == DAVE_STATUS_SUCCESS)
 213:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 214:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
 215:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 216:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 217:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 218:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Something went wrong.
 219:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     while (1U);
 220:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 221:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 222:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // More code here.
 223:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while (1U);
 224:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 225:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   return 1;
 226:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 227:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 228:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 229:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_Enable(DMA_CH_t *const obj)
 230:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 208              	 .loc 3 230 0
 209              	 .cfi_startproc
 210              	 
 211              	 
 212 0000 80B5     	 push {r7,lr}
 213              	.LCFI22:
 214              	 .cfi_def_cfa_offset 8
 215              	 .cfi_offset 7,-8
 216              	 .cfi_offset 14,-4
 217 0002 82B0     	 sub sp,sp,#8
 218              	.LCFI23:
 219              	 .cfi_def_cfa_offset 16
 220 0004 00AF     	 add r7,sp,#0
 221              	.LCFI24:
 222              	 .cfi_def_cfa_register 7
 223 0006 7860     	 str r0,[r7,#4]
 231:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_ASSERT("DMA_CH_Enable: NULL DMA_CH_t object", (obj != NULL));
 232:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 233:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_Enable(obj->dma_global->dma, obj->ch_num);
 224              	 .loc 3 233 0
 225 0008 7B68     	 ldr r3,[r7,#4]
 226 000a 1B68     	 ldr r3,[r3]
 227 000c 1A68     	 ldr r2,[r3]
 228 000e 7B68     	 ldr r3,[r7,#4]
 229 0010 1B7B     	 ldrb r3,[r3,#12]
 230 0012 1046     	 mov r0,r2
 231 0014 1946     	 mov r1,r3
 232 0016 FFF7FEFF 	 bl XMC_DMA_CH_Enable
 234:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 233              	 .loc 3 234 0
 234 001a 0837     	 adds r7,r7,#8
 235              	.LCFI25:
 236              	 .cfi_def_cfa_offset 8
 237 001c BD46     	 mov sp,r7
 238              	.LCFI26:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 001e 80BD     	 pop {r7,pc}
 242              	 .cfi_endproc
 243              	.LFE430:
 245              	 .section .text.DMA_CH_Disable,"ax",%progbits
 246              	 .align 2
 247              	 .thumb
 248              	 .thumb_func
 250              	DMA_CH_Disable:
 251              	.LFB431:
 235:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 236:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 237:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Disable DMA channel
 238:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to DMA_CH_t, pointing to the DMA_CH handle configuration
 239:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
 240:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 241:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 242:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function disables a DMA channel. All DMA transactions are stopped when the
 243:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * channels are disabled.
 244:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 245:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 246:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 247:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 248:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <XMC4500.h>
 249:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 250:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 251:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //
 252:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // The configuration structures DMA_CH_0_CONFIG & DMA_CH_0 must look like this:
 253:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //
 254:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // DMA_CH_CONFIG_t DMA_CH_0_CONFIG =
 255:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // {
 256:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //   {
 257:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //     {
 258:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .enable_interrupt = true, // Interrupts enabled
 259:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .dst_transfer_width = XMC_DMA_CH_TRANSFER_WIDTH_32, // Destination transfer width
 260:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .src_transfer_width = XMC_DMA_CH_TRANSFER_WIDTH_32, // Source transfer width
 261:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .dst_address_count_mode = XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT, // Destination addre
 262:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .src_address_count_mode = XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT, // Source address co
 263:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .dst_burst_length = XMC_DMA_CH_BURST_LENGTH_1, // Destination burst length
 264:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .src_burst_length = XMC_DMA_CH_BURST_LENGTH_1, // Source burst length
 265:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .enable_src_gather = false, // Source gather enabled?
 266:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .enable_dst_scatter = false, // Destination scatter enabled?
 267:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //       .transfer_flow = XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA, // Transfer flow
 268:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //     },
 269:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //     .block_size = 16U, // Block size
 270:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //     .transfer_type = XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, //
 271:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //     .priority = XMC_DMA_CH_PRIORITY_0, // Priority level
 272:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //     .src_handshaking = XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE, // Source handshaking
 273:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //     .dst_handshaking = XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE  // Destination handshaking
 274:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //   },
 275:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //   user_event_handler,
 276:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //   XMC_DMA_CH_EVENT_ERROR | XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE | XMC_DMA_CH_EVENT_TRANSF
 277:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // };
 278:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //
 279:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // DMA_CH_t DMA_CH_0 =
 280:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // {
 281:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //   .dma_global = &GLOBAL_DMA_0, // Which DMA_GLOBAL instance?
 282:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //   .config = &DMA_CH_0_CONFIG, // Channel configuration
 283:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * //   .ch_num = 0U, // Channel number
 284:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // };
 285:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 286:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t tx_buf[256];
 287:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t rx_buf[256];
 288:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 289:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_cmplt_cb = 0, block_count = 0;
 290:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t dma_error_cb = 0;
 291:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_block_cmplt = 0;
 292:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t src_xfer_cmplt = 0;
 293:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t dest_xfer_cmplt = 0;
 294:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t multi_block = 0;
 295:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 296:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * void user_event_handler (XMC_DMA_CH_EVENT_t event)
 297:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 298:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_t *dma_ch;
 299:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   dma_ch = &DMA_CH_0;
 300:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 301:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Check and update the volatile flags
 302:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   event = XMC_DMA_CH_GetEventStatus(dma_ch->dma_global->dma, dma_ch->ch_num);
 303:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if ((event & XMC_DMA_CH_EVENT_ERROR) != 0)
 304:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 305:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_error_cb = 1;
 306:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 307:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if ((event & XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != 0)
 308:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 309:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_cmplt_cb = 1;
 310:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (multi_block)
 311:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 312:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       block_count++;
 313:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       DMA_CH_Disable(dma_ch);
 314:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 315:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 316:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if ((event & XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != 0)
 317:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 318:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_block_cmplt = 1;
 319:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     block_count++;
 320:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (block_count == 3)
 321:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 322:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       XMC_DMA_CH_RequestLastMultiblockTransfer(dma_ch->dma_global->dma, dma_ch->ch_num);
 323:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 324:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 325:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if ((event & XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != 0)
 326:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 327:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     src_xfer_cmplt = 1;
 328:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 329:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if ((event & XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != 0)
 330:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 331:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dest_xfer_cmplt = 1;
 332:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 333:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 334:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 335:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main (void)
 336:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 337:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_STATUS_t status;
 338:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   uint8_t i = 0;
 339:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 340:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   status = DAVE_Init();
 341:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 342:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   for(i = 0; i < 100; i++)
 343:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 344:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     tx_buf[i] = i;
 345:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 346:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 347:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (status == DAVE_STATUS_SUCCESS)
 348:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 349:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
 350:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 351:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 352:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 353:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     while(1U);
 354:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 355:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 356:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while (1U);
 357:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 358:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   return 1;
 359:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 360:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 361:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 362:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_Disable(DMA_CH_t *const obj)
 363:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 252              	 .loc 3 363 0
 253              	 .cfi_startproc
 254              	 
 255              	 
 256 0000 80B5     	 push {r7,lr}
 257              	.LCFI27:
 258              	 .cfi_def_cfa_offset 8
 259              	 .cfi_offset 7,-8
 260              	 .cfi_offset 14,-4
 261 0002 82B0     	 sub sp,sp,#8
 262              	.LCFI28:
 263              	 .cfi_def_cfa_offset 16
 264 0004 00AF     	 add r7,sp,#0
 265              	.LCFI29:
 266              	 .cfi_def_cfa_register 7
 267 0006 7860     	 str r0,[r7,#4]
 364:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_ASSERT("DMA_CH_Disable: NULL DMA_CH_t object", (obj != NULL));
 365:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 366:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_Disable(obj->dma_global->dma, obj->ch_num);
 268              	 .loc 3 366 0
 269 0008 7B68     	 ldr r3,[r7,#4]
 270 000a 1B68     	 ldr r3,[r3]
 271 000c 1A68     	 ldr r2,[r3]
 272 000e 7B68     	 ldr r3,[r7,#4]
 273 0010 1B7B     	 ldrb r3,[r3,#12]
 274 0012 1046     	 mov r0,r2
 275 0014 1946     	 mov r1,r3
 276 0016 FFF7FEFF 	 bl XMC_DMA_CH_Disable
 367:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 277              	 .loc 3 367 0
 278 001a 0837     	 adds r7,r7,#8
 279              	.LCFI30:
 280              	 .cfi_def_cfa_offset 8
 281 001c BD46     	 mov sp,r7
 282              	.LCFI31:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 001e 80BD     	 pop {r7,pc}
 286              	 .cfi_endproc
 287              	.LFE431:
 289              	 .section .text.DMA_CH_Reload,"ax",%progbits
 290              	 .align 2
 291              	 .thumb
 292              	 .thumb_func
 294              	DMA_CH_Reload:
 295              	.LFB442:
 368:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 369:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 370:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Check if a DMA channel is enabled
 371:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to DMA_CH_t, pointing to the DMA_CH handle configuration
 372:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return bool "true" if enabled, "false" otherwise
 373:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 374:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 375:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function checks if the given DMA channel is enabled.
 376:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 377:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 378:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 379:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 380:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <XMC4500.h>
 381:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 382:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 383:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
 384:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 385:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_STATUS_t status;
 386:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 387:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   status = DAVE_Init();
 388:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 389:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (status == DAVE_STATUS_SUCCESS)
 390:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 391:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (DMA_CH_IsEnabled(&DMA_CH_0) == false)
 392:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 393:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       DMA_CH_Enable(&DMA_CH_0);
 394:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 395:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 396:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 397:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 398:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Something went wrong.
 399:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     while (1U);
 400:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 401:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 402:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // More code here.
 403:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while (1U);
 404:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 405:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   return 1;
 406:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 407:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 408:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 409:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE bool DMA_CH_IsEnabled(DMA_CH_t *const obj)
 410:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 411:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_ASSERT("DMA_CH_IsEnabled: NULL DMA_CH_t object", (obj != NULL));
 412:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 413:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   return XMC_DMA_CH_IsEnabled(obj->dma_global->dma, obj->ch_num);
 414:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 415:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 416:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 417:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Suspend DMA channel
 418:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to DMA_CH_t, pointing to the DMA_CH handle configuration
 419:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
 420:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 421:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 422:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function suspends the DMA channel
 423:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 424:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 425:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 426:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 427:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 428:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 429:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t tx_buf[4096];
 430:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t rx_buf[4096];
 431:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 432:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_cmplt_cb = 0;
 433:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t dma_error_cb = 0;
 434:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_block_cmplt = 0;
 435:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 436:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * void dma_ch_event_handler (XMC_DMA_CH_EVENT_t e)
 437:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 438:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   uint32_t event = 0;
 439:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_t *dma_ch;
 440:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 441:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   dma_ch = &DMA_CH_0;
 442:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 443:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Check and update the volatile flags
 444:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   event = XMC_DMA_CH_GetEventStatus(dma_ch->dma_global->dma, dma_ch->ch_num);
 445:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if ((event & XMC_DMA_CH_EVENT_ERROR) != 0)
 446:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 447:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_error_cb = 1;
 448:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 449:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if((event & XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != 0)
 450:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 451:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_cmplt_cb = 1;
 452:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 453:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if ((event & XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != 0)
 454:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 455:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_block_cmplt = 1;
 456:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 457:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 458:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 459:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main (void)
 460:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 461:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   uint32_t dma_ch_susp_res_xfer_status = 0;
 462:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 463:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   xfer_cmplt_cb = 0;
 464:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   dma_error_cb = 0;
 465:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 466:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 467:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Do 16k- 4bytes single transfer. Enable channel and suspend before it hits
 468:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // the xfer complete callback.
 469:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 470:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Later, check if suspended and then resume the transfer
 471:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 472:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 473:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // The user must then configure block size as 4095 and the
 474:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // transfer width as XMC_DMA_CH_TRANSFER_WIDTH_32 in the UI.
 475:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 476:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Enable the channel
 477:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
 478:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 479:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
 480:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 481:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 482:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if ((xfer_cmplt_cb == 0) && (dma_error_cb == 0))
 483:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 484:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Suspend the channel
 485:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Suspend(&DMA_CH_0);
 486:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 487:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Is channel suspended?
 488:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (!DMA_CH_IsSuspended(&DMA_CH_0))
 489:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 490:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       dma_ch_susp_res_xfer_status++;
 491:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 492:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Resume the channel
 493:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Resume(&DMA_CH_0);
 494:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 495:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 496:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 497:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_ch_susp_res_xfer_status++;
 498:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 499:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 500:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while ((xfer_cmplt_cb == 0) && (dma_error_cb == 0));
 501:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 502:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (xfer_cmplt_cb)
 503:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 504:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_cmplt_cb = 0;
 505:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Compare the contents of source and destination memory
 506:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (memcmp(tx_buf, rx_buf, DMA_CH_0.config->ch_config.block_size) != 0)
 507:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 508:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       dma_ch_susp_res_xfer_status++;
 509:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 510:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 511:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 512:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 513:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_ch_susp_res_xfer_status++;
 514:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_error_cb = 0;
 515:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 516:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 517:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!dma_ch_susp_res_xfer_status)
 518:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 519:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Success!
 520:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 521:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 522:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 523:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Failed, something went wrong.
 524:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 525:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 526:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 527:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 528:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_Suspend(DMA_CH_t *const obj)
 529:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 530:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_ASSERT("DMA_CH_Suspend: NULL DMA_CH_t object", (obj != NULL));
 531:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 532:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_Suspend(obj->dma_global->dma, obj->ch_num);
 533:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 534:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 535:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 536:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Resume DMA channel
 537:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to DMA_CH_t, pointing to the DMA_CH handle configuration
 538:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
 539:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 540:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 541:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function resumes the DMA channel
 542:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 543:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 544:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 545:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 546:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 547:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 548:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t tx_buf[4096];
 549:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t rx_buf[4096];
 550:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 551:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_cmplt_cb = 0;
 552:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t dma_error_cb = 0;
 553:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_block_cmplt = 0;
 554:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 555:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * void dma_ch_event_handler (XMC_DMA_CH_EVENT_t e)
 556:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 557:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   uint32_t event = 0;
 558:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_t *dma_ch;
 559:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 560:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   dma_ch = &DMA_CH_0;
 561:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 562:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Check and update the volatile flags
 563:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   event = XMC_DMA_CH_GetEventStatus(dma_ch->dma_global->dma, dma_ch->ch_num);
 564:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if ((event & XMC_DMA_CH_EVENT_ERROR) != 0)
 565:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 566:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_error_cb = 1;
 567:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 568:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if((event & XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != 0)
 569:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 570:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_cmplt_cb = 1;
 571:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 572:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if ((event & XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != 0)
 573:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 574:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_block_cmplt = 1;
 575:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 576:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 577:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 578:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main (void)
 579:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 580:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   uint32_t dma_ch_susp_res_xfer_status = 0;
 581:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 582:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   xfer_cmplt_cb = 0;
 583:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   dma_error_cb = 0;
 584:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 585:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 586:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Do 16k- 4bytes single transfer. Enable channel and suspend before it hits
 587:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // the xfer complete callback.
 588:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 589:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Later, check if suspended and then resume the transfer
 590:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 591:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 592:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // The user must then configure block size as 4095 and the
 593:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // transfer width as XMC_DMA_CH_TRANSFER_WIDTH_32 in the UI.
 594:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 595:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Enable the channel
 596:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
 597:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 598:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
 599:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 600:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 601:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if ((xfer_cmplt_cb == 0) && (dma_error_cb == 0))
 602:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 603:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Suspend the channel
 604:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Suspend(&DMA_CH_0);
 605:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 606:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Is channel suspended?
 607:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (!DMA_CH_IsSuspended(&DMA_CH_0))
 608:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 609:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       dma_ch_susp_res_xfer_status++;
 610:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 611:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Resume the channel
 612:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Resume(&DMA_CH_0);
 613:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 614:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 615:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 616:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_ch_susp_res_xfer_status++;
 617:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 618:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 619:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while ((xfer_cmplt_cb == 0) && (dma_error_cb == 0));
 620:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 621:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (xfer_cmplt_cb)
 622:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 623:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_cmplt_cb = 0;
 624:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Compare the contents of source and destination memory
 625:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (memcmp(tx_buf, rx_buf, DMA_CH_0.config->ch_config.block_size) != 0)
 626:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 627:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       dma_ch_susp_res_xfer_status++;
 628:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 629:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 630:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 631:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 632:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_ch_susp_res_xfer_status++;
 633:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_error_cb = 0;
 634:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 635:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 636:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!dma_ch_susp_res_xfer_status)
 637:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 638:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Success!
 639:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 640:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 641:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 642:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Failed, something went wrong.
 643:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 644:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 645:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 646:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 647:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_Resume(DMA_CH_t *const obj)
 648:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 649:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_ASSERT("DMA_CH_Resume: NULL DMA_CH_t object", (obj != NULL));
 650:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 651:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_Resume(obj->dma_global->dma, obj->ch_num);
 652:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 653:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 654:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 655:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Check if a DMA channel is suspended
 656:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to DMA_CH_t, pointing to the DMA_CH handle configuration
 657:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return bool "true" if suspended, "false" otherwise
 658:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 659:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 660:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function checks if a DMA channel is suspended
 661:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 662:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 663:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 664:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 665:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 666:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 667:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t tx_buf[4096];
 668:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t rx_buf[4096];
 669:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 670:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_cmplt_cb = 0;
 671:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t dma_error_cb = 0;
 672:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t xfer_block_cmplt = 0;
 673:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 674:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * void dma_ch_event_handler (XMC_DMA_CH_EVENT_t e)
 675:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 676:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   uint32_t event = 0;
 677:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_t *dma_ch;
 678:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 679:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   dma_ch = &DMA_CH_0;
 680:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 681:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Check and update the volatile flags
 682:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   event = XMC_DMA_CH_GetEventStatus(dma_ch->dma_global->dma, dma_ch->ch_num);
 683:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if ((event & XMC_DMA_CH_EVENT_ERROR) != 0)
 684:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 685:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_error_cb = 1;
 686:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 687:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if((event & XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != 0)
 688:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 689:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_cmplt_cb = 1;
 690:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 691:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else if ((event & XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != 0)
 692:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 693:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_block_cmplt = 1;
 694:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 695:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 696:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 697:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main (void)
 698:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 699:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   uint32_t dma_ch_susp_res_xfer_status = 0;
 700:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 701:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   xfer_cmplt_cb = 0;
 702:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   dma_error_cb = 0;
 703:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 704:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 705:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Do 16k- 4bytes single transfer. Enable channel and suspend before it hits
 706:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // the xfer complete callback.
 707:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 708:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Later, check if suspended and then resume the transfer
 709:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 710:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 711:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // The user must then configure block size as 4095 and the
 712:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // transfer width as XMC_DMA_CH_TRANSFER_WIDTH_32 in the UI.
 713:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 714:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Enable the channel
 715:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
 716:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 717:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
 718:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 719:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 720:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if ((xfer_cmplt_cb == 0) && (dma_error_cb == 0))
 721:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 722:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Suspend the channel
 723:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Suspend(&DMA_CH_0);
 724:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 725:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Is channel suspended?
 726:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (!DMA_CH_IsSuspended(&DMA_CH_0))
 727:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 728:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       dma_ch_susp_res_xfer_status++;
 729:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 730:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Resume the channel
 731:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Resume(&DMA_CH_0);
 732:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 733:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 734:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 735:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_ch_susp_res_xfer_status++;
 736:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 737:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 738:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while ((xfer_cmplt_cb == 0) && (dma_error_cb == 0));
 739:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 740:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (xfer_cmplt_cb)
 741:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 742:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     xfer_cmplt_cb = 0;
 743:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Compare the contents of source and destination memory
 744:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if (memcmp(tx_buf, rx_buf, DMA_CH_0.config->ch_config.block_size) != 0)
 745:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 746:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       dma_ch_susp_res_xfer_status++;
 747:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 748:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 749:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 750:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 751:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_ch_susp_res_xfer_status++;
 752:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     dma_error_cb = 0;
 753:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 754:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 755:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!dma_ch_susp_res_xfer_status)
 756:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 757:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Success!
 758:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 759:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 760:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 761:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     // Failed, something went wrong.
 762:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 763:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 764:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 765:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 766:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  __STATIC_INLINE bool DMA_CH_IsSuspended(DMA_CH_t *const obj)
 767:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  {
 768:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****    XMC_ASSERT("DMA_CH_IsSuspended: NULL DMA_CH_t object", (obj != NULL));
 769:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 770:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****    return XMC_DMA_CH_IsSuspended(obj->dma_global->dma, obj->ch_num);
 771:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  }
 772:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 773:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 774:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief DMA_CH initialization routine
 775:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
 776:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return DMA_CH_STATUS_t
 777:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 778:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 779:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function initializes the requested DMA channel and enables DMA events
 780:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function is automatically called from within DAVE_Init();  An explicit
 781:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * call to this function is not always required.
 782:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Note: In case the user wants to change the channel configuration, the user
 783:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * must manipulate the generated configuration structure and initialize
 784:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * the DMA_CH again by using DMA_CH_Init(). <br>
 785:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Note: Should there be changes in the DMA channel configuration parameters,
 786:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * (for reconfiguration) changes shall first be made in the configuration structure.
 787:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * DMA_CH_Init() shall then be invoked to cement the changes in the parameters. <br>
 788:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Post the DMA_CH_Init() invocation, DMA_CH_SetSourceAddress(),
 789:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * DMA_CH_SetBlockSize() and DMA_CH_SetDestinationAddress() shall be
 790:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * explicitly invoked.
 791:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 792:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 793:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 794:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 795:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 796:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 797:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
 798:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 799:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Initialize DMA_CH APP:
 800:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // DMA_CH_Init() is called from within DAVE_Init().
 801:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 802:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // DMA_CH_Init() takes a reference to DMA_CH_t as the *only*
 803:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // actual parameter, defined in dma_ch_conf.c. The structure
 804:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // contains all GUI user configuration.
 805:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 806:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
 807:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 808:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // More code here
 809:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while(1)
 810:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 811:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 812:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   return (0);
 813:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 814:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 815:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 816:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** DMA_CH_STATUS_t DMA_CH_Init(DMA_CH_t *const obj);
 817:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 818:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 819:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Trigger source request
 820:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
 821:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param type Parameter of type ::XMC_DMA_CH_TRANSACTION_TYPE_t indicating transfer type
 822:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param last A bool value indicating if the call must initiate the final source request
 823:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
 824:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 825:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 826:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * This function is a simple wrapper around the low-level-driver function
 827:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * XMC_DMA_CH_TriggerSourceRequest(). It can be used for GPDMA transfers involving
 828:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * a peripheral in software handshaking mode viz. Peripheral -> memory and peripheral
 829:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * -> peripheral. It would typically be used in a source peripheral's event
 830:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * callback function to trigger the source request.
 831:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 832:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 833:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 834:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 835:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 836:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 837:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t adc_counter = 0;
 838:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 839:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
 840:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 841:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
 842:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 843:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // The user shall configure the DMA for a peripheral to memory
 844:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // transaction (e.g. ADC -> Memory DMA transaction) with the peripheral
 845:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // as the flow controller. These options shall be set in the GUI of
 846:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // the DMA_CH APP.
 847:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 848:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Init(&DMA_CH_0);
 849:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 850:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_DMA_CH_SetSourceAddress(DMA_CH_0.dma_global->dma,DMA_CH_0.ch_num,(uint32_t)&(ADC_MEASUREME
 851:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 852:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
 853:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 854:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
 855:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 856:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 857:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Start ADC conversion
 858:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *	 ADC_MEASUREMENT_StartConversion(&ADC_MEASUREMENT_0);
 859:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 860:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *	 while (1);
 861:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *	 return 0;
 862:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 863:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 864:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * void adc_measurement_handler(void)
 865:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 866:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // We're essentially transferring 10 ADC
 867:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // result values.
 868:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if(adc_counter < 10)
 869:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 870:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     if(adc_counter == 9)
 871:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 872:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       DMA_CH_TriggerSourceRequest(&DMA_CH_0, XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, true);
 873:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 874:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     else
 875:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     {
 876:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *       XMC_DMA_CH_TriggerSourceRequest(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, XMC_DMA_CH_TRAN
 877:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     }
 878:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     adc_counter++;
 879:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 880:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 881:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 882:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 883:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_TriggerSourceRequest(DMA_CH_t *const obj, const XMC_DMA_CH_TRANSACTION_
 884:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 885:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_TriggerSourceRequest(obj->dma_global->dma, obj->ch_num, type, last);
 886:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 887:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 888:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 889:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Trigger destination request
 890:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
 891:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param type Parameter of type ::XMC_DMA_CH_TRANSACTION_TYPE_t indicating transfer type
 892:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param last A bool value indicating if the call must initiate the final destination request
 893:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
 894:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 895:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 896:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * This function is a simple wrapper around the low-level-driver function
 897:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * XMC_DMA_CH_TriggerSourceRequest(). It can be used for GPDMA transfers involving
 898:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * a peripheral in software handshaking mode viz. Memory -> peripheral and peripheral
 899:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * -> peripheral. It is typically used in a destination peripheral's event callback
 900:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * function to trigger the destination request.
 901:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 902:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 903:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 904:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 905:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 906:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 907:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t block_count = 0;
 908:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 909:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // Memory -> Peripheral (like UART) - peripheral
 910:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // flow controller.
 911:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 912:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
 913:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 914:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
 915:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 916:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Init(&DMA_CH_0);
 917:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 918:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Set destination address here
 919:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // (which could be the UART transmit buffer for
 920:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // a memory to peripheral transfer).
 921:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 922:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Assume that the UART APP is already instantiated in
 923:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // DAVE. Also, the source address is assumed to be set
 924:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // in the GUI.
 925:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_DMA_CH_SetDestinationAddress(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, (uint32_t)&(UART_0
 926:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 927:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
 928:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 929:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
 930:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 931:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 932:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Assume the UART APP is already instantiated in the DAVE project
 933:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_USIC_CH_TriggerServiceRequest(UART_0.channel, UART_0.dynamic->tx_sr);
 934:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 935:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while (1);
 936:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 937:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   return 0;
 938:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 939:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 940:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * void uart_tx_callback_0(void)
 941:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 942:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   block_count++;
 943:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 944:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (block_count == 4)
 945:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 946:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_TriggerDestinationRequest(&DMA_CH_0, XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, true);
 947:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_RequestLastMultiblockTransfer(&DMA_CH_0);
 948:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 949:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
 950:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
 951:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     XMC_DMA_CH_TriggerDestinationRequest(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, XMC_DMA_CH_T
 952:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
 953:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
 954:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
 955:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
 956:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_TriggerDestinationRequest(DMA_CH_t *const obj,
 957:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****                                                       const XMC_DMA_CH_TRANSACTION_TYPE_t type,
 958:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****                                                       bool last)
 959:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 960:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_TriggerDestinationRequest(obj->dma_global->dma, obj->ch_num, type, last);
 961:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 962:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
 963:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
 964:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Trigger last multi-block transfer
 965:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
 966:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
 967:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 968:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
 969:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function is a wrapper around the function XMC_DMA_CH_RequestLastMultiblockTransfer()
 970:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * in the DMA low-level-driver. The function is used signal the end of multi-block
 971:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * DMA transfer. It clears the RELOAD_SRC and RELOAD_DST bits of the CFGL register
 972:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * to keep the source and destination addresses from getting updated. The function
 973:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * is typically used in an event handler to signal that the next block getting
 974:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * transferred is the last block in the transfer sequence.
 975:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 976:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
 977:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 978:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
 979:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
 980:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 981:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * volatile uint8_t block_count = 0;
 982:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 983:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // Memory -> Peripheral (like UART) - peripheral
 984:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * // flow controller.
 985:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 986:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
 987:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
 988:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
 989:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 990:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Init(&DMA_CH_0);
 991:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
 992:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Set destination address here
 993:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // (which could be the UART transmit buffer for
 994:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // a memory to peripheral transfer).
 995:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   //
 996:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Assume that the UART APP is already instantiated in
 997:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // DAVE. Also, the source address is assumed to be set
 998:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // in the GUI.
 999:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_DMA_CH_SetDestinationAddress(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, (uint32_t)&(UART_0
1000:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1001:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
1002:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
1003:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
1004:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
1005:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1006:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Assume the UART APP is already instantiated in the DAVE project
1007:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_USIC_CH_TriggerServiceRequest(UART_0.channel, UART_0.dynamic->tx_sr);
1008:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1009:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   while (1);
1010:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1011:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   return 0;
1012:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
1013:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1014:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * void uart_tx_callback_0(void)
1015:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
1016:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   block_count++;
1017:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1018:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (block_count == 4)
1019:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
1020:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_TriggerDestinationRequest(&DMA_CH_0, XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, true);
1021:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_RequestLastMultiblockTransfer(&DMA_CH_0);
1022:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
1023:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   else
1024:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
1025:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     XMC_DMA_CH_TriggerDestinationRequest(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, XMC_DMA_CH_T
1026:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
1027:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
1028:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
1029:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
1030:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_RequestLastMultiblockTransfer(DMA_CH_t *const obj)
1031:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
1032:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_RequestLastMultiblockTransfer(obj->dma_global->dma, obj->ch_num);
1033:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
1034:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
1035:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
1036:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Set DMA source address
1037:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
1038:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param addr Source address
1039:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
1040:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1041:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
1042:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function can be used to set the source address for a DMA transaction.
1043:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Use this function to set source address post the initial GUI initialization.
1044:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1045:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
1046:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1047:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
1048:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
1049:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1050:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t tx_buf[256];
1051:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1052:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
1053:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
1054:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
1055:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1056:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Init(&DMA_CH_0);
1057:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1058:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_DMA_CH_SetSourceAddress(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, (uint32_t)&tx_buf[0]);
1059:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1060:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
1061:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
1062:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
1063:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
1064:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
1065:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
1066:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
1067:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_SetSourceAddress(DMA_CH_t *const obj, uint32_t addr)
1068:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
1069:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_SetSourceAddress(obj->dma_global->dma, obj->ch_num, addr);
1070:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
1071:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
1072:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
1073:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Set DMA destination address
1074:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
1075:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param addr Destination address
1076:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
1077:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1078:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
1079:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function can be used to set the destination address for a DMA transaction.
1080:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Use this function to set destination address post the initial GUI initialization.
1081:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1082:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
1083:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1084:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
1085:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
1086:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1087:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t tx_buf[256];
1088:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * uint32_t rx_buf[256];
1089:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1090:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
1091:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
1092:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
1093:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1094:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Init(&DMA_CH_0);
1095:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1096:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_DMA_CH_SetSourceAddress(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, (uint32_t)&tx_buf[0]);
1097:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Make sure you have an instance of the UART APP.
1098:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Otherwise, the compiler will complain.
1099:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   XMC_DMA_CH_SetDestinationAddress(DMA_CH_0.dma_global->dma, DMA_CH_0.ch_num, (uint32_t)&(UART_0
1100:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1101:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
1102:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
1103:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
1104:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
1105:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
1106:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
1107:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
1108:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_SetDestinationAddress(DMA_CH_t *const obj, uint32_t addr)
1109:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
1110:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_SetDestinationAddress(obj->dma_global->dma, obj->ch_num, addr);
1111:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
1112:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
1113:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
1114:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Set DMA block size
1115:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
1116:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param block_size Block size to set
1117:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
1118:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1119:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
1120:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function is used to set block size for the DMA transfer.
1121:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Use this function to set block size post the initial GUI initialization.
1122:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1123:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
1124:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1125:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
1126:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
1127:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1128:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
1129:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
1130:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
1131:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1132:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Init(&DMA_CH_0);
1133:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1134:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Set block size
1135:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_SetBlockSize(&DMA_CH_0, 1);
1136:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1137:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   if (!DMA_CH_IsEnabled(&DMA_CH_0))
1138:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   {
1139:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *     DMA_CH_Enable(&DMA_CH_0);
1140:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   }
1141:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
1142:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
1143:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
1144:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_SetBlockSize(DMA_CH_t *const obj, uint32_t block_size)
1145:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
1146:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****   XMC_DMA_CH_SetBlockSize(obj->dma_global->dma, obj->ch_num, block_size);
1147:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
1148:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 
1149:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** /**
1150:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @brief Reload the initial DMA configuration
1151:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @param obj A pointer to ::DMA_CH_t, pointing to the configuration parameters
1152:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @return None
1153:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1154:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * \par<b>Description: </b><br>
1155:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * The function is used to reconfigure the DMA channel with initial configurations.
1156:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1157:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * Example Usage:
1158:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1159:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @code
1160:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * #include <DAVE.h>
1161:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1162:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * int main(void)
1163:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * {
1164:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DAVE_Init();
1165:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1166:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Init(&DMA_CH_0);
1167:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Set block size
1168:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_SetBlockSize(&DMA_CH_0, 1);
1169:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1170:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   // Reconfigure DMA CH
1171:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *   DMA_CH_Reload(&DMA_CH_0);
1172:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  *
1173:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * }
1174:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  * @endcode<BR> </p>
1175:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h ****  */
1176:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** __STATIC_INLINE void DMA_CH_Reload(DMA_CH_t *const obj)
1177:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** {
 296              	 .loc 3 1177 0
 297              	 .cfi_startproc
 298              	 
 299              	 
 300 0000 80B5     	 push {r7,lr}
 301              	.LCFI32:
 302              	 .cfi_def_cfa_offset 8
 303              	 .cfi_offset 7,-8
 304              	 .cfi_offset 14,-4
 305 0002 82B0     	 sub sp,sp,#8
 306              	.LCFI33:
 307              	 .cfi_def_cfa_offset 16
 308 0004 00AF     	 add r7,sp,#0
 309              	.LCFI34:
 310              	 .cfi_def_cfa_register 7
 311 0006 7860     	 str r0,[r7,#4]
1178:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** 	obj->reload(obj);
 312              	 .loc 3 1178 0
 313 0008 7B68     	 ldr r3,[r7,#4]
 314 000a 9B68     	 ldr r3,[r3,#8]
 315 000c 7868     	 ldr r0,[r7,#4]
 316 000e 9847     	 blx r3
1179:C:\Users\Depes Crystalline\Desktop\school\Active_Bike_Lighting_System\Radar_Core\Dave\Generated/DMA_CH\dma_ch.h **** }
 317              	 .loc 3 1179 0
 318 0010 0837     	 adds r7,r7,#8
 319              	.LCFI35:
 320              	 .cfi_def_cfa_offset 8
 321 0012 BD46     	 mov sp,r7
 322              	.LCFI36:
 323              	 .cfi_def_cfa_register 13
 324              	 
 325 0014 80BD     	 pop {r7,pc}
 326              	 .cfi_endproc
 327              	.LFE442:
 329              	 .global gIFQDataReadyFlag
 330 0016 00BF     	 .section .bss.gIFQDataReadyFlag,"aw",%nobits
 333              	gIFQDataReadyFlag:
 334 0000 00       	 .space 1
 335              	 .global gQ2Freq
 336              	 .section .bss.gQ2Freq,"aw",%nobits
 337              	 .align 2
 340              	gQ2Freq:
 341 0000 00000000 	 .space 4
 342              	 .global gDopFreqIFI
 343              	 .section .bss.gDopFreqIFI,"aw",%nobits
 344              	 .align 2
 347              	gDopFreqIFI:
 348 0000 00000000 	 .space 4
 349              	 .global gTargetVelocity
 350              	 .section .bss.gTargetVelocity,"aw",%nobits
 351              	 .align 2
 354              	gTargetVelocity:
 355 0000 00000000 	 .space 4
 356              	 .global gDetectionThreshold
 357              	 .section .data.gDetectionThreshold,"aw",%progbits
 358              	 .align 1
 361              	gDetectionThreshold:
 362 0000 1400     	 .short 20
 363              	 .global gRedLED_On
 364              	 .section .bss.gRedLED_On,"aw",%nobits
 367              	gRedLED_On:
 368 0000 00       	 .space 1
 369              	 .global gTxPowerLvl
 370              	 .section .data.gTxPowerLvl,"aw",%progbits
 373              	gTxPowerLvl:
 374 0000 03       	 .byte 3
 375              	 .global gHzPerBin
 376              	 .section .data.gHzPerBin,"aw",%progbits
 377              	 .align 2
 380              	gHzPerBin:
 381 0000 00409C41 	 .word 1100759040
 382              	 .comm ifi_raw_buf0,2048,4
 383              	 .comm ifq_raw_buf0,2048,4
 384              	 .comm ifi_adc_measurements,4096,4
 385              	 .global ifq_adc_measurements
 386              	 .section .data.ifq_adc_measurements,"aw",%progbits
 387              	 .align 2
 390              	ifq_adc_measurements:
 391 0000 00080000 	 .word ifi_adc_measurements+2048
 392              	 .comm i_adc_measurements,2048,4
 393              	 .comm q_adc_measurements,2048,4
 394              	 .comm hanning_window,2048,4
 395              	 .comm i_fftResult,2048,4
 396              	 .comm q_fftResult,2048,4
 397              	 .comm finalResult,1024,4
 398              	 .global maxValPosSpectrum
 399              	 .section .bss.maxValPosSpectrum,"aw",%nobits
 400              	 .align 2
 403              	maxValPosSpectrum:
 404 0000 00000000 	 .space 4
 405              	 .global maxValNegSpectrum
 406              	 .section .bss.maxValNegSpectrum,"aw",%nobits
 407              	 .align 2
 410              	maxValNegSpectrum:
 411 0000 00000000 	 .space 4
 412              	 .global maxVal
 413              	 .section .bss.maxVal,"aw",%nobits
 414              	 .align 2
 417              	maxVal:
 418 0000 00000000 	 .space 4
 419              	 .global maxBin
 420              	 .section .bss.maxBin,"aw",%nobits
 421              	 .align 2
 424              	maxBin:
 425 0000 00000000 	 .space 4
 426              	 .comm i_fftStructure,24,4
 427              	 .comm pDMA_src_IFI,4,4
 428              	 .comm pDMA_src_IFQ,4,4
 429              	 .global pDMA_dst_IFI
 430              	 .section .data.pDMA_dst_IFI,"aw",%progbits
 431              	 .align 2
 434              	pDMA_dst_IFI:
 435 0000 00000000 	 .word ifi_raw_buf0
 436              	 .global pDMA_dst_IFQ
 437              	 .section .data.pDMA_dst_IFQ,"aw",%progbits
 438              	 .align 2
 441              	pDMA_dst_IFQ:
 442 0000 00000000 	 .word ifq_raw_buf0
 443              	 .global pifi_raw_buf1
 444              	 .section .data.pifi_raw_buf1,"aw",%progbits
 445              	 .align 2
 448              	pifi_raw_buf1:
 449 0000 00040000 	 .word ifi_raw_buf0+1024
 450              	 .global pifq_raw_buf1
 451              	 .section .data.pifq_raw_buf1,"aw",%progbits
 452              	 .align 2
 455              	pifq_raw_buf1:
 456 0000 00040000 	 .word ifq_raw_buf0+1024
 457              	 .global PIN1_5_config
 458              	 .section .data.PIN1_5_config,"aw",%progbits
 459              	 .align 2
 462              	PIN1_5_config:
 463 0000 80       	 .byte -128
 464 0001 000000   	 .space 3
 465 0004 01000000 	 .word 1
 466 0008 00       	 .byte 0
 467 0009 000000   	 .space 3
 468              	 .global PIN1_5
 469              	 .section .data.PIN1_5,"aw",%progbits
 470              	 .align 2
 473              	PIN1_5:
 474 0000 00000000 	 .word PIN1_5_config
 475 0004 00810248 	 .word 1208123648
 476 0008 05       	 .byte 5
 477 0009 000000   	 .space 3
 478              	 .section .text.main,"ax",%progbits
 479              	 .align 2
 480              	 .global main
 481              	 .thumb
 482              	 .thumb_func
 484              	main:
 485              	.LFB443:
 486              	 .file 4 "../main.c"
   1:../main.c     **** /* main.c
   2:../main.c     ****  *
   3:../main.c     ****  * This application runs on the Sense2Go2 boards that have a silk screen revision
   4:../main.c     ****  * of Sense2Go_3.0.  The application runs on an XMC4200 target microcontroller and
   5:../main.c     ****  * performs stand alone detection processing for IFI_HG and IFQ_HG inputs from the
   6:../main.c     ****  * BGT24TR11.  This application uses Continuous Wave (CW) Doppler Radar and is built
   7:../main.c     ****  * with DAVE v4.1.2 using DAVE APPs.
   8:../main.c     ****  *
   9:../main.c     ****  * A BGT24 detection is signaled by illuminating the yellow LED.
  10:../main.c     ****  * A green LED is illuminated at a 1Hz rate, to indicate that the application is running.
  11:../main.c     ****  *
  12:../main.c     ****  * Support contact: Richard.Nardone@infineon.com
  13:../main.c     ****  *
  14:../main.c     ****  * Mod Hist:
  15:../main.c     ****  *
  16:../main.c     ****  * 26-OCT-15 RSN	B01: Beta Release 01 from S2GTWO_MD_SA_T008.
  17:../main.c     ****  *
  18:../main.c     ****  * */
  19:../main.c     **** #include <DAVE.h>   		// Declarations from DAVE Code Generation (includes SFR declaration)
  20:../main.c     **** #include "BGT24MTR11.h"     // BGT24 Configuration settings
  21:../main.c     **** #include <math.h>
  22:../main.c     **** 
  23:../main.c     **** #define FFT_SIZE 512       // Must be 16, 32, 64, 128, 256, 512, 1024, 2048, 4096
  24:../main.c     **** #define NUM_SAMPLES FFT_SIZE  // MUST change DMA block size to match FFT_SIZE !!!!!!
  25:../main.c     **** #define INVERT_FFT		(0)
  26:../main.c     **** 
  27:../main.c     **** #define SAMPLE_FREQ_5KHZ    (200*100)   // Timer setting for Fs =   5,000Hz
  28:../main.c     **** #define SAMPLE_FREQ_10KHZ   (100*100)   // Timer setting for Fs =  10,000Hz
  29:../main.c     **** #define SAMPLE_FREQ_20KHZ   (50*100)    // Timer setting for Fs =  20,000Hz
  30:../main.c     **** #define SAMPLE_FREQ_50KHZ   (20*100)    // Timer setting for Fs =  50,000Hz
  31:../main.c     **** #define SAMPLE_FREQ_100KHZ  (10*100)    // Timer setting for Fs = 100,000Hz
  32:../main.c     **** 
  33:../main.c     **** #define SAMPLE_FREQ_HZ 10000
  34:../main.c     **** 
  35:../main.c     **** #define DOPPLER_EVENT_LVL 20  		// Doppler Event Detection Threshold value was 20
  36:../main.c     **** 
  37:../main.c     **** #define LEFT_SPECTRUM   0
  38:../main.c     **** #define RIGHT_SPECTRUM  1
  39:../main.c     **** #define BOTH_SPECTRUMS  2
  40:../main.c     **** #define XCORR_EPSILON   0.1 // Epsilon used for floating comparison. If difference is less
  41:../main.c     ****                             //  than this value, the values are considered equal.
  42:../main.c     **** 
  43:../main.c     **** void do_rfft_i(uint16_t *pDataBuf) __attribute__((section(".ram_code")));
  44:../main.c     **** void do_rfft_q(uint16_t *pDataBuf) __attribute__((section(".ram_code")));
  45:../main.c     **** void genHanningData(void);
  46:../main.c     **** void checkTargetDetection(void);
  47:../main.c     **** uint8_t spectrum_peak(  // Determine which side of the spectrum from a cross-correlation
  48:../main.c     ****     float32_t* pSrcA,   //  contains the peak. Assumes lag is in range [-blockSize, blockSize]
  49:../main.c     ****     float32_t* pSrcB,   // Can return LEFT_SPECTRUM, RIGHT_SPECTRUM, or BOTH_SPECTRUMS
  50:../main.c     ****     uint32_t blockSize
  51:../main.c     ****     );
  52:../main.c     **** float32_t xcorr_left_max(   // Perform cross correlation but return just
  53:../main.c     ****     float32_t* pSrcA,       //  the peak value discovered for the left side.
  54:../main.c     ****     float32_t* pSrcB,
  55:../main.c     ****     uint32_t blockSize
  56:../main.c     ****     );
  57:../main.c     **** float32_t xcorr_right_max(  // Perform cross correlation but return just
  58:../main.c     ****     float32_t* pSrcA,       //  the peak value discovered for the right side.
  59:../main.c     ****     float32_t* pSrcB,
  60:../main.c     ****     uint32_t blockSize
  61:../main.c     ****     );
  62:../main.c     **** void max(float32_t* pSrc, uint32_t blockSize, float32_t* pMaxHolder);
  63:../main.c     **** 
  64:../main.c     **** uint8_t  gIFQDataReadyFlag = 0;
  65:../main.c     **** 
  66:../main.c     **** uint32_t gQ2Freq = 0;
  67:../main.c     **** 
  68:../main.c     **** float32_t gDopFreqIFI = 0;
  69:../main.c     **** float32_t gTargetVelocity = 0;
  70:../main.c     **** 
  71:../main.c     **** uint16_t gDetectionThreshold = DOPPLER_EVENT_LVL;
  72:../main.c     **** 
  73:../main.c     **** // uC/Probe variables
  74:../main.c     **** uint8_t gRedLED_On = 0;
  75:../main.c     **** BGT_Power_t gTxPowerLvl = TX_MAX;  // BGT24 Transmit Power Level Setting
  76:../main.c     **** 
  77:../main.c     **** float32_t gHzPerBin = (float32_t)SAMPLE_FREQ_HZ/(float32_t)FFT_SIZE;
  78:../main.c     **** 
  79:../main.c     **** uint16_t ifi_raw_buf0[NUM_SAMPLES*2];
  80:../main.c     **** 
  81:../main.c     **** uint16_t ifq_raw_buf0[NUM_SAMPLES*2];
  82:../main.c     **** 
  83:../main.c     **** float32_t ifi_adc_measurements[NUM_SAMPLES*2];  	// ADC data from BGT - IFI_HG
  84:../main.c     **** //float32_t ifq_adc_measurements[NUM_SAMPLES];  	// ADC data from BGT - IFQ_HG
  85:../main.c     **** float32_t* ifq_adc_measurements = &ifi_adc_measurements[NUM_SAMPLES];  	// ADC data from BGT - IFQ_
  86:../main.c     **** 
  87:../main.c     **** float32_t i_adc_measurements[NUM_SAMPLES], q_adc_measurements[NUM_SAMPLES];
  88:../main.c     **** 
  89:../main.c     **** float32_t hanning_window[FFT_SIZE];
  90:../main.c     **** 
  91:../main.c     **** float32_t i_fftResult[FFT_SIZE];      // FFT Result
  92:../main.c     **** float32_t q_fftResult[FFT_SIZE];      // FFT Result
  93:../main.c     **** float32_t finalResult[FFT_SIZE/2];
  94:../main.c     **** 
  95:../main.c     **** float32_t maxValPosSpectrum = 0, maxValNegSpectrum = 0; // Store the maximum values of the spectrum
  96:../main.c     **** float32_t maxVal = 0;
  97:../main.c     **** uint32_t  maxBin = 0;
  98:../main.c     **** 
  99:../main.c     **** arm_rfft_fast_instance_f32 i_fftStructure;
 100:../main.c     **** 
 101:../main.c     **** uint32_t *pDMA_src_IFI;
 102:../main.c     **** uint32_t *pDMA_src_IFQ;
 103:../main.c     **** 
 104:../main.c     **** uint32_t *pDMA_dst_IFI = (uint32_t *)ifi_raw_buf0;
 105:../main.c     **** uint32_t *pDMA_dst_IFQ = (uint32_t *)ifq_raw_buf0;
 106:../main.c     **** 
 107:../main.c     **** uint16_t *pifi_raw_buf1 = &ifi_raw_buf0[NUM_SAMPLES];
 108:../main.c     **** uint16_t *pifq_raw_buf1 = &ifq_raw_buf0[NUM_SAMPLES];
 109:../main.c     **** 
 110:../main.c     **** //*********************************************************
 111:../main.c     **** // Set up digital pin to communicate information back to the main controller
 112:../main.c     **** //
 113:../main.c     **** XMC_GPIO_CONFIG_t PIN1_5_config  =
 114:../main.c     **** {
 115:../main.c     ****   .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 116:../main.c     ****   .output_level = XMC_GPIO_OUTPUT_LEVEL_HIGH,
 117:../main.c     ****   .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE,
 118:../main.c     **** };
 119:../main.c     **** 
 120:../main.c     **** DIGITAL_IO_t PIN1_5 =
 121:../main.c     **** {
 122:../main.c     ****   .gpio_port = XMC_GPIO_PORT1,
 123:../main.c     ****   .gpio_pin = 5U,
 124:../main.c     ****   .gpio_config = &PIN1_5_config,
 125:../main.c     **** };
 126:../main.c     **** 
 127:../main.c     **** //*********************************************************
 128:../main.c     **** // Set up digital pin to communicate information back to the main controller
 129:../main.c     **** //	OUT1 pin on the demo board
 130:../main.c     **** /*
 131:../main.c     **** XMC_GPIO_CONFIG_t PIN0_1_config  =
 132:../main.c     **** {
 133:../main.c     ****   .mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 134:../main.c     ****   .output_level = XMC_GPIO_OUTPUT_LEVEL_HIGH,
 135:../main.c     ****   .output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE,
 136:../main.c     **** 
 137:../main.c     **** };
 138:../main.c     **** 
 139:../main.c     **** DIGITAL_IO_t PIN0_1 =
 140:../main.c     **** {
 141:../main.c     ****   .gpio_port = XMC_GPIO_PORT0,
 142:../main.c     ****   .gpio_pin = 1U,
 143:../main.c     ****   .gpio_config = &PIN0_1_config,
 144:../main.c     **** };
 145:../main.c     **** */
 146:../main.c     **** //*********************************************************
 147:../main.c     **** //
 148:../main.c     **** //
 149:../main.c     **** int main(void)
 150:../main.c     **** {
 487              	 .loc 4 150 0
 488              	 .cfi_startproc
 489              	 
 490              	 
 491 0000 80B5     	 push {r7,lr}
 492              	.LCFI37:
 493              	 .cfi_def_cfa_offset 8
 494              	 .cfi_offset 7,-8
 495              	 .cfi_offset 14,-4
 496 0002 82B0     	 sub sp,sp,#8
 497              	.LCFI38:
 498              	 .cfi_def_cfa_offset 16
 499 0004 00AF     	 add r7,sp,#0
 500              	.LCFI39:
 501              	 .cfi_def_cfa_register 7
 151:../main.c     ****   DAVE_STATUS_t status;
 152:../main.c     ****   uint8_t firstBufDone = 0;
 502              	 .loc 4 152 0
 503 0006 0023     	 movs r3,#0
 504 0008 FB71     	 strb r3,[r7,#7]
 153:../main.c     **** 
 154:../main.c     ****   pDMA_src_IFI = (uint32_t*)&ADC_MEASUREMENT_Channel_A.group_handle->RES[ADC_MEASUREMENT_Channel_A.
 505              	 .loc 4 154 0
 506 000a 434B     	 ldr r3,.L15
 507 000c 9A68     	 ldr r2,[r3,#8]
 508 000e 424B     	 ldr r3,.L15
 509 0010 1B68     	 ldr r3,[r3]
 510 0012 9B78     	 ldrb r3,[r3,#2]
 511 0014 C3F30303 	 ubfx r3,r3,#0,#4
 512 0018 DBB2     	 uxtb r3,r3
 513 001a C033     	 adds r3,r3,#192
 514 001c 9B00     	 lsls r3,r3,#2
 515 001e 1344     	 add r3,r3,r2
 516 0020 3E4A     	 ldr r2,.L15+4
 517 0022 1360     	 str r3,[r2]
 155:../main.c     ****   pDMA_src_IFQ = (uint32_t*)&ADC_MEASUREMENT_Channel_B.group_handle->RES[ADC_MEASUREMENT_Channel_B.
 518              	 .loc 4 155 0
 519 0024 3E4B     	 ldr r3,.L15+8
 520 0026 9A68     	 ldr r2,[r3,#8]
 521 0028 3D4B     	 ldr r3,.L15+8
 522 002a 1B68     	 ldr r3,[r3]
 523 002c 9B78     	 ldrb r3,[r3,#2]
 524 002e C3F30303 	 ubfx r3,r3,#0,#4
 525 0032 DBB2     	 uxtb r3,r3
 526 0034 C033     	 adds r3,r3,#192
 527 0036 9B00     	 lsls r3,r3,#2
 528 0038 1344     	 add r3,r3,r2
 529 003a 3A4A     	 ldr r2,.L15+12
 530 003c 1360     	 str r3,[r2]
 156:../main.c     **** 
 157:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 531              	 .loc 4 157 0
 532 003e FFF7FEFF 	 bl DAVE_Init
 533 0042 0346     	 mov r3,r0
 534 0044 BB71     	 strb r3,[r7,#6]
 158:../main.c     **** 
 159:../main.c     ****   status = DIGITAL_IO_Init(&PIN1_5);
 535              	 .loc 4 159 0
 536 0046 3848     	 ldr r0,.L15+16
 537 0048 FFF7FEFF 	 bl DIGITAL_IO_Init
 538 004c 0346     	 mov r3,r0
 539 004e BB71     	 strb r3,[r7,#6]
 160:../main.c     **** //  status = DIGITAL_IO_Init(&PIN0_1);
 161:../main.c     ****   if(status == DAVE_STATUS_FAILURE)
 540              	 .loc 4 161 0
 541 0050 BB79     	 ldrb r3,[r7,#6]
 542 0052 012B     	 cmp r3,#1
 543 0054 00D1     	 bne .L9
 544              	.L10:
 162:../main.c     ****   {
 163:../main.c     ****     while(1U)  // loop forever on error
 164:../main.c     ****     	;
 545              	 .loc 4 164 0 discriminator 1
 546 0056 FEE7     	 b .L10
 547              	.L9:
 165:../main.c     ****   }
 166:../main.c     **** 
 167:../main.c     **** 
 168:../main.c     ****   DIGITAL_IO_SetOutputHigh(&LDO_BGT_EN);  // Enable power to BGT24
 548              	 .loc 4 168 0
 549 0058 3448     	 ldr r0,.L15+20
 550 005a FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 169:../main.c     **** 
 170:../main.c     ****   CCU40->GCTRL |= (0x0001<<CCU4_GCTRL_SUSCFG_Pos);      // stop timers at breakpoint when debugging
 551              	 .loc 4 170 0
 552 005e 344A     	 ldr r2,.L15+24
 553 0060 334B     	 ldr r3,.L15+24
 554 0062 1B68     	 ldr r3,[r3]
 555 0064 43F48073 	 orr r3,r3,#256
 556 0068 1360     	 str r3,[r2]
 171:../main.c     ****   CCU41->GCTRL |= (0x0001<<CCU4_GCTRL_SUSCFG_Pos);
 557              	 .loc 4 171 0
 558 006a 324A     	 ldr r2,.L15+28
 559 006c 314B     	 ldr r3,.L15+28
 560 006e 1B68     	 ldr r3,[r3]
 561 0070 43F48073 	 orr r3,r3,#256
 562 0074 1360     	 str r3,[r2]
 172:../main.c     **** 
 173:../main.c     ****   arm_rfft_fast_init_f32(&i_fftStructure, FFT_SIZE);  // setup FFT
 563              	 .loc 4 173 0
 564 0076 3048     	 ldr r0,.L15+32
 565 0078 4FF40071 	 mov r1,#512
 566 007c FFF7FEFF 	 bl arm_rfft_fast_init_f32
 174:../main.c     **** 
 175:../main.c     ****   genHanningData();   						// generate Hanning window data
 567              	 .loc 4 175 0
 568 0080 FFF7FEFF 	 bl genHanningData
 176:../main.c     ****   DMA_CH_Enable(&DMA_CH_IFI);
 569              	 .loc 4 176 0
 570 0084 2D48     	 ldr r0,.L15+36
 571 0086 FFF7FEFF 	 bl DMA_CH_Enable
 177:../main.c     ****   DMA_CH_Enable(&DMA_CH_IFQ);
 572              	 .loc 4 177 0
 573 008a 2D48     	 ldr r0,.L15+40
 574 008c FFF7FEFF 	 bl DMA_CH_Enable
 178:../main.c     **** 
 179:../main.c     ****   TIMER_Stop(&FS_ADC);
 575              	 .loc 4 179 0
 576 0090 2C48     	 ldr r0,.L15+44
 577 0092 FFF7FEFF 	 bl TIMER_Stop
 180:../main.c     ****   TIMER_SetTimeInterval(&FS_ADC, SAMPLE_FREQ_10KHZ);  	// set the sample frequency
 578              	 .loc 4 180 0
 579 0096 2B48     	 ldr r0,.L15+44
 580 0098 42F21071 	 movw r1,#10000
 581 009c FFF7FEFF 	 bl TIMER_SetTimeInterval
 181:../main.c     ****   TIMER_Start(&FS_ADC);        							// start data acquisition
 582              	 .loc 4 181 0
 583 00a0 2848     	 ldr r0,.L15+44
 584 00a2 FFF7FEFF 	 bl TIMER_Start
 182:../main.c     ****   BGTSetTxPower(gTxPowerLvl);    	// configure BGT24
 585              	 .loc 4 182 0
 586 00a6 284B     	 ldr r3,.L15+48
 587 00a8 1B78     	 ldrb r3,[r3]
 588 00aa 1846     	 mov r0,r3
 589 00ac FFF7FEFF 	 bl BGTSetTxPower
 590              	.L14:
 183:../main.c     **** 
 184:../main.c     ****   while(1U)
 185:../main.c     ****   {
 186:../main.c     **** 	  if (gIFQDataReadyFlag == 0)
 591              	 .loc 4 186 0
 592 00b0 264B     	 ldr r3,.L15+52
 593 00b2 1B78     	 ldrb r3,[r3]
 594 00b4 002B     	 cmp r3,#0
 595 00b6 00D1     	 bne .L11
 187:../main.c     **** 		  continue;
 596              	 .loc 4 187 0
 597 00b8 2CE0     	 b .L12
 598              	.L11:
 188:../main.c     **** 
 189:../main.c     **** 	  if (gIFQDataReadyFlag == 1 && firstBufDone == 0)
 599              	 .loc 4 189 0
 600 00ba 244B     	 ldr r3,.L15+52
 601 00bc 1B78     	 ldrb r3,[r3]
 602 00be 012B     	 cmp r3,#1
 603 00c0 10D1     	 bne .L13
 604              	 .loc 4 189 0 is_stmt 0 discriminator 1
 605 00c2 FB79     	 ldrb r3,[r7,#7]
 606 00c4 002B     	 cmp r3,#0
 607 00c6 0DD1     	 bne .L13
 190:../main.c     **** 	  {
 191:../main.c     **** 		  do_rfft_i(ifi_raw_buf0);   	// Process the ADC data from the BGT24 IFI_HG channel
 608              	 .loc 4 191 0 is_stmt 1
 609 00c8 2148     	 ldr r0,.L15+56
 610 00ca FFF7FEFF 	 bl do_rfft_i
 192:../main.c     **** 		  do_rfft_q(ifq_raw_buf0);   	// Process the ADC data from the BGT24 IFQ_HG channel
 611              	 .loc 4 192 0
 612 00ce 2148     	 ldr r0,.L15+60
 613 00d0 FFF7FEFF 	 bl do_rfft_q
 193:../main.c     **** 		  TIMER_Start(&FS_ADC);
 614              	 .loc 4 193 0
 615 00d4 1B48     	 ldr r0,.L15+44
 616 00d6 FFF7FEFF 	 bl TIMER_Start
 194:../main.c     **** 		  firstBufDone = 1;
 617              	 .loc 4 194 0
 618 00da 0123     	 movs r3,#1
 619 00dc FB71     	 strb r3,[r7,#7]
 195:../main.c     **** 		  checkTargetDetection();
 620              	 .loc 4 195 0
 621 00de FFF7FEFF 	 bl checkTargetDetection
 622 00e2 17E0     	 b .L12
 623              	.L13:
 196:../main.c     **** 	  }
 197:../main.c     **** 	  else if (gIFQDataReadyFlag == 2)
 624              	 .loc 4 197 0
 625 00e4 194B     	 ldr r3,.L15+52
 626 00e6 1B78     	 ldrb r3,[r3]
 627 00e8 022B     	 cmp r3,#2
 628 00ea 13D1     	 bne .L12
 198:../main.c     **** 	  {
 199:../main.c     **** 		  do_rfft_i(pifi_raw_buf1);   	// Process the ADC data from the BGT24 IFI_HG channel
 629              	 .loc 4 199 0
 630 00ec 1A4B     	 ldr r3,.L15+64
 631 00ee 1B68     	 ldr r3,[r3]
 632 00f0 1846     	 mov r0,r3
 633 00f2 FFF7FEFF 	 bl do_rfft_i
 200:../main.c     **** 		  do_rfft_q(pifq_raw_buf1);   	// Process the ADC data from the BGT24 IFQ_HG channel
 634              	 .loc 4 200 0
 635 00f6 194B     	 ldr r3,.L15+68
 636 00f8 1B68     	 ldr r3,[r3]
 637 00fa 1846     	 mov r0,r3
 638 00fc FFF7FEFF 	 bl do_rfft_q
 201:../main.c     **** 		  TIMER_Start(&FS_ADC);
 639              	 .loc 4 201 0
 640 0100 1048     	 ldr r0,.L15+44
 641 0102 FFF7FEFF 	 bl TIMER_Start
 202:../main.c     **** 
 203:../main.c     **** 		  gIFQDataReadyFlag = 0;
 642              	 .loc 4 203 0
 643 0106 114B     	 ldr r3,.L15+52
 644 0108 0022     	 movs r2,#0
 645 010a 1A70     	 strb r2,[r3]
 204:../main.c     **** 		  firstBufDone = 0;
 646              	 .loc 4 204 0
 647 010c 0023     	 movs r3,#0
 648 010e FB71     	 strb r3,[r7,#7]
 205:../main.c     **** 		  checkTargetDetection();
 649              	 .loc 4 205 0
 650 0110 FFF7FEFF 	 bl checkTargetDetection
 651              	.L12:
 206:../main.c     **** 	  }
 207:../main.c     **** 
 208:../main.c     ****   }  // bottom of while(1) loop
 652              	 .loc 4 208 0
 653 0114 CCE7     	 b .L14
 654              	.L16:
 655 0116 00BF     	 .align 2
 656              	.L15:
 657 0118 00000000 	 .word ADC_MEASUREMENT_Channel_A_handle
 658 011c 00000000 	 .word pDMA_src_IFI
 659 0120 00000000 	 .word ADC_MEASUREMENT_Channel_B_handle
 660 0124 00000000 	 .word pDMA_src_IFQ
 661 0128 00000000 	 .word PIN1_5
 662 012c 00000000 	 .word LDO_BGT_EN
 663 0130 00C00040 	 .word 1073790976
 664 0134 00000140 	 .word 1073807360
 665 0138 00000000 	 .word i_fftStructure
 666 013c 00000000 	 .word DMA_CH_IFI
 667 0140 00000000 	 .word DMA_CH_IFQ
 668 0144 00000000 	 .word FS_ADC
 669 0148 00000000 	 .word gTxPowerLvl
 670 014c 00000000 	 .word gIFQDataReadyFlag
 671 0150 00000000 	 .word ifi_raw_buf0
 672 0154 00000000 	 .word ifq_raw_buf0
 673 0158 00000000 	 .word pifi_raw_buf1
 674 015c 00000000 	 .word pifq_raw_buf1
 675              	 .cfi_endproc
 676              	.LFE443:
 678              	 .global __aeabi_fadd
 679              	 .global __aeabi_fdiv
 680              	 .global __aeabi_i2f
 681              	 .global __aeabi_fcmplt
 682              	 .global __aeabi_ui2f
 683              	 .global __aeabi_fmul
 684              	 .section .text.checkTargetDetection,"ax",%progbits
 685              	 .align 2
 686              	 .global checkTargetDetection
 687              	 .thumb
 688              	 .thumb_func
 690              	checkTargetDetection:
 691              	.LFB444:
 209:../main.c     **** }   // end of main()
 210:../main.c     **** 
 211:../main.c     **** 
 212:../main.c     **** //*******************************************************************
 213:../main.c     **** //  Search IFI & IFQ frequency response for motion detection event
 214:../main.c     **** //  and determine target velocity in Mile Per Hour (MPH).
 215:../main.c     **** //  Toggle yellow LED on motion detection.
 216:../main.c     **** //
 217:../main.c     **** void checkTargetDetection(void)
 218:../main.c     **** {
 692              	 .loc 4 218 0
 693              	 .cfi_startproc
 694              	 
 695              	 
 696 0000 90B5     	 push {r4,r7,lr}
 697              	.LCFI40:
 698              	 .cfi_def_cfa_offset 12
 699              	 .cfi_offset 4,-12
 700              	 .cfi_offset 7,-8
 701              	 .cfi_offset 14,-4
 702 0002 83B0     	 sub sp,sp,#12
 703              	.LCFI41:
 704              	 .cfi_def_cfa_offset 24
 705 0004 00AF     	 add r7,sp,#0
 706              	.LCFI42:
 707              	 .cfi_def_cfa_register 7
 219:../main.c     **** 	uint16_t idx;
 220:../main.c     **** 
 221:../main.c     **** 	for (idx = 0; idx< FFT_SIZE/2; idx++)
 708              	 .loc 4 221 0
 709 0006 0023     	 movs r3,#0
 710 0008 FB80     	 strh r3,[r7,#6]
 711 000a 1AE0     	 b .L18
 712              	.L19:
 222:../main.c     **** 	{
 223:../main.c     **** 		finalResult[idx] = (i_fftResult[idx] + q_fftResult[idx])/2.0f;
 713              	 .loc 4 223 0 discriminator 3
 714 000c FC88     	 ldrh r4,[r7,#6]
 715 000e FB88     	 ldrh r3,[r7,#6]
 716 0010 4B4A     	 ldr r2,.L29
 717 0012 52F82310 	 ldr r1,[r2,r3,lsl#2]
 718 0016 FB88     	 ldrh r3,[r7,#6]
 719 0018 4A4A     	 ldr r2,.L29+4
 720 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 721 001e 0846     	 mov r0,r1
 722 0020 1946     	 mov r1,r3
 723 0022 FFF7FEFF 	 bl __aeabi_fadd
 724 0026 0346     	 mov r3,r0
 725 0028 1846     	 mov r0,r3
 726 002a 4FF08041 	 mov r1,#1073741824
 727 002e FFF7FEFF 	 bl __aeabi_fdiv
 728 0032 0346     	 mov r3,r0
 729 0034 1A46     	 mov r2,r3
 730 0036 444B     	 ldr r3,.L29+8
 731 0038 43F82420 	 str r2,[r3,r4,lsl#2]
 221:../main.c     **** 	{
 732              	 .loc 4 221 0 discriminator 3
 733 003c FB88     	 ldrh r3,[r7,#6]
 734 003e 0133     	 adds r3,r3,#1
 735 0040 FB80     	 strh r3,[r7,#6]
 736              	.L18:
 221:../main.c     **** 	{
 737              	 .loc 4 221 0 is_stmt 0 discriminator 1
 738 0042 FB88     	 ldrh r3,[r7,#6]
 739 0044 FF2B     	 cmp r3,#255
 740 0046 E1D9     	 bls .L19
 224:../main.c     **** 	}
 225:../main.c     **** 	/* Calculates maxValue and returns corresponding BIN value */
 226:../main.c     **** 	arm_max_f32(finalResult, NUM_SAMPLES/2, &maxVal, &maxBin);
 741              	 .loc 4 226 0 is_stmt 1
 742 0048 3F48     	 ldr r0,.L29+8
 743 004a 4FF48071 	 mov r1,#256
 744 004e 3F4A     	 ldr r2,.L29+12
 745 0050 3F4B     	 ldr r3,.L29+16
 746 0052 FFF7FEFF 	 bl arm_max_f32
 227:../main.c     **** 
 228:../main.c     **** 	if (maxVal > gDetectionThreshold )  // if the threshold is exceeded, we have a doppler event
 747              	 .loc 4 228 0
 748 0056 3F4B     	 ldr r3,.L29+20
 749 0058 1B88     	 ldrh r3,[r3]
 750 005a 1846     	 mov r0,r3
 751 005c FFF7FEFF 	 bl __aeabi_i2f
 752 0060 0246     	 mov r2,r0
 753 0062 3A4B     	 ldr r3,.L29+12
 754 0064 1B68     	 ldr r3,[r3]
 755 0066 1046     	 mov r0,r2
 756 0068 1946     	 mov r1,r3
 757 006a FFF7FEFF 	 bl __aeabi_fcmplt
 758 006e 0346     	 mov r3,r0
 759 0070 002B     	 cmp r3,#0
 760 0072 50D0     	 beq .L28
 761              	.LBB2:
 229:../main.c     **** 	{
 230:../main.c     **** 		gDopFreqIFI = maxBin*gHzPerBin + gHzPerBin/2.0f;	// compute the frequency of the max bin
 762              	 .loc 4 230 0
 763 0074 364B     	 ldr r3,.L29+16
 764 0076 1B68     	 ldr r3,[r3]
 765 0078 1846     	 mov r0,r3
 766 007a FFF7FEFF 	 bl __aeabi_ui2f
 767 007e 0246     	 mov r2,r0
 768 0080 354B     	 ldr r3,.L29+24
 769 0082 1B68     	 ldr r3,[r3]
 770 0084 1046     	 mov r0,r2
 771 0086 1946     	 mov r1,r3
 772 0088 FFF7FEFF 	 bl __aeabi_fmul
 773 008c 0346     	 mov r3,r0
 774 008e 1C46     	 mov r4,r3
 775 0090 314B     	 ldr r3,.L29+24
 776 0092 1B68     	 ldr r3,[r3]
 777 0094 1846     	 mov r0,r3
 778 0096 4FF08041 	 mov r1,#1073741824
 779 009a FFF7FEFF 	 bl __aeabi_fdiv
 780 009e 0346     	 mov r3,r0
 781 00a0 2046     	 mov r0,r4
 782 00a2 1946     	 mov r1,r3
 783 00a4 FFF7FEFF 	 bl __aeabi_fadd
 784 00a8 0346     	 mov r3,r0
 785 00aa 1A46     	 mov r2,r3
 786 00ac 2B4B     	 ldr r3,.L29+28
 787 00ae 1A60     	 str r2,[r3]
 231:../main.c     **** 		gTargetVelocity = gDopFreqIFI*(float32_t)0.013894f;  // convert freq to velocity in MPH
 788              	 .loc 4 231 0
 789 00b0 2A4B     	 ldr r3,.L29+28
 790 00b2 1B68     	 ldr r3,[r3]
 791 00b4 1846     	 mov r0,r3
 792 00b6 2A49     	 ldr r1,.L29+32
 793 00b8 FFF7FEFF 	 bl __aeabi_fmul
 794 00bc 0346     	 mov r3,r0
 795 00be 1A46     	 mov r2,r3
 796 00c0 284B     	 ldr r3,.L29+36
 797 00c2 1A60     	 str r2,[r3]
 232:../main.c     **** 
 233:../main.c     **** 		DIGITAL_IO_SetOutputHigh(&PIN1_5);
 798              	 .loc 4 233 0
 799 00c4 2848     	 ldr r0,.L29+40
 800 00c6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 234:../main.c     **** 
 235:../main.c     **** 		/* Calculates direction and turns on appropriate LED depending on direction */
 236:../main.c     **** 		uint8_t spec_result = spectrum_peak(i_fftResult, q_fftResult, NUM_SAMPLES);
 801              	 .loc 4 236 0
 802 00ca 1D48     	 ldr r0,.L29
 803 00cc 1D49     	 ldr r1,.L29+4
 804 00ce 4FF40072 	 mov r2,#512
 805 00d2 FFF7FEFF 	 bl spectrum_peak
 806 00d6 0346     	 mov r3,r0
 807 00d8 7B71     	 strb r3,[r7,#5]
 237:../main.c     ****         switch(spec_result){
 808              	 .loc 4 237 0
 809 00da 7B79     	 ldrb r3,[r7,#5]
 810 00dc 012B     	 cmp r3,#1
 811 00de 0BD0     	 beq .L23
 812 00e0 022B     	 cmp r3,#2
 813 00e2 10D0     	 beq .L24
 814 00e4 002B     	 cmp r3,#0
 815 00e6 00D0     	 beq .L25
 816              	.LBE2:
 817 00e8 26E0     	 b .L17
 818              	.L25:
 819              	.LBB3:
 238:../main.c     ****             case LEFT_SPECTRUM: // Target is moving toward radar
 239:../main.c     ****                 DIGITAL_IO_SetOutputHigh(&LED_YELLOW);
 820              	 .loc 4 239 0
 821 00ea 2048     	 ldr r0,.L29+44
 822 00ec FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 240:../main.c     ****                 DIGITAL_IO_SetOutputLow(&LED_GREEN);
 823              	 .loc 4 240 0
 824 00f0 1F48     	 ldr r0,.L29+48
 825 00f2 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 241:../main.c     ****                 break;
 826              	 .loc 4 241 0
 827 00f6 0DE0     	 b .L22
 828              	.L23:
 242:../main.c     ****             case RIGHT_SPECTRUM: // Target is moving away from radar
 243:../main.c     ****                 DIGITAL_IO_SetOutputLow(&LED_YELLOW);
 829              	 .loc 4 243 0
 830 00f8 1C48     	 ldr r0,.L29+44
 831 00fa FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 244:../main.c     ****                 DIGITAL_IO_SetOutputHigh(&LED_GREEN);
 832              	 .loc 4 244 0
 833 00fe 1C48     	 ldr r0,.L29+48
 834 0100 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 245:../main.c     ****                 break;
 835              	 .loc 4 245 0
 836 0104 06E0     	 b .L22
 837              	.L24:
 246:../main.c     ****             case BOTH_SPECTRUMS: // Target is still relative to radar
 247:../main.c     ****                 DIGITAL_IO_SetOutputLow(&LED_YELLOW);
 838              	 .loc 4 247 0
 839 0106 1948     	 ldr r0,.L29+44
 840 0108 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 248:../main.c     ****                 DIGITAL_IO_SetOutputLow(&LED_GREEN);
 841              	 .loc 4 248 0
 842 010c 1848     	 ldr r0,.L29+48
 843 010e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 249:../main.c     ****                 break;
 844              	 .loc 4 249 0
 845 0112 00BF     	 nop
 846              	.L22:
 847              	.LBE3:
 848 0114 10E0     	 b .L17
 849              	.L28:
 250:../main.c     ****         }
 251:../main.c     **** 	}
 252:../main.c     **** 	else
 253:../main.c     **** 	{
 254:../main.c     **** 		gDopFreqIFI = 0;
 850              	 .loc 4 254 0
 851 0116 114B     	 ldr r3,.L29+28
 852 0118 4FF00002 	 mov r2,#0
 853 011c 1A60     	 str r2,[r3]
 255:../main.c     **** 		gTargetVelocity = 0;
 854              	 .loc 4 255 0
 855 011e 114B     	 ldr r3,.L29+36
 856 0120 4FF00002 	 mov r2,#0
 857 0124 1A60     	 str r2,[r3]
 256:../main.c     **** 		DIGITAL_IO_SetOutputLow(&PIN1_5);
 858              	 .loc 4 256 0
 859 0126 1048     	 ldr r0,.L29+40
 860 0128 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 257:../main.c     **** 		DIGITAL_IO_SetOutputLow(&LED_YELLOW);
 861              	 .loc 4 257 0
 862 012c 0F48     	 ldr r0,.L29+44
 863 012e FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 258:../main.c     **** 		DIGITAL_IO_SetOutputLow(&LED_GREEN);
 864              	 .loc 4 258 0
 865 0132 0F48     	 ldr r0,.L29+48
 866 0134 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 867              	.L17:
 259:../main.c     **** 	}
 260:../main.c     **** }  // end of checkTargetDetection()
 868              	 .loc 4 260 0
 869 0138 0C37     	 adds r7,r7,#12
 870              	.LCFI43:
 871              	 .cfi_def_cfa_offset 12
 872 013a BD46     	 mov sp,r7
 873              	.LCFI44:
 874              	 .cfi_def_cfa_register 13
 875              	 
 876 013c 90BD     	 pop {r4,r7,pc}
 877              	.L30:
 878 013e 00BF     	 .align 2
 879              	.L29:
 880 0140 00000000 	 .word i_fftResult
 881 0144 00000000 	 .word q_fftResult
 882 0148 00000000 	 .word finalResult
 883 014c 00000000 	 .word maxVal
 884 0150 00000000 	 .word maxBin
 885 0154 00000000 	 .word gDetectionThreshold
 886 0158 00000000 	 .word gHzPerBin
 887 015c 00000000 	 .word gDopFreqIFI
 888 0160 A9A3633C 	 .word 1013162921
 889 0164 00000000 	 .word gTargetVelocity
 890 0168 00000000 	 .word PIN1_5
 891 016c 00000000 	 .word LED_YELLOW
 892 0170 00000000 	 .word LED_GREEN
 893              	 .cfi_endproc
 894              	.LFE444:
 896              	 .section .text.DMA_IFQ_event_handler,"ax",%progbits
 897              	 .align 2
 898              	 .global DMA_IFQ_event_handler
 899              	 .thumb
 900              	 .thumb_func
 902              	DMA_IFQ_event_handler:
 903              	.LFB445:
 261:../main.c     **** 
 262:../main.c     **** 
 263:../main.c     **** //*********************************************************
 264:../main.c     **** // DMA IFQ Interrupt Service routine (ISR)
 265:../main.c     **** // This ISR executes when a block of data has been transferred
 266:../main.c     **** // from the ADC to the DMA buffer (ifi_raw_buf0[] and ifq_raw_buf0.
 267:../main.c     **** // the DMA buffers are large enough to handle two blocks of
 268:../main.c     **** // data so we can overlap data acquisition with data processing
 269:../main.c     **** // operations.
 270:../main.c     **** //
 271:../main.c     **** void DMA_IFQ_event_handler(XMC_DMA_CH_EVENT_t event)
 272:../main.c     **** {
 904              	 .loc 4 272 0
 905              	 .cfi_startproc
 906              	 
 907              	 
 908 0000 80B5     	 push {r7,lr}
 909              	.LCFI45:
 910              	 .cfi_def_cfa_offset 8
 911              	 .cfi_offset 7,-8
 912              	 .cfi_offset 14,-4
 913 0002 82B0     	 sub sp,sp,#8
 914              	.LCFI46:
 915              	 .cfi_def_cfa_offset 16
 916 0004 00AF     	 add r7,sp,#0
 917              	.LCFI47:
 918              	 .cfi_def_cfa_register 7
 919 0006 0346     	 mov r3,r0
 920 0008 FB71     	 strb r3,[r7,#7]
 273:../main.c     **** 	static uint8_t cnt = 0;
 274:../main.c     **** 
 275:../main.c     **** 	if (cnt == 0)
 921              	 .loc 4 275 0
 922 000a 164B     	 ldr r3,.L34
 923 000c 1B78     	 ldrb r3,[r3]
 924 000e 002B     	 cmp r3,#0
 925 0010 09D1     	 bne .L32
 276:../main.c     **** 	{
 277:../main.c     **** 		gIFQDataReadyFlag = 1; 	// Data is ready to be processed for first DMA block
 926              	 .loc 4 277 0
 927 0012 154B     	 ldr r3,.L34+4
 928 0014 0122     	 movs r2,#1
 929 0016 1A70     	 strb r2,[r3]
 278:../main.c     **** 		cnt++;
 930              	 .loc 4 278 0
 931 0018 124B     	 ldr r3,.L34
 932 001a 1B78     	 ldrb r3,[r3]
 933 001c 0133     	 adds r3,r3,#1
 934 001e DAB2     	 uxtb r2,r3
 935 0020 104B     	 ldr r3,.L34
 936 0022 1A70     	 strb r2,[r3]
 937 0024 1AE0     	 b .L31
 938              	.L32:
 279:../main.c     **** 	}
 280:../main.c     **** 	else
 281:../main.c     **** 	{			// Second DMA block has been transferred.
 282:../main.c     **** 		TIMER_Stop(&FS_ADC);	// stop ADC sampling
 939              	 .loc 4 282 0
 940 0026 1148     	 ldr r0,.L34+8
 941 0028 FFF7FEFF 	 bl TIMER_Stop
 283:../main.c     **** 		cnt = 0;
 942              	 .loc 4 283 0
 943 002c 0D4B     	 ldr r3,.L34
 944 002e 0022     	 movs r2,#0
 945 0030 1A70     	 strb r2,[r3]
 284:../main.c     **** 		DMA_CH_Disable(&DMA_CH_IFI);	// Disable DMA
 946              	 .loc 4 284 0
 947 0032 0F48     	 ldr r0,.L34+12
 948 0034 FFF7FEFF 	 bl DMA_CH_Disable
 285:../main.c     **** 		DMA_CH_Disable(&DMA_CH_IFQ);
 949              	 .loc 4 285 0
 950 0038 0E48     	 ldr r0,.L34+16
 951 003a FFF7FEFF 	 bl DMA_CH_Disable
 286:../main.c     **** 
 287:../main.c     **** 		DMA_CH_Reload(&DMA_CH_IFI);		// Reload DMA addresses
 952              	 .loc 4 287 0
 953 003e 0C48     	 ldr r0,.L34+12
 954 0040 FFF7FEFF 	 bl DMA_CH_Reload
 288:../main.c     **** 		DMA_CH_Reload(&DMA_CH_IFQ);
 955              	 .loc 4 288 0
 956 0044 0B48     	 ldr r0,.L34+16
 957 0046 FFF7FEFF 	 bl DMA_CH_Reload
 289:../main.c     **** 
 290:../main.c     **** 		DMA_CH_Enable(&DMA_CH_IFI);		// Restart DMA
 958              	 .loc 4 290 0
 959 004a 0948     	 ldr r0,.L34+12
 960 004c FFF7FEFF 	 bl DMA_CH_Enable
 291:../main.c     **** 		DMA_CH_Enable(&DMA_CH_IFQ);
 961              	 .loc 4 291 0
 962 0050 0848     	 ldr r0,.L34+16
 963 0052 FFF7FEFF 	 bl DMA_CH_Enable
 292:../main.c     **** 		gIFQDataReadyFlag = 2;			// second DMA block is ready
 964              	 .loc 4 292 0
 965 0056 044B     	 ldr r3,.L34+4
 966 0058 0222     	 movs r2,#2
 967 005a 1A70     	 strb r2,[r3]
 968              	.L31:
 293:../main.c     **** 	}
 294:../main.c     **** 
 295:../main.c     **** } // end of IFQ DMA ISR
 969              	 .loc 4 295 0
 970 005c 0837     	 adds r7,r7,#8
 971              	.LCFI48:
 972              	 .cfi_def_cfa_offset 8
 973 005e BD46     	 mov sp,r7
 974              	.LCFI49:
 975              	 .cfi_def_cfa_register 13
 976              	 
 977 0060 80BD     	 pop {r7,pc}
 978              	.L35:
 979 0062 00BF     	 .align 2
 980              	.L34:
 981 0064 00000000 	 .word cnt.12827
 982 0068 00000000 	 .word gIFQDataReadyFlag
 983 006c 00000000 	 .word FS_ADC
 984 0070 00000000 	 .word DMA_CH_IFI
 985 0074 00000000 	 .word DMA_CH_IFQ
 986              	 .cfi_endproc
 987              	.LFE445:
 989              	 .section .text.CCU41_3_IRQHandler,"ax",%progbits
 990              	 .align 2
 991              	 .global CCU41_3_IRQHandler
 992              	 .thumb
 993              	 .thumb_func
 995              	CCU41_3_IRQHandler:
 996              	.LFB446:
 296:../main.c     **** 
 297:../main.c     **** 
 298:../main.c     **** //***********************************************
 299:../main.c     **** // One Hz Interrupt Service Routine
 300:../main.c     **** //
 301:../main.c     **** void OneHzISR(void)
 302:../main.c     **** {
 997              	 .loc 4 302 0
 998              	 .cfi_startproc
 999              	 
 1000              	 
 1001 0000 80B5     	 push {r7,lr}
 1002              	.LCFI50:
 1003              	 .cfi_def_cfa_offset 8
 1004              	 .cfi_offset 7,-8
 1005              	 .cfi_offset 14,-4
 1006 0002 00AF     	 add r7,sp,#0
 1007              	.LCFI51:
 1008              	 .cfi_def_cfa_register 7
 303:../main.c     **** 
 304:../main.c     **** //	DIGITAL_IO_ToggleOutput(&LED_GREEN);
 305:../main.c     **** 
 306:../main.c     **** 	gQ2Freq = COUNTER_GetCurrentCount(&Q2_FREQ_P22);  // Read Q2 counter
 1009              	 .loc 4 306 0
 1010 0004 0748     	 ldr r0,.L37
 1011 0006 FFF7FEFF 	 bl COUNTER_GetCurrentCount
 1012 000a 0346     	 mov r3,r0
 1013 000c 1A46     	 mov r2,r3
 1014 000e 064B     	 ldr r3,.L37+4
 1015 0010 1A60     	 str r2,[r3]
 307:../main.c     **** 	COUNTER_ResetCounter(&Q2_FREQ_P22);				  // clear Q2 counter
 1016              	 .loc 4 307 0
 1017 0012 0448     	 ldr r0,.L37
 1018 0014 FFF7FEFF 	 bl COUNTER_ResetCounter
 308:../main.c     **** 
 309:../main.c     **** 	BGT_LO_Adjust(gQ2Freq);			// make sure Q2 is in range
 1019              	 .loc 4 309 0
 1020 0018 034B     	 ldr r3,.L37+4
 1021 001a 1B68     	 ldr r3,[r3]
 1022 001c 1846     	 mov r0,r3
 1023 001e FFF7FEFF 	 bl BGT_LO_Adjust
 310:../main.c     **** 
 311:../main.c     **** }  // end of OneHzISR()
 1024              	 .loc 4 311 0
 1025 0022 80BD     	 pop {r7,pc}
 1026              	.L38:
 1027              	 .align 2
 1028              	.L37:
 1029 0024 00000000 	 .word Q2_FREQ_P22
 1030 0028 00000000 	 .word gQ2Freq
 1031              	 .cfi_endproc
 1032              	.LFE446:
 1034              	 .section .ram_code,"ax",%progbits
 1035              	 .align 2
 1036              	 .global do_rfft_i
 1037              	 .thumb
 1038              	 .thumb_func
 1040              	do_rfft_i:
 1041              	.LFB447:
 312:../main.c     **** 
 313:../main.c     **** 
 314:../main.c     **** //***************************************************************
 315:../main.c     **** //  Convert  IFI_HG sample data to frequency domain
 316:../main.c     **** //  Sample frequency determined by TIMER APP
 317:../main.c     **** //  FS_ADC.
 318:../main.c     **** //  The mean of the time domain data is then calculated and
 319:../main.c     **** //  removed from the sample buffer, to pull out the DC content.
 320:../main.c     **** //  The Hanning window is then applied to the time domain buffer.
 321:../main.c     **** //  This buffer then is converted to frequency domain with the FFT.
 322:../main.c     **** //
 323:../main.c     **** //
 324:../main.c     **** void do_rfft_i(uint16_t * pDataBuf)
 325:../main.c     **** {
 1042              	 .loc 4 325 0
 1043              	 .cfi_startproc
 1044              	 
 1045              	 
 1046 0000 80B5     	 push {r7,lr}
 1047              	.LCFI52:
 1048              	 .cfi_def_cfa_offset 8
 1049              	 .cfi_offset 7,-8
 1050              	 .cfi_offset 14,-4
 1051 0002 84B0     	 sub sp,sp,#16
 1052              	.LCFI53:
 1053              	 .cfi_def_cfa_offset 24
 1054 0004 00AF     	 add r7,sp,#0
 1055              	.LCFI54:
 1056              	 .cfi_def_cfa_register 7
 1057 0006 7860     	 str r0,[r7,#4]
 326:../main.c     **** 	uint32_t idx =0;
 1058              	 .loc 4 326 0
 1059 0008 0023     	 movs r3,#0
 1060 000a FB60     	 str r3,[r7,#12]
 327:../main.c     **** 	float32_t i_mean = 0;
 1061              	 .loc 4 327 0
 1062 000c 4FF00003 	 mov r3,#0
 1063 0010 BB60     	 str r3,[r7,#8]
 328:../main.c     **** 
 329:../main.c     **** 	for (idx=0; idx<NUM_SAMPLES; idx++)
 1064              	 .loc 4 329 0
 1065 0012 0023     	 movs r3,#0
 1066 0014 FB60     	 str r3,[r7,#12]
 1067 0016 1AE0     	 b .L40
 1068              	.L41:
 330:../main.c     **** 		ifi_adc_measurements[idx] = (float32_t)pDataBuf[idx]*3.3f/4095.0f;
 1069              	 .loc 4 330 0 discriminator 3
 1070 0018 FB68     	 ldr r3,[r7,#12]
 1071 001a 5B00     	 lsls r3,r3,#1
 1072 001c 7A68     	 ldr r2,[r7,#4]
 1073 001e 1344     	 add r3,r3,r2
 1074 0020 1B88     	 ldrh r3,[r3]
 1075 0022 1846     	 mov r0,r3
 1076 0024 FFF7FEFF 	 bl __aeabi_ui2f
 1077 0028 0346     	 mov r3,r0
 1078 002a 1846     	 mov r0,r3
 1079 002c 1E49     	 ldr r1,.L42
 1080 002e FFF7FEFF 	 bl __aeabi_fmul
 1081 0032 0346     	 mov r3,r0
 1082 0034 1846     	 mov r0,r3
 1083 0036 1D49     	 ldr r1,.L42+4
 1084 0038 FFF7FEFF 	 bl __aeabi_fdiv
 1085 003c 0346     	 mov r3,r0
 1086 003e 1946     	 mov r1,r3
 1087 0040 1B4A     	 ldr r2,.L42+8
 1088 0042 FB68     	 ldr r3,[r7,#12]
 1089 0044 42F82310 	 str r1,[r2,r3,lsl#2]
 329:../main.c     **** 		ifi_adc_measurements[idx] = (float32_t)pDataBuf[idx]*3.3f/4095.0f;
 1090              	 .loc 4 329 0 discriminator 3
 1091 0048 FB68     	 ldr r3,[r7,#12]
 1092 004a 0133     	 adds r3,r3,#1
 1093 004c FB60     	 str r3,[r7,#12]
 1094              	.L40:
 329:../main.c     **** 		ifi_adc_measurements[idx] = (float32_t)pDataBuf[idx]*3.3f/4095.0f;
 1095              	 .loc 4 329 0 is_stmt 0 discriminator 1
 1096 004e FB68     	 ldr r3,[r7,#12]
 1097 0050 B3F5007F 	 cmp r3,#512
 1098 0054 E0D3     	 bcc .L41
 331:../main.c     **** 
 332:../main.c     **** 	arm_mean_f32(ifi_adc_measurements, NUM_SAMPLES, &i_mean); 						//Finds the mean
 1099              	 .loc 4 332 0 is_stmt 1
 1100 0056 07F10803 	 add r3,r7,#8
 1101 005a 1548     	 ldr r0,.L42+8
 1102 005c 4FF40071 	 mov r1,#512
 1103 0060 1A46     	 mov r2,r3
 1104 0062 FFF7FEFF 	 bl arm_mean_f32
 333:../main.c     **** 	arm_offset_f32(ifi_adc_measurements, -i_mean, i_adc_measurements, NUM_SAMPLES);  	//kills the offs
 1105              	 .loc 4 333 0
 1106 0066 BB68     	 ldr r3,[r7,#8]
 1107 0068 83F00043 	 eor r3,r3,#-2147483648
 1108 006c 1048     	 ldr r0,.L42+8
 1109 006e 1946     	 mov r1,r3
 1110 0070 104A     	 ldr r2,.L42+12
 1111 0072 4FF40073 	 mov r3,#512
 1112 0076 FFF7FEFF 	 bl arm_offset_f32
 334:../main.c     **** 
 335:../main.c     **** 	arm_mult_f32(i_adc_measurements, hanning_window, i_adc_measurements, NUM_SAMPLES); 	//apply a hann
 1113              	 .loc 4 335 0
 1114 007a 0E48     	 ldr r0,.L42+12
 1115 007c 0E49     	 ldr r1,.L42+16
 1116 007e 0D4A     	 ldr r2,.L42+12
 1117 0080 4FF40073 	 mov r3,#512
 1118 0084 FFF7FEFF 	 bl arm_mult_f32
 336:../main.c     **** 
 337:../main.c     **** 	arm_rfft_fast_f32(&i_fftStructure, i_adc_measurements, i_fftResult, INVERT_FFT); 	//performs fft
 1119              	 .loc 4 337 0
 1120 0088 0C48     	 ldr r0,.L42+20
 1121 008a 0A49     	 ldr r1,.L42+12
 1122 008c 0C4A     	 ldr r2,.L42+24
 1123 008e 0023     	 movs r3,#0
 1124 0090 FFF7FEFF 	 bl arm_rfft_fast_f32
 338:../main.c     **** 
 339:../main.c     **** 	arm_cmplx_mag_f32(i_fftResult, i_fftResult, NUM_SAMPLES);  // convert to real magnitude data
 1125              	 .loc 4 339 0
 1126 0094 0A48     	 ldr r0,.L42+24
 1127 0096 0A49     	 ldr r1,.L42+24
 1128 0098 4FF40072 	 mov r2,#512
 1129 009c FFF7FEFF 	 bl arm_cmplx_mag_f32
 340:../main.c     **** 
 341:../main.c     **** }  // end of do_rfft_i()
 1130              	 .loc 4 341 0
 1131 00a0 1037     	 adds r7,r7,#16
 1132              	.LCFI55:
 1133              	 .cfi_def_cfa_offset 8
 1134 00a2 BD46     	 mov sp,r7
 1135              	.LCFI56:
 1136              	 .cfi_def_cfa_register 13
 1137              	 
 1138 00a4 80BD     	 pop {r7,pc}
 1139              	.L43:
 1140 00a6 00BF     	 .align 2
 1141              	.L42:
 1142 00a8 33335340 	 .word 1079194419
 1143 00ac 00F07F45 	 .word 1166012416
 1144 00b0 00000000 	 .word ifi_adc_measurements
 1145 00b4 00000000 	 .word i_adc_measurements
 1146 00b8 00000000 	 .word hanning_window
 1147 00bc 00000000 	 .word i_fftStructure
 1148 00c0 00000000 	 .word i_fftResult
 1149              	 .cfi_endproc
 1150              	.LFE447:
 1152              	 .align 2
 1153              	 .global do_rfft_q
 1154              	 .thumb
 1155              	 .thumb_func
 1157              	do_rfft_q:
 1158              	.LFB448:
 342:../main.c     **** 
 343:../main.c     **** 
 344:../main.c     **** //***************************************************************
 345:../main.c     **** //  Convert  IFQ_HG sample data to frequency domain
 346:../main.c     **** //  Sample frequency determined by TIMER APP
 347:../main.c     **** //  FS_ADC.
 348:../main.c     **** //  The mean of the time domain data is then calculated and
 349:../main.c     **** //  removed from the sample buffer, to pull out the DC content.
 350:../main.c     **** //  The Hanning window is then applied to the time domain buffer.
 351:../main.c     **** //  This buffer then is converted to frequency domain with the FFT.
 352:../main.c     **** //
 353:../main.c     **** //
 354:../main.c     **** void do_rfft_q(uint16_t * pDataBuf)
 355:../main.c     **** {
 1159              	 .loc 4 355 0
 1160              	 .cfi_startproc
 1161              	 
 1162              	 
 1163 00c4 90B5     	 push {r4,r7,lr}
 1164              	.LCFI57:
 1165              	 .cfi_def_cfa_offset 12
 1166              	 .cfi_offset 4,-12
 1167              	 .cfi_offset 7,-8
 1168              	 .cfi_offset 14,-4
 1169 00c6 85B0     	 sub sp,sp,#20
 1170              	.LCFI58:
 1171              	 .cfi_def_cfa_offset 32
 1172 00c8 00AF     	 add r7,sp,#0
 1173              	.LCFI59:
 1174              	 .cfi_def_cfa_register 7
 1175 00ca 7860     	 str r0,[r7,#4]
 356:../main.c     **** 	uint32_t idx =0;
 1176              	 .loc 4 356 0
 1177 00cc 0023     	 movs r3,#0
 1178 00ce FB60     	 str r3,[r7,#12]
 357:../main.c     **** 	float32_t i_mean = 0;   // mean
 1179              	 .loc 4 357 0
 1180 00d0 4FF00003 	 mov r3,#0
 1181 00d4 BB60     	 str r3,[r7,#8]
 358:../main.c     **** 
 359:../main.c     **** 	for (idx=0; idx<NUM_SAMPLES; idx++)
 1182              	 .loc 4 359 0
 1183 00d6 0023     	 movs r3,#0
 1184 00d8 FB60     	 str r3,[r7,#12]
 1185 00da 1BE0     	 b .L45
 1186              	.L46:
 360:../main.c     **** 		ifq_adc_measurements[idx] = (float32_t)pDataBuf[idx]*3.3f/4095.0f;
 1187              	 .loc 4 360 0 discriminator 3
 1188 00dc 254B     	 ldr r3,.L47
 1189 00de 1A68     	 ldr r2,[r3]
 1190 00e0 FB68     	 ldr r3,[r7,#12]
 1191 00e2 9B00     	 lsls r3,r3,#2
 1192 00e4 D418     	 adds r4,r2,r3
 1193 00e6 FB68     	 ldr r3,[r7,#12]
 1194 00e8 5B00     	 lsls r3,r3,#1
 1195 00ea 7A68     	 ldr r2,[r7,#4]
 1196 00ec 1344     	 add r3,r3,r2
 1197 00ee 1B88     	 ldrh r3,[r3]
 1198 00f0 1846     	 mov r0,r3
 1199 00f2 FFF7FEFF 	 bl __aeabi_ui2f
 1200 00f6 0346     	 mov r3,r0
 1201 00f8 1846     	 mov r0,r3
 1202 00fa 1F49     	 ldr r1,.L47+4
 1203 00fc FFF7FEFF 	 bl __aeabi_fmul
 1204 0100 0346     	 mov r3,r0
 1205 0102 1846     	 mov r0,r3
 1206 0104 1D49     	 ldr r1,.L47+8
 1207 0106 FFF7FEFF 	 bl __aeabi_fdiv
 1208 010a 0346     	 mov r3,r0
 1209 010c 2360     	 str r3,[r4]
 359:../main.c     **** 		ifq_adc_measurements[idx] = (float32_t)pDataBuf[idx]*3.3f/4095.0f;
 1210              	 .loc 4 359 0 discriminator 3
 1211 010e FB68     	 ldr r3,[r7,#12]
 1212 0110 0133     	 adds r3,r3,#1
 1213 0112 FB60     	 str r3,[r7,#12]
 1214              	.L45:
 359:../main.c     **** 		ifq_adc_measurements[idx] = (float32_t)pDataBuf[idx]*3.3f/4095.0f;
 1215              	 .loc 4 359 0 is_stmt 0 discriminator 1
 1216 0114 FB68     	 ldr r3,[r7,#12]
 1217 0116 B3F5007F 	 cmp r3,#512
 1218 011a DFD3     	 bcc .L46
 361:../main.c     **** 
 362:../main.c     **** 	arm_mean_f32(ifq_adc_measurements, NUM_SAMPLES, &i_mean); //Finds the mean
 1219              	 .loc 4 362 0 is_stmt 1
 1220 011c 154B     	 ldr r3,.L47
 1221 011e 1A68     	 ldr r2,[r3]
 1222 0120 07F10803 	 add r3,r7,#8
 1223 0124 1046     	 mov r0,r2
 1224 0126 4FF40071 	 mov r1,#512
 1225 012a 1A46     	 mov r2,r3
 1226 012c FFF7FEFF 	 bl arm_mean_f32
 363:../main.c     **** 	arm_offset_f32(ifq_adc_measurements, -i_mean, q_adc_measurements, NUM_SAMPLES);  //kills the offse
 1227              	 .loc 4 363 0
 1228 0130 104B     	 ldr r3,.L47
 1229 0132 1A68     	 ldr r2,[r3]
 1230 0134 BB68     	 ldr r3,[r7,#8]
 1231 0136 83F00043 	 eor r3,r3,#-2147483648
 1232 013a 1046     	 mov r0,r2
 1233 013c 1946     	 mov r1,r3
 1234 013e 104A     	 ldr r2,.L47+12
 1235 0140 4FF40073 	 mov r3,#512
 1236 0144 FFF7FEFF 	 bl arm_offset_f32
 364:../main.c     **** 
 365:../main.c     **** 	arm_mult_f32(q_adc_measurements, hanning_window, q_adc_measurements, NUM_SAMPLES); //apply a hanni
 1237              	 .loc 4 365 0
 1238 0148 0D48     	 ldr r0,.L47+12
 1239 014a 0E49     	 ldr r1,.L47+16
 1240 014c 0C4A     	 ldr r2,.L47+12
 1241 014e 4FF40073 	 mov r3,#512
 1242 0152 FFF7FEFF 	 bl arm_mult_f32
 366:../main.c     **** 
 367:../main.c     **** 	arm_rfft_fast_f32(&i_fftStructure, q_adc_measurements, q_fftResult, INVERT_FFT); //performs fft
 1243              	 .loc 4 367 0
 1244 0156 0C48     	 ldr r0,.L47+20
 1245 0158 0949     	 ldr r1,.L47+12
 1246 015a 0C4A     	 ldr r2,.L47+24
 1247 015c 0023     	 movs r3,#0
 1248 015e FFF7FEFF 	 bl arm_rfft_fast_f32
 368:../main.c     **** 
 369:../main.c     **** 	arm_cmplx_mag_f32(q_fftResult, q_fftResult, NUM_SAMPLES);  // convert to real magnitude data
 1249              	 .loc 4 369 0
 1250 0162 0A48     	 ldr r0,.L47+24
 1251 0164 0949     	 ldr r1,.L47+24
 1252 0166 4FF40072 	 mov r2,#512
 1253 016a FFF7FEFF 	 bl arm_cmplx_mag_f32
 370:../main.c     **** 
 371:../main.c     **** }  // end of do_rfft_q()
 1254              	 .loc 4 371 0
 1255 016e 1437     	 adds r7,r7,#20
 1256              	.LCFI60:
 1257              	 .cfi_def_cfa_offset 12
 1258 0170 BD46     	 mov sp,r7
 1259              	.LCFI61:
 1260              	 .cfi_def_cfa_register 13
 1261              	 
 1262 0172 90BD     	 pop {r4,r7,pc}
 1263              	.L48:
 1264              	 .align 2
 1265              	.L47:
 1266 0174 00000000 	 .word ifq_adc_measurements
 1267 0178 33335340 	 .word 1079194419
 1268 017c 00F07F45 	 .word 1166012416
 1269 0180 00000000 	 .word q_adc_measurements
 1270 0184 00000000 	 .word hanning_window
 1271 0188 00000000 	 .word i_fftStructure
 1272 018c 00000000 	 .word q_fftResult
 1273              	 .cfi_endproc
 1274              	.LFE448:
 1276              	 .global __aeabi_f2d
 1277              	 .global __aeabi_dadd
 1278              	 .global __aeabi_i2d
 1279              	 .global __aeabi_dmul
 1280              	 .global __aeabi_ddiv
 1281              	 .global __aeabi_d2f
 1282              	 .global __aeabi_fsub
 1283              	 .section .text.genHanningData,"ax",%progbits
 1284              	 .align 2
 1285              	 .global genHanningData
 1286              	 .thumb
 1287              	 .thumb_func
 1289              	genHanningData:
 1290              	.LFB449:
 372:../main.c     **** 
 373:../main.c     **** 
 374:../main.c     **** //***********************************************
 375:../main.c     **** //   Generate Hanning Window data for FFT
 376:../main.c     **** //   Signal Processing.  Hanning window helps
 377:../main.c     **** //   smooth the edges of the sample window.
 378:../main.c     **** //
 379:../main.c     **** void genHanningData(void)
 380:../main.c     **** {
 1291              	 .loc 4 380 0
 1292              	 .cfi_startproc
 1293              	 
 1294              	 
 1295 0000 2DE99043 	 push {r4,r7,r8,r9,lr}
 1296              	.LCFI62:
 1297              	 .cfi_def_cfa_offset 20
 1298              	 .cfi_offset 4,-20
 1299              	 .cfi_offset 7,-16
 1300              	 .cfi_offset 8,-12
 1301              	 .cfi_offset 9,-8
 1302              	 .cfi_offset 14,-4
 1303 0004 83B0     	 sub sp,sp,#12
 1304              	.LCFI63:
 1305              	 .cfi_def_cfa_offset 32
 1306 0006 00AF     	 add r7,sp,#0
 1307              	.LCFI64:
 1308              	 .cfi_def_cfa_register 7
 381:../main.c     **** 	uint16_t idx;
 382:../main.c     **** 	float32_t  piVal = (float)22.0/(float)7.0;
 1309              	 .loc 4 382 0
 1310 0008 264B     	 ldr r3,.L52
 1311 000a 3B60     	 str r3,[r7]
 383:../main.c     **** 
 384:../main.c     **** 	for (idx=0; idx<FFT_SIZE; idx++)
 1312              	 .loc 4 384 0
 1313 000c 0023     	 movs r3,#0
 1314 000e FB80     	 strh r3,[r7,#6]
 1315 0010 3FE0     	 b .L50
 1316              	.L51:
 385:../main.c     **** 	{
 386:../main.c     **** 		hanning_window[idx] = (1.0f - arm_cos_f32(2.0*piVal*idx/FFT_SIZE))/2.0f;
 1317              	 .loc 4 386 0 discriminator 3
 1318 0012 FC88     	 ldrh r4,[r7,#6]
 1319 0014 3868     	 ldr r0,[r7]
 1320 0016 FFF7FEFF 	 bl __aeabi_f2d
 1321 001a 0246     	 mov r2,r0
 1322 001c 0B46     	 mov r3,r1
 1323 001e 1046     	 mov r0,r2
 1324 0020 1946     	 mov r1,r3
 1325 0022 FFF7FEFF 	 bl __aeabi_dadd
 1326 0026 0246     	 mov r2,r0
 1327 0028 0B46     	 mov r3,r1
 1328 002a 9046     	 mov r8,r2
 1329 002c 9946     	 mov r9,r3
 1330 002e FB88     	 ldrh r3,[r7,#6]
 1331 0030 1846     	 mov r0,r3
 1332 0032 FFF7FEFF 	 bl __aeabi_i2d
 1333 0036 0246     	 mov r2,r0
 1334 0038 0B46     	 mov r3,r1
 1335 003a 4046     	 mov r0,r8
 1336 003c 4946     	 mov r1,r9
 1337 003e FFF7FEFF 	 bl __aeabi_dmul
 1338 0042 0246     	 mov r2,r0
 1339 0044 0B46     	 mov r3,r1
 1340 0046 1046     	 mov r0,r2
 1341 0048 1946     	 mov r1,r3
 1342 004a 4FF00002 	 mov r2,#0
 1343 004e 4FF08143 	 mov r3,#1082130432
 1344 0052 FFF7FEFF 	 bl __aeabi_ddiv
 1345 0056 0246     	 mov r2,r0
 1346 0058 0B46     	 mov r3,r1
 1347 005a 1046     	 mov r0,r2
 1348 005c 1946     	 mov r1,r3
 1349 005e FFF7FEFF 	 bl __aeabi_d2f
 1350 0062 0346     	 mov r3,r0
 1351 0064 1846     	 mov r0,r3
 1352 0066 FFF7FEFF 	 bl arm_cos_f32
 1353 006a 0346     	 mov r3,r0
 1354 006c 4FF07E50 	 mov r0,#1065353216
 1355 0070 1946     	 mov r1,r3
 1356 0072 FFF7FEFF 	 bl __aeabi_fsub
 1357 0076 0346     	 mov r3,r0
 1358 0078 1846     	 mov r0,r3
 1359 007a 4FF08041 	 mov r1,#1073741824
 1360 007e FFF7FEFF 	 bl __aeabi_fdiv
 1361 0082 0346     	 mov r3,r0
 1362 0084 1A46     	 mov r2,r3
 1363 0086 084B     	 ldr r3,.L52+4
 1364 0088 43F82420 	 str r2,[r3,r4,lsl#2]
 384:../main.c     **** 	{
 1365              	 .loc 4 384 0 discriminator 3
 1366 008c FB88     	 ldrh r3,[r7,#6]
 1367 008e 0133     	 adds r3,r3,#1
 1368 0090 FB80     	 strh r3,[r7,#6]
 1369              	.L50:
 384:../main.c     **** 	{
 1370              	 .loc 4 384 0 is_stmt 0 discriminator 1
 1371 0092 FB88     	 ldrh r3,[r7,#6]
 1372 0094 B3F5007F 	 cmp r3,#512
 1373 0098 BBD3     	 bcc .L51
 387:../main.c     **** 	}
 388:../main.c     **** 
 389:../main.c     **** }  // end of genHanningData()
 1374              	 .loc 4 389 0 is_stmt 1
 1375 009a 0C37     	 adds r7,r7,#12
 1376              	.LCFI65:
 1377              	 .cfi_def_cfa_offset 20
 1378 009c BD46     	 mov sp,r7
 1379              	.LCFI66:
 1380              	 .cfi_def_cfa_register 13
 1381              	 
 1382 009e BDE89083 	 pop {r4,r7,r8,r9,pc}
 1383              	.L53:
 1384 00a2 00BF     	 .align 2
 1385              	.L52:
 1386 00a4 92244940 	 .word 1078535314
 1387 00a8 00000000 	 .word hanning_window
 1388              	 .cfi_endproc
 1389              	.LFE449:
 1391              	 .global __aeabi_dcmplt
 1392              	 .global __aeabi_fcmpgt
 1393              	 .section .text.spectrum_peak,"ax",%progbits
 1394              	 .align 2
 1395              	 .global spectrum_peak
 1396              	 .thumb
 1397              	 .thumb_func
 1399              	spectrum_peak:
 1400              	.LFB450:
 390:../main.c     **** 
 391:../main.c     **** 
 392:../main.c     **** //***************************************************************
 393:../main.c     **** //  Perform the cross correlation of the target signal and the
 394:../main.c     **** //	sampled signal. Return which side of the spectrum the peak
 395:../main.c     **** //  value was found. This is to save memory by avoiding having
 396:../main.c     **** //  to store all the calculations.
 397:../main.c     **** //
 398:../main.c     **** uint8_t spectrum_peak(
 399:../main.c     ****     float32_t* pSrcA,
 400:../main.c     ****     float32_t* pSrcB,
 401:../main.c     ****     uint32_t blockSize
 402:../main.c     ****     )
 403:../main.c     **** {
 1401              	 .loc 4 403 0
 1402              	 .cfi_startproc
 1403              	 
 1404              	 
 1405 0000 90B5     	 push {r4,r7,lr}
 1406              	.LCFI67:
 1407              	 .cfi_def_cfa_offset 12
 1408              	 .cfi_offset 4,-12
 1409              	 .cfi_offset 7,-8
 1410              	 .cfi_offset 14,-4
 1411 0002 87B0     	 sub sp,sp,#28
 1412              	.LCFI68:
 1413              	 .cfi_def_cfa_offset 40
 1414 0004 00AF     	 add r7,sp,#0
 1415              	.LCFI69:
 1416              	 .cfi_def_cfa_register 7
 1417 0006 F860     	 str r0,[r7,#12]
 1418 0008 B960     	 str r1,[r7,#8]
 1419 000a 7A60     	 str r2,[r7,#4]
 404:../main.c     ****     float32_t
 405:../main.c     ****             left_peak = xcorr_left_max(pSrcA, pSrcB, blockSize),
 1420              	 .loc 4 405 0
 1421 000c F868     	 ldr r0,[r7,#12]
 1422 000e B968     	 ldr r1,[r7,#8]
 1423 0010 7A68     	 ldr r2,[r7,#4]
 1424 0012 FFF7FEFF 	 bl xcorr_left_max
 1425 0016 7861     	 str r0,[r7,#20]
 406:../main.c     ****             right_peak = xcorr_right_max(pSrcA, pSrcB, blockSize)
 1426              	 .loc 4 406 0
 1427 0018 F868     	 ldr r0,[r7,#12]
 1428 001a B968     	 ldr r1,[r7,#8]
 1429 001c 7A68     	 ldr r2,[r7,#4]
 1430 001e FFF7FEFF 	 bl xcorr_right_max
 1431 0022 3861     	 str r0,[r7,#16]
 407:../main.c     ****             ;
 408:../main.c     ****     if(fabs(left_peak - right_peak) < XCORR_EPSILON)
 1432              	 .loc 4 408 0
 1433 0024 7869     	 ldr r0,[r7,#20]
 1434 0026 3969     	 ldr r1,[r7,#16]
 1435 0028 FFF7FEFF 	 bl __aeabi_fsub
 1436 002c 0346     	 mov r3,r0
 1437 002e 23F00043 	 bic r3,r3,#-2147483648
 1438 0032 1846     	 mov r0,r3
 1439 0034 FFF7FEFF 	 bl __aeabi_f2d
 1440 0038 0246     	 mov r2,r0
 1441 003a 0B46     	 mov r3,r1
 1442 003c 1046     	 mov r0,r2
 1443 003e 1946     	 mov r1,r3
 1444 0040 0DA3     	 adr r3,.L61
 1445 0042 D3E90023 	 ldrd r2,[r3]
 1446 0046 FFF7FEFF 	 bl __aeabi_dcmplt
 1447 004a 0346     	 mov r3,r0
 1448 004c 002B     	 cmp r3,#0
 1449 004e 01D0     	 beq .L60
 409:../main.c     ****     {
 410:../main.c     ****         return BOTH_SPECTRUMS;
 1450              	 .loc 4 410 0
 1451 0050 0223     	 movs r3,#2
 1452 0052 0BE0     	 b .L57
 1453              	.L60:
 411:../main.c     ****     }
 412:../main.c     ****     return right_peak > left_peak;
 1454              	 .loc 4 412 0
 1455 0054 0123     	 movs r3,#1
 1456 0056 1C46     	 mov r4,r3
 1457 0058 3869     	 ldr r0,[r7,#16]
 1458 005a 7969     	 ldr r1,[r7,#20]
 1459 005c FFF7FEFF 	 bl __aeabi_fcmpgt
 1460 0060 0346     	 mov r3,r0
 1461 0062 002B     	 cmp r3,#0
 1462 0064 01D1     	 bne .L58
 1463 0066 0023     	 movs r3,#0
 1464 0068 1C46     	 mov r4,r3
 1465              	.L58:
 1466 006a E3B2     	 uxtb r3,r4
 1467              	.L57:
 413:../main.c     **** }
 1468              	 .loc 4 413 0
 1469 006c 1846     	 mov r0,r3
 1470 006e 1C37     	 adds r7,r7,#28
 1471              	.LCFI70:
 1472              	 .cfi_def_cfa_offset 12
 1473 0070 BD46     	 mov sp,r7
 1474              	.LCFI71:
 1475              	 .cfi_def_cfa_register 13
 1476              	 
 1477 0072 90BD     	 pop {r4,r7,pc}
 1478              	.L62:
 1479 0074 AFF30080 	 .align 3
 1480              	.L61:
 1481 0078 9A999999 	 .word -1717986918
 1482 007c 9999B93F 	 .word 1069128089
 1483              	 .cfi_endproc
 1484              	.LFE450:
 1486              	 .section .text.xcorr_left_max,"ax",%progbits
 1487              	 .align 2
 1488              	 .global xcorr_left_max
 1489              	 .thumb
 1490              	 .thumb_func
 1492              	xcorr_left_max:
 1493              	.LFB451:
 414:../main.c     **** 
 415:../main.c     **** float32_t xcorr_left_max(
 416:../main.c     ****     float32_t* pSrcA,
 417:../main.c     ****     float32_t* pSrcB,
 418:../main.c     ****     uint32_t blockSize
 419:../main.c     ****     )
 420:../main.c     **** {
 1494              	 .loc 4 420 0
 1495              	 .cfi_startproc
 1496              	 
 1497              	 
 1498 0000 80B5     	 push {r7,lr}
 1499              	.LCFI72:
 1500              	 .cfi_def_cfa_offset 8
 1501              	 .cfi_offset 7,-8
 1502              	 .cfi_offset 14,-4
 1503 0002 88B0     	 sub sp,sp,#32
 1504              	.LCFI73:
 1505              	 .cfi_def_cfa_offset 40
 1506 0004 00AF     	 add r7,sp,#0
 1507              	.LCFI74:
 1508              	 .cfi_def_cfa_register 7
 1509 0006 F860     	 str r0,[r7,#12]
 1510 0008 B960     	 str r1,[r7,#8]
 1511 000a 7A60     	 str r2,[r7,#4]
 421:../main.c     ****     uint32_t i = 0, j = 0;
 1512              	 .loc 4 421 0
 1513 000c 0023     	 movs r3,#0
 1514 000e FB61     	 str r3,[r7,#28]
 1515 0010 0023     	 movs r3,#0
 1516 0012 BB61     	 str r3,[r7,#24]
 422:../main.c     ****     float32_t toreturn = 0.0;
 1517              	 .loc 4 422 0
 1518 0014 4FF00003 	 mov r3,#0
 1519 0018 7B61     	 str r3,[r7,#20]
 423:../main.c     ****     float32_t calc_hold = 0.0;
 1520              	 .loc 4 423 0
 1521 001a 4FF00003 	 mov r3,#0
 1522 001e 3B61     	 str r3,[r7,#16]
 424:../main.c     **** 
 425:../main.c     ****         // Slide srcA left-to-right starting from no overlap
 426:../main.c     ****     for(i=0; i < blockSize; ++i){
 1523              	 .loc 4 426 0
 1524 0020 0023     	 movs r3,#0
 1525 0022 FB61     	 str r3,[r7,#28]
 1526 0024 34E0     	 b .L64
 1527              	.L70:
 427:../main.c     ****         calc_hold = 0;
 1528              	 .loc 4 427 0
 1529 0026 4FF00003 	 mov r3,#0
 1530 002a 3B61     	 str r3,[r7,#16]
 428:../main.c     ****         for(j=0; j+i < blockSize; ++j){
 1531              	 .loc 4 428 0
 1532 002c 0023     	 movs r3,#0
 1533 002e BB61     	 str r3,[r7,#24]
 1534 0030 19E0     	 b .L65
 1535              	.L66:
 429:../main.c     ****             calc_hold += pSrcA[j+i] * pSrcB[j];
 1536              	 .loc 4 429 0 discriminator 3
 1537 0032 BA69     	 ldr r2,[r7,#24]
 1538 0034 FB69     	 ldr r3,[r7,#28]
 1539 0036 1344     	 add r3,r3,r2
 1540 0038 9B00     	 lsls r3,r3,#2
 1541 003a FA68     	 ldr r2,[r7,#12]
 1542 003c 1344     	 add r3,r3,r2
 1543 003e 1968     	 ldr r1,[r3]
 1544 0040 BB69     	 ldr r3,[r7,#24]
 1545 0042 9B00     	 lsls r3,r3,#2
 1546 0044 BA68     	 ldr r2,[r7,#8]
 1547 0046 1344     	 add r3,r3,r2
 1548 0048 1B68     	 ldr r3,[r3]
 1549 004a 0846     	 mov r0,r1
 1550 004c 1946     	 mov r1,r3
 1551 004e FFF7FEFF 	 bl __aeabi_fmul
 1552 0052 0346     	 mov r3,r0
 1553 0054 3869     	 ldr r0,[r7,#16]
 1554 0056 1946     	 mov r1,r3
 1555 0058 FFF7FEFF 	 bl __aeabi_fadd
 1556 005c 0346     	 mov r3,r0
 1557 005e 3B61     	 str r3,[r7,#16]
 428:../main.c     ****         for(j=0; j+i < blockSize; ++j){
 1558              	 .loc 4 428 0 discriminator 3
 1559 0060 BB69     	 ldr r3,[r7,#24]
 1560 0062 0133     	 adds r3,r3,#1
 1561 0064 BB61     	 str r3,[r7,#24]
 1562              	.L65:
 428:../main.c     ****         for(j=0; j+i < blockSize; ++j){
 1563              	 .loc 4 428 0 is_stmt 0 discriminator 1
 1564 0066 BA69     	 ldr r2,[r7,#24]
 1565 0068 FB69     	 ldr r3,[r7,#28]
 1566 006a 1A44     	 add r2,r2,r3
 1567 006c 7B68     	 ldr r3,[r7,#4]
 1568 006e 9A42     	 cmp r2,r3
 1569 0070 DFD3     	 bcc .L66
 430:../main.c     ****         }
 431:../main.c     ****         if(i == 0 || toreturn < calc_hold)
 1570              	 .loc 4 431 0 is_stmt 1
 1571 0072 FB69     	 ldr r3,[r7,#28]
 1572 0074 002B     	 cmp r3,#0
 1573 0076 06D0     	 beq .L67
 1574              	 .loc 4 431 0 is_stmt 0 discriminator 1
 1575 0078 7869     	 ldr r0,[r7,#20]
 1576 007a 3969     	 ldr r1,[r7,#16]
 1577 007c FFF7FEFF 	 bl __aeabi_fcmplt
 1578 0080 0346     	 mov r3,r0
 1579 0082 002B     	 cmp r3,#0
 1580 0084 01D0     	 beq .L68
 1581              	.L67:
 432:../main.c     ****         {
 433:../main.c     ****             toreturn = calc_hold;
 1582              	 .loc 4 433 0 is_stmt 1
 1583 0086 3B69     	 ldr r3,[r7,#16]
 1584 0088 7B61     	 str r3,[r7,#20]
 1585              	.L68:
 426:../main.c     ****         calc_hold = 0;
 1586              	 .loc 4 426 0 discriminator 2
 1587 008a FB69     	 ldr r3,[r7,#28]
 1588 008c 0133     	 adds r3,r3,#1
 1589 008e FB61     	 str r3,[r7,#28]
 1590              	.L64:
 426:../main.c     ****         calc_hold = 0;
 1591              	 .loc 4 426 0 is_stmt 0 discriminator 1
 1592 0090 FA69     	 ldr r2,[r7,#28]
 1593 0092 7B68     	 ldr r3,[r7,#4]
 1594 0094 9A42     	 cmp r2,r3
 1595 0096 C6D3     	 bcc .L70
 434:../main.c     ****         }
 435:../main.c     ****     }
 436:../main.c     ****     return toreturn;
 1596              	 .loc 4 436 0 is_stmt 1
 1597 0098 7B69     	 ldr r3,[r7,#20]
 437:../main.c     **** }
 1598              	 .loc 4 437 0
 1599 009a 1846     	 mov r0,r3
 1600 009c 2037     	 adds r7,r7,#32
 1601              	.LCFI75:
 1602              	 .cfi_def_cfa_offset 8
 1603 009e BD46     	 mov sp,r7
 1604              	.LCFI76:
 1605              	 .cfi_def_cfa_register 13
 1606              	 
 1607 00a0 80BD     	 pop {r7,pc}
 1608              	 .cfi_endproc
 1609              	.LFE451:
 1611 00a2 00BF     	 .section .text.xcorr_right_max,"ax",%progbits
 1612              	 .align 2
 1613              	 .global xcorr_right_max
 1614              	 .thumb
 1615              	 .thumb_func
 1617              	xcorr_right_max:
 1618              	.LFB452:
 438:../main.c     **** 
 439:../main.c     **** float32_t xcorr_right_max(
 440:../main.c     ****     float32_t* pSrcA,
 441:../main.c     ****     float32_t* pSrcB,
 442:../main.c     ****     uint32_t blockSize
 443:../main.c     ****     )
 444:../main.c     **** {
 1619              	 .loc 4 444 0
 1620              	 .cfi_startproc
 1621              	 
 1622              	 
 1623 0000 80B5     	 push {r7,lr}
 1624              	.LCFI77:
 1625              	 .cfi_def_cfa_offset 8
 1626              	 .cfi_offset 7,-8
 1627              	 .cfi_offset 14,-4
 1628 0002 88B0     	 sub sp,sp,#32
 1629              	.LCFI78:
 1630              	 .cfi_def_cfa_offset 40
 1631 0004 00AF     	 add r7,sp,#0
 1632              	.LCFI79:
 1633              	 .cfi_def_cfa_register 7
 1634 0006 F860     	 str r0,[r7,#12]
 1635 0008 B960     	 str r1,[r7,#8]
 1636 000a 7A60     	 str r2,[r7,#4]
 445:../main.c     ****     uint32_t i = 0, j = 0;
 1637              	 .loc 4 445 0
 1638 000c 0023     	 movs r3,#0
 1639 000e FB61     	 str r3,[r7,#28]
 1640 0010 0023     	 movs r3,#0
 1641 0012 BB61     	 str r3,[r7,#24]
 446:../main.c     ****     float32_t toreturn = 0.0;
 1642              	 .loc 4 446 0
 1643 0014 4FF00003 	 mov r3,#0
 1644 0018 7B61     	 str r3,[r7,#20]
 447:../main.c     ****     float32_t calc_hold = 0.0;
 1645              	 .loc 4 447 0
 1646 001a 4FF00003 	 mov r3,#0
 1647 001e 3B61     	 str r3,[r7,#16]
 448:../main.c     **** 
 449:../main.c     ****         // Slide srcA left-to-right starting from complete overlap
 450:../main.c     ****     for(i=0; i < blockSize; ++i){
 1648              	 .loc 4 450 0
 1649 0020 0023     	 movs r3,#0
 1650 0022 FB61     	 str r3,[r7,#28]
 1651 0024 34E0     	 b .L73
 1652              	.L79:
 451:../main.c     ****         calc_hold = 0;
 1653              	 .loc 4 451 0
 1654 0026 4FF00003 	 mov r3,#0
 1655 002a 3B61     	 str r3,[r7,#16]
 452:../main.c     ****         for(j=0; j+i < blockSize; ++j){
 1656              	 .loc 4 452 0
 1657 002c 0023     	 movs r3,#0
 1658 002e BB61     	 str r3,[r7,#24]
 1659 0030 19E0     	 b .L74
 1660              	.L75:
 453:../main.c     ****             calc_hold += pSrcA[j] * pSrcB[j + i];
 1661              	 .loc 4 453 0 discriminator 3
 1662 0032 BB69     	 ldr r3,[r7,#24]
 1663 0034 9B00     	 lsls r3,r3,#2
 1664 0036 FA68     	 ldr r2,[r7,#12]
 1665 0038 1344     	 add r3,r3,r2
 1666 003a 1968     	 ldr r1,[r3]
 1667 003c BA69     	 ldr r2,[r7,#24]
 1668 003e FB69     	 ldr r3,[r7,#28]
 1669 0040 1344     	 add r3,r3,r2
 1670 0042 9B00     	 lsls r3,r3,#2
 1671 0044 BA68     	 ldr r2,[r7,#8]
 1672 0046 1344     	 add r3,r3,r2
 1673 0048 1B68     	 ldr r3,[r3]
 1674 004a 0846     	 mov r0,r1
 1675 004c 1946     	 mov r1,r3
 1676 004e FFF7FEFF 	 bl __aeabi_fmul
 1677 0052 0346     	 mov r3,r0
 1678 0054 3869     	 ldr r0,[r7,#16]
 1679 0056 1946     	 mov r1,r3
 1680 0058 FFF7FEFF 	 bl __aeabi_fadd
 1681 005c 0346     	 mov r3,r0
 1682 005e 3B61     	 str r3,[r7,#16]
 452:../main.c     ****         for(j=0; j+i < blockSize; ++j){
 1683              	 .loc 4 452 0 discriminator 3
 1684 0060 BB69     	 ldr r3,[r7,#24]
 1685 0062 0133     	 adds r3,r3,#1
 1686 0064 BB61     	 str r3,[r7,#24]
 1687              	.L74:
 452:../main.c     ****         for(j=0; j+i < blockSize; ++j){
 1688              	 .loc 4 452 0 is_stmt 0 discriminator 1
 1689 0066 BA69     	 ldr r2,[r7,#24]
 1690 0068 FB69     	 ldr r3,[r7,#28]
 1691 006a 1A44     	 add r2,r2,r3
 1692 006c 7B68     	 ldr r3,[r7,#4]
 1693 006e 9A42     	 cmp r2,r3
 1694 0070 DFD3     	 bcc .L75
 454:../main.c     ****         }
 455:../main.c     ****         if(i == 0 || toreturn < calc_hold)
 1695              	 .loc 4 455 0 is_stmt 1
 1696 0072 FB69     	 ldr r3,[r7,#28]
 1697 0074 002B     	 cmp r3,#0
 1698 0076 06D0     	 beq .L76
 1699              	 .loc 4 455 0 is_stmt 0 discriminator 1
 1700 0078 7869     	 ldr r0,[r7,#20]
 1701 007a 3969     	 ldr r1,[r7,#16]
 1702 007c FFF7FEFF 	 bl __aeabi_fcmplt
 1703 0080 0346     	 mov r3,r0
 1704 0082 002B     	 cmp r3,#0
 1705 0084 01D0     	 beq .L77
 1706              	.L76:
 456:../main.c     ****         {
 457:../main.c     ****             toreturn = calc_hold;
 1707              	 .loc 4 457 0 is_stmt 1
 1708 0086 3B69     	 ldr r3,[r7,#16]
 1709 0088 7B61     	 str r3,[r7,#20]
 1710              	.L77:
 450:../main.c     ****         calc_hold = 0;
 1711              	 .loc 4 450 0 discriminator 2
 1712 008a FB69     	 ldr r3,[r7,#28]
 1713 008c 0133     	 adds r3,r3,#1
 1714 008e FB61     	 str r3,[r7,#28]
 1715              	.L73:
 450:../main.c     ****         calc_hold = 0;
 1716              	 .loc 4 450 0 is_stmt 0 discriminator 1
 1717 0090 FA69     	 ldr r2,[r7,#28]
 1718 0092 7B68     	 ldr r3,[r7,#4]
 1719 0094 9A42     	 cmp r2,r3
 1720 0096 C6D3     	 bcc .L79
 458:../main.c     ****         }
 459:../main.c     ****     }
 460:../main.c     ****     return toreturn;
 1721              	 .loc 4 460 0 is_stmt 1
 1722 0098 7B69     	 ldr r3,[r7,#20]
 461:../main.c     **** }
 1723              	 .loc 4 461 0
 1724 009a 1846     	 mov r0,r3
 1725 009c 2037     	 adds r7,r7,#32
 1726              	.LCFI80:
 1727              	 .cfi_def_cfa_offset 8
 1728 009e BD46     	 mov sp,r7
 1729              	.LCFI81:
 1730              	 .cfi_def_cfa_register 13
 1731              	 
 1732 00a0 80BD     	 pop {r7,pc}
 1733              	 .cfi_endproc
 1734              	.LFE452:
 1736 00a2 00BF     	 .section .text.max,"ax",%progbits
 1737              	 .align 2
 1738              	 .global max
 1739              	 .thumb
 1740              	 .thumb_func
 1742              	max:
 1743              	.LFB453:
 462:../main.c     **** 
 463:../main.c     **** void max(float32_t* pSrc, uint32_t blockSize, float32_t* pMaxHolder){
 1744              	 .loc 4 463 0
 1745              	 .cfi_startproc
 1746              	 
 1747              	 
 1748 0000 80B5     	 push {r7,lr}
 1749              	.LCFI82:
 1750              	 .cfi_def_cfa_offset 8
 1751              	 .cfi_offset 7,-8
 1752              	 .cfi_offset 14,-4
 1753 0002 86B0     	 sub sp,sp,#24
 1754              	.LCFI83:
 1755              	 .cfi_def_cfa_offset 32
 1756 0004 00AF     	 add r7,sp,#0
 1757              	.LCFI84:
 1758              	 .cfi_def_cfa_register 7
 1759 0006 F860     	 str r0,[r7,#12]
 1760 0008 B960     	 str r1,[r7,#8]
 1761 000a 7A60     	 str r2,[r7,#4]
 464:../main.c     **** 	*pMaxHolder = pSrc[0];
 1762              	 .loc 4 464 0
 1763 000c FB68     	 ldr r3,[r7,#12]
 1764 000e 1A68     	 ldr r2,[r3]
 1765 0010 7B68     	 ldr r3,[r7,#4]
 1766 0012 1A60     	 str r2,[r3]
 465:../main.c     **** 	uint32_t idx = 1;
 1767              	 .loc 4 465 0
 1768 0014 0123     	 movs r3,#1
 1769 0016 7B61     	 str r3,[r7,#20]
 466:../main.c     **** 	for(; idx < blockSize; ++idx){
 1770              	 .loc 4 466 0
 1771 0018 17E0     	 b .L82
 1772              	.L85:
 467:../main.c     **** 		if(*pMaxHolder < pSrc[idx]){
 1773              	 .loc 4 467 0
 1774 001a 7B68     	 ldr r3,[r7,#4]
 1775 001c 1968     	 ldr r1,[r3]
 1776 001e 7B69     	 ldr r3,[r7,#20]
 1777 0020 9B00     	 lsls r3,r3,#2
 1778 0022 FA68     	 ldr r2,[r7,#12]
 1779 0024 1344     	 add r3,r3,r2
 1780 0026 1B68     	 ldr r3,[r3]
 1781 0028 0846     	 mov r0,r1
 1782 002a 1946     	 mov r1,r3
 1783 002c FFF7FEFF 	 bl __aeabi_fcmplt
 1784 0030 0346     	 mov r3,r0
 1785 0032 002B     	 cmp r3,#0
 1786 0034 06D0     	 beq .L83
 468:../main.c     **** 			*pMaxHolder = pSrc[idx];
 1787              	 .loc 4 468 0
 1788 0036 7B69     	 ldr r3,[r7,#20]
 1789 0038 9B00     	 lsls r3,r3,#2
 1790 003a FA68     	 ldr r2,[r7,#12]
 1791 003c 1344     	 add r3,r3,r2
 1792 003e 1A68     	 ldr r2,[r3]
 1793 0040 7B68     	 ldr r3,[r7,#4]
 1794 0042 1A60     	 str r2,[r3]
 1795              	.L83:
 466:../main.c     **** 	for(; idx < blockSize; ++idx){
 1796              	 .loc 4 466 0
 1797 0044 7B69     	 ldr r3,[r7,#20]
 1798 0046 0133     	 adds r3,r3,#1
 1799 0048 7B61     	 str r3,[r7,#20]
 1800              	.L82:
 466:../main.c     **** 	for(; idx < blockSize; ++idx){
 1801              	 .loc 4 466 0 is_stmt 0 discriminator 1
 1802 004a 7A69     	 ldr r2,[r7,#20]
 1803 004c BB68     	 ldr r3,[r7,#8]
 1804 004e 9A42     	 cmp r2,r3
 1805 0050 E3D3     	 bcc .L85
 469:../main.c     **** 		}
 470:../main.c     **** 	}
 471:../main.c     **** }
 1806              	 .loc 4 471 0 is_stmt 1
 1807 0052 1837     	 adds r7,r7,#24
 1808              	.LCFI85:
 1809              	 .cfi_def_cfa_offset 8
 1810 0054 BD46     	 mov sp,r7
 1811              	.LCFI86:
 1812              	 .cfi_def_cfa_register 13
 1813              	 
 1814 0056 80BD     	 pop {r7,pc}
 1815              	 .cfi_endproc
 1816              	.LFE453:
 1818              	 .section .bss.cnt.12827,"aw",%nobits
 1821              	cnt.12827:
 1822 0000 00       	 .space 1
 1823              	 .text
 1824              	.Letext0:
 1825              	 .file 5 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1826              	 .file 6 "c:\\davev4-64bit\\dave-4.2.6\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1827              	 .file 7 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/XMC4200.h"
 1828              	 .file 8 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_gpio.h"
 1829              	 .file 9 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 1830              	 .file 10 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_ccu4.h"
 1831              	 .file 11 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/GLOBAL_CCU4/global_ccu4.h"
 1832              	 .file 12 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/TIMER/timer.h"
 1833              	 .file 13 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/CMSIS_DSP/arm_math.h"
 1834              	 .file 14 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_vadc.h"
 1835              	 .file 15 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_usic.h"
 1836              	 .file 16 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/COUNTER/counter.h"
 1837              	 .file 17 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Libraries\\XMCLib\\inc/xmc_dma.h"
 1838              	 .file 18 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/GLOBAL_DMA/global_dma.h"
 1839              	 .file 19 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/ADC_MEASUREMENT/adc_measurement.h"
 1840              	 .file 20 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/DAVE.h"
 1841              	 .file 21 "../BGT24MTR11.h"
 1842              	 .file 22 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Include/core_cm4.h"
 1843              	 .file 23 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core/Libraries/CMSIS/Infineon/XMC4200_series/Include/system_XMC4200.h"
 1844              	 .file 24 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/DIGITAL_IO/digital_io_extern.h"
 1845              	 .file 25 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/TIMER/timer_extern.h"
 1846              	 .file 26 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/COUNTER/counter_extern.h"
 1847              	 .file 27 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/DMA_CH/dma_ch_extern.h"
 1848              	 .file 28 "C:\\Users\\Depes Crystalline\\Desktop\\school\\Active_Bike_Lighting_System\\Radar_Core\\Dave\\Generated/ADC_MEASUREMENT/ADC_MEASUREMENT_Extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:19     .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:23     .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:67     .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:71     .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:114    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:118    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:158    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:162    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:201    .text.DMA_CH_Enable:00000000 $t
    {standard input}:205    .text.DMA_CH_Enable:00000000 DMA_CH_Enable
    {standard input}:246    .text.DMA_CH_Disable:00000000 $t
    {standard input}:250    .text.DMA_CH_Disable:00000000 DMA_CH_Disable
    {standard input}:290    .text.DMA_CH_Reload:00000000 $t
    {standard input}:294    .text.DMA_CH_Reload:00000000 DMA_CH_Reload
    {standard input}:333    .bss.gIFQDataReadyFlag:00000000 gIFQDataReadyFlag
    {standard input}:334    .bss.gIFQDataReadyFlag:00000000 $d
    {standard input}:340    .bss.gQ2Freq:00000000 gQ2Freq
    {standard input}:337    .bss.gQ2Freq:00000000 $d
    {standard input}:347    .bss.gDopFreqIFI:00000000 gDopFreqIFI
    {standard input}:344    .bss.gDopFreqIFI:00000000 $d
    {standard input}:354    .bss.gTargetVelocity:00000000 gTargetVelocity
    {standard input}:351    .bss.gTargetVelocity:00000000 $d
    {standard input}:361    .data.gDetectionThreshold:00000000 gDetectionThreshold
    {standard input}:358    .data.gDetectionThreshold:00000000 $d
    {standard input}:367    .bss.gRedLED_On:00000000 gRedLED_On
    {standard input}:368    .bss.gRedLED_On:00000000 $d
    {standard input}:373    .data.gTxPowerLvl:00000000 gTxPowerLvl
    {standard input}:380    .data.gHzPerBin:00000000 gHzPerBin
    {standard input}:377    .data.gHzPerBin:00000000 $d
                            *COM*:00000800 ifi_raw_buf0
                            *COM*:00000800 ifq_raw_buf0
                            *COM*:00001000 ifi_adc_measurements
    {standard input}:390    .data.ifq_adc_measurements:00000000 ifq_adc_measurements
    {standard input}:387    .data.ifq_adc_measurements:00000000 $d
                            *COM*:00000800 i_adc_measurements
                            *COM*:00000800 q_adc_measurements
                            *COM*:00000800 hanning_window
                            *COM*:00000800 i_fftResult
                            *COM*:00000800 q_fftResult
                            *COM*:00000400 finalResult
    {standard input}:403    .bss.maxValPosSpectrum:00000000 maxValPosSpectrum
    {standard input}:400    .bss.maxValPosSpectrum:00000000 $d
    {standard input}:410    .bss.maxValNegSpectrum:00000000 maxValNegSpectrum
    {standard input}:407    .bss.maxValNegSpectrum:00000000 $d
    {standard input}:417    .bss.maxVal:00000000 maxVal
    {standard input}:414    .bss.maxVal:00000000 $d
    {standard input}:424    .bss.maxBin:00000000 maxBin
    {standard input}:421    .bss.maxBin:00000000 $d
                            *COM*:00000018 i_fftStructure
                            *COM*:00000004 pDMA_src_IFI
                            *COM*:00000004 pDMA_src_IFQ
    {standard input}:434    .data.pDMA_dst_IFI:00000000 pDMA_dst_IFI
    {standard input}:431    .data.pDMA_dst_IFI:00000000 $d
    {standard input}:441    .data.pDMA_dst_IFQ:00000000 pDMA_dst_IFQ
    {standard input}:438    .data.pDMA_dst_IFQ:00000000 $d
    {standard input}:448    .data.pifi_raw_buf1:00000000 pifi_raw_buf1
    {standard input}:445    .data.pifi_raw_buf1:00000000 $d
    {standard input}:455    .data.pifq_raw_buf1:00000000 pifq_raw_buf1
    {standard input}:452    .data.pifq_raw_buf1:00000000 $d
    {standard input}:462    .data.PIN1_5_config:00000000 PIN1_5_config
    {standard input}:459    .data.PIN1_5_config:00000000 $d
    {standard input}:473    .data.PIN1_5:00000000 PIN1_5
    {standard input}:470    .data.PIN1_5:00000000 $d
    {standard input}:479    .text.main:00000000 $t
    {standard input}:484    .text.main:00000000 main
    {standard input}:1289   .text.genHanningData:00000000 genHanningData
    {standard input}:1040   .ram_code:00000000 do_rfft_i
    {standard input}:1157   .ram_code:000000c4 do_rfft_q
    {standard input}:690    .text.checkTargetDetection:00000000 checkTargetDetection
    {standard input}:657    .text.main:00000118 $d
    {standard input}:685    .text.checkTargetDetection:00000000 $t
    {standard input}:1399   .text.spectrum_peak:00000000 spectrum_peak
    {standard input}:880    .text.checkTargetDetection:00000140 $d
    {standard input}:897    .text.DMA_IFQ_event_handler:00000000 $t
    {standard input}:902    .text.DMA_IFQ_event_handler:00000000 DMA_IFQ_event_handler
    {standard input}:981    .text.DMA_IFQ_event_handler:00000064 $d
    {standard input}:1821   .bss.cnt.12827:00000000 cnt.12827
    {standard input}:990    .text.CCU41_3_IRQHandler:00000000 $t
    {standard input}:995    .text.CCU41_3_IRQHandler:00000000 CCU41_3_IRQHandler
    {standard input}:1029   .text.CCU41_3_IRQHandler:00000024 $d
    {standard input}:1035   .ram_code:00000000 $t
    {standard input}:1142   .ram_code:000000a8 $d
    {standard input}:1152   .ram_code:000000c4 $t
    {standard input}:1266   .ram_code:00000174 $d
    {standard input}:1284   .text.genHanningData:00000000 $t
    {standard input}:1386   .text.genHanningData:000000a4 $d
    {standard input}:1394   .text.spectrum_peak:00000000 $t
    {standard input}:1492   .text.xcorr_left_max:00000000 xcorr_left_max
    {standard input}:1617   .text.xcorr_right_max:00000000 xcorr_right_max
    {standard input}:1481   .text.spectrum_peak:00000078 $d
    {standard input}:1487   .text.xcorr_left_max:00000000 $t
    {standard input}:1612   .text.xcorr_right_max:00000000 $t
    {standard input}:1737   .text.max:00000000 $t
    {standard input}:1742   .text.max:00000000 max
    {standard input}:1822   .bss.cnt.12827:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_DMA_CH_Enable
XMC_DMA_CH_Disable
DAVE_Init
DIGITAL_IO_Init
arm_rfft_fast_init_f32
TIMER_Stop
TIMER_SetTimeInterval
TIMER_Start
BGTSetTxPower
ADC_MEASUREMENT_Channel_A_handle
ADC_MEASUREMENT_Channel_B_handle
LDO_BGT_EN
DMA_CH_IFI
DMA_CH_IFQ
FS_ADC
__aeabi_fadd
__aeabi_fdiv
__aeabi_i2f
__aeabi_fcmplt
__aeabi_ui2f
__aeabi_fmul
arm_max_f32
LED_YELLOW
LED_GREEN
COUNTER_GetCurrentCount
COUNTER_ResetCounter
BGT_LO_Adjust
Q2_FREQ_P22
arm_mean_f32
arm_offset_f32
arm_mult_f32
arm_rfft_fast_f32
arm_cmplx_mag_f32
__aeabi_f2d
__aeabi_dadd
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
__aeabi_fsub
arm_cos_f32
__aeabi_dcmplt
__aeabi_fcmpgt
