package Model.APPS.CMSIS_DSP.v4_0_2;


/*************** Revision History **********************************************
 Version      Date          Description

  4.0.2       25-June-2015   Initial version for DAVEv4 <br>
  
*******************************************************************************/

// Import statements
import ifx.davex.app.manifest.*

class  CMSIS_DSP extends CMSIS_DSP_GUI {
	
	// APP version	
	def version = '4.0.2'
	
	// Categories description
	def categoriesDescription = ["System"]
	
	// Minimum version of DAVE required 
	def minDaveVersion = '4.0.0'

	// Keywords used by search feature in APPs selection view
	def keywords = ['CMSIS_DSP', 'DSP', 'Filters', 'Fast math', 'Matrix', 'Transforms', 'Statistical', 'all']
	
    // Software IDs
	def softwareIDs = ["XMC4.*.*.*.*" : "1.0.0", "XMC1.*.*.*.*" : "1.0.0"]
	
	def singleton = true
	def initProvider = false
	def deprecated = false
	def sharable = true

	// APP description
	def description = "This APP provides the CMSIS DSP software library, a suite of common signal\nprocessing functions for use on Cortex-M processor based devices."
	
	// Required to read from CPU if unalignment access will lead to an exception
	//
	// For future use
	//
	//MRequiredApp appres_cpu

	// APP constructor
	public CMSIS_DSP (DaveEnv daveEnv) {
		// For future use
		//
		//String family = daveEnv.project.selectedDevice.deviceId.family
		//
		//if (family == "XMC4") {
		//	appres_cpu =  MRequiredApp("CPU_CTRL_XMC4", "CPU_CTRL_XMC4", RSHARABLE)
		//}
	}
	
	// File Generation
	def generateFiles () {
		copy("BasicMathFunctions", "BasicMathFunctions")
		copy("CommonTables", "CommonTables")
		copy("ComplexMathFunctions", "ComplexMathFunctions")
		copy("ControllerFunctions", "ControllerFunctions")
		copy("FastMathFunctions", "FastMathFunctions")
		copy("FilteringFunctions", "FilteringFunctions")
		copy("MatrixFunctions", "MatrixFunctions")
		copy("StatisticsFunctions", "StatisticsFunctions")
		copy("SupportFunctions", "SupportFunctions")
		copy("TransformFunctions", "TransformFunctions")
		copy("arm_common_tables.h", "arm_common_tables.h")
		copy("arm_const_structs.h", "arm_const_structs.h")
		copy("arm_math.h", "arm_math.h")
		copy("cmsis_dsp.h", "cmsis_dsp.h")
		copy("cmsis_dsp.c", "cmsis_dsp.c")
		generate("cmsis_dsp_confh.tmpl", "cmsis_dsp_conf.h")
	}
}
