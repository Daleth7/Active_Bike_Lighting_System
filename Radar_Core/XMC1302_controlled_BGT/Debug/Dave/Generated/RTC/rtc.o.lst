   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,2
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "rtc.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.RTC_GetAppVersion,"ax",%progbits
  18              	 .align 2
  19              	 .global RTC_GetAppVersion
  20              	 .code 16
  21              	 .thumb_func
  23              	RTC_GetAppVersion:
  24              	.LFB58:
  25              	 .file 1 "../Dave/Generated/RTC/rtc.c"
   1:../Dave/Generated/RTC/rtc.c **** /**
   2:../Dave/Generated/RTC/rtc.c ****  * @file rtc.c
   3:../Dave/Generated/RTC/rtc.c ****  * @date 2015-11-18
   4:../Dave/Generated/RTC/rtc.c ****  *
   5:../Dave/Generated/RTC/rtc.c ****  * NOTE:
   6:../Dave/Generated/RTC/rtc.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/RTC/rtc.c ****  */
   8:../Dave/Generated/RTC/rtc.c **** /**
   9:../Dave/Generated/RTC/rtc.c ****  * @cond
  10:../Dave/Generated/RTC/rtc.c ****  **************************************************************************************************
  11:../Dave/Generated/RTC/rtc.c ****  * RTC v4.1.10 Facilitates to generate real time clock and alarm
  12:../Dave/Generated/RTC/rtc.c ****  *
  13:../Dave/Generated/RTC/rtc.c ****  * Copyright (c) 2015, Infineon Technologies AG
  14:../Dave/Generated/RTC/rtc.c ****  * All rights reserved.
  15:../Dave/Generated/RTC/rtc.c ****  *
  16:../Dave/Generated/RTC/rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/RTC/rtc.c ****  * following conditions are met:
  18:../Dave/Generated/RTC/rtc.c ****  *
  19:../Dave/Generated/RTC/rtc.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/RTC/rtc.c ****  *   disclaimer.
  21:../Dave/Generated/RTC/rtc.c ****  *
  22:../Dave/Generated/RTC/rtc.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/RTC/rtc.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/RTC/rtc.c ****  *
  25:../Dave/Generated/RTC/rtc.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/RTC/rtc.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/RTC/rtc.c ****  *
  28:../Dave/Generated/RTC/rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/RTC/rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/RTC/rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/RTC/rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/RTC/rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/RTC/rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/RTC/rtc.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/RTC/rtc.c ****  *
  36:../Dave/Generated/RTC/rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/RTC/rtc.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/RTC/rtc.c ****  **************************************************************************************************
  39:../Dave/Generated/RTC/rtc.c ****  *
  40:../Dave/Generated/RTC/rtc.c ****  * Change History
  41:../Dave/Generated/RTC/rtc.c ****  * --------------
  42:../Dave/Generated/RTC/rtc.c ****  *
  43:../Dave/Generated/RTC/rtc.c ****  * 2015-02-16:
  44:../Dave/Generated/RTC/rtc.c ****  *     - Initial version<br>
  45:../Dave/Generated/RTC/rtc.c ****  *
  46:../Dave/Generated/RTC/rtc.c ****  * 2015-05-18:
  47:../Dave/Generated/RTC/rtc.c ****  *     - Modified SetTime,SetAlarmTime APIs <br>
  48:../Dave/Generated/RTC/rtc.c ****  *
  49:../Dave/Generated/RTC/rtc.c ****  * 2015-06-16:
  50:../Dave/Generated/RTC/rtc.c ****  *     - GLOBAL_SCU enum elements are passed in GLOBAL_SCU_XMC4_RegisterCallback().<br>
  51:../Dave/Generated/RTC/rtc.c ****  * 2015-11-18:
  52:../Dave/Generated/RTC/rtc.c ****  *     - Updated the RTC_lConfigureInterrupts() to enable the NMI request for timer and alarm inter
  53:../Dave/Generated/RTC/rtc.c ****  * @endcond
  54:../Dave/Generated/RTC/rtc.c ****  *
  55:../Dave/Generated/RTC/rtc.c ****  */
  56:../Dave/Generated/RTC/rtc.c **** 
  57:../Dave/Generated/RTC/rtc.c **** /**
  58:../Dave/Generated/RTC/rtc.c **** * @file rtc.c
  59:../Dave/Generated/RTC/rtc.c **** *
  60:../Dave/Generated/RTC/rtc.c **** *
  61:../Dave/Generated/RTC/rtc.c **** * @brief  Real Time Clock APP Implementation Source File.
  62:../Dave/Generated/RTC/rtc.c **** *
  63:../Dave/Generated/RTC/rtc.c **** *
  64:../Dave/Generated/RTC/rtc.c **** */
  65:../Dave/Generated/RTC/rtc.c **** 
  66:../Dave/Generated/RTC/rtc.c **** /**************************************************************************************************
  67:../Dave/Generated/RTC/rtc.c ****  * HEADER FILES
  68:../Dave/Generated/RTC/rtc.c ****  **************************************************************************************************
  69:../Dave/Generated/RTC/rtc.c **** #include "rtc.h"
  70:../Dave/Generated/RTC/rtc.c **** 
  71:../Dave/Generated/RTC/rtc.c **** /**************************************************************************************************
  72:../Dave/Generated/RTC/rtc.c ****  * MACROS
  73:../Dave/Generated/RTC/rtc.c ****  **************************************************************************************************
  74:../Dave/Generated/RTC/rtc.c **** /* Constant used for the number of days in an year */
  75:../Dave/Generated/RTC/rtc.c **** #define RTC_DAYS_IN_AN_YEAR     (365U)
  76:../Dave/Generated/RTC/rtc.c **** /* Constant used for the seconds in a day */
  77:../Dave/Generated/RTC/rtc.c **** #define RTC_SECONDS_IN_A_DAY    (24U * 60U * 60U)
  78:../Dave/Generated/RTC/rtc.c **** /* Constant used for the seconds in an hour */
  79:../Dave/Generated/RTC/rtc.c **** #define RTC_SECONDS_IN_AN_HOUR  (60U * 60U)
  80:../Dave/Generated/RTC/rtc.c **** /* Constant used for the seconds in a minute */
  81:../Dave/Generated/RTC/rtc.c **** #define RTC_SECONDS_IN_A_MINUTE (60U)
  82:../Dave/Generated/RTC/rtc.c **** /* Constant used for the epoch year */
  83:../Dave/Generated/RTC/rtc.c **** #define RTC_EPOCH_YEAR          (1970U)
  84:../Dave/Generated/RTC/rtc.c **** 
  85:../Dave/Generated/RTC/rtc.c **** /**************************************************************************************************
  86:../Dave/Generated/RTC/rtc.c ****  * LOCAL DATA
  87:../Dave/Generated/RTC/rtc.c ****  **************************************************************************************************
  88:../Dave/Generated/RTC/rtc.c **** /* Constant array used to store the number of days in each month */
  89:../Dave/Generated/RTC/rtc.c **** const uint32_t RTC_DAYS_IN_MONTH[13] =
  90:../Dave/Generated/RTC/rtc.c **** {
  91:../Dave/Generated/RTC/rtc.c ****   /* Index from 1, hence skip 0*/
  92:../Dave/Generated/RTC/rtc.c ****   0U,
  93:../Dave/Generated/RTC/rtc.c ****   /*Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec*/
  94:../Dave/Generated/RTC/rtc.c ****   31U, 28U, 31U, 30U, 31U, 30U, 31U, 31U, 30U, 31U, 30U, 31U
  95:../Dave/Generated/RTC/rtc.c **** };
  96:../Dave/Generated/RTC/rtc.c **** 
  97:../Dave/Generated/RTC/rtc.c **** /**************************************************************************************************
  98:../Dave/Generated/RTC/rtc.c ****  * LOCAL ROUTINES
  99:../Dave/Generated/RTC/rtc.c ****  **************************************************************************************************
 100:../Dave/Generated/RTC/rtc.c **** uint8_t RTC_lleapyear(uint16_t year);
 101:../Dave/Generated/RTC/rtc.c **** bool RTC_lConfigureInterrupts(const RTC_t *const handler);
 102:../Dave/Generated/RTC/rtc.c **** XMC_RTC_STATUS_t RTC_lRegister_Callbacks(const RTC_t *const handler);
 103:../Dave/Generated/RTC/rtc.c **** 
 104:../Dave/Generated/RTC/rtc.c **** /**************************************************************************************************
 105:../Dave/Generated/RTC/rtc.c ****  * API IMPLEMENTATION
 106:../Dave/Generated/RTC/rtc.c **** ***************************************************************************************************
 107:../Dave/Generated/RTC/rtc.c **** /*
 108:../Dave/Generated/RTC/rtc.c ****  * API to retrieve the version of the RTC APP
 109:../Dave/Generated/RTC/rtc.c ****  */
 110:../Dave/Generated/RTC/rtc.c **** DAVE_APP_VERSION_t RTC_GetAppVersion(void)
 111:../Dave/Generated/RTC/rtc.c **** {
  26              	 .loc 1 111 0
  27              	 .cfi_startproc
  28              	.LVL0:
 112:../Dave/Generated/RTC/rtc.c ****   DAVE_APP_VERSION_t version;
 113:../Dave/Generated/RTC/rtc.c **** 
 114:../Dave/Generated/RTC/rtc.c ****   version.major = RTC_MAJOR_VERSION;
 115:../Dave/Generated/RTC/rtc.c ****   version.minor = RTC_MINOR_VERSION;
 116:../Dave/Generated/RTC/rtc.c ****   version.patch = RTC_PATCH_VERSION;
 117:../Dave/Generated/RTC/rtc.c **** 
 118:../Dave/Generated/RTC/rtc.c ****   return (version);
 119:../Dave/Generated/RTC/rtc.c **** }
  29              	 .loc 1 119 0
  30 0000 0148     	 ldr r0,.L2
 111:../Dave/Generated/RTC/rtc.c ****   DAVE_APP_VERSION_t version;
  31              	 .loc 1 111 0
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .loc 1 119 0
  36 0004 02B0     	 add sp,sp,#8
  37              	 
  38 0006 7047     	 bx lr
  39              	.L3:
  40              	 .align 2
  41              	.L2:
  42 0008 04010A00 	 .word 655620
  43              	 .cfi_endproc
  44              	.LFE58:
  46              	 .section .text.RTC_lConfigureInterrupts,"ax",%progbits
  47              	 .align 2
  48              	 .global RTC_lConfigureInterrupts
  49              	 .code 16
  50              	 .thumb_func
  52              	RTC_lConfigureInterrupts:
  53              	.LFB60:
 120:../Dave/Generated/RTC/rtc.c **** 
 121:../Dave/Generated/RTC/rtc.c **** /*
 122:../Dave/Generated/RTC/rtc.c ****   Initialization function for the APP. Configures the registers
 123:../Dave/Generated/RTC/rtc.c ****   based on options selected in UI.
 124:../Dave/Generated/RTC/rtc.c **** */
 125:../Dave/Generated/RTC/rtc.c **** RTC_STATUS_t RTC_Init(RTC_t *const handler)
 126:../Dave/Generated/RTC/rtc.c **** {
 127:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_STATUS_t status;
 128:../Dave/Generated/RTC/rtc.c ****   RTC_STATUS_t rtc_initstatus;
 129:../Dave/Generated/RTC/rtc.c ****   bool interrupt_configured;
 130:../Dave/Generated/RTC/rtc.c **** 
 131:../Dave/Generated/RTC/rtc.c ****   XMC_ASSERT("RTC_Init: NULL Handler", handler != NULL);
 132:../Dave/Generated/RTC/rtc.c **** 
 133:../Dave/Generated/RTC/rtc.c ****   status = XMC_RTC_STATUS_OK;
 134:../Dave/Generated/RTC/rtc.c ****   rtc_initstatus = RTC_STATUS_FAILURE;
 135:../Dave/Generated/RTC/rtc.c **** 
 136:../Dave/Generated/RTC/rtc.c **** #if (RTC_INTERRUPT_ENABLED == 1)
 137:../Dave/Generated/RTC/rtc.c **** #if (UC_FAMILY == XMC4)
 138:../Dave/Generated/RTC/rtc.c ****   rtc_initstatus = (RTC_STATUS_t)GLOBAL_SCU_XMC4_Init(GLOBAL_SCU_HANDLE);
 139:../Dave/Generated/RTC/rtc.c **** #else
 140:../Dave/Generated/RTC/rtc.c ****   rtc_initstatus = (RTC_STATUS_t)GLOBAL_SCU_XMC1_Init(GLOBAL_SCU_HANDLE);
 141:../Dave/Generated/RTC/rtc.c **** #endif
 142:../Dave/Generated/RTC/rtc.c ****   if (rtc_initstatus == RTC_STATUS_SUCCESS)
 143:../Dave/Generated/RTC/rtc.c ****   {
 144:../Dave/Generated/RTC/rtc.c **** #endif
 145:../Dave/Generated/RTC/rtc.c ****       if (handler->initialized == false)
 146:../Dave/Generated/RTC/rtc.c ****       {
 147:../Dave/Generated/RTC/rtc.c ****         /* Initialize the clock source and pre-scalar */
 148:../Dave/Generated/RTC/rtc.c ****         status = XMC_RTC_Init(handler->time_alarm_config);
 149:../Dave/Generated/RTC/rtc.c **** 
 150:../Dave/Generated/RTC/rtc.c ****         if (status == XMC_RTC_STATUS_OK)
 151:../Dave/Generated/RTC/rtc.c ****         {
 152:../Dave/Generated/RTC/rtc.c ****           /* Configure periodic, alarm and hibernate periodic interrupts */
 153:../Dave/Generated/RTC/rtc.c ****           interrupt_configured = RTC_lConfigureInterrupts(handler);
 154:../Dave/Generated/RTC/rtc.c **** 
 155:../Dave/Generated/RTC/rtc.c ****           if (interrupt_configured == true)
 156:../Dave/Generated/RTC/rtc.c ****           {
 157:../Dave/Generated/RTC/rtc.c ****             status = RTC_lRegister_Callbacks(handler);
 158:../Dave/Generated/RTC/rtc.c ****           }
 159:../Dave/Generated/RTC/rtc.c **** 
 160:../Dave/Generated/RTC/rtc.c ****           if (status == XMC_RTC_STATUS_OK)
 161:../Dave/Generated/RTC/rtc.c ****           {
 162:../Dave/Generated/RTC/rtc.c ****           	/* Check RTC start during init is set or not in UI */
 163:../Dave/Generated/RTC/rtc.c ****             if (handler->config->start == RTC_START_ENABLE)
 164:../Dave/Generated/RTC/rtc.c ****             {
 165:../Dave/Generated/RTC/rtc.c ****               RTC_Start();
 166:../Dave/Generated/RTC/rtc.c ****             }
 167:../Dave/Generated/RTC/rtc.c ****             handler->initialized = true;
 168:../Dave/Generated/RTC/rtc.c ****             rtc_initstatus = RTC_STATUS_SUCCESS;
 169:../Dave/Generated/RTC/rtc.c ****           }
 170:../Dave/Generated/RTC/rtc.c ****         }
 171:../Dave/Generated/RTC/rtc.c ****         else
 172:../Dave/Generated/RTC/rtc.c ****         {
 173:../Dave/Generated/RTC/rtc.c ****           rtc_initstatus = RTC_STATUS_FAILURE;
 174:../Dave/Generated/RTC/rtc.c ****         }
 175:../Dave/Generated/RTC/rtc.c ****       }
 176:../Dave/Generated/RTC/rtc.c ****       else
 177:../Dave/Generated/RTC/rtc.c ****       {
 178:../Dave/Generated/RTC/rtc.c ****         rtc_initstatus = RTC_STATUS_SUCCESS;
 179:../Dave/Generated/RTC/rtc.c ****       }
 180:../Dave/Generated/RTC/rtc.c **** #if (RTC_INTERRUPT_ENABLED == 1)
 181:../Dave/Generated/RTC/rtc.c ****    } /* end of if(rtc_initstatus == GLOBAL_SCU_XMC4_STATUS_OK) */
 182:../Dave/Generated/RTC/rtc.c **** #endif
 183:../Dave/Generated/RTC/rtc.c **** 
 184:../Dave/Generated/RTC/rtc.c ****   return (rtc_initstatus);
 185:../Dave/Generated/RTC/rtc.c **** }
 186:../Dave/Generated/RTC/rtc.c **** /*
 187:../Dave/Generated/RTC/rtc.c ****  *  This function configures periodic and alarm interrupts
 188:../Dave/Generated/RTC/rtc.c ****  */
 189:../Dave/Generated/RTC/rtc.c **** bool RTC_lConfigureInterrupts(const RTC_t *const handler)
 190:../Dave/Generated/RTC/rtc.c **** {
  54              	 .loc 1 190 0
  55              	 .cfi_startproc
  56              	.LVL1:
  57 0000 10B5     	 push {r4,lr}
  58              	.LCFI1:
  59              	 .cfi_def_cfa_offset 8
  60              	 .cfi_offset 4,-8
  61              	 .cfi_offset 14,-4
 191:../Dave/Generated/RTC/rtc.c ****   uint32_t regval;
 192:../Dave/Generated/RTC/rtc.c ****   bool interrupt_configured = false;
 193:../Dave/Generated/RTC/rtc.c **** 
 194:../Dave/Generated/RTC/rtc.c ****   /* Enable periodic seconds, minutes, hours days, months and years interrupts */
 195:../Dave/Generated/RTC/rtc.c ****   regval = (((uint32_t)handler->config->periodic_sec_intr << RTC_MSKSR_MPSE_Pos)
  62              	 .loc 1 195 0
  63 0002 4368     	 ldr r3,[r0,#4]
 190:../Dave/Generated/RTC/rtc.c ****   uint32_t regval;
  64              	 .loc 1 190 0
  65 0004 041C     	 mov r4,r0
 196:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_min_intr << RTC_MSKSR_MPMI_Pos)
 197:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_hour_intr << RTC_MSKSR_MPHO_Pos)
  66              	 .loc 1 197 0
  67 0006 DA78     	 ldrb r2,[r3,#3]
 196:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_min_intr << RTC_MSKSR_MPMI_Pos)
  68              	 .loc 1 196 0
  69 0008 9878     	 ldrb r0,[r3,#2]
  70              	.LVL2:
  71              	 .loc 1 197 0
  72 000a 9200     	 lsl r2,r2,#2
 196:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_min_intr << RTC_MSKSR_MPMI_Pos)
  73              	 .loc 1 196 0
  74 000c 4000     	 lsl r0,r0,#1
  75 000e 1043     	 orr r0,r2
 195:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_min_intr << RTC_MSKSR_MPMI_Pos)
  76              	 .loc 1 195 0
  77 0010 5A78     	 ldrb r2,[r3,#1]
  78              	 .loc 1 197 0
  79 0012 1043     	 orr r0,r2
 198:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_day_intr << RTC_MSKSR_MPDA_Pos)
  80              	 .loc 1 198 0
  81 0014 1A79     	 ldrb r2,[r3,#4]
  82 0016 D200     	 lsl r2,r2,#3
  83 0018 1043     	 orr r0,r2
 199:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_month_intr << RTC_MSKSR_MPMO_Pos)
  84              	 .loc 1 199 0
  85 001a 5A79     	 ldrb r2,[r3,#5]
  86 001c 5201     	 lsl r2,r2,#5
  87 001e 1043     	 orr r0,r2
 200:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_year_intr << RTC_MSKSR_MPYE_Pos));
  88              	 .loc 1 200 0
  89 0020 9A79     	 ldrb r2,[r3,#6]
  90 0022 9201     	 lsl r2,r2,#6
 195:../Dave/Generated/RTC/rtc.c ****            | ((uint32_t)handler->config->periodic_min_intr << RTC_MSKSR_MPMI_Pos)
  91              	 .loc 1 195 0
  92 0024 1043     	 orr r0,r2
  93              	.LVL3:
 201:../Dave/Generated/RTC/rtc.c **** 
 202:../Dave/Generated/RTC/rtc.c ****   /* Enable RTC periodic interrupt in SCU when any of the periodic interrupts
 203:../Dave/Generated/RTC/rtc.c ****    * are enabled */
 204:../Dave/Generated/RTC/rtc.c ****   if (regval != 0U)
  94              	 .loc 1 204 0
  95 0026 04D1     	 bne .L9
 205:../Dave/Generated/RTC/rtc.c ****   {
 206:../Dave/Generated/RTC/rtc.c ****     XMC_RTC_EnableEvent(regval);
 207:../Dave/Generated/RTC/rtc.c **** #if ((UC_FAMILY == XMC4) && (RTC_TIMER_EVENT_TRIG_TO_NMI == 1))
 208:../Dave/Generated/RTC/rtc.c **** 		XMC_SCU_INTERRUPT_EnableEvent((XMC_SCU_INTERRUPT_EVENT_t)XMC_SCU_NMIREQ_RTC_PI);
 209:../Dave/Generated/RTC/rtc.c **** 		XMC_SCU_INTERRUPT_EnableNmiRequest((uint32_t)XMC_SCU_NMIREQ_RTC_PI);
 210:../Dave/Generated/RTC/rtc.c **** #endif
 211:../Dave/Generated/RTC/rtc.c **** #if ((UC_FAMILY == XMC4) && (RTC_TIMER_EVENT_TRIG_TO_SCU == 1))
 212:../Dave/Generated/RTC/rtc.c **** 		GLOBAL_SCU_XMC4_EnableEvent((GLOBAL_SCU_XMC4_EVENT_t)GLOBAL_SCU_XMC4_EVENT_RTC_PERIODIC);
 213:../Dave/Generated/RTC/rtc.c **** #endif
 214:../Dave/Generated/RTC/rtc.c ****     interrupt_configured = true;
 215:../Dave/Generated/RTC/rtc.c ****   }
 216:../Dave/Generated/RTC/rtc.c **** 
 217:../Dave/Generated/RTC/rtc.c **** 
 218:../Dave/Generated/RTC/rtc.c **** 	if (handler->config->alarm_intr == RTC_INT_ALARM_ENABLE)
  96              	 .loc 1 218 0
  97 0028 DB79     	 ldrb r3,[r3,#7]
 192:../Dave/Generated/RTC/rtc.c **** 
  98              	 .loc 1 192 0
  99 002a 0020     	 mov r0,#0
 100              	.LVL4:
 101              	 .loc 1 218 0
 102 002c 012B     	 cmp r3,#1
 103 002e 07D0     	 beq .L10
 104              	.LVL5:
 105              	.L6:
 219:../Dave/Generated/RTC/rtc.c **** 	{
 220:../Dave/Generated/RTC/rtc.c **** 		XMC_RTC_EnableEvent((uint32_t)XMC_RTC_EVENT_ALARM);
 221:../Dave/Generated/RTC/rtc.c **** #if ((UC_FAMILY == XMC4) && (RTC_ALARM_EVENT_TRIG_TO_NMI == 1))
 222:../Dave/Generated/RTC/rtc.c **** 		XMC_SCU_INTERRUPT_EnableEvent((XMC_SCU_INTERRUPT_EVENT_t)XMC_SCU_NMIREQ_RTC_AI);
 223:../Dave/Generated/RTC/rtc.c **** 		XMC_SCU_INTERRUPT_EnableNmiRequest((uint32_t)XMC_SCU_NMIREQ_RTC_AI);
 224:../Dave/Generated/RTC/rtc.c **** #endif
 225:../Dave/Generated/RTC/rtc.c **** #if ((UC_FAMILY == XMC4) && (RTC_ALARM_EVENT_TRIG_TO_SCU == 1))
 226:../Dave/Generated/RTC/rtc.c **** 		GLOBAL_SCU_XMC4_EnableEvent((GLOBAL_SCU_XMC4_EVENT_t)GLOBAL_SCU_XMC4_EVENT_RTC_ALARM);
 227:../Dave/Generated/RTC/rtc.c **** #endif
 228:../Dave/Generated/RTC/rtc.c **** 
 229:../Dave/Generated/RTC/rtc.c **** 		interrupt_configured = true;
 230:../Dave/Generated/RTC/rtc.c **** 	}
 231:../Dave/Generated/RTC/rtc.c **** 
 232:../Dave/Generated/RTC/rtc.c **** 
 233:../Dave/Generated/RTC/rtc.c ****   return (interrupt_configured);
 234:../Dave/Generated/RTC/rtc.c **** }
 106              	 .loc 1 234 0
 107              	 
 108              	.LVL6:
 109 0030 10BD     	 pop {r4,pc}
 110              	.LVL7:
 111              	.L9:
 206:../Dave/Generated/RTC/rtc.c **** #if ((UC_FAMILY == XMC4) && (RTC_TIMER_EVENT_TRIG_TO_NMI == 1))
 112              	 .loc 1 206 0
 113 0032 FFF7FEFF 	 bl XMC_RTC_EnableEvent
 114              	.LVL8:
 115 0036 6368     	 ldr r3,[r4,#4]
 214:../Dave/Generated/RTC/rtc.c ****   }
 116              	 .loc 1 214 0
 117 0038 0120     	 mov r0,#1
 118              	.LVL9:
 218:../Dave/Generated/RTC/rtc.c **** 	{
 119              	 .loc 1 218 0
 120 003a DB79     	 ldrb r3,[r3,#7]
 121 003c 012B     	 cmp r3,#1
 122 003e F7D1     	 bne .L6
 123              	.L10:
 220:../Dave/Generated/RTC/rtc.c **** #if ((UC_FAMILY == XMC4) && (RTC_ALARM_EVENT_TRIG_TO_NMI == 1))
 124              	 .loc 1 220 0
 125 0040 8020     	 mov r0,#128
 126              	.LVL10:
 127 0042 4000     	 lsl r0,r0,#1
 128 0044 FFF7FEFF 	 bl XMC_RTC_EnableEvent
 129              	.LVL11:
 229:../Dave/Generated/RTC/rtc.c **** 	}
 130              	 .loc 1 229 0
 131 0048 0120     	 mov r0,#1
 132 004a F1E7     	 b .L6
 133              	 .cfi_endproc
 134              	.LFE60:
 136              	 .section .text.RTC_lRegister_Callbacks,"ax",%progbits
 137              	 .align 2
 138              	 .global RTC_lRegister_Callbacks
 139              	 .code 16
 140              	 .thumb_func
 142              	RTC_lRegister_Callbacks:
 143              	.LFB61:
 235:../Dave/Generated/RTC/rtc.c **** 
 236:../Dave/Generated/RTC/rtc.c **** /*
 237:../Dave/Generated/RTC/rtc.c ****  *  Interface to register the RTC call backs
 238:../Dave/Generated/RTC/rtc.c ****  */
 239:../Dave/Generated/RTC/rtc.c **** XMC_RTC_STATUS_t RTC_lRegister_Callbacks(const RTC_t *const handler)
 240:../Dave/Generated/RTC/rtc.c **** {
 144              	 .loc 1 240 0
 145              	 .cfi_startproc
 146              	.LVL12:
 147 0000 38B5     	 push {r3,r4,r5,lr}
 148              	.LCFI2:
 149              	 .cfi_def_cfa_offset 16
 150              	 .cfi_offset 3,-16
 151              	 .cfi_offset 4,-12
 152              	 .cfi_offset 5,-8
 153              	 .cfi_offset 14,-4
 154              	 .loc 1 240 0
 155 0002 041C     	 mov r4,r0
 241:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_STATUS_t pi_status;
 242:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_STATUS_t ai_status;
 243:../Dave/Generated/RTC/rtc.c **** 
 244:../Dave/Generated/RTC/rtc.c ****   pi_status = XMC_RTC_STATUS_OK;
 245:../Dave/Generated/RTC/rtc.c ****   ai_status = XMC_RTC_STATUS_OK;
 246:../Dave/Generated/RTC/rtc.c **** 
 247:../Dave/Generated/RTC/rtc.c **** #if (RTC_INTERRUPT_ENABLED == 1)
 248:../Dave/Generated/RTC/rtc.c ****   #if (UC_FAMILY == XMC4)
 249:../Dave/Generated/RTC/rtc.c ****     pi_status = (XMC_RTC_STATUS_t)GLOBAL_SCU_XMC4_RegisterCallback(
 250:../Dave/Generated/RTC/rtc.c ****     		(GLOBAL_SCU_XMC4_EVENT_t)GLOBAL_SCU_XMC4_EVENT_RTC_PERIODIC, handler->config->pi_listener);
 251:../Dave/Generated/RTC/rtc.c ****     if (handler->config->alarm_intr == RTC_INT_ALARM_ENABLE)
 252:../Dave/Generated/RTC/rtc.c ****     {
 253:../Dave/Generated/RTC/rtc.c ****       ai_status = (XMC_RTC_STATUS_t)GLOBAL_SCU_XMC4_RegisterCallback(
 254:../Dave/Generated/RTC/rtc.c ****       		(GLOBAL_SCU_XMC4_EVENT_t)GLOBAL_SCU_XMC4_EVENT_RTC_ALARM,handler->config->ai_listener);
 255:../Dave/Generated/RTC/rtc.c ****     }
 256:../Dave/Generated/RTC/rtc.c ****   #else
 257:../Dave/Generated/RTC/rtc.c ****     pi_status = (XMC_RTC_STATUS_t)GLOBAL_SCU_XMC1_RegisterCallback((GLOBAL_SCU_XMC1_EVENT_t)GLOBAL_
 156              	 .loc 1 257 0
 157 0004 4368     	 ldr r3,[r0,#4]
 158 0006 0220     	 mov r0,#2
 159              	.LVL13:
 160 0008 9968     	 ldr r1,[r3,#8]
 161 000a FFF7FEFF 	 bl GLOBAL_SCU_XMC1_RegisterCallback
 162              	.LVL14:
 258:../Dave/Generated/RTC/rtc.c ****                                                                    handler->config->pi_listener);
 259:../Dave/Generated/RTC/rtc.c **** 
 260:../Dave/Generated/RTC/rtc.c ****     if (handler->config->alarm_intr == RTC_INT_ALARM_ENABLE)
 163              	 .loc 1 260 0
 164 000e 6368     	 ldr r3,[r4,#4]
 257:../Dave/Generated/RTC/rtc.c ****                                                                    handler->config->pi_listener);
 165              	 .loc 1 257 0
 166 0010 051C     	 mov r5,r0
 167              	.LVL15:
 168              	 .loc 1 260 0
 169 0012 DA79     	 ldrb r2,[r3,#7]
 170 0014 0020     	 mov r0,#0
 171 0016 012A     	 cmp r2,#1
 172 0018 00D0     	 beq .L14
 173              	.LVL16:
 174              	.L12:
 261:../Dave/Generated/RTC/rtc.c ****     {
 262:../Dave/Generated/RTC/rtc.c ****       ai_status = (XMC_RTC_STATUS_t)GLOBAL_SCU_XMC1_RegisterCallback((GLOBAL_SCU_XMC1_EVENT_t)GLOBA
 263:../Dave/Generated/RTC/rtc.c ****                                                                      handler->config->ai_listener);
 264:../Dave/Generated/RTC/rtc.c ****     }
 265:../Dave/Generated/RTC/rtc.c ****   #endif
 266:../Dave/Generated/RTC/rtc.c **** #endif
 267:../Dave/Generated/RTC/rtc.c **** 
 268:../Dave/Generated/RTC/rtc.c ****   return (XMC_RTC_STATUS_t)((uint32_t)pi_status & (uint32_t)ai_status);
 269:../Dave/Generated/RTC/rtc.c **** }
 175              	 .loc 1 269 0
 176              	 
 177              	.LVL17:
 178              	.LVL18:
 179 001a 38BD     	 pop {r3,r4,r5,pc}
 180              	.LVL19:
 181              	.L14:
 262:../Dave/Generated/RTC/rtc.c ****                                                                      handler->config->ai_listener);
 182              	 .loc 1 262 0
 183 001c D968     	 ldr r1,[r3,#12]
 184 001e 0430     	 add r0,r0,#4
 185 0020 FFF7FEFF 	 bl GLOBAL_SCU_XMC1_RegisterCallback
 186              	.LVL20:
 187 0024 2840     	 and r0,r5
 188              	.LVL21:
 189 0026 C0B2     	 uxtb r0,r0
 190 0028 F7E7     	 b .L12
 191              	 .cfi_endproc
 192              	.LFE61:
 194 002a C046     	 .section .text.RTC_Init,"ax",%progbits
 195              	 .align 2
 196              	 .global RTC_Init
 197              	 .code 16
 198              	 .thumb_func
 200              	RTC_Init:
 201              	.LFB59:
 126:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_STATUS_t status;
 202              	 .loc 1 126 0
 203              	 .cfi_startproc
 204              	.LVL22:
 205 0000 38B5     	 push {r3,r4,r5,lr}
 206              	.LCFI3:
 207              	 .cfi_def_cfa_offset 16
 208              	 .cfi_offset 3,-16
 209              	 .cfi_offset 4,-12
 210              	 .cfi_offset 5,-8
 211              	 .cfi_offset 14,-4
 126:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_STATUS_t status;
 212              	 .loc 1 126 0
 213 0002 051C     	 mov r5,r0
 140:../Dave/Generated/RTC/rtc.c **** #endif
 214              	 .loc 1 140 0
 215 0004 1248     	 ldr r0,.L31
 216              	.LVL23:
 217 0006 FFF7FEFF 	 bl GLOBAL_SCU_XMC1_Init
 218              	.LVL24:
 219 000a 041E     	 sub r4,r0,#0
 220              	.LVL25:
 142:../Dave/Generated/RTC/rtc.c ****   {
 221              	 .loc 1 142 0
 222 000c 02D1     	 bne .L16
 145:../Dave/Generated/RTC/rtc.c ****       {
 223              	 .loc 1 145 0
 224 000e 2B7A     	 ldrb r3,[r5,#8]
 225 0010 002B     	 cmp r3,#0
 226 0012 01D0     	 beq .L28
 227              	.LVL26:
 228              	.L16:
 185:../Dave/Generated/RTC/rtc.c **** /*
 229              	 .loc 1 185 0
 230 0014 201C     	 mov r0,r4
 231              	 
 232              	.LVL27:
 233              	.LVL28:
 234 0016 38BD     	 pop {r3,r4,r5,pc}
 235              	.LVL29:
 236              	.L28:
 148:../Dave/Generated/RTC/rtc.c **** 
 237              	 .loc 1 148 0
 238 0018 2868     	 ldr r0,[r5]
 239              	.LVL30:
 240 001a FFF7FEFF 	 bl XMC_RTC_Init
 241              	.LVL31:
 150:../Dave/Generated/RTC/rtc.c ****         {
 242              	 .loc 1 150 0
 243 001e 0028     	 cmp r0,#0
 244 0020 01D0     	 beq .L29
 173:../Dave/Generated/RTC/rtc.c ****         }
 245              	 .loc 1 173 0
 246 0022 0124     	 mov r4,#1
 247              	.LVL32:
 248 0024 F6E7     	 b .L16
 249              	.LVL33:
 250              	.L29:
 153:../Dave/Generated/RTC/rtc.c **** 
 251              	 .loc 1 153 0
 252 0026 281C     	 mov r0,r5
 253              	.LVL34:
 254 0028 FFF7FEFF 	 bl RTC_lConfigureInterrupts
 255              	.LVL35:
 155:../Dave/Generated/RTC/rtc.c ****           {
 256              	 .loc 1 155 0
 257 002c 0028     	 cmp r0,#0
 258 002e 06D1     	 bne .L18
 259              	.LVL36:
 260              	.L21:
 163:../Dave/Generated/RTC/rtc.c ****             {
 261              	 .loc 1 163 0
 262 0030 6B68     	 ldr r3,[r5,#4]
 263 0032 1B78     	 ldrb r3,[r3]
 264 0034 012B     	 cmp r3,#1
 265 0036 08D0     	 beq .L30
 266              	.L20:
 167:../Dave/Generated/RTC/rtc.c ****             rtc_initstatus = RTC_STATUS_SUCCESS;
 267              	 .loc 1 167 0
 268 0038 0123     	 mov r3,#1
 269 003a 2B72     	 strb r3,[r5,#8]
 270              	.LVL37:
 271 003c EAE7     	 b .L16
 272              	.LVL38:
 273              	.L18:
 157:../Dave/Generated/RTC/rtc.c ****           }
 274              	 .loc 1 157 0
 275 003e 281C     	 mov r0,r5
 276              	.LVL39:
 277 0040 FFF7FEFF 	 bl RTC_lRegister_Callbacks
 278              	.LVL40:
 160:../Dave/Generated/RTC/rtc.c ****           {
 279              	 .loc 1 160 0
 280 0044 0028     	 cmp r0,#0
 281 0046 E5D1     	 bne .L16
 282 0048 F2E7     	 b .L21
 283              	.LVL41:
 284              	.L30:
 285              	.LBB10:
 286              	.LBB11:
 287              	 .file 2 "../Dave/Generated/RTC/rtc.h"
   1:../Dave/Generated/RTC/rtc.h **** /**
   2:../Dave/Generated/RTC/rtc.h ****  * @file rtc.h
   3:../Dave/Generated/RTC/rtc.h ****  * @date 2015-05-18
   4:../Dave/Generated/RTC/rtc.h ****  *
   5:../Dave/Generated/RTC/rtc.h ****  * NOTE:
   6:../Dave/Generated/RTC/rtc.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/RTC/rtc.h ****  * regenerated.
   8:../Dave/Generated/RTC/rtc.h ****  */
   9:../Dave/Generated/RTC/rtc.h **** /**
  10:../Dave/Generated/RTC/rtc.h ****  * @cond
  11:../Dave/Generated/RTC/rtc.h ****  **************************************************************************************************
  12:../Dave/Generated/RTC/rtc.h ****  * RTC v4.1.10 Facilitates to generate real time clock and alarm
  13:../Dave/Generated/RTC/rtc.h ****  *
  14:../Dave/Generated/RTC/rtc.h ****  * Copyright (c) 2015, Infineon Technologies AG
  15:../Dave/Generated/RTC/rtc.h ****  * All rights reserved.
  16:../Dave/Generated/RTC/rtc.h ****  *
  17:../Dave/Generated/RTC/rtc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:../Dave/Generated/RTC/rtc.h ****  * following conditions are met:
  19:../Dave/Generated/RTC/rtc.h ****  *
  20:../Dave/Generated/RTC/rtc.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  21:../Dave/Generated/RTC/rtc.h ****  *   disclaimer.
  22:../Dave/Generated/RTC/rtc.h ****  *
  23:../Dave/Generated/RTC/rtc.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  24:../Dave/Generated/RTC/rtc.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  25:../Dave/Generated/RTC/rtc.h ****  *
  26:../Dave/Generated/RTC/rtc.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  27:../Dave/Generated/RTC/rtc.h ****  *   products derived from this software without specific prior written permission.
  28:../Dave/Generated/RTC/rtc.h ****  *
  29:../Dave/Generated/RTC/rtc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:../Dave/Generated/RTC/rtc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:../Dave/Generated/RTC/rtc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:../Dave/Generated/RTC/rtc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:../Dave/Generated/RTC/rtc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:../Dave/Generated/RTC/rtc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:../Dave/Generated/RTC/rtc.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:../Dave/Generated/RTC/rtc.h ****  *
  37:../Dave/Generated/RTC/rtc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:../Dave/Generated/RTC/rtc.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:../Dave/Generated/RTC/rtc.h ****  **************************************************************************************************
  40:../Dave/Generated/RTC/rtc.h ****  *
  41:../Dave/Generated/RTC/rtc.h ****  * Change History
  42:../Dave/Generated/RTC/rtc.h ****  * --------------
  43:../Dave/Generated/RTC/rtc.h ****  *
  44:../Dave/Generated/RTC/rtc.h ****  * 2015-02-16:
  45:../Dave/Generated/RTC/rtc.h ****  *     - Initial version<br>
  46:../Dave/Generated/RTC/rtc.h ****  *
  47:../Dave/Generated/RTC/rtc.h ****  * 2015-05-18:
  48:../Dave/Generated/RTC/rtc.h ****  *     - LLD version check added
  49:../Dave/Generated/RTC/rtc.h ****  * @endcond
  50:../Dave/Generated/RTC/rtc.h ****  *
  51:../Dave/Generated/RTC/rtc.h ****  */
  52:../Dave/Generated/RTC/rtc.h **** 
  53:../Dave/Generated/RTC/rtc.h **** #ifndef RTC_H
  54:../Dave/Generated/RTC/rtc.h **** #define RTC_H
  55:../Dave/Generated/RTC/rtc.h **** 
  56:../Dave/Generated/RTC/rtc.h **** 
  57:../Dave/Generated/RTC/rtc.h **** /**************************************************************************************************
  58:../Dave/Generated/RTC/rtc.h ****  * HEADER FILES
  59:../Dave/Generated/RTC/rtc.h ****  **************************************************************************************************
  60:../Dave/Generated/RTC/rtc.h **** #include <xmc_scu.h>
  61:../Dave/Generated/RTC/rtc.h **** #include <xmc_rtc.h>
  62:../Dave/Generated/RTC/rtc.h **** #include "rtc_conf.h"
  63:../Dave/Generated/RTC/rtc.h **** #include <DAVE_Common.h>
  64:../Dave/Generated/RTC/rtc.h **** 
  65:../Dave/Generated/RTC/rtc.h **** /**************************************************************************************************
  66:../Dave/Generated/RTC/rtc.h ****  * MACROS
  67:../Dave/Generated/RTC/rtc.h ****  **************************************************************************************************
  68:../Dave/Generated/RTC/rtc.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  69:../Dave/Generated/RTC/rtc.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  70:../Dave/Generated/RTC/rtc.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  71:../Dave/Generated/RTC/rtc.h **** #error "RTC APP requires XMC Peripheral Library v2.0.0 or higher"
  72:../Dave/Generated/RTC/rtc.h **** #endif
  73:../Dave/Generated/RTC/rtc.h **** 
  74:../Dave/Generated/RTC/rtc.h **** /**************************************************************************************************
  75:../Dave/Generated/RTC/rtc.h ****  * ENUMS
  76:../Dave/Generated/RTC/rtc.h ****  **************************************************************************************************
  77:../Dave/Generated/RTC/rtc.h **** /**
  78:../Dave/Generated/RTC/rtc.h ****  * @ingroup RTC_enumerations
  79:../Dave/Generated/RTC/rtc.h ****  * @{
  80:../Dave/Generated/RTC/rtc.h ****  */
  81:../Dave/Generated/RTC/rtc.h **** 
  82:../Dave/Generated/RTC/rtc.h **** typedef enum RTC_STATUS
  83:../Dave/Generated/RTC/rtc.h **** {
  84:../Dave/Generated/RTC/rtc.h ****   RTC_STATUS_SUCCESS = 0U,    /**< APP initialization status success */
  85:../Dave/Generated/RTC/rtc.h ****   RTC_STATUS_FAILURE = 1U     /**< APP initialization status failure */
  86:../Dave/Generated/RTC/rtc.h **** } RTC_STATUS_t;
  87:../Dave/Generated/RTC/rtc.h **** 
  88:../Dave/Generated/RTC/rtc.h **** /**
  89:../Dave/Generated/RTC/rtc.h ****  * This enumeration defines RTC Module Enable and Disable values.
  90:../Dave/Generated/RTC/rtc.h ****  */
  91:../Dave/Generated/RTC/rtc.h **** 
  92:../Dave/Generated/RTC/rtc.h **** typedef enum RTC_START
  93:../Dave/Generated/RTC/rtc.h **** {
  94:../Dave/Generated/RTC/rtc.h ****   RTC_START_DISABLE = 0x0U, /**< Disable RTC start */
  95:../Dave/Generated/RTC/rtc.h ****   RTC_START_ENABLE = 0x1U   /**< Enable RTC start */
  96:../Dave/Generated/RTC/rtc.h **** } RTC_START_t;
  97:../Dave/Generated/RTC/rtc.h **** 
  98:../Dave/Generated/RTC/rtc.h **** 
  99:../Dave/Generated/RTC/rtc.h **** /**
 100:../Dave/Generated/RTC/rtc.h ****  * This enumeration defines RTC Module Interrupt Related Events Enable and
 101:../Dave/Generated/RTC/rtc.h ****  * Disable values.
 102:../Dave/Generated/RTC/rtc.h ****  */
 103:../Dave/Generated/RTC/rtc.h **** 
 104:../Dave/Generated/RTC/rtc.h **** typedef enum RTC_INT
 105:../Dave/Generated/RTC/rtc.h **** {
 106:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_SEC_DISABLE = 0x0U,          /**< Timer Periodic Seconds Interrupt Disable */
 107:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_SEC_ENABLE = 0x1U,           /**< Timer Periodic Seconds Interrupt Enable */
 108:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_MIN_DISABLE = 0x0U,          /**< Timer Periodic Minutes Interrupt Disable */
 109:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_MIN_ENABLE = 0x1U,           /**< Timer Periodic Minutes Interrupt Enable */
 110:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_HOUR_DISABLE = 0x0U,         /**< Timer Periodic Hours Interrupt Disable */
 111:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_HOUR_ENABLE = 0x1U,          /**< Timer Periodic Hours Interrupt Enable */
 112:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_DAY_DISABLE = 0x0U,          /**< Timer Periodic Days Interrupt Disable */
 113:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_DAY_ENABLE = 0x1U,           /**< Timer Periodic Days Interrupt Enable */
 114:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_MONTH_DISABLE = 0x0U,        /**< Timer Periodic Month Interrupt Disable */
 115:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_MONTH_ENABLE = 0x1U,         /**< Timer Periodic Month Interrupt Enable */
 116:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_YEAR_DISABLE = 0x0U,         /**< Timer Periodic Years Interrupt Disable */
 117:../Dave/Generated/RTC/rtc.h ****   RTC_INT_PERIODIC_YEAR_ENABLE = 0x1U,          /**< Timer Periodic Years Interrupt Enable */
 118:../Dave/Generated/RTC/rtc.h ****   RTC_INT_ALARM_DISABLE = 0x0U,                 /**< Alarm Interrupt Disable */
 119:../Dave/Generated/RTC/rtc.h ****   RTC_INT_ALARM_ENABLE = 0x1U                   /**< Alarm Interrupt Enable */
 120:../Dave/Generated/RTC/rtc.h **** } RTC_INT_t;
 121:../Dave/Generated/RTC/rtc.h **** 
 122:../Dave/Generated/RTC/rtc.h **** /**************************************************************************************************
 123:../Dave/Generated/RTC/rtc.h **** * DATA STRUCTURES
 124:../Dave/Generated/RTC/rtc.h **** ***************************************************************************************************
 125:../Dave/Generated/RTC/rtc.h **** /**
 126:../Dave/Generated/RTC/rtc.h ****   * @ingroup RTC_datastructures
 127:../Dave/Generated/RTC/rtc.h ****   * @{
 128:../Dave/Generated/RTC/rtc.h ****   */
 129:../Dave/Generated/RTC/rtc.h **** 
 130:../Dave/Generated/RTC/rtc.h **** /**
 131:../Dave/Generated/RTC/rtc.h ****  * RTC APP Handle structure. Stores configured parameters in APP UI.
 132:../Dave/Generated/RTC/rtc.h ****  */
 133:../Dave/Generated/RTC/rtc.h **** 
 134:../Dave/Generated/RTC/rtc.h **** typedef struct RTC_CONFIG
 135:../Dave/Generated/RTC/rtc.h **** {
 136:../Dave/Generated/RTC/rtc.h ****  RTC_START_t start;                           /**< rtc start */
 137:../Dave/Generated/RTC/rtc.h **** 
 138:../Dave/Generated/RTC/rtc.h ****  RTC_INT_t periodic_sec_intr;                 /**< periodic seconds interrupt */
 139:../Dave/Generated/RTC/rtc.h ****  RTC_INT_t periodic_min_intr;                 /**< periodic minutes interrupt */
 140:../Dave/Generated/RTC/rtc.h ****  RTC_INT_t periodic_hour_intr;                /**< periodic hours interrupt */
 141:../Dave/Generated/RTC/rtc.h ****  RTC_INT_t periodic_day_intr;                 /**< periodic days interrupt */
 142:../Dave/Generated/RTC/rtc.h ****  RTC_INT_t periodic_month_intr;               /**< periodic months interrupt */
 143:../Dave/Generated/RTC/rtc.h ****  RTC_INT_t periodic_year_intr;                /**< periodic years interrupt */
 144:../Dave/Generated/RTC/rtc.h **** 
 145:../Dave/Generated/RTC/rtc.h ****  RTC_INT_t alarm_intr;                        /**< alarm interrupt */
 146:../Dave/Generated/RTC/rtc.h **** 
 147:../Dave/Generated/RTC/rtc.h **** #if ((UC_FAMILY == XMC4) && (RTC_INTERRUPT_ENABLED == 1))
 148:../Dave/Generated/RTC/rtc.h ****  GLOBAL_SCU_XMC4_EVENT_HANDLER_t pi_listener;            /**< periodic interrupt listener */
 149:../Dave/Generated/RTC/rtc.h ****  GLOBAL_SCU_XMC4_EVENT_HANDLER_t ai_listener;            /**< alarm interrupt listener */
 150:../Dave/Generated/RTC/rtc.h **** #endif
 151:../Dave/Generated/RTC/rtc.h **** 
 152:../Dave/Generated/RTC/rtc.h **** #if ((UC_FAMILY == XMC1) && (RTC_INTERRUPT_ENABLED == 1))
 153:../Dave/Generated/RTC/rtc.h ****  GLOBAL_SCU_XMC1_EVENT_HANDLER_t pi_listener;            /**< periodic interrupt listener */
 154:../Dave/Generated/RTC/rtc.h ****  GLOBAL_SCU_XMC1_EVENT_HANDLER_t ai_listener;            /**< alarm interrupt listener */
 155:../Dave/Generated/RTC/rtc.h **** #endif
 156:../Dave/Generated/RTC/rtc.h **** } RTC_CONFIG_t;
 157:../Dave/Generated/RTC/rtc.h **** 
 158:../Dave/Generated/RTC/rtc.h **** /**
 159:../Dave/Generated/RTC/rtc.h ****  * Runtime RTC handler.
 160:../Dave/Generated/RTC/rtc.h ****  */
 161:../Dave/Generated/RTC/rtc.h **** typedef struct RealTimeClock
 162:../Dave/Generated/RTC/rtc.h **** {
 163:../Dave/Generated/RTC/rtc.h ****   const XMC_RTC_CONFIG_t *const time_alarm_config; /** Pointer to RTC LLD configuration data */
 164:../Dave/Generated/RTC/rtc.h ****   const RTC_CONFIG_t *const config;                /** Pointer to configuration data */
 165:../Dave/Generated/RTC/rtc.h ****   bool initialized;                                /** status for initialized or not */
 166:../Dave/Generated/RTC/rtc.h **** } RTC_t;
 167:../Dave/Generated/RTC/rtc.h **** /**
 168:../Dave/Generated/RTC/rtc.h ****  *@}
 169:../Dave/Generated/RTC/rtc.h ****  */
 170:../Dave/Generated/RTC/rtc.h **** 
 171:../Dave/Generated/RTC/rtc.h **** #ifdef __cplusplus
 172:../Dave/Generated/RTC/rtc.h **** extern "C" {
 173:../Dave/Generated/RTC/rtc.h **** #endif
 174:../Dave/Generated/RTC/rtc.h **** /**************************************************************************************************
 175:../Dave/Generated/RTC/rtc.h ****  * API PROTOTYPES
 176:../Dave/Generated/RTC/rtc.h **** ***************************************************************************************************
 177:../Dave/Generated/RTC/rtc.h **** 
 178:../Dave/Generated/RTC/rtc.h **** /**
 179:../Dave/Generated/RTC/rtc.h ****  * @ingroup RTC_apidoc
 180:../Dave/Generated/RTC/rtc.h ****  * @{
 181:../Dave/Generated/RTC/rtc.h ****  */
 182:../Dave/Generated/RTC/rtc.h **** 
 183:../Dave/Generated/RTC/rtc.h **** /**
 184:../Dave/Generated/RTC/rtc.h ****  * @brief Get RTC APP version.
 185:../Dave/Generated/RTC/rtc.h ****  * @return @ref DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 186:../Dave/Generated/RTC/rtc.h ****  *
 187:../Dave/Generated/RTC/rtc.h ****  * \par<b>Description: </b><br>
 188:../Dave/Generated/RTC/rtc.h ****  * The function can be used to check application software compatibility with a
 189:../Dave/Generated/RTC/rtc.h ****  * specific version of the APP.
 190:../Dave/Generated/RTC/rtc.h ****  *
 191:../Dave/Generated/RTC/rtc.h ****  * @code
 192:../Dave/Generated/RTC/rtc.h ****  *  #include <DAVE.h>
 193:../Dave/Generated/RTC/rtc.h ****  *  #include <DAVE_common.h>
 194:../Dave/Generated/RTC/rtc.h ****  *  int main(void)
 195:../Dave/Generated/RTC/rtc.h ****  *  {
 196:../Dave/Generated/RTC/rtc.h ****  *    DAVE_APP_VERSION_t version;
 197:../Dave/Generated/RTC/rtc.h ****  *    DAVE_Init();
 198:../Dave/Generated/RTC/rtc.h ****  *    version = RTC_GetAppVersion();
 199:../Dave/Generated/RTC/rtc.h ****  *    if(version.major != 4U)
 200:../Dave/Generated/RTC/rtc.h ****  *    {
 201:../Dave/Generated/RTC/rtc.h ****  *    }
 202:../Dave/Generated/RTC/rtc.h ****  *    return 0;
 203:../Dave/Generated/RTC/rtc.h ****  *  }
 204:../Dave/Generated/RTC/rtc.h ****  * @endcode<BR> </p>
 205:../Dave/Generated/RTC/rtc.h ****  */
 206:../Dave/Generated/RTC/rtc.h **** DAVE_APP_VERSION_t RTC_GetAppVersion(void);
 207:../Dave/Generated/RTC/rtc.h **** 
 208:../Dave/Generated/RTC/rtc.h **** 
 209:../Dave/Generated/RTC/rtc.h ****  /**
 210:../Dave/Generated/RTC/rtc.h ****  * @brief Initializes RTC module.
 211:../Dave/Generated/RTC/rtc.h ****  * @param handle Constant pointer to RTC structure of type @ref RTC_t
 212:../Dave/Generated/RTC/rtc.h ****  * @return @ref RTC_STATUS_t
 213:../Dave/Generated/RTC/rtc.h ****  *
 214:../Dave/Generated/RTC/rtc.h ****  * \par<b>Description:</b><br>
 215:../Dave/Generated/RTC/rtc.h ****  * Configures the RTC module registers as per settings updated in
 216:../Dave/Generated/RTC/rtc.h ****  * UI and enables the RTC module.
 217:../Dave/Generated/RTC/rtc.h ****  *
 218:../Dave/Generated/RTC/rtc.h ****  * <P ALIGN="LEFT"><B>Example:</B>
 219:../Dave/Generated/RTC/rtc.h ****  * Pre-requisite: Instantiate RTC APP and generate code before copying below code snippet.
 220:../Dave/Generated/RTC/rtc.h ****  * @code
 221:../Dave/Generated/RTC/rtc.h ****  *  #include <DAVE.h>
 222:../Dave/Generated/RTC/rtc.h ****  *  int main(void)
 223:../Dave/Generated/RTC/rtc.h ****  *  {
 224:../Dave/Generated/RTC/rtc.h ****  *    DAVE_Init(); // RTC_Init(&RTC_0) will be called within DAVE_Init()
 225:../Dave/Generated/RTC/rtc.h ****  *    // ... infinite loop ...
 226:../Dave/Generated/RTC/rtc.h ****  *    while(1)
 227:../Dave/Generated/RTC/rtc.h ****  *    {}
 228:../Dave/Generated/RTC/rtc.h ****  *  }
 229:../Dave/Generated/RTC/rtc.h ****  * @endcode<BR> </p> 
 230:../Dave/Generated/RTC/rtc.h ****  */
 231:../Dave/Generated/RTC/rtc.h **** RTC_STATUS_t RTC_Init(RTC_t *const handle);
 232:../Dave/Generated/RTC/rtc.h **** 
 233:../Dave/Generated/RTC/rtc.h **** /**
 234:../Dave/Generated/RTC/rtc.h ****  * @brief Returns the time in seconds since the epoch time(01/01/1970).
 235:../Dave/Generated/RTC/rtc.h ****  * @param time_value Pointer to structure of type @ref time_t
 236:../Dave/Generated/RTC/rtc.h ****  * @return @ref RTC_STATUS_t
 237:../Dave/Generated/RTC/rtc.h ****  *
 238:../Dave/Generated/RTC/rtc.h ****  * <P ALIGN="LEFT"><B>Example:</B>
 239:../Dave/Generated/RTC/rtc.h ****  * Pre-requisite: Instantiate RTC APP and generate code before copying below code snippet.
 240:../Dave/Generated/RTC/rtc.h ****  * @code 
 241:../Dave/Generated/RTC/rtc.h ****  * #include <DAVE.h>
 242:../Dave/Generated/RTC/rtc.h ****  * int main(void)
 243:../Dave/Generated/RTC/rtc.h ****  * {
 244:../Dave/Generated/RTC/rtc.h ****  *   RTC_STATUS_t status = RTC_STATUS_FAILURE;
 245:../Dave/Generated/RTC/rtc.h ****  *   time_t Time_Sec;
 246:../Dave/Generated/RTC/rtc.h ****  *   DAVE_Init();  // RTC_Init(&RTC_0) will be called within DAVE_Init()
 247:../Dave/Generated/RTC/rtc.h ****  *   status = RTC_Time(&Time_Sec);
 248:../Dave/Generated/RTC/rtc.h ****  *   if(status != RTC_STATUS_SUCCESS)
 249:../Dave/Generated/RTC/rtc.h ****  *   {
 250:../Dave/Generated/RTC/rtc.h ****  *	   //error
 251:../Dave/Generated/RTC/rtc.h ****  *   }
 252:../Dave/Generated/RTC/rtc.h ****  *   // ... infinite loop ...
 253:../Dave/Generated/RTC/rtc.h ****  *   while(1)
 254:../Dave/Generated/RTC/rtc.h ****  *   {}
 255:../Dave/Generated/RTC/rtc.h ****  * }
 256:../Dave/Generated/RTC/rtc.h ****  * @endcode<BR> </p> 
 257:../Dave/Generated/RTC/rtc.h ****  */
 258:../Dave/Generated/RTC/rtc.h **** RTC_STATUS_t RTC_Time(time_t* time_value) ;
 259:../Dave/Generated/RTC/rtc.h **** 
 260:../Dave/Generated/RTC/rtc.h **** /**
 261:../Dave/Generated/RTC/rtc.h ****  * @brief Starts the RTC running
 262:../Dave/Generated/RTC/rtc.h ****  * @return None
 263:../Dave/Generated/RTC/rtc.h ****  *
 264:../Dave/Generated/RTC/rtc.h ****  *\par<b>Description: </b><br>
 265:../Dave/Generated/RTC/rtc.h ****  * Before verifying this API it is required to deselect "Start after initialization" checbox in UI.
 266:../Dave/Generated/RTC/rtc.h ****  * Thereby this API shall be used to start the RTC module.
 267:../Dave/Generated/RTC/rtc.h ****  * <P ALIGN="LEFT"><B>Example:</B>
 268:../Dave/Generated/RTC/rtc.h ****  * Pre-requisite:
 269:../Dave/Generated/RTC/rtc.h ****  * 1. Instantiate RTC APP <br>
 270:../Dave/Generated/RTC/rtc.h ****  * 2. Unselect "Start after initialization checkbox in UI" <br>
 271:../Dave/Generated/RTC/rtc.h ****  * 3. Generate code before copying below code snippet. <br>
 272:../Dave/Generated/RTC/rtc.h ****  * @code
 273:../Dave/Generated/RTC/rtc.h ****  * #include <DAVE.h>
 274:../Dave/Generated/RTC/rtc.h ****  * int main(void)
 275:../Dave/Generated/RTC/rtc.h ****  * {
 276:../Dave/Generated/RTC/rtc.h ****  *   DAVE_Init();// RTC_Init(&RTC_0) will be called within DAVE_Init()
 277:../Dave/Generated/RTC/rtc.h ****  *   RTC_Stop();
 278:../Dave/Generated/RTC/rtc.h ****  *   if (XMC_RTC_IsRunning() == false)
 279:../Dave/Generated/RTC/rtc.h ****  *   {
 280:../Dave/Generated/RTC/rtc.h ****  *     RTC_Start();
 281:../Dave/Generated/RTC/rtc.h ****  *   }
 282:../Dave/Generated/RTC/rtc.h ****  *   // ... infinite loop ...
 283:../Dave/Generated/RTC/rtc.h ****  *   while(1)
 284:../Dave/Generated/RTC/rtc.h ****  *   {}
 285:../Dave/Generated/RTC/rtc.h ****  * }
 286:../Dave/Generated/RTC/rtc.h ****  * @endcode<BR> </p>
 287:../Dave/Generated/RTC/rtc.h ****  */
 288:../Dave/Generated/RTC/rtc.h **** __STATIC_INLINE void RTC_Start(void)
 289:../Dave/Generated/RTC/rtc.h **** {
 290:../Dave/Generated/RTC/rtc.h **** 	XMC_RTC_Start();
 288              	 .loc 2 290 0
 289 004a FFF7FEFF 	 bl XMC_RTC_Start
 290              	.LVL42:
 291 004e F3E7     	 b .L20
 292              	.L32:
 293              	 .align 2
 294              	.L31:
 295 0050 00000000 	 .word GLOBAL_SCU_XMC1_0
 296              	.LBE11:
 297              	.LBE10:
 298              	 .cfi_endproc
 299              	.LFE59:
 301              	 .section .text.RTC_SetTime,"ax",%progbits
 302              	 .align 2
 303              	 .global RTC_SetTime
 304              	 .code 16
 305              	 .thumb_func
 307              	RTC_SetTime:
 308              	.LFB62:
 270:../Dave/Generated/RTC/rtc.c **** 
 271:../Dave/Generated/RTC/rtc.c **** /*
 272:../Dave/Generated/RTC/rtc.c ****  *  This function is used to set RTC time.
 273:../Dave/Generated/RTC/rtc.c ****  */
 274:../Dave/Generated/RTC/rtc.c **** RTC_STATUS_t RTC_SetTime(XMC_RTC_TIME_t *current_time)
 275:../Dave/Generated/RTC/rtc.c **** {
 309              	 .loc 1 275 0
 310              	 .cfi_startproc
 311              	.LVL43:
 312 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 313              	.LCFI4:
 314              	 .cfi_def_cfa_offset 20
 315              	 .cfi_offset 4,-20
 316              	 .cfi_offset 5,-16
 317              	 .cfi_offset 6,-12
 318              	 .cfi_offset 7,-8
 319              	 .cfi_offset 14,-4
 320 0002 83B0     	 sub sp,sp,#12
 321              	.LCFI5:
 322              	 .cfi_def_cfa_offset 32
 276:../Dave/Generated/RTC/rtc.c ****   RTC_STATUS_t status = RTC_STATUS_SUCCESS;
 277:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_TIME_t time_val;
 278:../Dave/Generated/RTC/rtc.c **** 
 279:../Dave/Generated/RTC/rtc.c ****   XMC_ASSERT("RTC_SetTime: NULL pointer", current_time != NULL);
 280:../Dave/Generated/RTC/rtc.c **** 
 281:../Dave/Generated/RTC/rtc.c ****   /* copy to local structure to keep data safe */
 282:../Dave/Generated/RTC/rtc.c ****   time_val.year = current_time->year;
 323              	 .loc 1 282 0
 324 0004 6A46     	 mov r2,sp
 283:../Dave/Generated/RTC/rtc.c ****   time_val.month = current_time->month;
 325              	 .loc 1 283 0
 326 0006 0F27     	 mov r7,#15
 327 0008 6946     	 mov r1,sp
 284:../Dave/Generated/RTC/rtc.c ****   time_val.days = current_time->days;
 328              	 .loc 1 284 0
 329 000a 1F26     	 mov r6,#31
 282:../Dave/Generated/RTC/rtc.c ****   time_val.month = current_time->month;
 330              	 .loc 1 282 0
 331 000c C388     	 ldrh r3,[r0,#6]
 332 000e D380     	 strh r3,[r2,#6]
 283:../Dave/Generated/RTC/rtc.c ****   time_val.month = current_time->month;
 333              	 .loc 1 283 0
 334 0010 4379     	 ldrb r3,[r0,#5]
 335 0012 5279     	 ldrb r2,[r2,#5]
 336 0014 1B07     	 lsl r3,r3,#28
 337 0016 1B0F     	 lsr r3,r3,#28
 338 0018 BA43     	 bic r2,r7
 339 001a 1A43     	 orr r2,r3
 340 001c 4A71     	 strb r2,[r1,#5]
 341              	 .loc 1 284 0
 342 001e C978     	 ldrb r1,[r1,#3]
 285:../Dave/Generated/RTC/rtc.c ****   time_val.hours = current_time->hours;
 343              	 .loc 1 285 0
 344 0020 8478     	 ldrb r4,[r0,#2]
 284:../Dave/Generated/RTC/rtc.c ****   time_val.days = current_time->days;
 345              	 .loc 1 284 0
 346 0022 B143     	 bic r1,r6
 347 0024 8C46     	 mov ip,r1
 348              	 .loc 1 285 0
 349 0026 6946     	 mov r1,sp
 350 0028 3440     	 and r4,r6
 351 002a 251C     	 mov r5,r4
 352 002c 8C78     	 ldrb r4,[r1,#2]
 284:../Dave/Generated/RTC/rtc.c ****   time_val.days = current_time->days;
 353              	 .loc 1 284 0
 354 002e C278     	 ldrb r2,[r0,#3]
 355              	 .loc 1 285 0
 356 0030 B443     	 bic r4,r6
 357 0032 2C43     	 orr r4,r5
 358 0034 8C70     	 strb r4,[r1,#2]
 286:../Dave/Generated/RTC/rtc.c ****   time_val.minutes = current_time->minutes;
 359              	 .loc 1 286 0
 360 0036 3F21     	 mov r1,#63
 361 0038 4478     	 ldrb r4,[r0,#1]
 287:../Dave/Generated/RTC/rtc.c ****   time_val.seconds = current_time->seconds;
 362              	 .loc 1 287 0
 363 003a 0078     	 ldrb r0,[r0]
 364              	.LVL44:
 286:../Dave/Generated/RTC/rtc.c ****   time_val.minutes = current_time->minutes;
 365              	 .loc 1 286 0
 366 003c 0C40     	 and r4,r1
 367 003e 251C     	 mov r5,r4
 368 0040 6C46     	 mov r4,sp
 369 0042 6478     	 ldrb r4,[r4,#1]
 370              	 .loc 1 287 0
 371 0044 0840     	 and r0,r1
 286:../Dave/Generated/RTC/rtc.c ****   time_val.minutes = current_time->minutes;
 372              	 .loc 1 286 0
 373 0046 8C43     	 bic r4,r1
 374 0048 2C43     	 orr r4,r5
 375 004a 6D46     	 mov r5,sp
 376 004c 6C70     	 strb r4,[r5,#1]
 377              	 .loc 1 287 0
 378 004e 041C     	 mov r4,r0
 379 0050 2878     	 ldrb r0,[r5]
 284:../Dave/Generated/RTC/rtc.c ****   time_val.hours = current_time->hours;
 380              	 .loc 1 284 0
 381 0052 D206     	 lsl r2,r2,#27
 382              	 .loc 1 287 0
 383 0054 8843     	 bic r0,r1
 288:../Dave/Generated/RTC/rtc.c **** 
 289:../Dave/Generated/RTC/rtc.c ****   if ((time_val.days != 0U) && (time_val.month != 0U))
 384              	 .loc 1 289 0
 385 0056 6146     	 mov r1,ip
 284:../Dave/Generated/RTC/rtc.c ****   time_val.hours = current_time->hours;
 386              	 .loc 1 284 0
 387 0058 D20E     	 lsr r2,r2,#27
 287:../Dave/Generated/RTC/rtc.c **** 
 388              	 .loc 1 287 0
 389 005a 2043     	 orr r0,r4
 390              	 .loc 1 289 0
 391 005c 1143     	 orr r1,r2
 287:../Dave/Generated/RTC/rtc.c **** 
 392              	 .loc 1 287 0
 393 005e 2870     	 strb r0,[r5]
 290:../Dave/Generated/RTC/rtc.c ****   {
 291:../Dave/Generated/RTC/rtc.c ****     time_val.days = time_val.days - 1U;
 292:../Dave/Generated/RTC/rtc.c ****     time_val.month = time_val.month - 1U;
 293:../Dave/Generated/RTC/rtc.c **** 
 294:../Dave/Generated/RTC/rtc.c ****     XMC_RTC_SetTime(&time_val);
 295:../Dave/Generated/RTC/rtc.c ****   }
 296:../Dave/Generated/RTC/rtc.c ****   else
 297:../Dave/Generated/RTC/rtc.c ****   {
 298:../Dave/Generated/RTC/rtc.c ****     status = RTC_STATUS_FAILURE;
 394              	 .loc 1 298 0
 395 0060 0120     	 mov r0,#1
 289:../Dave/Generated/RTC/rtc.c ****   {
 396              	 .loc 1 289 0
 397 0062 0E42     	 tst r6,r1
 398 0064 02D0     	 beq .L34
 289:../Dave/Generated/RTC/rtc.c ****   {
 399              	 .loc 1 289 0 is_stmt 0 discriminator 1
 400 0066 6C79     	 ldrb r4,[r5,#5]
 401 0068 2742     	 tst r7,r4
 402 006a 01D1     	 bne .L39
 403              	.L34:
 404              	.LVL45:
 299:../Dave/Generated/RTC/rtc.c ****   }
 300:../Dave/Generated/RTC/rtc.c **** 
 301:../Dave/Generated/RTC/rtc.c ****   return (status);
 302:../Dave/Generated/RTC/rtc.c **** }
 405              	 .loc 1 302 0 is_stmt 1
 406 006c 03B0     	 add sp,sp,#12
 407              	 
 408 006e F0BD     	 pop {r4,r5,r6,r7,pc}
 409              	.LVL46:
 410              	.L39:
 291:../Dave/Generated/RTC/rtc.c ****     time_val.month = time_val.month - 1U;
 411              	 .loc 1 291 0
 412 0070 013A     	 sub r2,r2,#1
 292:../Dave/Generated/RTC/rtc.c **** 
 413              	 .loc 1 292 0
 414 0072 013B     	 sub r3,r3,#1
 291:../Dave/Generated/RTC/rtc.c ****     time_val.month = time_val.month - 1U;
 415              	 .loc 1 291 0
 416 0074 3240     	 and r2,r6
 292:../Dave/Generated/RTC/rtc.c **** 
 417              	 .loc 1 292 0
 418 0076 3B40     	 and r3,r7
 291:../Dave/Generated/RTC/rtc.c ****     time_val.month = time_val.month - 1U;
 419              	 .loc 1 291 0
 420 0078 B143     	 bic r1,r6
 421 007a 1143     	 orr r1,r2
 292:../Dave/Generated/RTC/rtc.c **** 
 422              	 .loc 1 292 0
 423 007c 1A1C     	 mov r2,r3
 424 007e 231C     	 mov r3,r4
 425 0080 BB43     	 bic r3,r7
 426 0082 1343     	 orr r3,r2
 294:../Dave/Generated/RTC/rtc.c ****   }
 427              	 .loc 1 294 0
 428 0084 6846     	 mov r0,sp
 292:../Dave/Generated/RTC/rtc.c **** 
 429              	 .loc 1 292 0
 430 0086 6B71     	 strb r3,[r5,#5]
 291:../Dave/Generated/RTC/rtc.c ****     time_val.month = time_val.month - 1U;
 431              	 .loc 1 291 0
 432 0088 E970     	 strb r1,[r5,#3]
 294:../Dave/Generated/RTC/rtc.c ****   }
 433              	 .loc 1 294 0
 434 008a FFF7FEFF 	 bl XMC_RTC_SetTime
 435              	.LVL47:
 276:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_TIME_t time_val;
 436              	 .loc 1 276 0
 437 008e 0020     	 mov r0,#0
 294:../Dave/Generated/RTC/rtc.c ****   }
 438              	 .loc 1 294 0
 439 0090 ECE7     	 b .L34
 440              	 .cfi_endproc
 441              	.LFE62:
 443 0092 C046     	 .section .text.RTC_GetTime,"ax",%progbits
 444              	 .align 2
 445              	 .global RTC_GetTime
 446              	 .code 16
 447              	 .thumb_func
 449              	RTC_GetTime:
 450              	.LFB63:
 303:../Dave/Generated/RTC/rtc.c **** 
 304:../Dave/Generated/RTC/rtc.c **** /*
 305:../Dave/Generated/RTC/rtc.c ****  *  This function is used to get RTC time.
 306:../Dave/Generated/RTC/rtc.c ****  */
 307:../Dave/Generated/RTC/rtc.c **** void RTC_GetTime(XMC_RTC_TIME_t *current_time)
 308:../Dave/Generated/RTC/rtc.c **** {
 451              	 .loc 1 308 0
 452              	 .cfi_startproc
 453              	.LVL48:
 454 0000 10B5     	 push {r4,lr}
 455              	.LCFI6:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 4,-8
 458              	 .cfi_offset 14,-4
 459              	 .loc 1 308 0
 460 0002 041C     	 mov r4,r0
 309:../Dave/Generated/RTC/rtc.c ****   XMC_ASSERT("RTC_GetTime: NULL pointer", current_time != NULL);
 310:../Dave/Generated/RTC/rtc.c **** 
 311:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_GetTime(current_time);
 461              	 .loc 1 311 0
 462 0004 FFF7FEFF 	 bl XMC_RTC_GetTime
 463              	.LVL49:
 312:../Dave/Generated/RTC/rtc.c **** 
 313:../Dave/Generated/RTC/rtc.c ****   current_time->days = current_time->days + 1U;
 464              	 .loc 1 313 0
 465 0008 1F21     	 mov r1,#31
 466 000a E378     	 ldrb r3,[r4,#3]
 314:../Dave/Generated/RTC/rtc.c ****   current_time->month = current_time->month + 1U;
 315:../Dave/Generated/RTC/rtc.c **** }
 467              	 .loc 1 315 0
 468              	 
 313:../Dave/Generated/RTC/rtc.c ****   current_time->month = current_time->month + 1U;
 469              	 .loc 1 313 0
 470 000c DA06     	 lsl r2,r3,#27
 471 000e D20E     	 lsr r2,r2,#27
 472 0010 0132     	 add r2,r2,#1
 473 0012 0A40     	 and r2,r1
 474 0014 8B43     	 bic r3,r1
 475 0016 1343     	 orr r3,r2
 476 0018 E370     	 strb r3,[r4,#3]
 314:../Dave/Generated/RTC/rtc.c ****   current_time->month = current_time->month + 1U;
 477              	 .loc 1 314 0
 478 001a 6379     	 ldrb r3,[r4,#5]
 479 001c 1039     	 sub r1,r1,#16
 480 001e 1A07     	 lsl r2,r3,#28
 481 0020 120F     	 lsr r2,r2,#28
 482 0022 0132     	 add r2,r2,#1
 483 0024 0A40     	 and r2,r1
 484 0026 8B43     	 bic r3,r1
 485 0028 1343     	 orr r3,r2
 486 002a 6371     	 strb r3,[r4,#5]
 487              	.LVL50:
 488              	 .loc 1 315 0
 489 002c 10BD     	 pop {r4,pc}
 490              	 .cfi_endproc
 491              	.LFE63:
 493 002e C046     	 .section .text.RTC_SetAlarmTime,"ax",%progbits
 494              	 .align 2
 495              	 .global RTC_SetAlarmTime
 496              	 .code 16
 497              	 .thumb_func
 499              	RTC_SetAlarmTime:
 500              	.LFB64:
 316:../Dave/Generated/RTC/rtc.c **** 
 317:../Dave/Generated/RTC/rtc.c **** /*
 318:../Dave/Generated/RTC/rtc.c ****  *  This function is used to set Alarm time.
 319:../Dave/Generated/RTC/rtc.c ****  */
 320:../Dave/Generated/RTC/rtc.c **** RTC_STATUS_t RTC_SetAlarmTime(XMC_RTC_ALARM_t *alarm)
 321:../Dave/Generated/RTC/rtc.c **** {
 501              	 .loc 1 321 0
 502              	 .cfi_startproc
 503              	.LVL51:
 504 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 505              	.LCFI7:
 506              	 .cfi_def_cfa_offset 20
 507              	 .cfi_offset 4,-20
 508              	 .cfi_offset 5,-16
 509              	 .cfi_offset 6,-12
 510              	 .cfi_offset 7,-8
 511              	 .cfi_offset 14,-4
 512 0002 83B0     	 sub sp,sp,#12
 513              	.LCFI8:
 514              	 .cfi_def_cfa_offset 32
 322:../Dave/Generated/RTC/rtc.c ****   RTC_STATUS_t status = RTC_STATUS_SUCCESS;
 323:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_ALARM_t alarm_val;
 324:../Dave/Generated/RTC/rtc.c **** 
 325:../Dave/Generated/RTC/rtc.c ****   XMC_ASSERT("RTC_SetAlarmTime: NULL pointer", alarm != NULL);
 326:../Dave/Generated/RTC/rtc.c **** 
 327:../Dave/Generated/RTC/rtc.c ****   /* copy to local structure to keep data safe */
 328:../Dave/Generated/RTC/rtc.c ****   alarm_val.year = alarm->year;
 515              	 .loc 1 328 0
 516 0004 6A46     	 mov r2,sp
 329:../Dave/Generated/RTC/rtc.c ****   alarm_val.month = alarm->month;
 517              	 .loc 1 329 0
 518 0006 0F27     	 mov r7,#15
 519 0008 6946     	 mov r1,sp
 330:../Dave/Generated/RTC/rtc.c ****   alarm_val.days = alarm->days;
 520              	 .loc 1 330 0
 521 000a 1F26     	 mov r6,#31
 328:../Dave/Generated/RTC/rtc.c ****   alarm_val.month = alarm->month;
 522              	 .loc 1 328 0
 523 000c C388     	 ldrh r3,[r0,#6]
 524 000e D380     	 strh r3,[r2,#6]
 329:../Dave/Generated/RTC/rtc.c ****   alarm_val.month = alarm->month;
 525              	 .loc 1 329 0
 526 0010 4379     	 ldrb r3,[r0,#5]
 527 0012 5279     	 ldrb r2,[r2,#5]
 528 0014 1B07     	 lsl r3,r3,#28
 529 0016 1B0F     	 lsr r3,r3,#28
 530 0018 BA43     	 bic r2,r7
 531 001a 1A43     	 orr r2,r3
 532 001c 4A71     	 strb r2,[r1,#5]
 533              	 .loc 1 330 0
 534 001e C978     	 ldrb r1,[r1,#3]
 331:../Dave/Generated/RTC/rtc.c ****   alarm_val.hours = alarm->hours;
 535              	 .loc 1 331 0
 536 0020 8478     	 ldrb r4,[r0,#2]
 330:../Dave/Generated/RTC/rtc.c ****   alarm_val.days = alarm->days;
 537              	 .loc 1 330 0
 538 0022 B143     	 bic r1,r6
 539 0024 8C46     	 mov ip,r1
 540              	 .loc 1 331 0
 541 0026 6946     	 mov r1,sp
 542 0028 3440     	 and r4,r6
 543 002a 251C     	 mov r5,r4
 544 002c 8C78     	 ldrb r4,[r1,#2]
 330:../Dave/Generated/RTC/rtc.c ****   alarm_val.days = alarm->days;
 545              	 .loc 1 330 0
 546 002e C278     	 ldrb r2,[r0,#3]
 547              	 .loc 1 331 0
 548 0030 B443     	 bic r4,r6
 549 0032 2C43     	 orr r4,r5
 550 0034 8C70     	 strb r4,[r1,#2]
 332:../Dave/Generated/RTC/rtc.c ****   alarm_val.minutes = alarm->minutes;
 551              	 .loc 1 332 0
 552 0036 3F21     	 mov r1,#63
 553 0038 4478     	 ldrb r4,[r0,#1]
 333:../Dave/Generated/RTC/rtc.c ****   alarm_val.seconds = alarm->seconds;
 554              	 .loc 1 333 0
 555 003a 0078     	 ldrb r0,[r0]
 556              	.LVL52:
 332:../Dave/Generated/RTC/rtc.c ****   alarm_val.minutes = alarm->minutes;
 557              	 .loc 1 332 0
 558 003c 0C40     	 and r4,r1
 559 003e 251C     	 mov r5,r4
 560 0040 6C46     	 mov r4,sp
 561 0042 6478     	 ldrb r4,[r4,#1]
 562              	 .loc 1 333 0
 563 0044 0840     	 and r0,r1
 332:../Dave/Generated/RTC/rtc.c ****   alarm_val.minutes = alarm->minutes;
 564              	 .loc 1 332 0
 565 0046 8C43     	 bic r4,r1
 566 0048 2C43     	 orr r4,r5
 567 004a 6D46     	 mov r5,sp
 568 004c 6C70     	 strb r4,[r5,#1]
 569              	 .loc 1 333 0
 570 004e 041C     	 mov r4,r0
 571 0050 2878     	 ldrb r0,[r5]
 330:../Dave/Generated/RTC/rtc.c ****   alarm_val.hours = alarm->hours;
 572              	 .loc 1 330 0
 573 0052 D206     	 lsl r2,r2,#27
 574              	 .loc 1 333 0
 575 0054 8843     	 bic r0,r1
 334:../Dave/Generated/RTC/rtc.c **** 
 335:../Dave/Generated/RTC/rtc.c ****   if ((alarm_val.days != 0U) && (alarm_val.month != 0U))
 576              	 .loc 1 335 0
 577 0056 6146     	 mov r1,ip
 330:../Dave/Generated/RTC/rtc.c ****   alarm_val.hours = alarm->hours;
 578              	 .loc 1 330 0
 579 0058 D20E     	 lsr r2,r2,#27
 333:../Dave/Generated/RTC/rtc.c **** 
 580              	 .loc 1 333 0
 581 005a 2043     	 orr r0,r4
 582              	 .loc 1 335 0
 583 005c 1143     	 orr r1,r2
 333:../Dave/Generated/RTC/rtc.c **** 
 584              	 .loc 1 333 0
 585 005e 2870     	 strb r0,[r5]
 336:../Dave/Generated/RTC/rtc.c ****   {
 337:../Dave/Generated/RTC/rtc.c ****     alarm_val.days = alarm_val.days - 1U;
 338:../Dave/Generated/RTC/rtc.c ****     alarm_val.month = alarm_val.month - 1U;
 339:../Dave/Generated/RTC/rtc.c **** 
 340:../Dave/Generated/RTC/rtc.c ****     XMC_RTC_SetAlarm(&alarm_val);
 341:../Dave/Generated/RTC/rtc.c ****   }
 342:../Dave/Generated/RTC/rtc.c ****   else
 343:../Dave/Generated/RTC/rtc.c ****   {
 344:../Dave/Generated/RTC/rtc.c ****     status = RTC_STATUS_FAILURE;
 586              	 .loc 1 344 0
 587 0060 0120     	 mov r0,#1
 335:../Dave/Generated/RTC/rtc.c ****   {
 588              	 .loc 1 335 0
 589 0062 0E42     	 tst r6,r1
 590 0064 02D0     	 beq .L42
 335:../Dave/Generated/RTC/rtc.c ****   {
 591              	 .loc 1 335 0 is_stmt 0 discriminator 1
 592 0066 6C79     	 ldrb r4,[r5,#5]
 593 0068 2742     	 tst r7,r4
 594 006a 01D1     	 bne .L47
 595              	.L42:
 596              	.LVL53:
 345:../Dave/Generated/RTC/rtc.c ****   }
 346:../Dave/Generated/RTC/rtc.c **** 
 347:../Dave/Generated/RTC/rtc.c ****   return (status);
 348:../Dave/Generated/RTC/rtc.c **** }
 597              	 .loc 1 348 0 is_stmt 1
 598 006c 03B0     	 add sp,sp,#12
 599              	 
 600 006e F0BD     	 pop {r4,r5,r6,r7,pc}
 601              	.LVL54:
 602              	.L47:
 337:../Dave/Generated/RTC/rtc.c ****     alarm_val.month = alarm_val.month - 1U;
 603              	 .loc 1 337 0
 604 0070 013A     	 sub r2,r2,#1
 338:../Dave/Generated/RTC/rtc.c **** 
 605              	 .loc 1 338 0
 606 0072 013B     	 sub r3,r3,#1
 337:../Dave/Generated/RTC/rtc.c ****     alarm_val.month = alarm_val.month - 1U;
 607              	 .loc 1 337 0
 608 0074 3240     	 and r2,r6
 338:../Dave/Generated/RTC/rtc.c **** 
 609              	 .loc 1 338 0
 610 0076 3B40     	 and r3,r7
 337:../Dave/Generated/RTC/rtc.c ****     alarm_val.month = alarm_val.month - 1U;
 611              	 .loc 1 337 0
 612 0078 B143     	 bic r1,r6
 613 007a 1143     	 orr r1,r2
 338:../Dave/Generated/RTC/rtc.c **** 
 614              	 .loc 1 338 0
 615 007c 1A1C     	 mov r2,r3
 616 007e 231C     	 mov r3,r4
 617 0080 BB43     	 bic r3,r7
 618 0082 1343     	 orr r3,r2
 340:../Dave/Generated/RTC/rtc.c ****   }
 619              	 .loc 1 340 0
 620 0084 6846     	 mov r0,sp
 338:../Dave/Generated/RTC/rtc.c **** 
 621              	 .loc 1 338 0
 622 0086 6B71     	 strb r3,[r5,#5]
 337:../Dave/Generated/RTC/rtc.c ****     alarm_val.month = alarm_val.month - 1U;
 623              	 .loc 1 337 0
 624 0088 E970     	 strb r1,[r5,#3]
 340:../Dave/Generated/RTC/rtc.c ****   }
 625              	 .loc 1 340 0
 626 008a FFF7FEFF 	 bl XMC_RTC_SetAlarm
 627              	.LVL55:
 322:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_ALARM_t alarm_val;
 628              	 .loc 1 322 0
 629 008e 0020     	 mov r0,#0
 340:../Dave/Generated/RTC/rtc.c ****   }
 630              	 .loc 1 340 0
 631 0090 ECE7     	 b .L42
 632              	 .cfi_endproc
 633              	.LFE64:
 635 0092 C046     	 .section .text.RTC_GetAlarmTime,"ax",%progbits
 636              	 .align 2
 637              	 .global RTC_GetAlarmTime
 638              	 .code 16
 639              	 .thumb_func
 641              	RTC_GetAlarmTime:
 642              	.LFB65:
 349:../Dave/Generated/RTC/rtc.c **** 
 350:../Dave/Generated/RTC/rtc.c **** /*
 351:../Dave/Generated/RTC/rtc.c ****  *  This function is used to get Alarm time from XMC.
 352:../Dave/Generated/RTC/rtc.c ****  *  And returns in standard time format.
 353:../Dave/Generated/RTC/rtc.c ****  */
 354:../Dave/Generated/RTC/rtc.c **** void RTC_GetAlarmTime(XMC_RTC_ALARM_t *alarm)
 355:../Dave/Generated/RTC/rtc.c **** {
 643              	 .loc 1 355 0
 644              	 .cfi_startproc
 645              	.LVL56:
 646 0000 10B5     	 push {r4,lr}
 647              	.LCFI9:
 648              	 .cfi_def_cfa_offset 8
 649              	 .cfi_offset 4,-8
 650              	 .cfi_offset 14,-4
 651              	 .loc 1 355 0
 652 0002 041C     	 mov r4,r0
 356:../Dave/Generated/RTC/rtc.c ****   XMC_ASSERT("RTC_GetAlarmTime: NULL pointer", alarm != NULL);
 357:../Dave/Generated/RTC/rtc.c **** 
 358:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_GetAlarm(alarm);
 653              	 .loc 1 358 0
 654 0004 FFF7FEFF 	 bl XMC_RTC_GetAlarm
 655              	.LVL57:
 359:../Dave/Generated/RTC/rtc.c **** 
 360:../Dave/Generated/RTC/rtc.c ****   alarm->days = alarm->days + 1U;
 656              	 .loc 1 360 0
 657 0008 1F21     	 mov r1,#31
 658 000a E378     	 ldrb r3,[r4,#3]
 361:../Dave/Generated/RTC/rtc.c ****   alarm->month = alarm->month + 1U;
 362:../Dave/Generated/RTC/rtc.c **** }
 659              	 .loc 1 362 0
 660              	 
 360:../Dave/Generated/RTC/rtc.c ****   alarm->month = alarm->month + 1U;
 661              	 .loc 1 360 0
 662 000c DA06     	 lsl r2,r3,#27
 663 000e D20E     	 lsr r2,r2,#27
 664 0010 0132     	 add r2,r2,#1
 665 0012 0A40     	 and r2,r1
 666 0014 8B43     	 bic r3,r1
 667 0016 1343     	 orr r3,r2
 668 0018 E370     	 strb r3,[r4,#3]
 361:../Dave/Generated/RTC/rtc.c ****   alarm->month = alarm->month + 1U;
 669              	 .loc 1 361 0
 670 001a 6379     	 ldrb r3,[r4,#5]
 671 001c 1039     	 sub r1,r1,#16
 672 001e 1A07     	 lsl r2,r3,#28
 673 0020 120F     	 lsr r2,r2,#28
 674 0022 0132     	 add r2,r2,#1
 675 0024 0A40     	 and r2,r1
 676 0026 8B43     	 bic r3,r1
 677 0028 1343     	 orr r3,r2
 678 002a 6371     	 strb r3,[r4,#5]
 679              	.LVL58:
 680              	 .loc 1 362 0
 681 002c 10BD     	 pop {r4,pc}
 682              	 .cfi_endproc
 683              	.LFE65:
 685 002e C046     	 .section .text.RTC_GetFlagStatus,"ax",%progbits
 686              	 .align 2
 687              	 .global RTC_GetFlagStatus
 688              	 .code 16
 689              	 .thumb_func
 691              	RTC_GetFlagStatus:
 692              	.LFB66:
 363:../Dave/Generated/RTC/rtc.c **** 
 364:../Dave/Generated/RTC/rtc.c **** /*
 365:../Dave/Generated/RTC/rtc.c ****  *  This function is used to get event status.
 366:../Dave/Generated/RTC/rtc.c ****  */
 367:../Dave/Generated/RTC/rtc.c **** uint32_t RTC_GetFlagStatus(void)
 368:../Dave/Generated/RTC/rtc.c **** {
 693              	 .loc 1 368 0
 694              	 .cfi_startproc
 695 0000 08B5     	 push {r3,lr}
 696              	.LCFI10:
 697              	 .cfi_def_cfa_offset 8
 698              	 .cfi_offset 3,-8
 699              	 .cfi_offset 14,-4
 369:../Dave/Generated/RTC/rtc.c ****   uint32_t event_status;
 370:../Dave/Generated/RTC/rtc.c **** 
 371:../Dave/Generated/RTC/rtc.c ****   event_status = XMC_RTC_GetEventStatus();
 700              	 .loc 1 371 0
 701 0002 FFF7FEFF 	 bl XMC_RTC_GetEventStatus
 702              	.LVL59:
 372:../Dave/Generated/RTC/rtc.c **** 
 373:../Dave/Generated/RTC/rtc.c ****   return (event_status);
 374:../Dave/Generated/RTC/rtc.c **** }
 703              	 .loc 1 374 0
 704              	 
 705 0006 08BD     	 pop {r3,pc}
 706              	 .cfi_endproc
 707              	.LFE66:
 709              	 .global __aeabi_uidivmod
 710              	 .section .text.RTC_Time,"ax",%progbits
 711              	 .align 2
 712              	 .global RTC_Time
 713              	 .code 16
 714              	 .thumb_func
 716              	RTC_Time:
 717              	.LFB67:
 375:../Dave/Generated/RTC/rtc.c **** 
 376:../Dave/Generated/RTC/rtc.c **** /*
 377:../Dave/Generated/RTC/rtc.c ****  *  This function is to get the time in seconds calculated from Epoch time
 378:../Dave/Generated/RTC/rtc.c ****  *  (01/01/1970).
 379:../Dave/Generated/RTC/rtc.c ****  */
 380:../Dave/Generated/RTC/rtc.c **** RTC_STATUS_t RTC_Time(time_t* time_value)
 381:../Dave/Generated/RTC/rtc.c **** {
 718              	 .loc 1 381 0
 719              	 .cfi_startproc
 720              	.LVL60:
 721 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 722              	.LCFI11:
 723              	 .cfi_def_cfa_offset 20
 724              	 .cfi_offset 4,-20
 725              	 .cfi_offset 5,-16
 726              	 .cfi_offset 6,-12
 727              	 .cfi_offset 7,-8
 728              	 .cfi_offset 14,-4
 729 0002 5746     	 mov r7,r10
 730 0004 4E46     	 mov r6,r9
 731 0006 4546     	 mov r5,r8
 732 0008 E0B4     	 push {r5,r6,r7}
 733              	.LCFI12:
 734              	 .cfi_def_cfa_offset 32
 735              	 .cfi_offset 8,-32
 736              	 .cfi_offset 9,-28
 737              	 .cfi_offset 10,-24
 738              	.LBB12:
 739              	.LBB13:
 740              	 .file 3 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc/xmc_rtc.h"
   1:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
   2:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @file xmc_rtc.h
   3:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @date 2015-06-20
   4:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
   5:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @cond
   6:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** ***************************************************************************************************
   7:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
   9:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                                             
  12:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 
  18:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 
  21:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
  36:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Change History
  37:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * --------------
  38:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
  39:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 2015-02-20:
  40:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *     - Initial
  41:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *      
  42:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 2015-05-20:
  43:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *     - Documentation updates <br>
  44:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *     - In xmc1_rtc file XMC_RTC_Init function
  45:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *       is modified by adding the RTC running condition check
  46:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *   
  47:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 2015-06-20:
  48:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @endcond 
  50:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
  51:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
  52:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  53:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #ifndef XMC_RTC_H
  54:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #define XMC_RTC_H
  55:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  56:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**************************************************************************************************
  57:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * HEADER FILES
  58:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  **************************************************************************************************
  59:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  60:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #include <xmc_common.h>
  61:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #include <time.h>
  62:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  63:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
  64:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
  65:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @addtogroup XMClib XMC Peripheral Library
  66:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @{
  67:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
  68:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  69:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
  70:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @addtogroup RTC
  71:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @brief RTC driver for XMC microcontroller family.
  72:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
  73:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Real-time clock (RTC) is a clock that keeps track of the current time. Precise
  74:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * real time keeping is with a 32.768 KHz external crystal clock or a 32.768 KHz
  75:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * high precision internal clock. It provides a periodic time based interrupt and
  76:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * a programmable alarm interrupt on time match. It also supports wakeup from
  77:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * hibernate.
  78:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
  79:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The RTC low level driver provides functions to configure and initialize the RTC
  80:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * hardware peripheral. 
  81:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 
  82:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @{
  83:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
  84:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  85:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**************************************************************************************************
  86:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * MACROS
  87:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  **************************************************************************************************
  88:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  89:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**************************************************************************************************
  90:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * ENUMS
  91:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  **************************************************************************************************
  92:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
  93:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
  94:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *  Status return values for RTC low level driver
  95:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
  96:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** typedef enum XMC_RTC_STATUS
  97:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
  98:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_STATUS_OK    = 0U, /**< Operation successful */
  99:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_STATUS_ERROR = 1U, /**< Operation unsuccessful */
 100:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_STATUS_BUSY  = 2U  /**< Busy with a previous request */
 101:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** } XMC_RTC_STATUS_t;
 102:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 103:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 104:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Events which enables interrupt request generation
 105:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
 106:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** typedef enum XMC_RTC_EVENT
 107:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 108:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_SECONDS = RTC_MSKSR_MPSE_Msk, /**< Mask value to enable an event on period
 109:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_MINUTES = RTC_MSKSR_MPMI_Msk, /**< Mask value to enable an event on period
 110:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_HOURS   = RTC_MSKSR_MPHO_Msk, /**< Mask value to enable an event on period
 111:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_DAYS    = RTC_MSKSR_MPDA_Msk, /**< Mask value to enable an event on period
 112:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_MONTHS  = RTC_MSKSR_MPMO_Msk, /**< Mask value to enable an event on period
 113:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_EVENT_PERIODIC_YEARS   = RTC_MSKSR_MPYE_Msk, /**< Mask value to enable an event on period
 114:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_EVENT_ALARM            = RTC_MSKSR_MAI_Msk   /**< Mask value to enable an event on period
 115:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** } XMC_RTC_EVENT_t;
 116:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 117:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 118:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *  Months used to program the date  
 119:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
 120:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** typedef enum XMC_RTC_MONTH
 121:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 122:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_JANUARY   = 0U, 
 123:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_FEBRUARY  = 1U,     
 124:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_MARCH     = 2U,         
 125:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_APRIL     = 3U,       
 126:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_MAY       = 4U,         
 127:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_JUNE      = 5U,         
 128:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_JULY      = 6U,           
 129:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_AUGUST    = 7U,         
 130:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_SEPTEMBER = 8U,    
 131:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_OCTOBER   = 9U,      
 132:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_NOVEMBER  = 10U,     
 133:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_MONTH_DECEMBER  = 11U     
 134:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** } XMC_RTC_MONTH_t;
 135:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 136:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 137:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *  Week days used program the date 
 138:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
 139:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** typedef enum XMC_RTC_WEEKDAY
 140:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 141:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_SUNDAY    = 0U, 
 142:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_MONDAY    = 1U,      
 143:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_TUESDAY   = 2U,      
 144:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_WEDNESDAY = 3U,    
 145:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_THURSDAY  = 4U,     
 146:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_FRIDAY    = 5U,       
 147:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_WEEKDAY_SATURDAY  = 6U      
 148:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** } XMC_RTC_WEEKDAY_t;
 149:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 150:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**************************************************************************************************
 151:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * DATA STRUCTURES
 152:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  **************************************************************************************************
 153:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /*Anonymous structure/union guard start*/
 154:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #if defined(__CC_ARM)
 155:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   #pragma push
 156:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   #pragma anon_unions
 157:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #elif defined(__TASKING__)
 158:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   #pragma warning 586
 159:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #endif
 160:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 161:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 162:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 163:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Alarm time values of RTC  <br>
 164:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 165:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The structure presents a convenient way to set/obtain the 
 166:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * alarm time values for seconds, minutes, hours, days, month and year of RTC. 
 167:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The XMC_RTC_SetAlarm() and XMC_RTC_GetAlarm() can be
 168:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * used to populate the structure with the alarm time value of
 169:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * RTC 
 170:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */ 
 171:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** typedef struct XMC_RTC_ALARM
 172:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 173:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   union
 174:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   {
 175:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  uint32_t raw0;
 176:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  struct
 177:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  {
 178:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t seconds  : 6; /**< Alarm seconds compare value (0-59: Above this causes this bitfield
 179:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 2; 
 180:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t minutes  : 6; /**< Alarm minutes compare value (0-59: Above this causes this bitfield
 181:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 2;
 182:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t hours    : 5; /**< Alarm hours compare value   (0-23: Above this causes this bitfield
 183:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 3;
 184:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t days     : 5; /**< Alarm days compare value (0-Actual days of month: Above this cause
 185:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 3;
 186:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  };
 187:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   };
 188:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 189:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   union
 190:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   {
 191:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****     uint32_t raw1;
 192:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  struct
 193:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  {
 194:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 8;
 195:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t month    : 4; /**< Alarm month compare value (0-11: Above this causes this bitfield t
 196:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 4;
 197:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t year     : 16; /**< Alarm year compare value */ 
 198:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  };
 199:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   };
 200:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** } XMC_RTC_ALARM_t;
 201:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 202:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 203:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Time values of RTC  <br>
 204:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 205:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The structure presents a convenient way to set/obtain the 
 206:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * time values for seconds, minutes, hours, days, month and year of RTC. 
 207:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The XMC_RTC_SetTime() and XMC_RTC_GetTime() can be
 208:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * used to populate the structure with the time value of
 209:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * RTC 
 210:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */ 
 211:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** typedef struct XMC_RTC_TIME
 212:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 213:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   union
 214:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   {
 215:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****     uint32_t raw0;
 216:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  struct
 217:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  {
 218:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t seconds  : 6; /**< Seconds time value (0-59: Above this causes this bitfield to be se
 219:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 2; 
 220:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t minutes  : 6; /**< Minutes time value (0-59: Above this causes this bitfield to be se
 221:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 2;
 222:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t hours    : 5; /**< Hours time value   (0-23: Above this causes this bitfield to be se
 223:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 3;
 224:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t days     : 5; /**< Days time value (0-Actual days of month: Above this causes this bi
 225:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t          : 3;
 226:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  };
 227:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   };
 228:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 229:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   union
 230:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   {
 231:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****     uint32_t raw1;
 232:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  struct
 233:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	  {
 234:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t daysofweek  : 3; /**< Days of week time value (0-6: Above this causes this bitfield t
 235:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t             : 5;
 236:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t month       : 4; /**< Month time value       (0-11: Above this causes this bitfield t
 237:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t             : 4;
 238:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	    uint32_t year        : 16; /**< Year time value */
 239:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 	 };
 240:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   };
 241:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** } XMC_RTC_TIME_t;
 242:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /*Anonymous structure/union guard end*/
 243:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #if defined(__CC_ARM)
 244:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   #pragma pop
 245:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #elif defined(__TASKING__)
 246:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   #pragma warning restore
 247:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #endif
 248:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 249:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 250:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * RTC initialization with time, alarm and clock divider(prescaler) configurations <br>
 251:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 252:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The structure presents a convenient way to set/obtain the time and alarm configurations  
 253:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * for RTC. The XMC_RTC_Init() can be used to populate the structure with the time and alarm
 254:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * values of RTC.
 255:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */  
 256:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** typedef struct XMC_RTC_CONFIG
 257:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 258:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_TIME_t    time;
 259:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   XMC_RTC_ALARM_t   alarm;
 260:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   uint16_t          prescaler;
 261:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** } XMC_RTC_CONFIG_t;
 262:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 263:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /*******************************************************************************
 264:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * EXTENSIONS
 265:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *******************************************************************************/
 266:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 267:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #if UC_FAMILY == XMC1
 268:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #include "xmc1_rtc.h"
 269:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #endif
 270:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 271:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #if UC_FAMILY == XMC4
 272:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #include "xmc4_rtc.h"
 273:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #endif
 274:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 275:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /*******************************************************************************
 276:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * API PROTOTYPES
 277:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  **************************************************************************************************
 278:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 279:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #ifdef __cplusplus
 280:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** extern "C" {
 281:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** #endif
 282:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 283:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 284:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param config Constant pointer to a constant ::XMC_RTC_CONFIG_t structure containing the
 285:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *               time, alarm time and clock divider(prescaler) configuration. 
 286:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return XMC_RTC_STATUS_t Always returns XMC_RTC_STATUS_OK (It contains only register assignment 
 287:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 288:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 289:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Initialize the RTC peripheral <br>
 290:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 291:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par \if XMC4
 292:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function enables the hibernate domain for accessing RTC peripheral registers, configures 
 293:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * internal clock divider, time and alarm values by writing to the CTR.DIV, TIM0, TIM1, ATIM0 and
 294:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * ATIM1 registers.
 295:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 296:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 297:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \if XMC1
 298:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function ungates the peripheral clock for RTC, configures 
 299:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * internal clock divider, time and alarm values by writing to the CTR.DIV, TIM0, TIM1, ATIM0 and
 300:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * ATIM1 registers.
 301:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 302:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
 303:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** XMC_RTC_STATUS_t XMC_RTC_Init(const XMC_RTC_CONFIG_t *const config);
 304:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 305:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /** 
 306:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 307:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 308:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 309:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Enables RTC peripheral for programming its registers <br>
 310:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 311:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par \if XMC4
 312:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Enables the hibernate domain for accessing RTC peripheral registers.
 313:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 314:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 315:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \if XMC1
 316:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Ungates the peripheral clock.
 317:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 318:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 319:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 320:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_Disable(), XMC_SCU_RESET_DeassertPeripheralReset()
 321:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */ 
 322:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_Enable(void);
 323:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 324:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /** 
 325:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 326:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 327:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 328:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Disables RTC peripheral for programming its registers <br>
 329:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 330:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par \if XMC4
 331:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Empty function (Hibernate domain is not disabled).
 332:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 333:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 334:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \if XMC1
 335:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Gates the peripheral clock.
 336:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 337:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 338:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 339:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_SCU_RESET_AssertPeripheralReset()
 340:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */ 
 341:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_Disable(void);
 342:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 343:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /** 
 344:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 345:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 346:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 347:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Checks RTC peripheral is enabled for programming its registers <br>
 348:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 349:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par \if XMC4
 350:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Checks the hibernate domain is enabled or not.
 351:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 352:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 353:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \if XMC1
 354:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Checks peripheral clock is ungated or not.
 355:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \endif
 356:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 357:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 358:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_RTC_Disable(), XMC_SCU_RESET_DeassertPeripheralReset(),
 359:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_SCU_RESET_AssertPeripheralReset()
 360:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */ 
 361:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** bool XMC_RTC_IsEnabled(void);
 362:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  
 363:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 364:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 365:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 366:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 367:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Enables RTC peripheral to start counting time <br>
 368:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 369:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 370:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function starts the RTC for counting time by setting 
 371:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * CTR.ENB bit. Before starting the RTC, it should not be in
 372:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * running mode and also hibernate domain should be enabled.
 373:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 374:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 375:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_RTC_Stop(), XMC_SCU_RESET_DeassertPeripheralReset()
 376:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */  
 377:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_Start(void);
 378:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 379:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 380:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 381:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 382:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description</b><br>
 383:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Disables RTC peripheral to start counting time <br>
 384:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 385:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 386:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function stops the RTC for counting time by resetting 
 387:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * CTR.ENB. Before stopping the RTC, hibernate domain should be enabled.
 388:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 389:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 390:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_Enable(), XMC_RTC_Start(), XMC_SCU_RESET_AssertPeripheralReset()
 391:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */  
 392:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_Stop(void);
 393:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   
 394:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 395:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param prescaler Prescaler value to be set                 
 396:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 397:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 398:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 399:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Sets the RTC module prescaler value <br>
 400:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 401:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 402:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function sets the CTR.DIV bitfield to configure the prescalar value. 
 403:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The default value for the prescalar with the 32.768kHz crystal (or the internal clock) 
 404:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * is 7FFFH for a time interval of 1 sec. Before setting the prescaler value RTC should be
 405:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * in stop mode and hibernate domain should be enabled.
 406:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 407:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 408:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_Stop(), XMC_RTC_Enable(), XMC_RTC_GetPrescaler()
 409:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */   
 410:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_SetPrescaler(uint16_t prescaler);
 411:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 412:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 413:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 414:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 415:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 416:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Gets the RTC module prescaler value <br>
 417:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 418:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 419:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function reads the CTR.DIV bitfield to get the prescalar value. The default value 
 420:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * for the prescalar with the 32.768kHz crystal (or the internal clock) is 7FFFH for a 
 421:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * time interval of 1 sec.
 422:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 423:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 424:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_SetPrescaler()
 425:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */   
 426:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** __STATIC_INLINE uint32_t XMC_RTC_GetPrescaler(void)
 427:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 428:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   return (uint32_t)(((uint32_t)RTC->CTR & (uint32_t)RTC_CTR_DIV_Msk) >> (uint32_t)RTC_CTR_DIV_Pos);
 429:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** }
 430:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 432:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param timeval Contstant pointer to a constant ::XMC_RTC_TIME_t structure containing the
 433:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                time parameters seconds, minutes, hours, days, daysofweek, month and year.     
 434:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Sets the RTC module time values <br>
 438:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 439:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function sets the TIM0, TIM1 registers with time values.
 441:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The values can only be written when RTC is disabled.
 442:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_TIME_t for the valid range of time value parameters. <br>
 443:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 444:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 445:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_GetTime(), XMC_RTC_Stop() 
 446:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */    
 447:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const timeval);
 448:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 449:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 450:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param time Pointer to a constant ::XMC_RTC_TIME_t structure containing the time parameters
 451:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *             seconds, minutes, hours, days, daysofweek, month and year. 
 452:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 453:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 454:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 455:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Gets the RTC module time value <br>
 456:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 457:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 458:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function gets the time values from TIM0, TIM1 registers. 
 459:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_TIME_t for the valid range of time value parameters. <br>
 460:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 461:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 462:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_SetTime()
 463:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */    
 464:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time);
 465:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 466:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 467:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param stdtime Pointer to a constant ::tm structure containing the time parameters seconds,
 468:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                minutes, hours, days, daysofweek, month, year(since 1900) and days in a   
 469:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                year in standard format.           
 470:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 471:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 472:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 473:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Gets the RTC module time value in standard format <br>
 474:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 475:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 476:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function gets the time values from TIM0, TIM1 registers. 
 477:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_TIME_t for the valid range of time value parameters. <br>
 478:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * For days the valid range is (1 - Actual days of month), year (since 1900) and 
 479:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * daysinyear (0 -365).
 480:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 481:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 482:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_SetTime(), XMC_RTC_GetTime()
 483:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */     
 484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime);
 485:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 486:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 487:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param alarm Constant pointer to a constant ::XMC_RTC_ALARM_t structure containing the
 488:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                alarm time parameters alarm seconds, alarm minutes, alarm hours, alarm days, 
 489:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                alarm daysofweek, alarm month and alarm year.           
 490:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 491:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 492:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 493:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Sets the RTC module alarm time value <br>
 494:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 495:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 496:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function sets the ATIM0, ATIM1 registers with alarm time values. 
 497:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_ALARM_t for the valid range of alarm time value parameters. <br>
 498:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 499:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 500:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_GetAlarm()
 501:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */     
 502:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm);
 503:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 504:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param alarm Pointer to a constant ::XMC_RTC_ALARM_t structure containing the
 506:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *             time parameters alarm seconds, alarm minutes, alarm hours, alarm days, 
 507:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *             alarm daysofweek, alarm month and alarm year.           
 508:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 509:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 510:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 511:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Gets the RTC module alarm time value <br>
 512:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 513:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 514:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function gets the alarm time values from ATIM0, ATIM1 registers. 
 515:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_ALARM_t for the valid range of alarm time value parameters. <br>
 516:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 517:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 518:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_SetAlarm()
 519:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */    
 520:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm);
 521:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 522:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 523:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param stdtime Pointer to a constant ::tm structure containing the time parameters alarm seconds
 524:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                alarm minutes, alarm hours, alarm days, alarm daysofweek, alarm month,  
 525:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *                alarm year(since 1900) and alarm days in a year in standard format.           
 526:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 527:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 528:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 529:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Gets the RTC module alarm time value in standard format <br>
 530:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 531:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 532:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function gets the alarm time values from ATIM0, ATIM1 registers. 
 533:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * See the structure ::XMC_RTC_ALARM_t for the valid range of alarm time value parameters. <br>
 534:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * For days the valid range is (1 - Actual days of month), year (since 1900) and 
 535:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * daysinyear (0 -365).
 536:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 537:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 538:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_SetAlarm(), XMC_RTC_GetAlarm()
 539:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */     
 540:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime);
 541:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 542:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 543:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param event A valid RTC event (::XMC_RTC_EVENT_t) or a valid combination of
 544:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *              logically OR'd events
 545:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 546:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 547:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 548:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Enable RTC periodic and alarm event(s) <br>
 549:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 550:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 551:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function sets the bitfields of MSKSR register to enable interrupt generation 
 552:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * for requested RTC event(s). 
 553:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Setting the masking value for the event(s) containing in the ::XMC_RTC_EVENT_t leads 
 554:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * to a generation of the interrupt.
 555:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 556:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 557:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_DisableEvent()
 558:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
 559:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_EnableEvent(const uint32_t event);
 560:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 561:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 562:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param event A valid RTC event (::XMC_RTC_EVENT_t) or a valid combination of
 563:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *              logically OR'd events
 564:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 565:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 566:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 567:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Disable RTC periodic and alarm event(s) <br>
 568:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 569:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 570:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function resets the bitfields of MSKSR register to disable interrupt generation 
 571:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * for requested RTC event(s). 
 572:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Resetting the masking value for the the event(s) containing in the ::XMC_RTC_EVENT_t blocks 
 573:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * the generation of the interrupt.
 574:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 
 575:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 576:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_EnableEvent()
 577:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
 578:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_DisableEvent(const uint32_t event);
 579:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 580:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 581:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @param event A valid RTC event (::XMC_RTC_EVENT_t) or a valid combination of
 582:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *              logically OR'd events
 583:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 584:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 585:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 586:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Clears periodic and alarm event(s) status <br>
 587:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 588:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 589:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function sets the bitfields of CLRSR register to clear status bits in RAWSTAT and STSSR regi
 590:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Setting the value for the the RTC event(s) containing in the ::XMC_RTC_EVENT_t clears the 
 591:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * corresponding status bits in RAWSTAT and STSSR registers.
 592:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 
 593:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 594:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_GetEventStatus()
 595:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */ 
 596:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** void XMC_RTC_ClearEvent(const uint32_t event);
 597:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 598:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 599:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return None
 600:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 601:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 602:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Gets the RTC periodic and alarm event(s) status <br>
 603:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 604:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 605:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function reads the bitfields of STSSR register 
 606:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * to get the status of RTC events. 
 607:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Reading the value of the register STSSR gives the status of the event(s) containing in the ::XMC
 608:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * 
 609:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 610:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_ClearEvent()
 611:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */
 612:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** uint32_t XMC_RTC_GetEventStatus(void);
 613:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** 
 614:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** /**
 615:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * @return bool true if RTC is running
 616:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *              false if RTC is not running
 617:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 618:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Description: </b><br>
 619:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * Checks the running status of the RTC <br>
 620:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 621:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par
 622:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * The function reads the bitfield ENB of CTR register 
 623:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * to get the running status of RTC. 
 624:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  *
 625:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * \par<b>Related APIs:</b><br>
 626:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  * XMC_RTC_Start(), XMC_RTC_Stop()
 627:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****  */ 
 628:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** __STATIC_INLINE bool XMC_RTC_IsRunning(void)
 629:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h **** {
 630:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_rtc.h ****   return (bool)(RTC->CTR & RTC_CTR_ENB_Msk);
 741              	 .loc 3 630 0
 742 000a 424B     	 ldr r3,.L88
 743              	.LBE13:
 744              	.LBE12:
 745              	 .loc 1 381 0
 746 000c 82B0     	 sub sp,sp,#8
 747              	.LCFI13:
 748              	 .cfi_def_cfa_offset 40
 749              	.LBB15:
 750              	.LBB14:
 751              	 .loc 3 630 0
 752 000e 5A68     	 ldr r2,[r3,#4]
 753              	.LBE14:
 754              	.LBE15:
 382:../Dave/Generated/RTC/rtc.c ****   uint32_t elapsedyear;
 383:../Dave/Generated/RTC/rtc.c ****   uint32_t elapsedmonth;
 384:../Dave/Generated/RTC/rtc.c ****   uint32_t elapseddays;
 385:../Dave/Generated/RTC/rtc.c ****   uint32_t elapsedseconds;
 386:../Dave/Generated/RTC/rtc.c **** 
 387:../Dave/Generated/RTC/rtc.c ****   RTC_STATUS_t status;
 388:../Dave/Generated/RTC/rtc.c ****   XMC_RTC_TIME_t curr_time;
 389:../Dave/Generated/RTC/rtc.c ****   
 390:../Dave/Generated/RTC/rtc.c ****   XMC_ASSERT("RTC_Time: NULL pointer", time_value != NULL);
 391:../Dave/Generated/RTC/rtc.c **** 
 392:../Dave/Generated/RTC/rtc.c ****   /*Check if RTC module is enabled and no NULL pointer*/
 393:../Dave/Generated/RTC/rtc.c ****   if (true == XMC_RTC_IsRunning())
 394:../Dave/Generated/RTC/rtc.c ****   {
 395:../Dave/Generated/RTC/rtc.c ****     /* Read values from TIM0 and TIM1 registers */
 396:../Dave/Generated/RTC/rtc.c ****     XMC_RTC_GetTime(&curr_time);
 397:../Dave/Generated/RTC/rtc.c **** 
 398:../Dave/Generated/RTC/rtc.c ****     /*Count number of Days for Elapsed Years since Epoch*/
 399:../Dave/Generated/RTC/rtc.c ****     elapseddays = ((uint32_t)curr_time.year - RTC_EPOCH_YEAR) * RTC_DAYS_IN_AN_YEAR;
 400:../Dave/Generated/RTC/rtc.c **** 
 401:../Dave/Generated/RTC/rtc.c ****     /* Add the number of days to be adjusted for leap years,
 402:../Dave/Generated/RTC/rtc.c ****        start from previous year and check backward */
 403:../Dave/Generated/RTC/rtc.c ****     for (elapsedyear = ((uint32_t)curr_time.year - 1U); elapsedyear>= (uint32_t)1970; elapsedyear--
 404:../Dave/Generated/RTC/rtc.c ****     {
 405:../Dave/Generated/RTC/rtc.c ****       if (RTC_lleapyear((uint16_t)elapsedyear))
 406:../Dave/Generated/RTC/rtc.c ****       {
 407:../Dave/Generated/RTC/rtc.c ****         elapseddays++;
 408:../Dave/Generated/RTC/rtc.c ****       }
 409:../Dave/Generated/RTC/rtc.c ****     }
 410:../Dave/Generated/RTC/rtc.c ****     /*If current year is leap year add 1 only if March or later*/
 411:../Dave/Generated/RTC/rtc.c ****     if (RTC_lleapyear(curr_time.year))
 412:../Dave/Generated/RTC/rtc.c ****     {
 413:../Dave/Generated/RTC/rtc.c ****       if(curr_time.month > 2U)
 414:../Dave/Generated/RTC/rtc.c ****       {
 415:../Dave/Generated/RTC/rtc.c ****         elapseddays++;
 416:../Dave/Generated/RTC/rtc.c ****       }
 417:../Dave/Generated/RTC/rtc.c ****     }
 418:../Dave/Generated/RTC/rtc.c **** 
 419:../Dave/Generated/RTC/rtc.c ****     /*Add number of Days from Elapsed months from current year*/
 420:../Dave/Generated/RTC/rtc.c ****     for (elapsedmonth = (curr_time.month); elapsedmonth != 0U; elapsedmonth--)
 421:../Dave/Generated/RTC/rtc.c ****     {
 422:../Dave/Generated/RTC/rtc.c ****       elapseddays += RTC_DAYS_IN_MONTH[elapsedmonth];
 423:../Dave/Generated/RTC/rtc.c ****     }
 424:../Dave/Generated/RTC/rtc.c **** 
 425:../Dave/Generated/RTC/rtc.c ****     /*Add Elapsed days from current month*/
 426:../Dave/Generated/RTC/rtc.c ****     elapseddays += curr_time.days;
 427:../Dave/Generated/RTC/rtc.c **** 
 428:../Dave/Generated/RTC/rtc.c ****     /*Accumulate the total seconds for ElapsedDays*/
 429:../Dave/Generated/RTC/rtc.c ****     elapsedseconds = (elapseddays * RTC_SECONDS_IN_A_DAY);
 430:../Dave/Generated/RTC/rtc.c **** 
 431:../Dave/Generated/RTC/rtc.c ****     /*Add seconds for current hour, minute and seconds*/
 432:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += ((uint32_t)curr_time.hours * RTC_SECONDS_IN_AN_HOUR);
 433:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += ((uint32_t)curr_time.minutes * RTC_SECONDS_IN_A_MINUTE);
 434:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += (uint32_t)curr_time.seconds;
 435:../Dave/Generated/RTC/rtc.c **** 
 436:../Dave/Generated/RTC/rtc.c ****     *time_value = (time_t)elapsedseconds;
 437:../Dave/Generated/RTC/rtc.c ****      status = RTC_STATUS_SUCCESS;
 438:../Dave/Generated/RTC/rtc.c ****   }
 439:../Dave/Generated/RTC/rtc.c ****   else
 440:../Dave/Generated/RTC/rtc.c ****   {
 441:../Dave/Generated/RTC/rtc.c ****     status = RTC_STATUS_FAILURE;
 755              	 .loc 1 441 0
 756 0010 0123     	 mov r3,#1
 393:../Dave/Generated/RTC/rtc.c ****   {
 757              	 .loc 1 393 0
 758 0012 D207     	 lsl r2,r2,#31
 759 0014 06D4     	 bmi .L86
 760              	.LVL61:
 761              	.L75:
 442:../Dave/Generated/RTC/rtc.c ****   }
 443:../Dave/Generated/RTC/rtc.c ****   return (status);
 444:../Dave/Generated/RTC/rtc.c **** }
 762              	 .loc 1 444 0
 763 0016 181C     	 mov r0,r3
 764 0018 02B0     	 add sp,sp,#8
 765              	 
 766 001a 1CBC     	 pop {r2,r3,r4}
 767 001c 9046     	 mov r8,r2
 768 001e 9946     	 mov r9,r3
 769 0020 A246     	 mov r10,r4
 770 0022 F0BD     	 pop {r4,r5,r6,r7,pc}
 771              	.LVL62:
 772              	.L86:
 773 0024 8046     	 mov r8,r0
 396:../Dave/Generated/RTC/rtc.c **** 
 774              	 .loc 1 396 0
 775 0026 6846     	 mov r0,sp
 776              	.LVL63:
 777 0028 FFF7FEFF 	 bl XMC_RTC_GetTime
 778              	.LVL64:
 399:../Dave/Generated/RTC/rtc.c **** 
 779              	 .loc 1 399 0
 780 002c 6B46     	 mov r3,sp
 781 002e 6E24     	 mov r4,#110
 782 0030 DB88     	 ldrh r3,[r3,#6]
 783 0032 FF34     	 add r4,r4,#255
 784 0034 9946     	 mov r9,r3
 785 0036 5C43     	 mul r4,r3
 786 0038 374B     	 ldr r3,.L88+4
 787 003a 9C46     	 mov ip,r3
 403:../Dave/Generated/RTC/rtc.c ****     {
 788              	 .loc 1 403 0
 789 003c 4B46     	 mov r3,r9
 790 003e 5E1E     	 sub r6,r3,#1
 791 0040 364B     	 ldr r3,.L88+8
 399:../Dave/Generated/RTC/rtc.c **** 
 792              	 .loc 1 399 0
 793 0042 6444     	 add r4,r4,ip
 794              	.LVL65:
 403:../Dave/Generated/RTC/rtc.c ****     {
 795              	 .loc 1 403 0
 796 0044 9E42     	 cmp r6,r3
 797 0046 19D9     	 bls .L52
 798              	.LBB16:
 799              	.LBB17:
 445:../Dave/Generated/RTC/rtc.c **** 	
 446:../Dave/Generated/RTC/rtc.c **** /* This function returns 1 if it is leap year otherwise 0.*/
 447:../Dave/Generated/RTC/rtc.c **** uint8_t RTC_lleapyear(uint16_t year)
 448:../Dave/Generated/RTC/rtc.c **** {
 449:../Dave/Generated/RTC/rtc.c ****   uint8_t valid = 0U;
 450:../Dave/Generated/RTC/rtc.c **** 
 451:../Dave/Generated/RTC/rtc.c ****   if ((((year) % 400U) == 0U) || ((((year) % 100U) != 0U) &&
 452:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 800              	 .loc 1 452 0
 801 0048 0322     	 mov r2,#3
 802              	.LBE17:
 803              	.LBE16:
 403:../Dave/Generated/RTC/rtc.c ****     {
 804              	 .loc 1 403 0
 805 004a 1D1C     	 mov r5,r3
 806              	.LBB20:
 807              	.LBB18:
 808              	 .loc 1 452 0
 809 004c 9246     	 mov r10,r2
 810              	.L55:
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 811              	 .loc 1 451 0
 812 004e C821     	 mov r1,#200
 813              	.LBE18:
 814              	.LBE20:
 405:../Dave/Generated/RTC/rtc.c ****       {
 815              	 .loc 1 405 0
 816 0050 B7B2     	 uxth r7,r6
 817              	.LVL66:
 818              	.LBB21:
 819              	.LBB19:
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 820              	 .loc 1 451 0
 821 0052 381C     	 mov r0,r7
 822 0054 4900     	 lsl r1,r1,#1
 823 0056 FFF7FEFF 	 bl __aeabi_uidivmod
 824              	.LVL67:
 825 005a 89B2     	 uxth r1,r1
 826 005c 0029     	 cmp r1,#0
 827 005e 09D0     	 beq .L53
 828 0060 381C     	 mov r0,r7
 829 0062 6421     	 mov r1,#100
 830 0064 FFF7FEFF 	 bl __aeabi_uidivmod
 831              	.LVL68:
 832 0068 89B2     	 uxth r1,r1
 833 006a 0029     	 cmp r1,#0
 834 006c 03D0     	 beq .L54
 835 006e 5346     	 mov r3,r10
 836 0070 3B42     	 tst r3,r7
 837 0072 00D1     	 bne .L54
 838              	.L53:
 839              	.LVL69:
 840              	.LBE19:
 841              	.LBE21:
 407:../Dave/Generated/RTC/rtc.c ****       }
 842              	 .loc 1 407 0
 843 0074 0134     	 add r4,r4,#1
 844              	.LVL70:
 845              	.L54:
 403:../Dave/Generated/RTC/rtc.c ****     {
 846              	 .loc 1 403 0 discriminator 2
 847 0076 013E     	 sub r6,r6,#1
 848              	.LVL71:
 849 0078 AE42     	 cmp r6,r5
 850 007a E8D1     	 bne .L55
 851              	.LVL72:
 852              	.L52:
 853              	.LBB22:
 854              	.LBB23:
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 855              	 .loc 1 451 0
 856 007c C821     	 mov r1,#200
 857 007e 4846     	 mov r0,r9
 858 0080 4900     	 lsl r1,r1,#1
 859 0082 FFF7FEFF 	 bl __aeabi_uidivmod
 860              	.LVL73:
 861 0086 89B2     	 uxth r1,r1
 862 0088 0029     	 cmp r1,#0
 863 008a 33D1     	 bne .L87
 864              	.L56:
 865              	.LVL74:
 866              	.LBE23:
 867              	.LBE22:
 413:../Dave/Generated/RTC/rtc.c ****       {
 868              	 .loc 1 413 0
 869 008c 6B46     	 mov r3,sp
 415:../Dave/Generated/RTC/rtc.c ****       }
 870              	 .loc 1 415 0
 871 008e 0222     	 mov r2,#2
 413:../Dave/Generated/RTC/rtc.c ****       {
 872              	 .loc 1 413 0
 873 0090 5B79     	 ldrb r3,[r3,#5]
 874 0092 1B07     	 lsl r3,r3,#28
 875 0094 1B0F     	 lsr r3,r3,#28
 415:../Dave/Generated/RTC/rtc.c ****       }
 876              	 .loc 1 415 0
 877 0096 9A42     	 cmp r2,r3
 878 0098 9241     	 sbc r2,r2,r2
 879 009a 5242     	 neg r2,r2
 880 009c A418     	 add r4,r4,r2
 881              	.LVL75:
 882              	.L58:
 420:../Dave/Generated/RTC/rtc.c ****     {
 883              	 .loc 1 420 0
 884 009e 002B     	 cmp r3,#0
 885 00a0 08D0     	 beq .L59
 886 00a2 1F4A     	 ldr r2,.L88+12
 887 00a4 9B00     	 lsl r3,r3,#2
 888              	.LVL76:
 889 00a6 D318     	 add r3,r2,r3
 890              	.L60:
 422:../Dave/Generated/RTC/rtc.c ****     }
 891              	 .loc 1 422 0 discriminator 3
 892 00a8 1968     	 ldr r1,[r3]
 893 00aa 043B     	 sub r3,r3,#4
 894 00ac 8C46     	 mov ip,r1
 895 00ae 6444     	 add r4,r4,ip
 896              	.LVL77:
 420:../Dave/Generated/RTC/rtc.c ****     {
 897              	 .loc 1 420 0 discriminator 3
 898 00b0 9342     	 cmp r3,r2
 899 00b2 F9D1     	 bne .L60
 900              	.L59:
 901              	.LVL78:
 426:../Dave/Generated/RTC/rtc.c **** 
 902              	 .loc 1 426 0
 903 00b4 6B46     	 mov r3,sp
 904 00b6 DB78     	 ldrb r3,[r3,#3]
 433:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += (uint32_t)curr_time.seconds;
 905              	 .loc 1 433 0
 906 00b8 6A46     	 mov r2,sp
 426:../Dave/Generated/RTC/rtc.c **** 
 907              	 .loc 1 426 0
 908 00ba DB06     	 lsl r3,r3,#27
 909 00bc DB0E     	 lsr r3,r3,#27
 910 00be E418     	 add r4,r4,r3
 911              	.LVL79:
 429:../Dave/Generated/RTC/rtc.c **** 
 912              	 .loc 1 429 0
 913 00c0 184B     	 ldr r3,.L88+16
 432:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += ((uint32_t)curr_time.minutes * RTC_SECONDS_IN_A_MINUTE);
 914              	 .loc 1 432 0
 915 00c2 E121     	 mov r1,#225
 429:../Dave/Generated/RTC/rtc.c **** 
 916              	 .loc 1 429 0
 917 00c4 5C43     	 mul r4,r3
 918              	.LVL80:
 432:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += ((uint32_t)curr_time.minutes * RTC_SECONDS_IN_A_MINUTE);
 919              	 .loc 1 432 0
 920 00c6 6B46     	 mov r3,sp
 921 00c8 9B78     	 ldrb r3,[r3,#2]
 433:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += (uint32_t)curr_time.seconds;
 922              	 .loc 1 433 0
 923 00ca 5278     	 ldrb r2,[r2,#1]
 432:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += ((uint32_t)curr_time.minutes * RTC_SECONDS_IN_A_MINUTE);
 924              	 .loc 1 432 0
 925 00cc DB06     	 lsl r3,r3,#27
 926 00ce 0901     	 lsl r1,r1,#4
 927 00d0 DB0E     	 lsr r3,r3,#27
 433:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += (uint32_t)curr_time.seconds;
 928              	 .loc 1 433 0
 929 00d2 9206     	 lsl r2,r2,#26
 432:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += ((uint32_t)curr_time.minutes * RTC_SECONDS_IN_A_MINUTE);
 930              	 .loc 1 432 0
 931 00d4 4B43     	 mul r3,r1
 433:../Dave/Generated/RTC/rtc.c ****     elapsedseconds += (uint32_t)curr_time.seconds;
 932              	 .loc 1 433 0
 933 00d6 920E     	 lsr r2,r2,#26
 934 00d8 1001     	 lsl r0,r2,#4
 935 00da 811A     	 sub r1,r0,r2
 936 00dc 8A00     	 lsl r2,r1,#2
 937 00de 9918     	 add r1,r3,r2
 434:../Dave/Generated/RTC/rtc.c **** 
 938              	 .loc 1 434 0
 939 00e0 6B46     	 mov r3,sp
 940 00e2 1B78     	 ldrb r3,[r3]
 941 00e4 9B06     	 lsl r3,r3,#26
 942 00e6 9A0E     	 lsr r2,r3,#26
 943 00e8 8B18     	 add r3,r1,r2
 944 00ea 1C19     	 add r4,r3,r4
 945              	.LVL81:
 436:../Dave/Generated/RTC/rtc.c ****      status = RTC_STATUS_SUCCESS;
 946              	 .loc 1 436 0
 947 00ec 4346     	 mov r3,r8
 948 00ee 1C60     	 str r4,[r3]
 949              	.LVL82:
 437:../Dave/Generated/RTC/rtc.c ****   }
 950              	 .loc 1 437 0
 951 00f0 0023     	 mov r3,#0
 952 00f2 90E7     	 b .L75
 953              	.LVL83:
 954              	.L87:
 955              	.LBB25:
 956              	.LBB24:
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 957              	 .loc 1 451 0
 958 00f4 4846     	 mov r0,r9
 959 00f6 6421     	 mov r1,#100
 960 00f8 FFF7FEFF 	 bl __aeabi_uidivmod
 961              	.LVL84:
 962 00fc 89B2     	 uxth r1,r1
 963 00fe 0029     	 cmp r1,#0
 964 0100 02D0     	 beq .L85
 965 0102 4B46     	 mov r3,r9
 966 0104 9B07     	 lsl r3,r3,#30
 967 0106 C1D0     	 beq .L56
 968              	.L85:
 969 0108 6B46     	 mov r3,sp
 970 010a 5B79     	 ldrb r3,[r3,#5]
 971 010c 1B07     	 lsl r3,r3,#28
 972 010e 1B0F     	 lsr r3,r3,#28
 973 0110 C5E7     	 b .L58
 974              	.L89:
 975 0112 C046     	 .align 2
 976              	.L88:
 977 0114 000A0140 	 .word 1073809920
 978 0118 3607F5FF 	 .word -719050
 979 011c B1070000 	 .word 1969
 980 0120 00000000 	 .word .LANCHOR0
 981 0124 80510100 	 .word 86400
 982              	.LBE24:
 983              	.LBE25:
 984              	 .cfi_endproc
 985              	.LFE67:
 987              	 .section .text.RTC_lleapyear,"ax",%progbits
 988              	 .align 2
 989              	 .global RTC_lleapyear
 990              	 .code 16
 991              	 .thumb_func
 993              	RTC_lleapyear:
 994              	.LFB68:
 448:../Dave/Generated/RTC/rtc.c ****   uint8_t valid = 0U;
 995              	 .loc 1 448 0
 996              	 .cfi_startproc
 997              	.LVL85:
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 998              	 .loc 1 451 0
 999 0000 C821     	 mov r1,#200
 448:../Dave/Generated/RTC/rtc.c ****   uint8_t valid = 0U;
 1000              	 .loc 1 448 0
 1001 0002 10B5     	 push {r4,lr}
 1002              	.LCFI14:
 1003              	 .cfi_def_cfa_offset 8
 1004              	 .cfi_offset 4,-8
 1005              	 .cfi_offset 14,-4
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 1006              	 .loc 1 451 0
 1007 0004 4900     	 lsl r1,r1,#1
 448:../Dave/Generated/RTC/rtc.c ****   uint8_t valid = 0U;
 1008              	 .loc 1 448 0
 1009 0006 041C     	 mov r4,r0
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 1010              	 .loc 1 451 0
 1011 0008 FFF7FEFF 	 bl __aeabi_uidivmod
 1012              	.LVL86:
 1013 000c 89B2     	 uxth r1,r1
 453:../Dave/Generated/RTC/rtc.c ****   {
 454:../Dave/Generated/RTC/rtc.c ****     valid = 1U;
 1014              	 .loc 1 454 0
 1015 000e 0120     	 mov r0,#1
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 1016              	 .loc 1 451 0
 1017 0010 0029     	 cmp r1,#0
 1018 0012 0CD0     	 beq .L91
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 1019              	 .loc 1 451 0 is_stmt 0 discriminator 1
 1020 0014 201C     	 mov r0,r4
 1021 0016 6421     	 mov r1,#100
 1022 0018 FFF7FEFF 	 bl __aeabi_uidivmod
 1023              	.LVL87:
 1024 001c 89B2     	 uxth r1,r1
 449:../Dave/Generated/RTC/rtc.c **** 
 1025              	 .loc 1 449 0 is_stmt 1 discriminator 1
 1026 001e 0020     	 mov r0,#0
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 1027              	 .loc 1 451 0 discriminator 1
 1028 0020 0029     	 cmp r1,#0
 1029 0022 04D0     	 beq .L91
 451:../Dave/Generated/RTC/rtc.c ****        (((year) %4U) == 0U)))
 1030              	 .loc 1 451 0 is_stmt 0 discriminator 2
 1031 0024 0330     	 add r0,r0,#3
 1032 0026 0440     	 and r4,r0
 1033 0028 6042     	 neg r0,r4
 1034 002a 6041     	 adc r0,r0,r4
 449:../Dave/Generated/RTC/rtc.c **** 
 1035              	 .loc 1 449 0 is_stmt 1 discriminator 2
 1036 002c C0B2     	 uxtb r0,r0
 1037              	.L91:
 1038              	.LVL88:
 455:../Dave/Generated/RTC/rtc.c ****   }
 456:../Dave/Generated/RTC/rtc.c ****   return (valid);
 457:../Dave/Generated/RTC/rtc.c **** }
 1039              	 .loc 1 457 0
 1040              	 
 1041 002e 10BD     	 pop {r4,pc}
 1042              	 .cfi_endproc
 1043              	.LFE68:
 1045              	 .global RTC_DAYS_IN_MONTH
 1046              	 .section .rodata.RTC_DAYS_IN_MONTH,"a",%progbits
 1047              	 .align 2
 1048              	 .set .LANCHOR0,.+0
 1051              	RTC_DAYS_IN_MONTH:
 1052 0000 00000000 	 .word 0
 1053 0004 1F000000 	 .word 31
 1054 0008 1C000000 	 .word 28
 1055 000c 1F000000 	 .word 31
 1056 0010 1E000000 	 .word 30
 1057 0014 1F000000 	 .word 31
 1058 0018 1E000000 	 .word 30
 1059 001c 1F000000 	 .word 31
 1060 0020 1F000000 	 .word 31
 1061 0024 1E000000 	 .word 30
 1062 0028 1F000000 	 .word 31
 1063 002c 1E000000 	 .word 30
 1064 0030 1F000000 	 .word 31
 1065              	 .text
 1066              	.Letext0:
 1067              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1068              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1069              	 .file 6 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 1070              	 .file 7 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc/xmc_scu.h"
 1071              	 .file 8 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc/xmc1_scu.h"
 1072              	 .file 9 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\sys\\types.h"
 1073              	 .file 10 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Dave/Generated/DAVE_Common.h"
 1074              	 .file 11 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Dave/Generated/GLOBAL_SCU_XMC1/global_scu_xmc1.h"
 1075              	 .file 12 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 1076              	 .file 13 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Dave/Generated/GLOBAL_SCU_XMC1/global_scu_xmc1_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rtc.c
    {standard input}:18     .text.RTC_GetAppVersion:00000000 $t
    {standard input}:23     .text.RTC_GetAppVersion:00000000 RTC_GetAppVersion
    {standard input}:42     .text.RTC_GetAppVersion:00000008 $d
    {standard input}:47     .text.RTC_lConfigureInterrupts:00000000 $t
    {standard input}:52     .text.RTC_lConfigureInterrupts:00000000 RTC_lConfigureInterrupts
    {standard input}:137    .text.RTC_lRegister_Callbacks:00000000 $t
    {standard input}:142    .text.RTC_lRegister_Callbacks:00000000 RTC_lRegister_Callbacks
    {standard input}:195    .text.RTC_Init:00000000 $t
    {standard input}:200    .text.RTC_Init:00000000 RTC_Init
    {standard input}:295    .text.RTC_Init:00000050 $d
    {standard input}:302    .text.RTC_SetTime:00000000 $t
    {standard input}:307    .text.RTC_SetTime:00000000 RTC_SetTime
    {standard input}:444    .text.RTC_GetTime:00000000 $t
    {standard input}:449    .text.RTC_GetTime:00000000 RTC_GetTime
    {standard input}:494    .text.RTC_SetAlarmTime:00000000 $t
    {standard input}:499    .text.RTC_SetAlarmTime:00000000 RTC_SetAlarmTime
    {standard input}:636    .text.RTC_GetAlarmTime:00000000 $t
    {standard input}:641    .text.RTC_GetAlarmTime:00000000 RTC_GetAlarmTime
    {standard input}:686    .text.RTC_GetFlagStatus:00000000 $t
    {standard input}:691    .text.RTC_GetFlagStatus:00000000 RTC_GetFlagStatus
    {standard input}:711    .text.RTC_Time:00000000 $t
    {standard input}:716    .text.RTC_Time:00000000 RTC_Time
    {standard input}:977    .text.RTC_Time:00000114 $d
    {standard input}:988    .text.RTC_lleapyear:00000000 $t
    {standard input}:993    .text.RTC_lleapyear:00000000 RTC_lleapyear
    {standard input}:1051   .rodata.RTC_DAYS_IN_MONTH:00000000 RTC_DAYS_IN_MONTH
    {standard input}:1047   .rodata.RTC_DAYS_IN_MONTH:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_RTC_EnableEvent
GLOBAL_SCU_XMC1_RegisterCallback
GLOBAL_SCU_XMC1_Init
XMC_RTC_Init
XMC_RTC_Start
GLOBAL_SCU_XMC1_0
XMC_RTC_SetTime
XMC_RTC_GetTime
XMC_RTC_SetAlarm
XMC_RTC_GetAlarm
XMC_RTC_GetEventStatus
__aeabi_uidivmod
