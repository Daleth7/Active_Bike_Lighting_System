   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,2
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_vadc.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_VADC_GLOBAL_EnableModule,"ax",%progbits
  18              	 .align 2
  19              	 .global XMC_VADC_GLOBAL_EnableModule
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_VADC_GLOBAL_EnableModule:
  24              	.LFB125:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_vadc.c"
   1:../Libraries/XMCLib/src/xmc_vadc.c **** /**
   2:../Libraries/XMCLib/src/xmc_vadc.c ****  * @file xmc_vadc.c
   3:../Libraries/XMCLib/src/xmc_vadc.c ****  * @date 2015-12-01
   4:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   5:../Libraries/XMCLib/src/xmc_vadc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_vadc.c **** ***************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_vadc.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_vadc.c ****  *
   9:../Libraries/XMCLib/src/xmc_vadc.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_vadc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_vadc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_vadc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_vadc.c ****  * 
  18:../Libraries/XMCLib/src/xmc_vadc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_vadc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_vadc.c ****  * 
  21:../Libraries/XMCLib/src/xmc_vadc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_vadc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_vadc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_vadc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_vadc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_vadc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_vadc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_vadc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_vadc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_vadc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_vadc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_vadc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  36:../Libraries/XMCLib/src/xmc_vadc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_vadc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  39:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-15:
  40:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_vadc.c ****  *      
  42:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-02-20:
  43:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised for XMC1201 device.<br>
  44:../Libraries/XMCLib/src/xmc_vadc.c ****  *   
  45:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-04-27:
  46:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for SHS.<br>
  47:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added New APIs for trigger edge selection.<BR>
  48:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  51:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  54:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-06-25:
  55:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - BFL configuration in channel initialization fixed.
  56:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  57:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-07-28:
  58:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  59:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  60:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  61:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - New APIs Created.
  62:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  63:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  64:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetAlias
  65:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetInputClass
  66:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  67:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  68:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  69:../Libraries/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  70:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  71:../Libraries/XMCLib/src/xmc_vadc.c ****  * 2015-12-01:
  72:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  73:../Libraries/XMCLib/src/xmc_vadc.c ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  74:../Libraries/XMCLib/src/xmc_vadc.c ****  * @endcond 
  75:../Libraries/XMCLib/src/xmc_vadc.c ****  *
  76:../Libraries/XMCLib/src/xmc_vadc.c ****  */
  77:../Libraries/XMCLib/src/xmc_vadc.c **** 
  78:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  79:../Libraries/XMCLib/src/xmc_vadc.c ****  * HEADER FILES
  80:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  81:../Libraries/XMCLib/src/xmc_vadc.c **** #include <xmc_vadc.h>
  82:../Libraries/XMCLib/src/xmc_vadc.c **** 
  83:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  84:../Libraries/XMCLib/src/xmc_vadc.c ****  * MACROS
  85:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  86:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_MAX_ICLASS_SET          (2U)  /**< Defines the maximum number of conversion parame
  87:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_NUM_EMUX_INTERFACES     (2U)  /**< Defines the maximum number of external multiple
  88:../Libraries/XMCLib/src/xmc_vadc.c **** 
  89:../Libraries/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_RESULT_LEFT_ALIGN_10BIT (2U)  /**< Defines the 10 bit converted result register le
  90:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     is used in the XMC_VADC_GLOBAL_SetCompareValue(
  91:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  92:../Libraries/XMCLib/src/xmc_vadc.c ****  * ENUMS
  93:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  94:../Libraries/XMCLib/src/xmc_vadc.c **** 
  95:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
  96:../Libraries/XMCLib/src/xmc_vadc.c ****  * DATA STRUCTURES
  97:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  98:../Libraries/XMCLib/src/xmc_vadc.c **** 
  99:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 100:../Libraries/XMCLib/src/xmc_vadc.c ****  * GLOBAL DATA
 101:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 102:../Libraries/XMCLib/src/xmc_vadc.c **** 
 103:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 104:../Libraries/XMCLib/src/xmc_vadc.c **** 
 105:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U) 
 106:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 107:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 108:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 109:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 110:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 111:../Libraries/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 112:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 113:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 114:../Libraries/XMCLib/src/xmc_vadc.c **** 
 115:../Libraries/XMCLib/src/xmc_vadc.c **** #endif 
 116:../Libraries/XMCLib/src/xmc_vadc.c **** 
 117:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 118:../Libraries/XMCLib/src/xmc_vadc.c ****  * LOCAL ROUTINES
 119:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 120:../Libraries/XMCLib/src/xmc_vadc.c **** 
 121:../Libraries/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 122:../Libraries/XMCLib/src/xmc_vadc.c ****  * API IMPLEMENTATION
 123:../Libraries/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 124:../Libraries/XMCLib/src/xmc_vadc.c **** 
 125:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to enable the VADC Module*/
 126:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_EnableModule(void)
 127:../Libraries/XMCLib/src/xmc_vadc.c **** {
  26              	 .loc 1 127 0
  27              	 .cfi_startproc
 128:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
 129:../Libraries/XMCLib/src/xmc_vadc.c ****    * Enable Out of Range Comparator for ADC channels pins P2.2to P2.9. This hack is applicable only
 130:../Libraries/XMCLib/src/xmc_vadc.c ****    * and in particular the G11 step.
 131:../Libraries/XMCLib/src/xmc_vadc.c ****    *
 132:../Libraries/XMCLib/src/xmc_vadc.c ****    * Please refer to the XMC1000 Errata sheet V1.4 released 2014-06 Errata ID : ADC_AI.003 Additona
 133:../Libraries/XMCLib/src/xmc_vadc.c ****    * function
 134:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 135:../Libraries/XMCLib/src/xmc_vadc.c **** 
 136:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined (COMPARATOR)
 137:../Libraries/XMCLib/src/xmc_vadc.c ****   COMPARATOR->ORCCTRL = (uint32_t)0xFF;
  28              	 .loc 1 137 0
  29 0000 FF22     	 mov r2,#255
 127:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
  30              	 .loc 1 127 0
  31 0002 08B5     	 push {r3,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 8
  34              	 .cfi_offset 3,-8
  35              	 .cfi_offset 14,-4
  36              	 .loc 1 137 0
  37 0004 024B     	 ldr r3,.L2
 138:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 139:../Libraries/XMCLib/src/xmc_vadc.c **** 
 140:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 141:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
  38              	 .loc 1 141 0
  39 0006 0120     	 mov r0,#1
 137:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
  40              	 .loc 1 137 0
  41 0008 1A60     	 str r2,[r3]
  42              	 .loc 1 141 0
  43 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
  44              	.LVL0:
 142:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 143:../Libraries/XMCLib/src/xmc_vadc.c **** 
 144:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 145:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 146:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_DeassertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC )
 147:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 148:../Libraries/XMCLib/src/xmc_vadc.c **** }
  45              	 .loc 1 148 0
  46              	 
  47 000e 08BD     	 pop {r3,pc}
  48              	.L3:
  49              	 .align 2
  50              	.L2:
  51 0010 00050140 	 .word 1073808640
  52              	 .cfi_endproc
  53              	.LFE125:
  55              	 .section .text.XMC_VADC_GLOBAL_DisableModule,"ax",%progbits
  56              	 .align 2
  57              	 .global XMC_VADC_GLOBAL_DisableModule
  58              	 .code 16
  59              	 .thumb_func
  61              	XMC_VADC_GLOBAL_DisableModule:
  62              	.LFB126:
 149:../Libraries/XMCLib/src/xmc_vadc.c **** 
 150:../Libraries/XMCLib/src/xmc_vadc.c **** /*API to Disable the VADC Module*/
 151:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_DisableModule(void)
 152:../Libraries/XMCLib/src/xmc_vadc.c **** {
  63              	 .loc 1 152 0
  64              	 .cfi_startproc
  65 0000 08B5     	 push {r3,lr}
  66              	.LCFI1:
  67              	 .cfi_def_cfa_offset 8
  68              	 .cfi_offset 3,-8
  69              	 .cfi_offset 14,-4
 153:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 154:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 155:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_AssertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC );
 156:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 157:../Libraries/XMCLib/src/xmc_vadc.c **** 
 158:../Libraries/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 159:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
  70              	 .loc 1 159 0
  71 0002 0120     	 mov r0,#1
  72 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
  73              	.LVL1:
 160:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 161:../Libraries/XMCLib/src/xmc_vadc.c **** 
 162:../Libraries/XMCLib/src/xmc_vadc.c **** }
  74              	 .loc 1 162 0
  75              	 
  76 0008 08BD     	 pop {r3,pc}
  77              	 .cfi_endproc
  78              	.LFE126:
  80              	 .section .text.XMC_VADC_GLOBAL_Init,"ax",%progbits
  81              	 .align 2
  82              	 .global XMC_VADC_GLOBAL_Init
  83              	 .code 16
  84              	 .thumb_func
  86              	XMC_VADC_GLOBAL_Init:
  87              	.LFB127:
 163:../Libraries/XMCLib/src/xmc_vadc.c **** 
 164:../Libraries/XMCLib/src/xmc_vadc.c **** 
 165:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize global resources */
 166:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
 167:../Libraries/XMCLib/src/xmc_vadc.c **** {
  88              	 .loc 1 167 0
  89              	 .cfi_startproc
  90              	.LVL2:
  91              	.LBB48:
  92              	.LBB49:
 137:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
  93              	 .loc 1 137 0
  94 0000 FF22     	 mov r2,#255
  95              	.LBE49:
  96              	.LBE48:
  97              	 .loc 1 167 0
  98 0002 38B5     	 push {r3,r4,r5,lr}
  99              	.LCFI2:
 100              	 .cfi_def_cfa_offset 16
 101              	 .cfi_offset 3,-16
 102              	 .cfi_offset 4,-12
 103              	 .cfi_offset 5,-8
 104              	 .cfi_offset 14,-4
 105              	 .loc 1 167 0
 106 0004 0D1C     	 mov r5,r1
 107 0006 041C     	 mov r4,r0
 108              	.LBB51:
 109              	.LBB50:
 137:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 110              	 .loc 1 137 0
 111 0008 0D4B     	 ldr r3,.L6
 141:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 112              	 .loc 1 141 0
 113 000a 0120     	 mov r0,#1
 114              	.LVL3:
 137:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 115              	 .loc 1 137 0
 116 000c 1A60     	 str r2,[r3]
 141:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 117              	 .loc 1 141 0
 118 000e FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 119              	.LVL4:
 120              	.LBE50:
 121              	.LBE51:
 168:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 169:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
 170:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 171:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_Init:Wrong Module Pointer", (global_ptr == VADC))
 172:../Libraries/XMCLib/src/xmc_vadc.c **** 
 173:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the VADC module*/
 174:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GLOBAL_EnableModule();
 175:../Libraries/XMCLib/src/xmc_vadc.c **** 
 176:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->CLC = (uint32_t)(config->clc);
 122              	 .loc 1 176 0
 123 0012 6B69     	 ldr r3,[r5,#20]
 177:../Libraries/XMCLib/src/xmc_vadc.c **** 
 178:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Clock configuration */
 179:../Libraries/XMCLib/src/xmc_vadc.c **** 
 180:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 181:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG  = (uint32_t)(config->clock_config.globcfg | (uint32_t)(VADC_GLOBCFG_DIVWC_Ms
 182:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 183:../Libraries/XMCLib/src/xmc_vadc.c **** 
 184:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-0 configuration */
 185:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[0] = (uint32_t)(config->class0.globiclass);
 186:../Libraries/XMCLib/src/xmc_vadc.c **** 
 187:../Libraries/XMCLib/src/xmc_vadc.c ****   /* ICLASS-1 configuration */
 188:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[1] = (uint32_t)(config->class1.globiclass);
 189:../Libraries/XMCLib/src/xmc_vadc.c **** 
 190:../Libraries/XMCLib/src/xmc_vadc.c **** 
 191:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Result generation related configuration */
 192:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRCR = (uint32_t)(config->globrcr);
 193:../Libraries/XMCLib/src/xmc_vadc.c **** 
 194:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 195:../Libraries/XMCLib/src/xmc_vadc.c **** 
 196:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Boundaries */
 197:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = (uint32_t)(config->globbound);
 198:../Libraries/XMCLib/src/xmc_vadc.c **** 
 199:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 200:../Libraries/XMCLib/src/xmc_vadc.c **** 
 201:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Configure the SHS register that are needed for XMC11xx devices*/
 202:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 203:../Libraries/XMCLib/src/xmc_vadc.c **** 
 204:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enabling the Analog part of the converter*/
 205:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = SHS0->SHSCFG  | SHS_SHSCFG_SCWC_Msk;
 206:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(SHS_SHSCFG_ANOFF_Msk);
 207:../Libraries/XMCLib/src/xmc_vadc.c ****   SHS0->SHSCFG = reg;
 208:../Libraries/XMCLib/src/xmc_vadc.c **** 
 209:../Libraries/XMCLib/src/xmc_vadc.c ****   /* From the Errata sheet of XMC1100 V1.7*/
 210:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONV_ENABLE_FOR_XMC11 = 1U;
 211:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 212:../Libraries/XMCLib/src/xmc_vadc.c **** 
 213:../Libraries/XMCLib/src/xmc_vadc.c **** }
 124              	 .loc 1 213 0
 125              	 
 176:../Libraries/XMCLib/src/xmc_vadc.c **** 
 126              	 .loc 1 176 0
 127 0014 2360     	 str r3,[r4]
 181:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 128              	 .loc 1 181 0
 129 0016 8023     	 mov r3,#128
 130 0018 6A68     	 ldr r2,[r5,#4]
 131 001a 1B02     	 lsl r3,r3,#8
 132 001c 1343     	 orr r3,r2
 133 001e 8022     	 mov r2,#128
 134 0020 A350     	 str r3,[r4,r2]
 185:../Libraries/XMCLib/src/xmc_vadc.c **** 
 135              	 .loc 1 185 0
 136 0022 A023     	 mov r3,#160
 137 0024 AA68     	 ldr r2,[r5,#8]
 138 0026 E250     	 str r2,[r4,r3]
 188:../Libraries/XMCLib/src/xmc_vadc.c **** 
 139              	 .loc 1 188 0
 140 0028 EA68     	 ldr r2,[r5,#12]
 141 002a 0433     	 add r3,r3,#4
 142 002c E250     	 str r2,[r4,r3]
 192:../Libraries/XMCLib/src/xmc_vadc.c **** 
 143              	 .loc 1 192 0
 144 002e 2A69     	 ldr r2,[r5,#16]
 145 0030 DD33     	 add r3,r3,#221
 146 0032 FF33     	 add r3,r3,#255
 147 0034 E250     	 str r2,[r4,r3]
 197:../Libraries/XMCLib/src/xmc_vadc.c **** 
 148              	 .loc 1 197 0
 149 0036 2A68     	 ldr r2,[r5]
 150 0038 C93B     	 sub r3,r3,#201
 151 003a FF3B     	 sub r3,r3,#255
 152 003c E250     	 str r2,[r4,r3]
 153              	.LVL5:
 154              	.LVL6:
 155              	 .loc 1 213 0
 156 003e 38BD     	 pop {r3,r4,r5,pc}
 157              	.L7:
 158              	 .align 2
 159              	.L6:
 160 0040 00050140 	 .word 1073808640
 161              	 .cfi_endproc
 162              	.LFE127:
 164              	 .section .text.XMC_VADC_GLOBAL_InputClassInit,"ax",%progbits
 165              	 .align 2
 166              	 .global XMC_VADC_GLOBAL_InputClassInit
 167              	 .code 16
 168              	 .thumb_func
 170              	XMC_VADC_GLOBAL_InputClassInit:
 171              	.LFB128:
 214:../Libraries/XMCLib/src/xmc_vadc.c **** 
 215:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Set the Global IClass registers*/
 216:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
 217:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 218:../Libraries/XMCLib/src/xmc_vadc.c **** {
 172              	 .loc 1 218 0
 173              	 .cfi_startproc
 174              	.LVL7:
 219:../Libraries/XMCLib/src/xmc_vadc.c **** 
 220:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Module Pointer", (global_ptr == VADC))
 221:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP
 222:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLA
 223:../Libraries/XMCLib/src/xmc_vadc.c **** 
 224:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 225:../Libraries/XMCLib/src/xmc_vadc.c ****   if (conv_type == XMC_VADC_GROUP_CONV_STD )
 175              	 .loc 1 225 0
 176 0000 002A     	 cmp r2,#0
 177 0002 05D0     	 beq .L12
 226:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 227:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 228:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass &
 229:../Libraries/XMCLib/src/xmc_vadc.c ****                                       (uint32_t)(VADC_GLOBICLASS_CMS_Msk | VADC_GLOBICLASS_STCS_Msk
 230:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 231:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 232:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 233:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 234:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass & (uint32_t)(VADC_GLOBICLASS_CME_Msk | VADC
 178              	 .loc 1 234 0
 179 0004 054A     	 ldr r2,.L13
 180              	.LVL8:
 181 0006 2833     	 add r3,r3,#40
 182              	.LVL9:
 183 0008 1140     	 and r1,r2
 184              	.LVL10:
 185 000a 9B00     	 lsl r3,r3,#2
 186              	.LVL11:
 187 000c 1950     	 str r1,[r3,r0]
 188              	.L8:
 235:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 236:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 237:../Libraries/XMCLib/src/xmc_vadc.c **** }
 189              	 .loc 1 237 0
 190              	 
 191 000e 7047     	 bx lr
 192              	.LVL12:
 193              	.L12:
 228:../Libraries/XMCLib/src/xmc_vadc.c ****                                       (uint32_t)(VADC_GLOBICLASS_CMS_Msk | VADC_GLOBICLASS_STCS_Msk
 194              	 .loc 1 228 0
 195 0010 034A     	 ldr r2,.L13+4
 196              	.LVL13:
 197 0012 2833     	 add r3,r3,#40
 198              	.LVL14:
 199 0014 1140     	 and r1,r2
 200              	.LVL15:
 201 0016 9B00     	 lsl r3,r3,#2
 202              	.LVL16:
 203 0018 1950     	 str r1,[r3,r0]
 204 001a F8E7     	 b .L8
 205              	.L14:
 206              	 .align 2
 207              	.L13:
 208 001c 00001F07 	 .word 119472128
 209 0020 1F070000 	 .word 1823
 210              	 .cfi_endproc
 211              	.LFE128:
 213              	 .section .text.XMC_VADC_GLOBAL_StartupCalibration,"ax",%progbits
 214              	 .align 2
 215              	 .global XMC_VADC_GLOBAL_StartupCalibration
 216              	 .code 16
 217              	 .thumb_func
 219              	XMC_VADC_GLOBAL_StartupCalibration:
 220              	.LFB129:
 238:../Libraries/XMCLib/src/xmc_vadc.c **** 
 239:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable startup calibration feature */
 240:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
 241:../Libraries/XMCLib/src/xmc_vadc.c **** {
 221              	 .loc 1 241 0
 222              	 .cfi_startproc
 223              	.LVL17:
 242:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 243:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
 244:../Libraries/XMCLib/src/xmc_vadc.c ****   VADC_G_TypeDef *group_ptr;
 245:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 246:../Libraries/XMCLib/src/xmc_vadc.c ****   
 247:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_StartupCalibration:Wrong Module Pointer", (global_ptr == VADC))
 248:../Libraries/XMCLib/src/xmc_vadc.c **** 
 249:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG |= (uint32_t)VADC_GLOBCFG_SUCAL_Msk;
 224              	 .loc 1 249 0
 225 0000 8023     	 mov r3,#128
 226 0002 8021     	 mov r1,#128
 227 0004 C258     	 ldr r2,[r0,r3]
 228 0006 0906     	 lsl r1,r1,#24
 229 0008 0A43     	 orr r2,r1
 230 000a C250     	 str r2,[r0,r3]
 231              	.LVL18:
 250:../Libraries/XMCLib/src/xmc_vadc.c **** 
 251:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 252:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until all active groups finish calibration */
 253:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0U; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 254:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 255:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr = g_xmc_vadc_group_array[i];
 256:../Libraries/XMCLib/src/xmc_vadc.c ****     if ( (group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_ANONS_Msk)
 232              	 .loc 1 256 0
 233 000c 0C4A     	 ldr r2,.L30
 234 000e D158     	 ldr r1,[r2,r3]
 235 0010 C023     	 mov r3,#192
 236 0012 9B02     	 lsl r3,r3,#10
 237 0014 1942     	 tst r1,r3
 238 0016 05D0     	 beq .L16
 257:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 258:../Libraries/XMCLib/src/xmc_vadc.c ****       /* This group is active. Loop until it finishes calibration */
 259:../Libraries/XMCLib/src/xmc_vadc.c ****       while((group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_CAL_Msk)
 239              	 .loc 1 259 0
 240 0018 8021     	 mov r1,#128
 241 001a 8020     	 mov r0,#128
 242              	.LVL19:
 243 001c 4905     	 lsl r1,r1,#21
 244              	.L25:
 245 001e 1358     	 ldr r3,[r2,r0]
 246 0020 0B42     	 tst r3,r1
 247 0022 FCD1     	 bne .L25
 248              	.L16:
 249              	.LVL20:
 256:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 250              	 .loc 1 256 0
 251 0024 8023     	 mov r3,#128
 252 0026 074A     	 ldr r2,.L30+4
 253 0028 D158     	 ldr r1,[r2,r3]
 254 002a C023     	 mov r3,#192
 255 002c 9B02     	 lsl r3,r3,#10
 256 002e 1942     	 tst r1,r3
 257 0030 05D0     	 beq .L15
 258              	 .loc 1 259 0
 259 0032 8021     	 mov r1,#128
 260 0034 8020     	 mov r0,#128
 261 0036 4905     	 lsl r1,r1,#21
 262              	.L24:
 263 0038 1358     	 ldr r3,[r2,r0]
 264 003a 0B42     	 tst r3,r1
 265 003c FCD1     	 bne .L24
 266              	.L15:
 260:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 261:../Libraries/XMCLib/src/xmc_vadc.c ****         /* NOP */
 262:../Libraries/XMCLib/src/xmc_vadc.c ****       }
 263:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 264:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 265:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 266:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop until it finishes calibration */
 267:../Libraries/XMCLib/src/xmc_vadc.c ****   while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) ==
 268:../Libraries/XMCLib/src/xmc_vadc.c ****          XMC_VADC_SHS_START_UP_CAL_ACTIVE )
 269:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 270:../Libraries/XMCLib/src/xmc_vadc.c ****     /* NOP */
 271:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 272:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 273:../Libraries/XMCLib/src/xmc_vadc.c **** }
 267              	 .loc 1 273 0
 268              	 
 269 003e 7047     	 bx lr
 270              	.L31:
 271              	 .align 2
 272              	.L30:
 273 0040 00040348 	 .word 1208157184
 274 0044 00080348 	 .word 1208158208
 275              	 .cfi_endproc
 276              	.LFE129:
 278              	 .section .text.XMC_VADC_GLOBAL_SetBoundaries,"ax",%progbits
 279              	 .align 2
 280              	 .global XMC_VADC_GLOBAL_SetBoundaries
 281              	 .code 16
 282              	 .thumb_func
 284              	XMC_VADC_GLOBAL_SetBoundaries:
 285              	.LFB130:
 274:../Libraries/XMCLib/src/xmc_vadc.c **** 
 275:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boudaries for result of conversion. Should the boundaries be violated, interrupts are
 276:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 277:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr,
 278:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary0,
 279:../Libraries/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary1)
 280:../Libraries/XMCLib/src/xmc_vadc.c **** {
 286              	 .loc 1 280 0
 287              	 .cfi_startproc
 288              	.LVL21:
 281:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 282:../Libraries/XMCLib/src/xmc_vadc.c **** 
 283:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 284:../Libraries/XMCLib/src/xmc_vadc.c **** 
 285:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound = 0U;
 286:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary0 << VADC_GLOBBOUND_BOUNDARY0_Pos);
 287:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary1 << VADC_GLOBBOUND_BOUNDARY1_Pos);
 288:../Libraries/XMCLib/src/xmc_vadc.c **** 
 289:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 289              	 .loc 1 289 0
 290 0000 B823     	 mov r3,#184
 287:../Libraries/XMCLib/src/xmc_vadc.c **** 
 291              	 .loc 1 287 0
 292 0002 1204     	 lsl r2,r2,#16
 293              	.LVL22:
 294 0004 1143     	 orr r1,r2
 295              	.LVL23:
 296              	 .loc 1 289 0
 297 0006 C150     	 str r1,[r0,r3]
 290:../Libraries/XMCLib/src/xmc_vadc.c **** }
 298              	 .loc 1 290 0
 299              	 
 300 0008 7047     	 bx lr
 301              	 .cfi_endproc
 302              	.LFE130:
 304 000a C046     	 .section .text.XMC_VADC_GLOBAL_SetIndividualBoundary,"ax",%progbits
 305              	 .align 2
 306              	 .global XMC_VADC_GLOBAL_SetIndividualBoundary
 307              	 .code 16
 308              	 .thumb_func
 310              	XMC_VADC_GLOBAL_SetIndividualBoundary:
 311              	.LFB131:
 291:../Libraries/XMCLib/src/xmc_vadc.c **** 
 292:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 293:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
 294:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 295:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const uint16_t boundary_value)
 296:../Libraries/XMCLib/src/xmc_vadc.c **** {
 312              	 .loc 1 296 0
 313              	 .cfi_startproc
 314              	.LVL24:
 297:../Libraries/XMCLib/src/xmc_vadc.c **** 
 298:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 299:../Libraries/XMCLib/src/xmc_vadc.c **** 
 300:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 301:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Boundary Selection",
 302:../Libraries/XMCLib/src/xmc_vadc.c ****              ((XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection) ||
 303:../Libraries/XMCLib/src/xmc_vadc.c ****               (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)))
 304:../Libraries/XMCLib/src/xmc_vadc.c **** 
 305:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 306:../Libraries/XMCLib/src/xmc_vadc.c ****   globbound = global_ptr->GLOBBOUND;
 315              	 .loc 1 306 0
 316 0000 B823     	 mov r3,#184
 317 0002 C358     	 ldr r3,[r0,r3]
 318              	.LVL25:
 307:../Libraries/XMCLib/src/xmc_vadc.c **** 
 308:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection)
 319              	 .loc 1 308 0
 320 0004 0229     	 cmp r1,#2
 321 0006 09D0     	 beq .L36
 309:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 310:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY0_Msk);
 311:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY0_Pos);
 312:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 313:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)
 322              	 .loc 1 313 0
 323 0008 0329     	 cmp r1,#3
 324 000a 02D0     	 beq .L37
 325              	.LVL26:
 326              	.L35:
 314:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 315:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY1_Msk);
 316:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY1_Pos);
 317:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 318:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 319:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 320:../Libraries/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 321:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 322:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 327              	 .loc 1 322 0
 328 000c B822     	 mov r2,#184
 323:../Libraries/XMCLib/src/xmc_vadc.c **** 
 324:../Libraries/XMCLib/src/xmc_vadc.c **** }
 329              	 .loc 1 324 0
 330              	 
 322:../Libraries/XMCLib/src/xmc_vadc.c **** 
 331              	 .loc 1 322 0
 332 000e 8350     	 str r3,[r0,r2]
 333              	 .loc 1 324 0
 334 0010 7047     	 bx lr
 335              	.LVL27:
 336              	.L37:
 315:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY1_Pos);
 337              	 .loc 1 315 0
 338 0012 0449     	 ldr r1,.L38
 339              	.LVL28:
 316:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 340              	 .loc 1 316 0
 341 0014 1204     	 lsl r2,r2,#16
 342              	.LVL29:
 315:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY1_Pos);
 343              	 .loc 1 315 0
 344 0016 0B40     	 and r3,r1
 345              	.LVL30:
 316:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 346              	 .loc 1 316 0
 347 0018 1343     	 orr r3,r2
 348              	.LVL31:
 349 001a F7E7     	 b .L35
 350              	.LVL32:
 351              	.L36:
 310:../Libraries/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY0_Pos);
 352              	 .loc 1 310 0
 353 001c 1B0B     	 lsr r3,r3,#12
 354              	.LVL33:
 355 001e 1B03     	 lsl r3,r3,#12
 356              	.LVL34:
 311:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 357              	 .loc 1 311 0
 358 0020 1343     	 orr r3,r2
 359              	.LVL35:
 360 0022 F3E7     	 b .L35
 361              	.L39:
 362              	 .align 2
 363              	.L38:
 364 0024 FFFF00F0 	 .word -268369921
 365              	 .cfi_endproc
 366              	.LFE131:
 368              	 .section .text.XMC_VADC_GLOBAL_SetCompareValue,"ax",%progbits
 369              	 .align 2
 370              	 .global XMC_VADC_GLOBAL_SetCompareValue
 371              	 .code 16
 372              	 .thumb_func
 374              	XMC_VADC_GLOBAL_SetCompareValue:
 375              	.LFB132:
 325:../Libraries/XMCLib/src/xmc_vadc.c **** 
 326:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 327:../Libraries/XMCLib/src/xmc_vadc.c **** 
 328:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set compare value for the result register. Result of conversion is compared against this 
 329:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
 330:../Libraries/XMCLib/src/xmc_vadc.c **** {
 376              	 .loc 1 330 0
 377              	 .cfi_startproc
 378              	.LVL36:
 331:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetCompareValue:Wrong Module Pointer", (global_ptr == VADC))
 332:../Libraries/XMCLib/src/xmc_vadc.c **** 
 333:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES &= ~((uint32_t)VADC_GLOBRES_RESULT_Msk);
 379              	 .loc 1 333 0
 380 0000 C022     	 mov r2,#192
 381 0002 9200     	 lsl r2,r2,#2
 382 0004 8358     	 ldr r3,[r0,r2]
 334:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 383              	 .loc 1 334 0
 384 0006 8900     	 lsl r1,r1,#2
 385              	.LVL37:
 333:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 386              	 .loc 1 333 0
 387 0008 1B0C     	 lsr r3,r3,#16
 388 000a 1B04     	 lsl r3,r3,#16
 389 000c 8350     	 str r3,[r0,r2]
 390              	 .loc 1 334 0
 391 000e 8358     	 ldr r3,[r0,r2]
 335:../Libraries/XMCLib/src/xmc_vadc.c **** }
 392              	 .loc 1 335 0
 393              	 
 334:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 394              	 .loc 1 334 0
 395 0010 1943     	 orr r1,r3
 396 0012 8150     	 str r1,[r0,r2]
 397              	 .loc 1 335 0
 398 0014 7047     	 bx lr
 399              	 .cfi_endproc
 400              	.LFE132:
 402 0016 C046     	 .section .text.XMC_VADC_GLOBAL_GetCompareResult,"ax",%progbits
 403              	 .align 2
 404              	 .global XMC_VADC_GLOBAL_GetCompareResult
 405              	 .code 16
 406              	 .thumb_func
 408              	XMC_VADC_GLOBAL_GetCompareResult:
 409              	.LFB133:
 336:../Libraries/XMCLib/src/xmc_vadc.c **** 
 337:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of comparison */
 338:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr)
 339:../Libraries/XMCLib/src/xmc_vadc.c **** {
 410              	 .loc 1 339 0
 411              	 .cfi_startproc
 412              	.LVL38:
 340:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
 341:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
 342:../Libraries/XMCLib/src/xmc_vadc.c **** 
 343:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetCompareResult:Wrong Module Pointer", (global_ptr == VADC))
 344:../Libraries/XMCLib/src/xmc_vadc.c **** 
 345:../Libraries/XMCLib/src/xmc_vadc.c ****   res = global_ptr->GLOBRES;
 413              	 .loc 1 345 0
 414 0000 C023     	 mov r3,#192
 415 0002 9B00     	 lsl r3,r3,#2
 416 0004 C358     	 ldr r3,[r0,r3]
 417              	.LVL39:
 346:../Libraries/XMCLib/src/xmc_vadc.c **** 
 347:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_GLOBRES_VF_Msk)
 348:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 349:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_GLOBRES_FCR_Pos) & (uint32_
 350:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 351:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 352:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 353:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 418              	 .loc 1 353 0
 419 0006 0220     	 mov r0,#2
 420              	.LVL40:
 347:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 421              	 .loc 1 347 0
 422 0008 002B     	 cmp r3,#0
 423 000a 00DB     	 blt .L44
 424              	.LVL41:
 425              	.L42:
 354:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 355:../Libraries/XMCLib/src/xmc_vadc.c **** 
 356:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
 357:../Libraries/XMCLib/src/xmc_vadc.c **** }
 426              	 .loc 1 357 0
 427              	 
 428 000c 7047     	 bx lr
 429              	.LVL42:
 430              	.L44:
 349:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 431              	 .loc 1 349 0
 432 000e 5B00     	 lsl r3,r3,#1
 433              	.LVL43:
 434 0010 D80F     	 lsr r0,r3,#31
 435              	.LVL44:
 436 0012 FBE7     	 b .L42
 437              	 .cfi_endproc
 438              	.LFE133:
 440              	 .section .text.XMC_VADC_GLOBAL_BindGroupToEMux,"ax",%progbits
 441              	 .align 2
 442              	 .global XMC_VADC_GLOBAL_BindGroupToEMux
 443              	 .code 16
 444              	 .thumb_func
 446              	XMC_VADC_GLOBAL_BindGroupToEMux:
 447              	.LFB134:
 358:../Libraries/XMCLib/src/xmc_vadc.c **** 
 359:../Libraries/XMCLib/src/xmc_vadc.c **** /* Bind one of the four groups to one of the two EMUX interfaces */
 360:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_EMUX_AVAILABLE == 1U)
 361:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
 362:../Libraries/XMCLib/src/xmc_vadc.c **** {
 448              	 .loc 1 362 0
 449              	 .cfi_startproc
 450              	.LVL45:
 451 0000 30B5     	 push {r4,r5,lr}
 452              	.LCFI3:
 453              	 .cfi_def_cfa_offset 12
 454              	 .cfi_offset 4,-12
 455              	 .cfi_offset 5,-8
 456              	 .cfi_offset 14,-4
 363:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
 364:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
 365:../Libraries/XMCLib/src/xmc_vadc.c **** 
 366:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong Module Pointer", (global_ptr == VADC))
 367:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong EMUX Group", (emuxif < XMC_VADC_NUM_EMUX_INTERF
 368:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong VADC Group", (group < XMC_VADC_MAXIMUM_NUM_GROU
 369:../Libraries/XMCLib/src/xmc_vadc.c **** 
 370:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == emuxif)
 457              	 .loc 1 370 0
 458 0002 0029     	 cmp r1,#0
 459 0004 0CD0     	 beq .L47
 460 0006 F121     	 mov r1,#241
 461              	.LVL46:
 462 0008 0424     	 mov r4,#4
 463 000a 4942     	 neg r1,r1
 464              	.L46:
 371:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 372:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Pos;
 373:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Msk;
 374:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 375:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 376:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 377:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Pos;
 378:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Msk;
 379:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 380:../Libraries/XMCLib/src/xmc_vadc.c **** 
 381:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL &= ~(mask);
 465              	 .loc 1 381 0
 466 000c FC23     	 mov r3,#252
 382:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL |= (uint32_t) (group << pos);
 467              	 .loc 1 382 0
 468 000e A240     	 lsl r2,r2,r4
 469              	.LVL47:
 381:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL |= (uint32_t) (group << pos);
 470              	 .loc 1 381 0
 471 0010 9B00     	 lsl r3,r3,#2
 472 0012 C558     	 ldr r5,[r0,r3]
 383:../Libraries/XMCLib/src/xmc_vadc.c **** 
 384:../Libraries/XMCLib/src/xmc_vadc.c **** }
 473              	 .loc 1 384 0
 474              	 
 381:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL |= (uint32_t) (group << pos);
 475              	 .loc 1 381 0
 476 0014 2940     	 and r1,r5
 477 0016 C150     	 str r1,[r0,r3]
 382:../Libraries/XMCLib/src/xmc_vadc.c **** 
 478              	 .loc 1 382 0
 479 0018 C158     	 ldr r1,[r0,r3]
 480 001a 0A43     	 orr r2,r1
 481 001c C250     	 str r2,[r0,r3]
 482              	 .loc 1 384 0
 483 001e 30BD     	 pop {r4,r5,pc}
 484              	.LVL48:
 485              	.L47:
 486 0020 1021     	 mov r1,#16
 487              	.LVL49:
 488 0022 0024     	 mov r4,#0
 489 0024 4942     	 neg r1,r1
 490 0026 F1E7     	 b .L46
 491              	 .cfi_endproc
 492              	.LFE134:
 494              	 .section .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode,"ax",%progbits
 495              	 .align 2
 496              	 .global XMC_VADC_GLOBAL_SetResultEventInterruptNode
 497              	 .code 16
 498              	 .thumb_func
 500              	XMC_VADC_GLOBAL_SetResultEventInterruptNode:
 501              	.LFB135:
 385:../Libraries/XMCLib/src/xmc_vadc.c **** #endif 
 386:../Libraries/XMCLib/src/xmc_vadc.c **** 
 387:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind result event with a service request line */
 388:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
 389:../Libraries/XMCLib/src/xmc_vadc.c **** {
 502              	 .loc 1 389 0
 503              	 .cfi_startproc
 504              	.LVL50:
 505 0000 10B5     	 push {r4,lr}
 506              	.LCFI4:
 507              	 .cfi_def_cfa_offset 8
 508              	 .cfi_offset 4,-8
 509              	 .cfi_offset 14,-4
 390:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 391:../Libraries/XMCLib/src/xmc_vadc.c ****   
 392:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong Module Pointer", (global_ptr == VAD
 393:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong SR Number", (sr <= XMC_VADC_SR_SHAR
 394:../Libraries/XMCLib/src/xmc_vadc.c **** 
 395:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 510              	 .loc 1 395 0
 511 0002 0329     	 cmp r1,#3
 512 0004 00D9     	 bls .L50
 396:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 397:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 513              	 .loc 1 397 0
 514 0006 0439     	 sub r1,r1,#4
 515              	.LVL51:
 516              	.L50:
 398:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 399:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 400:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 401:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 402:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 403:../Libraries/XMCLib/src/xmc_vadc.c **** 
 404:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_REV0NP_Msk);
 517              	 .loc 1 404 0
 518 0008 A023     	 mov r3,#160
 519 000a 5B00     	 lsl r3,r3,#1
 520 000c C458     	 ldr r4,[r0,r3]
 521 000e 044A     	 ldr r2,.L51
 405:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
 522              	 .loc 1 405 0
 523 0010 0904     	 lsl r1,r1,#16
 524              	.LVL52:
 404:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
 525              	 .loc 1 404 0
 526 0012 2240     	 and r2,r4
 527 0014 C250     	 str r2,[r0,r3]
 528              	 .loc 1 405 0
 529 0016 C258     	 ldr r2,[r0,r3]
 406:../Libraries/XMCLib/src/xmc_vadc.c **** }
 530              	 .loc 1 406 0
 531              	 
 405:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
 532              	 .loc 1 405 0
 533 0018 1143     	 orr r1,r2
 534 001a C150     	 str r1,[r0,r3]
 535              	 .loc 1 406 0
 536 001c 10BD     	 pop {r4,pc}
 537              	.L52:
 538 001e C046     	 .align 2
 539              	.L51:
 540 0020 FFFFF0FF 	 .word -983041
 541              	 .cfi_endproc
 542              	.LFE135:
 544              	 .section .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode,"ax",%progbits
 545              	 .align 2
 546              	 .global XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
 547              	 .code 16
 548              	 .thumb_func
 550              	XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:
 551              	.LFB136:
 407:../Libraries/XMCLib/src/xmc_vadc.c **** 
 408:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind request source event with a service request line */
 409:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
 410:../Libraries/XMCLib/src/xmc_vadc.c **** {
 552              	 .loc 1 410 0
 553              	 .cfi_startproc
 554              	.LVL53:
 555 0000 10B5     	 push {r4,lr}
 556              	.LCFI5:
 557              	 .cfi_def_cfa_offset 8
 558              	 .cfi_offset 4,-8
 559              	 .cfi_offset 14,-4
 411:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 412:../Libraries/XMCLib/src/xmc_vadc.c ****   
 413:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:Wrong Module Pointer", (global_
 414:../Libraries/XMCLib/src/xmc_vadc.c **** 
 415:../Libraries/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 560              	 .loc 1 415 0
 561 0002 0329     	 cmp r1,#3
 562 0004 00D9     	 bls .L55
 416:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 417:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 563              	 .loc 1 417 0
 564 0006 0439     	 sub r1,r1,#4
 565              	.LVL54:
 566              	.L55:
 418:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 419:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 420:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 421:../Libraries/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 422:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 423:../Libraries/XMCLib/src/xmc_vadc.c **** 
 424:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_SEV0NP_Msk);
 567              	 .loc 1 424 0
 568 0008 A023     	 mov r3,#160
 569 000a 0F24     	 mov r4,#15
 570 000c 5B00     	 lsl r3,r3,#1
 571 000e C258     	 ldr r2,[r0,r3]
 425:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t) (node << VADC_GLOBEVNP_SEV0NP_Pos);
 426:../Libraries/XMCLib/src/xmc_vadc.c **** }
 572              	 .loc 1 426 0
 573              	 
 424:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t) (node << VADC_GLOBEVNP_SEV0NP_Pos);
 574              	 .loc 1 424 0
 575 0010 A243     	 bic r2,r4
 576 0012 C250     	 str r2,[r0,r3]
 425:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t) (node << VADC_GLOBEVNP_SEV0NP_Pos);
 577              	 .loc 1 425 0
 578 0014 C258     	 ldr r2,[r0,r3]
 579 0016 1143     	 orr r1,r2
 580              	.LVL55:
 581 0018 C150     	 str r1,[r0,r3]
 582              	 .loc 1 426 0
 583 001a 10BD     	 pop {r4,pc}
 584              	 .cfi_endproc
 585              	.LFE136:
 587              	 .section .text.XMC_VADC_GROUP_Init,"ax",%progbits
 588              	 .align 2
 589              	 .global XMC_VADC_GROUP_Init
 590              	 .code 16
 591              	 .thumb_func
 593              	XMC_VADC_GROUP_Init:
 594              	.LFB137:
 427:../Libraries/XMCLib/src/xmc_vadc.c **** 
 428:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize an instance of group of VADC hardware */
 429:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)  
 430:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_Init( XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config)
 431:../Libraries/XMCLib/src/xmc_vadc.c **** {
 595              	 .loc 1 431 0
 596              	 .cfi_startproc
 597              	.LVL56:
 598              	.LBB52:
 599              	.LBB53:
 432:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_Init:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
 433:../Libraries/XMCLib/src/xmc_vadc.c **** 
 434:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the input classes */
 435:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_STD, 0U);
 436:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_EMUX, 0U);
 437:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_STD, 1U);
 438:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_EMUX, 1U);
 439:../Libraries/XMCLib/src/xmc_vadc.c **** 
 440:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = config->g_arbcfg;
 441:../Libraries/XMCLib/src/xmc_vadc.c **** 
 442:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = config->g_bound;
 443:../Libraries/XMCLib/src/xmc_vadc.c **** 
 444:../Libraries/XMCLib/src/xmc_vadc.c ****   /* External mux configuration */
 445:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ExternalMuxControlInit(group_ptr,config->emux_config);
 446:../Libraries/XMCLib/src/xmc_vadc.c **** 
 447:../Libraries/XMCLib/src/xmc_vadc.c **** }
 448:../Libraries/XMCLib/src/xmc_vadc.c **** 
 449:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to program conversion characteristics */
 450:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
 451:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 452:../Libraries/XMCLib/src/xmc_vadc.c **** {
 453:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_class;
 454:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_pos;
 455:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_pos;
 456:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_mask;
 457:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_mask;
 458:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time;
 459:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONVMODE_t conv_mode;
 460:../Libraries/XMCLib/src/xmc_vadc.c **** 
 461:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
 462:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP_
 463:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLAS
 464:../Libraries/XMCLib/src/xmc_vadc.c **** 
 465:../Libraries/XMCLib/src/xmc_vadc.c ****   /* 
 466:../Libraries/XMCLib/src/xmc_vadc.c ****    * Obtain the mask and position macros of the parameters based on what is being requested - Stand
 467:../Libraries/XMCLib/src/xmc_vadc.c ****    * external mux channels.
 468:../Libraries/XMCLib/src/xmc_vadc.c ****    */
 469:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_CONV_STD == conv_type)
 470:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 471:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CMS_Pos;
 472:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CMS_Msk;
 473:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCS_Pos;
 474:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCS_Msk;
 475:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sample_time_std_conv;
 476:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 477:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 478:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 479:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 480:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CME_Pos;
 481:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CME_Msk;
 482:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCE_Pos;
 483:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCE_Msk;
 484:../Libraries/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sampling_phase_emux_channel;
 485:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_emux;
 486:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 487:../Libraries/XMCLib/src/xmc_vadc.c **** 
 488:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the class */
 489:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class  = group_ptr->ICLASS[set_num];
 600              	 .loc 1 489 0
 601 0000 A023     	 mov r3,#160
 602 0002 C258     	 ldr r2,[r0,r3]
 603              	.LVL57:
 604 0004 9C46     	 mov ip,r3
 490:../Libraries/XMCLib/src/xmc_vadc.c **** 
 491:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the class register */
 492:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(conv_mode_mask);
 605              	 .loc 1 492 0
 606 0006 304B     	 ldr r3,.L57
 607              	.LBE53:
 608              	.LBE52:
 431:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_Init:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
 609              	 .loc 1 431 0
 610 0008 F0B5     	 push {r4,r5,r6,r7,lr}
 611              	.LCFI6:
 612              	 .cfi_def_cfa_offset 20
 613              	 .cfi_offset 4,-20
 614              	 .cfi_offset 5,-16
 615              	 .cfi_offset 6,-12
 616              	 .cfi_offset 7,-8
 617              	 .cfi_offset 14,-4
 618              	.LBB56:
 619              	.LBB54:
 620              	 .loc 1 492 0
 621 000a 1A40     	 and r2,r3
 622              	.LVL58:
 623 000c 141C     	 mov r4,r2
 624              	.LVL59:
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 494:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 625              	 .loc 1 494 0
 626 000e 1F27     	 mov r7,#31
 627 0010 4A79     	 ldrb r2,[r1,#5]
 628              	.LVL60:
 629              	.LBE54:
 630              	.LBE56:
 631              	.LBB57:
 632              	.LBB58:
 492:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 633              	 .loc 1 492 0
 634 0012 2E4D     	 ldr r5,.L57+4
 635 0014 5207     	 lsl r2,r2,#29
 636              	.LBE58:
 637              	.LBE57:
 638              	.LBB61:
 639              	.LBB55:
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 640              	 .loc 1 493 0
 641 0016 520D     	 lsr r2,r2,#21
 642 0018 2243     	 orr r2,r4
 643              	.LVL61:
 644 001a 0C79     	 ldrb r4,[r1,#4]
 645              	 .loc 1 494 0
 646 001c BA43     	 bic r2,r7
 647              	.LVL62:
 648 001e E406     	 lsl r4,r4,#27
 475:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 649              	 .loc 1 475 0
 650 0020 E40E     	 lsr r4,r4,#27
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 651              	 .loc 1 495 0
 652 0022 2243     	 orr r2,r4
 653              	.LVL63:
 496:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 654              	 .loc 1 496 0
 655 0024 6446     	 mov r4,ip
 656 0026 0251     	 str r2,[r0,r4]
 657              	.LVL64:
 658              	.LBE55:
 659              	.LBE61:
 660              	.LBB62:
 661              	.LBB59:
 489:../Libraries/XMCLib/src/xmc_vadc.c **** 
 662              	 .loc 1 489 0
 663 0028 0259     	 ldr r2,[r0,r4]
 664              	.LVL65:
 494:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 665              	 .loc 1 494 0
 666 002a 294E     	 ldr r6,.L57+8
 492:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 667              	 .loc 1 492 0
 668 002c 2A40     	 and r2,r5
 669              	.LVL66:
 670 002e 141C     	 mov r4,r2
 671              	.LVL67:
 672 0030 CA79     	 ldrb r2,[r1,#7]
 673              	.LVL68:
 674              	.LBE59:
 675              	.LBE62:
 447:../Libraries/XMCLib/src/xmc_vadc.c **** 
 676              	 .loc 1 447 0
 677              	 
 678 0032 5207     	 lsl r2,r2,#29
 679              	.LBB63:
 680              	.LBB60:
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 681              	 .loc 1 493 0
 682 0034 5209     	 lsr r2,r2,#5
 683 0036 2243     	 orr r2,r4
 684              	.LVL69:
 685 0038 8C79     	 ldrb r4,[r1,#6]
 686              	.LVL70:
 494:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 687              	 .loc 1 494 0
 688 003a 3240     	 and r2,r6
 689              	.LVL71:
 690 003c E406     	 lsl r4,r4,#27
 691              	.LVL72:
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 692              	 .loc 1 495 0
 693 003e E40A     	 lsr r4,r4,#11
 694 0040 2243     	 orr r2,r4
 695              	.LVL73:
 696              	 .loc 1 496 0
 697 0042 6446     	 mov r4,ip
 698 0044 0251     	 str r2,[r0,r4]
 699              	.LVL74:
 700              	.LBE60:
 701              	.LBE63:
 702              	.LBB64:
 703              	.LBB65:
 489:../Libraries/XMCLib/src/xmc_vadc.c **** 
 704              	 .loc 1 489 0
 705 0046 0434     	 add r4,r4,#4
 706 0048 0259     	 ldr r2,[r0,r4]
 707              	.LVL75:
 492:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 708              	 .loc 1 492 0
 709 004a 1A40     	 and r2,r3
 710              	.LVL76:
 711 004c 4B7A     	 ldrb r3,[r1,#9]
 712 004e 5B07     	 lsl r3,r3,#29
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 713              	 .loc 1 493 0
 714 0050 5B0D     	 lsr r3,r3,#21
 715 0052 1343     	 orr r3,r2
 716              	.LVL77:
 717 0054 0A7A     	 ldrb r2,[r1,#8]
 718              	.LVL78:
 494:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 719              	 .loc 1 494 0
 720 0056 BB43     	 bic r3,r7
 721              	.LVL79:
 722 0058 D206     	 lsl r2,r2,#27
 723              	.LVL80:
 475:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 724              	 .loc 1 475 0
 725 005a D20E     	 lsr r2,r2,#27
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 726              	 .loc 1 495 0
 727 005c 1343     	 orr r3,r2
 728              	.LVL81:
 729              	 .loc 1 496 0
 730 005e 0351     	 str r3,[r0,r4]
 731              	.LVL82:
 732              	.LBE65:
 733              	.LBE64:
 734              	.LBB66:
 735              	.LBB67:
 489:../Libraries/XMCLib/src/xmc_vadc.c **** 
 736              	 .loc 1 489 0
 737 0060 0359     	 ldr r3,[r0,r4]
 738              	.LVL83:
 739 0062 8A7A     	 ldrb r2,[r1,#10]
 740              	.LVL84:
 492:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 741              	 .loc 1 492 0
 742 0064 1D40     	 and r5,r3
 743              	.LVL85:
 744 0066 CB7A     	 ldrb r3,[r1,#11]
 745 0068 D206     	 lsl r2,r2,#27
 746              	.LVL86:
 747 006a 5B07     	 lsl r3,r3,#29
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 748              	 .loc 1 493 0
 749 006c 5B09     	 lsr r3,r3,#5
 750 006e 2B43     	 orr r3,r5
 751              	.LVL87:
 494:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 752              	 .loc 1 494 0
 753 0070 3340     	 and r3,r6
 754              	.LVL88:
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 755              	 .loc 1 495 0
 756 0072 D20A     	 lsr r2,r2,#11
 757 0074 1343     	 orr r3,r2
 758              	.LVL89:
 759              	 .loc 1 496 0
 760 0076 0351     	 str r3,[r0,r4]
 761              	.LVL90:
 762              	.LBE67:
 763              	.LBE66:
 440:../Libraries/XMCLib/src/xmc_vadc.c **** 
 764              	 .loc 1 440 0
 765 0078 8023     	 mov r3,#128
 766              	.LVL91:
 767 007a 0A69     	 ldr r2,[r1,#16]
 768 007c C250     	 str r2,[r0,r3]
 769              	.LVL92:
 442:../Libraries/XMCLib/src/xmc_vadc.c **** 
 770              	 .loc 1 442 0
 771 007e CA68     	 ldr r2,[r1,#12]
 772 0080 3833     	 add r3,r3,#56
 773 0082 C250     	 str r2,[r0,r3]
 774              	.LVL93:
 775 0084 CB78     	 ldrb r3,[r1,#3]
 776 0086 1D07     	 lsl r5,r3,#28
 777 0088 DF06     	 lsl r7,r3,#27
 778 008a 9C06     	 lsl r4,r3,#26
 779 008c 5B06     	 lsl r3,r3,#25
 780 008e DA0F     	 lsr r2,r3,#31
 781 0090 4B88     	 ldrh r3,[r1,#2]
 782 0092 FF0F     	 lsr r7,r7,#31
 783 0094 9B05     	 lsl r3,r3,#22
 784              	.LBB68:
 785              	.LBB69:
 786              	 .file 2 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc/xmc_vadc.h"
   1:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
   2:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @date 2016-03-09
   4:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   5:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @cond
   6:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** ***************************************************************************************************
   7:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   9:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * All rights reserved.                        
  11:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                             
  12:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * following conditions are met:   
  14:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  15:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer.                        
  17:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  18:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  21:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  24:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  32:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
  35:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  36:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Change History
  37:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * --------------
  38:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  39:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-15:
  40:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Initial <br>
  41:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *      
  42:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-20:
  43:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  44:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   
  45:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-04-27:
  46:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  47:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  48:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  51:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-20:
  52:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-25:
  54:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  55:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  56:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-07-28:
  57:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  58:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  59:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  60:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  61:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  62:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  63:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAlias
  64:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetInputClass
  65:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  66:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  67:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  68:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  69:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  70:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  71:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added:
  72:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC4300 device supported
  73:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  74:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed:
  75:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_TriggerEvent API updated. OR operation removed. 
  76:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_ClearEvent API updated. Multiple events triggering on clearing the event i
  77:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
  78:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *       XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
  79:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  80:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  81:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  82:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled
  83:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled
  84:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  85:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  86:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  87:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-09:
  88:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Optimization of write only registers
  89:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  90:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-18:
  91:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_IsConverterReady(): API checks the STEPCFG register for the read
  92:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *       SHSCFG SFR. 
  93:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  94:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @endcond 
  95:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  96:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
  97:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
  98:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #ifndef XMC_VADC_H
  99:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_H
 100:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
 101:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 102:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * HEADER FILES
 103:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 104:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_common.h>
 105:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_scu.h>
 106:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_vadc_map.h>
 107:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 108:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 109:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
 110:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 111:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 112:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
 113:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 114:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup VADC
 115:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
 116:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 117:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
 118:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
 119:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to discrete digital values.
 120:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC1
 121:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
 122:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter.
 123:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 124:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 125:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
 126:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
 127:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
 128:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 129:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
 130:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
 131:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
 132:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * which together build separate groups.
 133:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 134:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC4
 135:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc4x.png"
 136:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \else
 137:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc1x.png"
 138:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 139:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 140:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 141:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 142:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 143:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 144:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 145:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 146:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 147:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 148:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 149:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 150:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 151:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 152:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 153:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 154:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 155:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 156:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 157:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 158:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 159:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 160:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 161:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 162:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 163:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 164:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 165:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 166:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 167:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 168:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
 169:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 170:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * MACROS
 171:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 172:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 173:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41) || (UC_SERIES == XMC43))
 174:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 175:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 176:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 177:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 178:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 179:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 180:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 181:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 182:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 183:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 184:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 185:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 186:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 187:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 188:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 189:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC44 || UC_SERIES == XMC47 || UC_SERIES == XMC48)
 190:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 191:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 192:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 193:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 194:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 195:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 196:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 197:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 198:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 199:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 200:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 201:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 202:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 203:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 204:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 205:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 206:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 207:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 208:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 209:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 210:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 211:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 212:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 213:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 214:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 215:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 216:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 217:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 218:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 219:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 220:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 221:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC14 || UC_SERIES == XMC13 || UC_SERIES == XMC12)
 222:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 223:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 224:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 225:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 226:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 227:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 228:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 229:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 230:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 231:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 232:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 233:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 234:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 235:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 236:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 237:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 238:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 239:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 240:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 241:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 242:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 243:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 244:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 245:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 246:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 247:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 248:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 devices */
 249:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 250:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/ 
 251:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 252:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 253:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 254:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 255:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 256:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 257:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 258:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 259:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 260:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 261:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 262:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 263:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 264:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 265:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * ENUMS
 266:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 267:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 268:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 269:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC type*/
 270:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 271:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 272:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 273:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC Group type*/
 274:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 275:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 276:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 277:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 278:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 279:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 280:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 281:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 282:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 283:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 284:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 285:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 286:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 287:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 288:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 289:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 290:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 291:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 292:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 293:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 294:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 295:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 296:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 297:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 298:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 299:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 300:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 301:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 302:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 303:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 304:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 305:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 306:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 307:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 308:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 309:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 310:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 311:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 312:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 313:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 314:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 315:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 316:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 317:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 318:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 319:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 320:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 321:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 322:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 323:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 324:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 325:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 326:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 327:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 328:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 329:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 330:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 331:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 332:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 333:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 334:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 335:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 336:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 337:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 338:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 339:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 340:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 341:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 342:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 343:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 344:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 345:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 346:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 347:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 348:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 349:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 350:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 351:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 352:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   
 353:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 354:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 355:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 356:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 357:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 358:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 359:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 360:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 361:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 362:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 363:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 364:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 365:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 366:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 367:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 368:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 369:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 370:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 371:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 372:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 373:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 374:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 375:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 376:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 377:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 378:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 379:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   
 380:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 381:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 382:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 383:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 384:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 385:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 386:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 387:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 388:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 389:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 390:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 391:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 392:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 393:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 394:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 395:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 396:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 397:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 398:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 399:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 400:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 401:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 402:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 403:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 404:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 405:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 406:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 407:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 408:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 409:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 410:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 411:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 412:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 413:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 414:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 415:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 416:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 417:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 418:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 419:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  this enumeration.
 420:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 421:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 422:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 423:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 424:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH ,   /**< Input higher than than programmed reference */
 425:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 426:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 427:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
 428:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 429:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 430:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 432:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 433:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 434:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 438:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 439:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 441:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 442:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 443:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 444:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          awaiting conversion */
 445:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 446:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          previous set */
 447:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 448:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 449:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 450:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 451:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 452:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 453:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 454:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 455:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 456:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 457:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 458:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 459:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 460:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 461:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 462:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 463:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 464:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 465:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 466:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 467:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 468:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 469:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 470:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 471:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 472:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 473:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 474:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 475:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 476:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 477:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 478:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 479:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 480:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 481:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 482:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 483:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 485:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 486:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 487:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 488:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 489:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 490:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 491:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 492:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 493:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 494:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 495:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 496:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 497:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 498:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 499:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 500:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 501:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 502:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 503:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 504:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 506:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 507:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
 508:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 509:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 510:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 511:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 512:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 513:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 514:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 515:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 516:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 517:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
 518:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 519:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 520:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 521:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 522:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 523:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 524:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 525:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 526:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 527:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
 528:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 529:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 530:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 531:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 532:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 533:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 534:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 535:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 536:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 537:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 538:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 539:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 540:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 541:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 542:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 543:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 544:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 545:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 546:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 547:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 548:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 549:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 550:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 551:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 552:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 553:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 554:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 555:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 556:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 557:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 558:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 559:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 560:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 561:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 562:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 563:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 564:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 565:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                           request sources */
 566:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 567:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 568:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 569:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 570:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 571:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 572:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 573:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 574:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 575:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 576:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 577:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 578:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 579:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 580:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 581:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 582:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 583:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 584:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 585:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 586:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 587:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 588:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 589:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 590:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 591:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 592:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 593:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 594:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 595:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 596:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 597:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 598:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 599:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 600:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 601:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 602:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 603:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 604:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 605:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 606:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_SUBTRATION 
 607:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 608:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,  /**< Always align result to left */
 609:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 610:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,  /**< Always align result to left */
 611:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 612:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,  /**< Always align result to left */
 613:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U,  /**< Always align result to right */
 614:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_SUBTRATION_t;
 615:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 616:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 617:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 618:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 619:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 620:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 621:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 622:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 623:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 624:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 625:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_RS_PRIORITY_t;
 626:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 627:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 628:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 629:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 630:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 631:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 632:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 633:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 634:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level
 635:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level
 636:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 637:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 638:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 639:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 640:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 641:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 642:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 643:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 644:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 645:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 646:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_SELECT_t;
 647:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 648:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 649:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 650:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 651:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 652:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 653:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 654:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_0   = 0,
 655:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_1,
 656:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 657:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_2,
 658:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_3
 659:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 660:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_INDEX_t;
 661:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 662:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 663:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** * Defines channel alias.
 664:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 665:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** */
 666:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 667:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 668:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 669:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 670:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 671:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 672:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 673:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 674:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 675:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 676:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 677:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 678:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 679:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 680:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 681:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 682:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 683:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 684:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 685:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 686:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 687:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 688:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 689:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_GAIN_LEVEL_t;
 690:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 691:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 692:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 693:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 694:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 695:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 696:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 697:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 698:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_LOOP_CH_t;
 699:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 700:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 701:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 702:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 703:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 704:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 705:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 706:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 707:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 708:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 709:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 710:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 711:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 712:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 713:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 714:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 715:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 716:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 717:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 718:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 719:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 720:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 721:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 722:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 723:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 724:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_NODE_t;
 725:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 726:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 727:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * DATA STRUCTURES
 728:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 729:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 730:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
 731:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma push
 732:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma anon_unions
 733:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
 734:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning 586
 735:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 736:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 737:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 738:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 739:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 740:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 741:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 742:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 743:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 744:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 745:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion
 746:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 747:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 748:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 749:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 750:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 751:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 752:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 753:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as 
 754:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 755:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 756:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 757:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 758:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 759:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 760:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 761:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 762:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 763:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 764:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 765:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 766:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 767:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 768:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 769:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant s
 770:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       activated or not.*/
 771:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 772:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 773:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asctrl;
 774:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 775:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 776:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 777:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 778:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 779:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 2;
 780:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trig
 781:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conv
 782:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion
 783:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 784:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_L
 785:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 26;
 786:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 787:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asmr;
 788:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 789:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 790:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 791:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 792:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 793:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                  structure for background Request S
 794:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 795:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 796:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 797:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 798:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 799:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 800:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 801:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 802:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 803:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 804:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t input_class                : 2;  /**< Input conversion class selection.
 805:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 806:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 2;
 807:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bo
 808:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 809:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bo
 810:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 811:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 812:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 813:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the con
 814:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either V
 815:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 816:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 4;
 817:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_reg_number          : 4;  /**< Group result register number */
 818:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t use_global_result          : 1;  /**< Use global result register for background 
 819:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_alignment           : 1;  /**< Alignment of the results read in the resul
 820:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 821:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 6;
 822:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor 
 823:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 824:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacito
 825:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 826:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t chctr;
 827:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 828:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 829:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 830:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 831:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 832:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 8;
 833:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 834:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should
 835:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 836:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should
 837:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 838:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should
 839:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 840:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should
 841:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 842:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 843:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 844:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 845:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 846:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 847:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 848:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 849:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 850:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 851:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 852:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 853:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the speci
 854:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the speci
 855:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the speci
 856:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the speci
 857:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 858:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 12;
 859:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 860:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bfl;
 861:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 862:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 863:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 864:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 865:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 866:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 867:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 
 868:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 869:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 
 870:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 871:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 
 872:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 873:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 
 874:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 875:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t                           : 16;
 876:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 877:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bflc;
 878:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 879:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 880:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     bool    channel_priority;  /**< Only non priority channels can be converted by Background Reque
 881:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (whi
 882:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 883:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 884:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 885:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 886:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 887:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 888:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 889:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 890:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 891:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 892:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 893:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 894:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 895:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<B
 896:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back in
 897:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 898:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trig
 899:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 24;
 900:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 901:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 902:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qinr0;
 903:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 904:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 905:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 906:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 907:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 908:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 909:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 910:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 911:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 912:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 913:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 914:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC
 915:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 916:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 917:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 918:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 919:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 920:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as
 921:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 922:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 923:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 924:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 925:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 926:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 927:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 928:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
 929:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 930:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
 931:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
 932:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 933:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 934:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
 935:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 936:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be
 937:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 938:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 939:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qctrl0;
 940:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 941:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 942:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 943:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 944:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 945:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 2;
 946:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
 947:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 29;
 948:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 949:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qmr0;
 950:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 951:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
 952:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 953:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 954:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 955:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
 956:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
 957:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 958:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
 959:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 960:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 961:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 962:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 963:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 964:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
 965:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 966:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
 967:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
 968:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 969:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
 970:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 971:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
 972:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 973:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
 974:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
 975:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 976:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
 977:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 978:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 16;
 979:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 980:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 981:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globiclass;
 982:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 983:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
 984:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 985:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
 986:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 987:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
 988:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 989:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
 990:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
 991:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 992:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 993:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 994:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 995:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 996:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 
 997:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 2;
 998:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter 
 999:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Ra
1000:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 5;
1001:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 17;
1002:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1003:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globcfg;
1004:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1005:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
1006:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1007:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1008:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1009:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1010:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
1011:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1012:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
1013:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1014:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1015:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1016:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1017:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1018:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1019:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1020:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1021:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1022:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1023:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globbound;
1024:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1025:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1026:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1027:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1028:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0
1029:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1
1030:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1031:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1032:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1033:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1034:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1035:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1036:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1037:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be ov
1038:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       result register until the previous value is r
1039:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 6;
1040:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1041:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1042:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globrcr;
1043:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1044:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1045:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1046:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1047:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1048:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1049:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 2;
1050:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sl
1051:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 28;
1052:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1053:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t clc;
1054:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1055:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1056:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1057:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1058:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1059:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1060:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1061:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1062:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1063:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1064:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1065:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1066:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1067:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1068:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1069:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1070:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1071:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1072:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1073:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1074:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1075:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1076:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1077:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1078:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1079:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1080:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1081:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_iclass0;
1082:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1083:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1084:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1085:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1086:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1087:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1088:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1089:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1090:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1091:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1092:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1093:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1094:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1095:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC w
1096:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1097:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1098:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 13;
1099:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1100:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected.
1101:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1102:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected.
1103:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 5;
1104:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1105:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Ste
1106:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1107:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC
1108:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external
1109:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1110:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b con
1111:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1112:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 1;
1113:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1114:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 2;
1115:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1116:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1117:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_emuxctr;
1118:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1119:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1120:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1121:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1122:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1123:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1124:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1125:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1126:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1127:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1128:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1129:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[
1130:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[
1131:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1132:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1133:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1134:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1135:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1136:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1137:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1138:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1139:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1140:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_bound;
1141:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1142:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1143:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1144:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1145:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1146:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 4;
1147:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1148:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 1;
1149:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode
1150:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1151:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 24;
1152:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1153:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_arbcfg;
1154:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1155:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1156:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1157:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1158:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1159:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1160:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1161:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1162:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1163:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1164:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1165:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1166:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1167:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1168:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1169:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_V
1170:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       For normal operation select
1171:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1172:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1173:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 2;
1174:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous resu
1175:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIF
1176:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1177:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1178:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1179:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_rcr;
1180:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1181:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1182:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1183:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1184:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1185:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1186:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1187:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1188:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1189:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1190:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1191:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1192:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1193:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step0            :3;  /**< Select a Sample and hold unit for the stepper's s
1194:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1195:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step0             :1;  /**< Should the step be added to the sequence */
1196:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step1            :3;  /**< Select a Sample and hold unit for the stepper's s
1197:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1198:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step1             :1;  /**< Should the step be added to the sequence */
1199:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step2            :3;  /**< Select a Sample and hold unit for the stepper's s
1200:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1201:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step2             :1;  /**< Should the step be added to the sequence */
1202:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step3            :3;  /**< Select a Sample and hold unit for the stepper's s
1203:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1204:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step3             :1;  /**< Should the step be added to the sequence */
1205:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step4            :3;  /**< Select a Sample and hold unit for the stepper's s
1206:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1207:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step4             :1;  /**< Should the step be added to the sequence */
1208:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step5            :3;  /**< Select a Sample and hold unit for the stepper's s
1209:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1210:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step5             :1;  /**< Should the step be added to the sequence */
1211:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step6            :3;  /**< Select a Sample and hold unit for the stepper's s
1212:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1213:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step6             :1;  /**< Should the step be added to the sequence */
1214:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step7            :3;  /**< Select a Sample and hold unit for the stepper's s
1215:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1216:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step7             :1;  /**< Should the step be added to the sequence */
1217:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1218:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1219:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t stepcfg;
1220:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1221:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1222:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1223:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1224:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1225:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1226:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1227:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1228:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1229:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1230:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1231:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1232:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t shs_clock_divider        :4; /**< The divider value for the SHS clock. Range: [0x0 t
1233:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :6;
1234:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_reference_select  :2; /**< It is possible to different reference voltage for 
1235:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  */
1236:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :20;
1237:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1238:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t shscfg;
1239:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1240:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1241:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1242:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1243:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CONFIG_t;
1244:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1245:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1246:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1247:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed result structure
1248:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1249:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  typedef struct XMC_VADC_DETAILED_RESULT
1250:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1251:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1252:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1253:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1254:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1255:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   :16;  /**< Result of the Analog to digital conversion*/
1256:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_counter   :4;   /**< Results reduction counter value*/
1257:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           :5;   /**< Converted channel number*/
1258:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      :3;   /**< Converted external multiplexer channel number.
1259:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1260:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source :2;   /**< Converted request source*/
1261:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      :1;   /**< Fast compare result if conversion mode is fast c
1262:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             :1;   /**< Valid flag is set when a new result is available
1263:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1264:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1265:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1266:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_DETAILED_RESULT_t;
1267:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
1268:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1269:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1270:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
1271:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma pop
1272:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
1273:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning restore
1274:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1275:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1276:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * static inline functions
1277:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1278:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1279:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U) 
1280:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1281:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1282:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1283:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr =
1284:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1285:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1286:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1287:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1288:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1289:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1290:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * API Prototypes
1291:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1292:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1293:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #ifdef __cplusplus
1294:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** extern "C" {
1295:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1296:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1297:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1298:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1299:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1300:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1301:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1302:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1303:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1304:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1305:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1306:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1307:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1308:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1309:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1310:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1311:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1312:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1313:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1314:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1315:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1316:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1317:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1318:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1319:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1320:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1321:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1322:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1323:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1324:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1325:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1326:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1327:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1328:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1329:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1330:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1331:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1332:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1333:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1334:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1335:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1336:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1337:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1338:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1339:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1340:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1341:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1342:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the configurations later in the program.
1343:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1344:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1345:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1346:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1347:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1348:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1349:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1350:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1351:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1352:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1353:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1354:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1355:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1356:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1357:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * register to enable.
1358:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1359:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1360:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1361:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1362:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1363:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1364:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1365:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1366:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1367:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1368:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1369:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1370:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1371:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1372:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1373:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1374:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1375:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1376:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1377:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1378:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1379:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1380:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1381:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1382:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1383:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1384:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1385:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1386:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1387:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1388:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1389:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1390:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1391:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1392:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1393:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1394:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1395:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1396:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1397:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1398:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1399:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1400:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1401:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1402:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1403:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1404:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1405:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1406:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1407:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1408:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1409:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1410:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1411:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1412:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1413:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1414:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1415:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1416:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1417:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1418:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1419:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1420:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1421:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1422:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1423:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1424:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1425:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1426:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1427:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1428:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1429:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1430:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1432:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1433:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1434:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1438:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1439:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1441:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1442:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1443:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1444:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1445:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1446:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1447:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1448:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1449:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1450:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1451:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1452:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1453:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1454:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1455:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1456:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1457:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1458:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1459:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1460:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1461:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1462:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1463:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1464:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1465:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1466:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1467:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1468:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1469:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1470:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1471:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1472:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1473:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1474:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1475:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
1476:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1477:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1478:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1479:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1480:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1481:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1482:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1483:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1485:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1486:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1487:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1488:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1489:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1490:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1491:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1492:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1493:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1494:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1495:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1496:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
1497:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1498:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1499:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1500:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1501:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1502:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1503:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  
1504:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1506:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1507:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1508:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1509:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1510:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1511:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1512:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1513:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1514:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1515:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1516:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1517:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1518:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1519:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1520:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1521:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1522:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1523:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1524:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1525:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1526:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1527:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1528:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1529:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1530:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1531:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1532:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1533:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * calibration feature at runtime.
1534:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1535:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1536:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1537:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1538:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1539:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1540:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1541:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1542:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1543:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1544:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1545:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1546:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1547:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1548:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1549:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1550:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1551:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1552:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1553:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1554:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1555:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1556:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1557:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1558:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1559:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1560:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1561:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1562:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1563:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1564:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1565:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1566:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1567:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1568:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1569:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1570:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1571:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1572:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1573:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1574:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1575:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1576:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1577:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1578:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1579:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1580:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1581:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1582:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1583:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1584:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1585:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1586:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1587:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1588:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1589:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1590:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1591:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1592:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1593:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1594:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1595:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1596:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1597:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1598:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1599:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1600:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1601:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1602:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1603:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1604:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1605:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1606:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1607:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1608:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1609:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1610:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They define a range against which the result of a conversion can be compare
1611:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1612:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1613:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1614:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1615:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1616:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1617:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1618:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1619:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1620:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1621:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1622:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1623:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1624:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
1625:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value  Boundary Value<BR>Range[0 - 4095]
1626:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1627:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1628:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1629:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1630:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs either the boundary 0 or boundary 1 for result comparison.\n\n This defines a range aga
1631:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
1632:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
1633:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1634:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1635:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1636:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1637:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1638:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
1639:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                            const XMC_VADC_CHANNEL_BOUNDARY_t selection,
1640:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                            const uint16_t boundary_value); 
1641:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1642:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1643:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1644:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1645:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1646:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1647:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1648:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1649:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1650:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1651:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1652:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1653:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1654:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1655:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1656:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b emuxif.
1657:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1658:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1659:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1660:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1661:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1662:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1663:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1664:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1665:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1666:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1667:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1668:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1669:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1670:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1671:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1672:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1673:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1674:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1675:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1676:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1677:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1678:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1679:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1680:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1681:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1682:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  return(global_ptr->GLOBRES);
1683:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1684:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1685:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1686:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1687:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1688:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1689:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return XMC_VADC_RESULT_SIZE_t 16 bit result register value.<BR>
1690:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *         Range[0x0 - 0X0FFF]
1691:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1692:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1693:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Retrieves the conversion result from the global result register associated with the \a global_pt
1694:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * lightweight version of XMC_VADC_GLOBAL_GetDetailedResult(). The behavior is exactly the same, ju
1695:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * only the 16 bit numeric result returned back to the application instead of the complete GLOBRES 
1696:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1697:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1698:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetDetailedResult()
1699:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1700:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GLOBAL_GetResult(XMC_VADC_GLOBAL_t *const global_pt
1701:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1702:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetResult:Wrong Module Pointer", (global_ptr == VADC))
1703:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1704:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)global_ptr->GLOBRES);
1705:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1706:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1707:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1708:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1709:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1710:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param compare_val Compare value which the result of a conversion will be compared against.
1711:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *         <BR>Range[0x0 - 0X0FFF]
1712:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1713:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1714:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1715:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1716:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set compare value in the global result register for fast compare mode.\n\n The result of a conve
1717:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * be compared to the compare value entered as part of \a compare_val. The prerequisite is that the
1718:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * with this global register must select an ICLASS which has the conversion mode configured as fast
1719:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_GLOBAL_GetCompareResult() after this API to
1720:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1721:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1722:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1723:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1724:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
1725:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1726:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1727:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1728:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1729:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return compare high or low. Refer @ref XMC_VADC_FAST_COMPARE_t enum
1730:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1731:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1732:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1733:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1734:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines the result of fast compare operation.\n\n This API returns the result of fast compare
1735:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the valid flag in the global result register GLOBRES is set.
1736:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1737:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1738:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1739:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1740:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr);
1741:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1742:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1743:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1744:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr         Constant pointer to the VADC module
1745:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type   Desired event that must be manually asserted
1746:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1747:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1748:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1749:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1750:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts an event that can lead to an interrupt.\n\n This API manually asserts the reque
1751:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * (Background request source event or a global result event) by setting the GLOBEVFLAG register wi
1752:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \a event_type.
1753:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1754:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1755:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1756:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1757:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1758:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_TriggerEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32
1759:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1760:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Module Pointer", (global_ptr == VADC))
1761:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Global Event", 
1762:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1763:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1764:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = event_type;
1765:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1766:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1767:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1768:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1769:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1770:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param event_type Event that must be acknowledged
1771:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1772:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1773:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1774:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1775:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1776:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges an event that has been asserted manually or automatically.\n\n This API acknowledge
1777:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * by clearing GLOBEFLAG sticky flag.
1778:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1779:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1780:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1781:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1782:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClearEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t
1783:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1784:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Module Pointer", (global_ptr == VADC))
1785:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Global Event", 
1786:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1787:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1788:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = ((uint32_t)(event_type << (uint32_t)16));
1789:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1790:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1791:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1792:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1793:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1794:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global result event is connected. Refer @ref XMC_VADC
1795:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1796:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1797:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1798:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1799:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Binds the global result event to one of the 4 shared service requests.\n\n This API binds the g
1800:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  to one of the 4 module wide shared service requests .Sets GLOBEVNP register with the correspond
1801:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1802:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1803:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode()
1804:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1805:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
1806:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1807:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1808:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1809:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1810:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global request source event is connected. Refer @ref 
1811:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1812:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1813:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1814:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1815:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Binds the background request source event to one of the 4 shared service requests.\n\n This API 
1816:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source event to one of the 4 module wide shared service requests. Sets GLOBEVNP register
1817:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * corresponding \a sr line.
1818:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1819:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1820:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SetResultEventInterruptNode()
1821:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1822:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
1823:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1824:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1825:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1826:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1827:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  config Struct consisting of various SHS related configurations.
1828:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1829:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1830:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1831:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1832:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the basic SHS parameters.<BR>\n
1833:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration, the analog reference selection and
1834:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the calibration order for the Sample and Hold unit.
1835:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1836:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1837:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1838:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1839:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONF
1840:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1841:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  /**
1842:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1843:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param  config Struct consisting of various step configurations.
1844:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1845:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return None
1846:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1847:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1848:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * Configures the stepper sequence for the converter.<BR>\n
1849:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * Stepper of the SHS can be configured to take up a specific sequence of groups for conversion.
1850:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * The stepper sequence is configured using this API.
1851:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1852:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1853:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * None.
1854:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   */
1855:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetStepperSequence(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1856:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                              const XMC_VADC_GLOBAL_SHS_STEP_CONFIG_
1857:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1858:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1859:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1860:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong config pointer",
1861:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (config == (XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t*)NULL))
1862:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1863:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->STEPCFG = (uint32_t) config->stepcfg;
1864:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1865:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1866:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1867:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  /**
1868:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1869:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1870:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return bool returns true if the analog converter is operable
1871:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   *              returns false if the analog converter is powered down
1872:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1873:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1874:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * Returns the converter status.<BR>\n
1875:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * Returns the ANRDY bit field of the SHSCFG register.
1876:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   *
1877:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1878:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * None.
1879:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   */
1880:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE bool XMC_VADC_GLOBAL_SHS_IsConverterReady(XMC_VADC_GLOBAL_SHS_t *const shs_ptr)
1881:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1882:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_IsConverterReady:Wrong SHS Pointer",(shs_ptr == (XMC_VADC_GLOBAL_
1883:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1884:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return((bool)((shs_ptr->SHSCFG >> (uint32_t)SHS_SHSCFG_ANRDY_Pos) & (uint32_t)0x1));
1885:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1886:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1887:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1888:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1889:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1890:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
1891:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1892:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1893:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1894:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1895:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1896:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
1897:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * this mode the ADC module will convert the input depending on the value stored in the SST bit of 
1898:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would configure the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1899:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1900:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1901:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1902:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1903:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP_
1904:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1905:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1906:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1907:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be disabled.<BR>Range: [0x
1908:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1909:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1910:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1911:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1912:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
1913:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from accelerated mode to compatible mode of conversion is neede
1914:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would clear the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
1915:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1916:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1917:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1918:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1919:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP
1920:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1921:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1922:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1923:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
1924:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sst_value Value of short sample time that needs to be configured.<BR>
1925:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  Range: [0x0 to 0x3F]
1926:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1927:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1928:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1929:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1930:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the Accelerated timing mode sample time.<BR>\n
1931:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
1932:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Accelerated mode the ADC module will convert the input depending on the value stored in the SST 
1933:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  SHS0_TIMCFGx. This API would configure the shot sample time either in SHS0_TIMCFG0.SST or SHS0_
1934:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1935:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1936:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1937:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1938:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1939:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                             XMC_VADC_GROUP_INDEX_t group_num,
1940:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                             uint8_t sst_value);
1941:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1942:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1943:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1944:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1945:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  divs_value The clock divider value that is possible
1946:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    <BR>Range:[0x0 to 0xF]
1947:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1948:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1949:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1950:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure Sample and hold clock divider value.<BR>\n
1951:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration. This determines the frequency of conversio
1952:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the Sample and hold converter.
1953:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1954:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1955:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1956:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1957:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetClockDivider(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, uint
1958:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
1959:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong SHS Pointer",
1960:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1961:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong divide factor selected",
1962:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (divs_value < (uint32_t)0x10))
1963:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1964:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG =  (shs_ptr->SHSCFG & (~(uint32_t)SHS_SHSCFG_DIVS_Msk)) | (uint32_t)SHS_SHSCFG_SC
1965:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  ((uint32_t)divs_value << SHS_SHSCFG_DIVS_Pos) | (uint32_t)SHS_SHSCFG_SCWC_Msk
1966:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
1967:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1968:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1969:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1970:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_value gain value possible
1971:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                    Range:[0x0 to 0x3]
1972:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
1973:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num The channel number for which the gain has to be configured
1974:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1975:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1976:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1977:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the gain value for SHS.<BR>\n
1978:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would set the gain factor for a selected channel.
1979:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1980:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1981:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
1982:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1983:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1984:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t gain_value,
1985:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                        XMC_VADC_GROUP_INDEX_t group_num,
1986:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                        uint8_t ch_num);
1987:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1988:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
1989:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1990:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1991:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  max_calibration_time calibration time
1992:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                              Range:[0x0 to 0x3F]
1993:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1994:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1995:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1996:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configure the Maximum calibration timing.<BR>\n
1997:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * API would initialize the Maximum time after which the calibration should occur. If no adc conver
1998:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * occur during this duration then the calibration would run irrespective of conversions. The max t
1999:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter can go without a calibration is set in this API.
2000:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2001:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2003:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2004:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetMaxCalTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2005:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        uint32_t max_calibration_time)
2006:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2007:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetMaxCalTime:Wrong SHS Pointer",
2008:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2009:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2010:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALMAX_Msk);
2011:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR |=  ((uint32_t)max_calibration_time << SHS_CALCTR_CALMAX_Pos);
2012:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2013:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2014:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2015:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2016:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2017:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2018:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2019:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2020:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2021:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the Gain and offset calibration.<BR>\n
2022:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the gain and offset calibration for all the Sample and hold units.
2023:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2024:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2025:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()<BR>.
2026:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2027:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2028:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          XMC_VADC_GROUP_INDEX_t group_num);
2029:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2030:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2031:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2032:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2033:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2034:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2035:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2036:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the Gain and offset calibration.<BR>\n
2037:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the gain and offset calibration for all the Sample and hold units.
2038:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2039:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2040:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2041:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2042:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2043:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                           XMC_VADC_GROUP_INDEX_t group_num);
2044:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2045:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2046:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2047:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2048:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2049:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2050:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2051:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2052:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Read the calibration value for the selected gain level.<BR>\n
2053:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would return the offset calibration val
2054:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * selected gain level. This is applicable for all the channels in the group that use the particula
2055:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2056:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2057:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()<BR>.
2058:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2059:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2060:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
2061:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level);
2062:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2063:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2064:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2065:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2066:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2067:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  offset_calibration_value The offset calibration value to be set.
2068:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2069:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2070:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2071:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Set the calibration value for the selected gain level.<BR>\n
2072:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would set the offset value of the selec
2073:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2074:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2075:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()<BR>.
2076:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2077:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2078:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
2079:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
2080:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                    uint8_t offset_calibration_value);
2081:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2082:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2083:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2084:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2085:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2086:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num Channel number for which the configurations applies
2087:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2088:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2089:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2090:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the delta sigma loop of the SHS.<BR>\n
2091:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * There are 2 Delta-Sigma loops that can be configured. This API would configure the loop (loop_se
2092:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * with the appropriate group_num and channel_num.
2093:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP bit fields.
2094:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2095:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2096:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()<BR>.
2097:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2098:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2099:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_GROUP_INDEX_t group_num,
2100:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
2101:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                            uint8_t ch_num);
2102:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2103:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2104:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2105:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2106:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2107:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2108:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2109:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enable the selected Delta-Sigma loop.<BR>\n
2110:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2111:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2112:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2113:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2114:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2115:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2116:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2117:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               XMC_VADC_SHS_LOOP_CH_t loop_select)
2118:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2119:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong SHS Pointer",
2120:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2121:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2122:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2123:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2124:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP |= (uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select;
2125:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2126:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2127:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2128:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2129:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2130:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2131:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2132:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2133:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the selected delta sigma loop.<BR>\n
2134:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2135:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2136:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2137:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2138:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2139:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2140:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr
2141:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                XMC_VADC_SHS_LOOP_CH_t loop_select)
2142:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2143:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong SHS Pointer",
2144:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2145:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2146:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2147:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2148:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP &= ~((uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select);
2149:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2150:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2151:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2152:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2153:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2154:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2155:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2156:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group.
2157:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to the initialization data structure
2158:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2159:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2160:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2161:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2162:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC group module with the associated configuration structure pointed by \a conf
2163:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes the group specified as part of the \a group_ptr. It initializes group conversion cla
2164:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * configuration , boundary configuration by setting GxICLASS,GxARBCFG,GxBOUND, registers. It also
2165:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the EMUX control register if applicable. Refer related API's to change the configurat
2166:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  program.
2167:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2168:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2169:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_InputClassInit()<BR>
2170:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetPowerMode()<BR>
2171:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetBoundaries()<BR>
2172:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ExternalMuxControlInit()<BR>
2173:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2174:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_Init(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config);
2175:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2176:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2177:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2178:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group.
2179:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  group related conversion class parameter structure
2180:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type Use direct channels or EMUX channels. Refer @ref XMC_VADC_GROUP_CONV_t enum
2181:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
2182:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range[0x0, 0x1]
2183:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2184:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2185:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2186:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2187:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc group resource associated with \a config structure. It 
2188:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
2189:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the G_ICLASS register specified by \a set_num with the required settings.
2190:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2191:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2192:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2193:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_Init()
2194:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2195:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2196:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
2197:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
2198:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2199:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2200:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2201:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC Group which must be set as a slave
2202:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param master_grp The master group number<BR>
2203:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2204:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group The slave group number<BR>
2205:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2206:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2207:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2208:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2209:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2210:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a slave group.\n\n Conversion of identically numbered channels across
2211:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2212:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is the
2213:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * master group while Groups-0 and 3 are the slave groups. It uses the SYNCCTR register for the con
2214:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2215:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2216:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetSyncMaster()<BR>
2217:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR>
2218:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableChannelSyncRequest()<BR>
2219:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2220:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2221:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
2222:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2223:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2224:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2225:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2226:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param power_mode  Desired power mode
2227:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2228:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2229:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2230:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2231:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the power mode of a VADC group.\n\n For a VADC group to actually convert an analog si
2232:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter must be turned on.
2233:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2234:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2235:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2236:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2237:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
2238:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2239:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2240:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2241:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2242:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2243:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2244:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2245:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2246:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a master group.<BR>\n
2247:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Conversion of identically numbered channels across groups can be
2248:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2249:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is therefore the mast
2250:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Groups-0 and 3 are the slave groups.
2251:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2252:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2253:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2254:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2255:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr);
2256:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2257:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2258:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2259:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2260:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2261:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0x3]
2262:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2263:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2264:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2265:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ready signal for master group.<BR>\n
2266:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would read the \b slave_group number and determine which EVAL configuration to apply fo
2267:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * slave set. Checks the readiness of slaves in synchronized conversions. Conversion of identically
2268:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * across groups can be synchronized. For example, when the trigger to convert CH-1 of Group-2 is r
2269:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * possible to simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this ex
2270:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * therefore the master group while Groups-0 and 3 are the slave groups. Before the master can requ
2271:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * for synchronized conversion, it has the option of checking the readiness of the slaves.
2272:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2273:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2274:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()
2275:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2276:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2277:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2278:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2279:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2280:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the master VADC Group
2281:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2282:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2283:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2284:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2285:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Clears the ready signal for master group.<BR>\n
2286:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the readiness of slaves in synchronized conversions.This API would read the \b slave_gro
2287:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * determine which EVAL configuration to apply for the given master slave set. Then clears the conf
2288:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API is called when the master should issue the conversion request without waiting for the s
2289:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * assert a ready signal. The ready signal is asserted by the slave group(s) when the conversion is
2290:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * in these channels.
2291:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2292:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2293:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()<BR>
2294:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2295:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2296:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2297:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2298:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2299:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the master VADC Group
2300:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  Channel whose conversion triggers conversion in slave groups
2301:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2302:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2303:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2304:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up a channel for synchronized conversion.\n\n Conversion of identically numbered channels a
2305:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be synchronized. For example, when the trigger to
2306:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * convert CH-1 of Group-2 is received, it is possible to simultaneously request conversion of CH-1
2307:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Group-3. Group-2 in this example is therefore the master group while Groups-0 and 3 are the slav
2308:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Before the master can request its slaves for synchronized conversion, it has the option of check
2309:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * of the slaves.
2310:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2311:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2312:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2313:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2314:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
2315:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2316:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2317:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2318:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2319:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     Channel whose conversion triggers conversion in slave groups
2320:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2321:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2322:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2323:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disable the synchronization request for the particular channel specified as ch_num. To enable th
2324:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * call the API @ref XMC_VADC_GROUP_EnableChannelSyncRequest().
2325:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2326:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2327:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2328:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2329:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
2330:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2331:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2332:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2333:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2334:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2335:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return retuns IDLE if converter is free else returns busy. Refer @ref XMC_VADC_GROUP_STATE_t en
2336:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2337:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2338:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Checks the live status of the analog to digital converter. The converter can either idle doing n
2339:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sampling + converting.
2340:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2341:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2342:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2343:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2344:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr);
2345:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2346:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2347:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2348:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group whose global boundary registers are to be pr
2349:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>
2350:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2351:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>
2352:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2353:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2354:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2355:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2356:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2357:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
2358:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
2359:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
2360:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
2361:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * G_BOUND1 who will derive their values from this palette.
2362:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2363:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2364:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2365:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2366:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2367:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, 
2368:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary0, 
2369:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary1);
2370:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2371:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2372:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2373:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
2374:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value Select the boundary value.
2375:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2376:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2377:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2378:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2379:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Programs the boundary with \a boundary_value for result comparison.\n\n This defines a range aga
2380:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
2381:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
2382:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2383:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2384:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2385:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2386:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
2387:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_CHANNEL_BOUNDARY_t selection,
2388:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const uint16_t boundary_value); 
2389:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2390:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2391:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2392:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr_num   The service request number (0 through 3)
2393:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param type     IRQ type (Kernel specific interrupt vs Module wide shared interrupt )
2394:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2395:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2396:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2397:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Activates a Service Request line(manually trigger).<BR>\n
2398:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * VADC provides few SR lines for each group and a few more which is shared across all the groups.
2399:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * These SR lines can be connected to an NVIC node which in-turn would generate an interrupt.
2400:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would manually trigger the given SR line. Could be used for evaluation and testing purp
2401:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2402:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2404:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2405:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr, 
2406:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const uint32_t sr_num, 
2407:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_IRQ_t type);
2408:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2409:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2410:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2411:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
2412:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param emux_cfg   EMUX configuration structure
2413:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2414:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2415:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2416:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures group EMUX parameters associated with the \a emux_cfg configuration structure.\n\n An
2417:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * interface allows additional channels to be connected to a VADC group. The conversion properties
2418:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * of such channels can be different from the standard channels which are directly connected to the
2419:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API configures conversion properties of channels connected via EMUX interface.
2420:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2421:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2422:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
2423:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2424:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ExternalMuxControlInit(XMC_VADC_GROUP_t *const group_ptr,
2425:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                            const XMC_VADC_GROUP_EMUXCFG_t emux_cfg)
2426:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2427:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   uint32_t   emux_config;
2428:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2429:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ExternalMuxControlInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2430:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.starting_external_channel << (uint32_t)VADC_G_EMUXCTR_EMUXSET_P
2432:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
 787              	 .loc 2 2432 0
 788 0096 9E09     	 lsr r6,r3,#6
 789 0098 0B78     	 ldrb r3,[r1]
 790 009a 8021     	 mov r1,#128
 791              	.LVL94:
 792 009c 5B07     	 lsl r3,r3,#29
 793              	.LVL95:
2431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
 794              	 .loc 2 2431 0
 795 009e 5B0F     	 lsr r3,r3,#29
 796 00a0 3343     	 orr r3,r6
2433:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2434:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  = emux_config;
 797              	 .loc 2 2434 0
 798 00a2 F826     	 mov r6,#248
 799 00a4 7600     	 lsl r6,r6,#1
 800 00a6 8351     	 str r3,[r0,r6]
 801              	.LVL96:
2435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
2436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.emux_mode  << (uint32_t)VADC_G_EMUXCTR_EMUXMODE_Pos)|
2437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
2438:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2439:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
2440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config |= ((uint32_t)emux_cfg.emux_channel_select_style << (uint32_t)VADC_G_EMUXCTR_EMXCSS_P
2441:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2442:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  |= (emux_config | ((uint32_t)VADC_G_EMUXCTR_EMXWC_Msk)) ;
 802              	 .loc 2 2442 0
 803 00a8 8359     	 ldr r3,[r0,r6]
 804 00aa 0906     	 lsl r1,r1,#24
2435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
 805              	 .loc 2 2435 0
 806 00ac 3F07     	 lsl r7,r7,#28
 807 00ae 0B43     	 orr r3,r1
 808 00b0 AD0F     	 lsr r5,r5,#30
 809              	.LVL97:
 810 00b2 3B43     	 orr r3,r7
2436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
 811              	 .loc 2 2436 0
 812 00b4 AD06     	 lsl r5,r5,#26
 813 00b6 E40F     	 lsr r4,r4,#31
 814              	.LVL98:
 815 00b8 2B43     	 orr r3,r5
2437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 816              	 .loc 2 2437 0
 817 00ba 6407     	 lsl r4,r4,#29
 818 00bc 2343     	 orr r3,r4
 819 00be 191C     	 mov r1,r3
2440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 820              	 .loc 2 2440 0
 821 00c0 9307     	 lsl r3,r2,#30
 822              	 .loc 2 2442 0
 823 00c2 0B43     	 orr r3,r1
 824 00c4 8351     	 str r3,[r0,r6]
 825              	.LBE69:
 826              	.LBE68:
 447:../Libraries/XMCLib/src/xmc_vadc.c **** 
 827              	 .loc 1 447 0
 828 00c6 F0BD     	 pop {r4,r5,r6,r7,pc}
 829              	.L58:
 830              	 .align 2
 831              	.L57:
 832 00c8 FFF8FFFF 	 .word -1793
 833 00cc FFFFFFF8 	 .word -117440513
 834 00d0 FFFFE0FF 	 .word -2031617
 835              	 .cfi_endproc
 836              	.LFE137:
 838              	 .section .text.XMC_VADC_GROUP_InputClassInit,"ax",%progbits
 839              	 .align 2
 840              	 .global XMC_VADC_GROUP_InputClassInit
 841              	 .code 16
 842              	 .thumb_func
 844              	XMC_VADC_GROUP_InputClassInit:
 845              	.LFB138:
 452:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_class;
 846              	 .loc 1 452 0
 847              	 .cfi_startproc
 848              	.LVL99:
 849 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 850              	.LCFI7:
 851              	 .cfi_def_cfa_offset 20
 852              	 .cfi_offset 4,-20
 853              	 .cfi_offset 5,-16
 854              	 .cfi_offset 6,-12
 855              	 .cfi_offset 7,-8
 856              	 .cfi_offset 14,-4
 469:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 857              	 .loc 1 469 0
 858 0002 002A     	 cmp r2,#0
 859 0004 17D0     	 beq .L62
 860              	.LVL100:
 484:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_emux;
 861              	 .loc 1 484 0
 862 0006 CA02     	 lsl r2,r1,#11
 863              	.LVL101:
 485:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 864              	 .loc 1 485 0
 865 0008 4901     	 lsl r1,r1,#5
 866              	.LVL102:
 484:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_emux;
 867              	 .loc 1 484 0
 868 000a D50E     	 lsr r5,r2,#27
 869              	.LVL103:
 485:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 870              	 .loc 1 485 0
 871 000c 4A0F     	 lsr r2,r1,#29
 872              	.LVL104:
 873 000e 1821     	 mov r1,#24
 874              	.LVL105:
 875 0010 1026     	 mov r6,#16
 876 0012 8C46     	 mov ip,r1
 877 0014 0D4F     	 ldr r7,.L63
 878 0016 0E4C     	 ldr r4,.L63+4
 879              	.LVL106:
 880              	.L61:
 881 0018 9B00     	 lsl r3,r3,#2
 882              	.LVL107:
 883 001a C318     	 add r3,r0,r3
 489:../Libraries/XMCLib/src/xmc_vadc.c **** 
 884              	 .loc 1 489 0
 885 001c A020     	 mov r0,#160
 886              	.LVL108:
 887 001e 1958     	 ldr r1,[r3,r0]
 888              	.LVL109:
 497:../Libraries/XMCLib/src/xmc_vadc.c **** }
 889              	 .loc 1 497 0
 890              	 
 492:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 891              	 .loc 1 492 0
 892 0020 0C40     	 and r4,r1
 893              	.LVL110:
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 894              	 .loc 1 493 0
 895 0022 6146     	 mov r1,ip
 896 0024 8A40     	 lsl r2,r2,r1
 897              	.LVL111:
 898 0026 111C     	 mov r1,r2
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 899              	 .loc 1 495 0
 900 0028 2A1C     	 mov r2,r5
 901 002a B240     	 lsl r2,r2,r6
 493:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 902              	 .loc 1 493 0
 903 002c 2143     	 orr r1,r4
 904              	.LVL112:
 494:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 905              	 .loc 1 494 0
 906 002e 3940     	 and r1,r7
 907              	.LVL113:
 495:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 908              	 .loc 1 495 0
 909 0030 1143     	 orr r1,r2
 910              	.LVL114:
 496:../Libraries/XMCLib/src/xmc_vadc.c **** }
 911              	 .loc 1 496 0
 912 0032 1950     	 str r1,[r3,r0]
 913              	.LVL115:
 914              	 .loc 1 497 0
 915 0034 F0BD     	 pop {r4,r5,r6,r7,pc}
 916              	.LVL116:
 917              	.L62:
 475:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 918              	 .loc 1 475 0
 919 0036 CA06     	 lsl r2,r1,#27
 920              	.LVL117:
 476:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 921              	 .loc 1 476 0
 922 0038 4905     	 lsl r1,r1,#21
 923              	.LVL118:
 475:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 924              	 .loc 1 475 0
 925 003a D50E     	 lsr r5,r2,#27
 926              	.LVL119:
 927 003c 2027     	 mov r7,#32
 476:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 928              	 .loc 1 476 0
 929 003e 4A0F     	 lsr r2,r1,#29
 930              	.LVL120:
 931 0040 0821     	 mov r1,#8
 932              	.LVL121:
 933 0042 0026     	 mov r6,#0
 934 0044 7F42     	 neg r7,r7
 935 0046 8C46     	 mov ip,r1
 936 0048 024C     	 ldr r4,.L63+8
 937 004a E5E7     	 b .L61
 938              	.L64:
 939              	 .align 2
 940              	.L63:
 941 004c FFFFE0FF 	 .word -2031617
 942 0050 FFFFFFF8 	 .word -117440513
 943 0054 FFF8FFFF 	 .word -1793
 944              	 .cfi_endproc
 945              	.LFE138:
 947              	 .section .text.XMC_VADC_GROUP_SetPowerMode,"ax",%progbits
 948              	 .align 2
 949              	 .global XMC_VADC_GROUP_SetPowerMode
 950              	 .code 16
 951              	 .thumb_func
 953              	XMC_VADC_GROUP_SetPowerMode:
 954              	.LFB139:
 498:../Libraries/XMCLib/src/xmc_vadc.c **** 
 499:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which sets the power mode of analog converter of a VADC group */
 500:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
 501:../Libraries/XMCLib/src/xmc_vadc.c **** {
 955              	 .loc 1 501 0
 956              	 .cfi_startproc
 957              	.LVL122:
 502:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t arbcfg;
 503:../Libraries/XMCLib/src/xmc_vadc.c **** 
 504:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 505:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Power Mode", (power_mode <= XMC_VADC_GROUP_POWERMOD
 506:../Libraries/XMCLib/src/xmc_vadc.c **** 
 507:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = group_ptr->ARBCFG;
 958              	 .loc 1 507 0
 959 0000 8022     	 mov r2,#128
 501:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t arbcfg;
 960              	 .loc 1 501 0
 961 0002 10B5     	 push {r4,lr}
 962              	.LCFI8:
 963              	 .cfi_def_cfa_offset 8
 964              	 .cfi_offset 4,-8
 965              	 .cfi_offset 14,-4
 508:../Libraries/XMCLib/src/xmc_vadc.c **** 
 509:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= ~((uint32_t)VADC_G_ARBCFG_ANONC_Msk);
 966              	 .loc 1 509 0
 967 0004 0324     	 mov r4,#3
 507:../Libraries/XMCLib/src/xmc_vadc.c **** 
 968              	 .loc 1 507 0
 969 0006 8358     	 ldr r3,[r0,r2]
 970              	.LVL123:
 510:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg |= (uint32_t)power_mode;
 511:../Libraries/XMCLib/src/xmc_vadc.c **** 
 512:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = arbcfg;
 513:../Libraries/XMCLib/src/xmc_vadc.c **** }
 971              	 .loc 1 513 0
 972              	 
 509:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg |= (uint32_t)power_mode;
 973              	 .loc 1 509 0
 974 0008 A343     	 bic r3,r4
 975              	.LVL124:
 510:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg |= (uint32_t)power_mode;
 976              	 .loc 1 510 0
 977 000a 1943     	 orr r1,r3
 978              	.LVL125:
 512:../Libraries/XMCLib/src/xmc_vadc.c **** }
 979              	 .loc 1 512 0
 980 000c 8150     	 str r1,[r0,r2]
 981              	 .loc 1 513 0
 982 000e 10BD     	 pop {r4,pc}
 983              	 .cfi_endproc
 984              	.LFE139:
 986              	 .section .text.XMC_VADC_GROUP_SetSyncSlave,"ax",%progbits
 987              	 .align 2
 988              	 .global XMC_VADC_GROUP_SetSyncSlave
 989              	 .code 16
 990              	 .thumb_func
 992              	XMC_VADC_GROUP_SetSyncSlave:
 993              	.LFB140:
 514:../Libraries/XMCLib/src/xmc_vadc.c **** 
 515:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a slave group during sync conversions */
 516:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
 517:../Libraries/XMCLib/src/xmc_vadc.c **** {
 994              	 .loc 1 517 0
 995              	 .cfi_startproc
 996              	.LVL126:
 518:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 519:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 520:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
 521:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlave:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 522:../Libraries/XMCLib/src/xmc_vadc.c ****   
 523:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 524:../Libraries/XMCLib/src/xmc_vadc.c **** 
 525:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Determine the coding of SYNCTR */
 526:../Libraries/XMCLib/src/xmc_vadc.c ****   if (slave_grp > master_grp)
 527:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 528:../Libraries/XMCLib/src/xmc_vadc.c ****     master_grp = master_grp + 1U;
 997              	 .loc 1 528 0
 998 0000 9142     	 cmp r1,r2
 999 0002 9241     	 sbc r2,r2,r2
 1000              	.LVL127:
 1001 0004 5242     	 neg r2,r2
 1002 0006 8918     	 add r1,r1,r2
 1003              	.LVL128:
 529:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 530:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
 531:../Libraries/XMCLib/src/xmc_vadc.c ****   
 532:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program SYNCTR */
 533:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1004              	 .loc 1 533 0
 1005 0008 C022     	 mov r2,#192
 517:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 1006              	 .loc 1 517 0
 1007 000a 10B5     	 push {r4,lr}
 1008              	.LCFI9:
 1009              	 .cfi_def_cfa_offset 8
 1010              	 .cfi_offset 4,-8
 1011              	 .cfi_offset 14,-4
 534:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1012              	 .loc 1 534 0
 1013 000c 0324     	 mov r4,#3
 533:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1014              	 .loc 1 533 0
 1015 000e 8358     	 ldr r3,[r0,r2]
 1016              	.LVL129:
 535:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   |= master_grp;
 536:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 537:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1017              	 .loc 1 537 0
 1018              	 
 534:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   |= master_grp;
 1019              	 .loc 1 534 0
 1020 0010 A343     	 bic r3,r4
 1021              	.LVL130:
 535:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   |= master_grp;
 1022              	 .loc 1 535 0
 1023 0012 1943     	 orr r1,r3
 1024              	.LVL131:
 536:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1025              	 .loc 1 536 0
 1026 0014 8150     	 str r1,[r0,r2]
 1027              	 .loc 1 537 0
 1028 0016 10BD     	 pop {r4,pc}
 1029              	 .cfi_endproc
 1030              	.LFE140:
 1032              	 .section .text.XMC_VADC_GROUP_SetSyncMaster,"ax",%progbits
 1033              	 .align 2
 1034              	 .global XMC_VADC_GROUP_SetSyncMaster
 1035              	 .code 16
 1036              	 .thumb_func
 1038              	XMC_VADC_GROUP_SetSyncMaster:
 1039              	.LFB141:
 538:../Libraries/XMCLib/src/xmc_vadc.c **** 
 539:../Libraries/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a master group during sync conversions */
 540:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr)
 541:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1040              	 .loc 1 541 0
 1041              	 .cfi_startproc
 1042              	.LVL132:
 542:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 543:../Libraries/XMCLib/src/xmc_vadc.c **** 
 544:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncMaster:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 545:../Libraries/XMCLib/src/xmc_vadc.c **** 
 546:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1043              	 .loc 1 546 0
 1044 0000 C022     	 mov r2,#192
 547:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1045              	 .loc 1 547 0
 1046 0002 0321     	 mov r1,#3
 546:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1047              	 .loc 1 546 0
 1048 0004 8358     	 ldr r3,[r0,r2]
 1049              	.LVL133:
 548:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 549:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1050              	 .loc 1 549 0
 1051              	 
 547:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1052              	 .loc 1 547 0
 1053 0006 8B43     	 bic r3,r1
 1054              	.LVL134:
 548:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1055              	 .loc 1 548 0
 1056 0008 8350     	 str r3,[r0,r2]
 1057              	 .loc 1 549 0
 1058 000a 7047     	 bx lr
 1059              	 .cfi_endproc
 1060              	.LFE141:
 1062              	 .section .text.XMC_VADC_GROUP_CheckSlaveReadiness,"ax",%progbits
 1063              	 .align 2
 1064              	 .global XMC_VADC_GROUP_CheckSlaveReadiness
 1065              	 .code 16
 1066              	 .thumb_func
 1068              	XMC_VADC_GROUP_CheckSlaveReadiness:
 1069              	.LFB142:
 550:../Libraries/XMCLib/src/xmc_vadc.c **** 
 551:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable checking of readiness of slaves before a synchronous conversion request is issued 
 552:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 553:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1070              	 .loc 1 553 0
 1071              	 .cfi_startproc
 1072              	.LVL135:
 554:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 555:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t slave_kernel;
 556:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t adc_ready;
 557:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t ready_pos;
 558:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 559:../Libraries/XMCLib/src/xmc_vadc.c ****  
 560:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
 561:../Libraries/XMCLib/src/xmc_vadc.c ****  
 562:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 563:../Libraries/XMCLib/src/xmc_vadc.c ****  
 564:../Libraries/XMCLib/src/xmc_vadc.c ****   slave_kernel  =  slave_group;
 565:../Libraries/XMCLib/src/xmc_vadc.c **** 
 566:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == slave_kernel)
 567:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 568:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = 1U;
 569:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 570:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 571:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 572:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = slave_kernel;
 573:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 574:../Libraries/XMCLib/src/xmc_vadc.c **** 
 575:../Libraries/XMCLib/src/xmc_vadc.c ****   if (1U == adc_ready)
 576:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 577:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR1_Pos;
 578:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 579:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (2U == adc_ready)
 580:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 581:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR2_Pos;
 582:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 583:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 584:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 585:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR3_Pos;
 586:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 587:../Libraries/XMCLib/src/xmc_vadc.c **** 
 588:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (uint32_t)((uint32_t)1 << ready_pos);
 589:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 590:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= ((uint32_t)VADC_G_SYNCTR_EVALR1_Msk);
 1073              	 .loc 1 590 0
 1074 0000 C022     	 mov r2,#192
 1075 0002 1023     	 mov r3,#16
 1076 0004 8158     	 ldr r1,[r0,r2]
 1077              	.LVL136:
 591:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 592:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1078              	 .loc 1 592 0
 1079              	 
 590:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 1080              	 .loc 1 590 0
 1081 0006 0B43     	 orr r3,r1
 1082 0008 8350     	 str r3,[r0,r2]
 1083              	 .loc 1 592 0
 1084 000a 7047     	 bx lr
 1085              	 .cfi_endproc
 1086              	.LFE142:
 1088              	 .section .text.XMC_VADC_GROUP_IgnoreSlaveReadiness,"ax",%progbits
 1089              	 .align 2
 1090              	 .global XMC_VADC_GROUP_IgnoreSlaveReadiness
 1091              	 .code 16
 1092              	 .thumb_func
 1094              	XMC_VADC_GROUP_IgnoreSlaveReadiness:
 1095              	.LFB143:
 593:../Libraries/XMCLib/src/xmc_vadc.c **** 
 594:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable checking of readiness of slaves during synchronous conversions */
 595:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 596:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1096              	 .loc 1 596 0
 1097              	 .cfi_startproc
 1098              	.LVL137:
 597:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 598:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t slave_kernel;
 599:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t adc_ready;
 600:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t ready_pos;
 601:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 602:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
 603:../Libraries/XMCLib/src/xmc_vadc.c **** 
 604:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
 605:../Libraries/XMCLib/src/xmc_vadc.c ****   slave_kernel = slave_group;
 606:../Libraries/XMCLib/src/xmc_vadc.c **** 
 607:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == slave_kernel)
 608:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 609:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = 1U;
 610:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 611:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 612:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 613:../Libraries/XMCLib/src/xmc_vadc.c ****     adc_ready = slave_kernel;
 614:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 615:../Libraries/XMCLib/src/xmc_vadc.c **** 
 616:../Libraries/XMCLib/src/xmc_vadc.c ****   if (1U == adc_ready)
 617:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 618:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR1_Pos;
 619:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 620:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (2U == adc_ready)
 621:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 622:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR2_Pos;
 623:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 624:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 625:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 626:../Libraries/XMCLib/src/xmc_vadc.c ****     ready_pos = (uint8_t)VADC_G_SYNCTR_EVALR3_Pos;
 627:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 628:../Libraries/XMCLib/src/xmc_vadc.c **** 
 629:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR &= ~((uint32_t)((uint32_t)1 << ready_pos));
 630:../Libraries/XMCLib/src/xmc_vadc.c **** #else
 631:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR &= ~((uint32_t)VADC_G_SYNCTR_EVALR1_Msk);
 1099              	 .loc 1 631 0
 1100 0000 C022     	 mov r2,#192
 1101 0002 1021     	 mov r1,#16
 1102              	.LVL138:
 1103 0004 8358     	 ldr r3,[r0,r2]
 632:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 633:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1104              	 .loc 1 633 0
 1105              	 
 631:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 1106              	 .loc 1 631 0
 1107 0006 8B43     	 bic r3,r1
 1108 0008 8350     	 str r3,[r0,r2]
 1109              	 .loc 1 633 0
 1110 000a 7047     	 bx lr
 1111              	 .cfi_endproc
 1112              	.LFE143:
 1114              	 .section .text.XMC_VADC_GROUP_EnableChannelSyncRequest,"ax",%progbits
 1115              	 .align 2
 1116              	 .global XMC_VADC_GROUP_EnableChannelSyncRequest
 1117              	 .code 16
 1118              	 .thumb_func
 1120              	XMC_VADC_GROUP_EnableChannelSyncRequest:
 1121              	.LFB144:
 634:../Libraries/XMCLib/src/xmc_vadc.c **** 
 635:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the synchronous conversion feature - Applicable only to kernel configured as maste
 636:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
 637:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1122              	 .loc 1 637 0
 1123              	 .cfi_startproc
 1124              	.LVL139:
 638:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 639:../Libraries/XMCLib/src/xmc_vadc.c **** 
 640:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
 641:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Channel Number",
 642:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 643:../Libraries/XMCLib/src/xmc_vadc.c **** 
 644:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1125              	 .loc 1 644 0
 1126 0000 C023     	 mov r3,#192
 1127 0002 C358     	 ldr r3,[r0,r3]
 1128              	.LVL140:
 645:../Libraries/XMCLib/src/xmc_vadc.c **** 
 646:../Libraries/XMCLib/src/xmc_vadc.c ****   if (!(synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk))
 1129              	 .loc 1 646 0
 1130 0004 9B07     	 lsl r3,r3,#30
 1131 0006 08D1     	 bne .L71
 1132              	.LVL141:
 647:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 648:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] |= (uint32_t)((uint32_t)1 << VADC_G_CHCTR_SYNC_Pos);
 1133              	 .loc 1 648 0
 1134 0008 8022     	 mov r2,#128
 1135 000a 8900     	 lsl r1,r1,#2
 1136              	.LVL142:
 1137 000c 4118     	 add r1,r0,r1
 1138 000e 8020     	 mov r0,#128
 1139              	.LVL143:
 1140 0010 9200     	 lsl r2,r2,#2
 1141 0012 8B58     	 ldr r3,[r1,r2]
 1142 0014 C000     	 lsl r0,r0,#3
 1143 0016 0343     	 orr r3,r0
 1144 0018 8B50     	 str r3,[r1,r2]
 1145              	.L71:
 649:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 650:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1146              	 .loc 1 650 0
 1147              	 
 1148 001a 7047     	 bx lr
 1149              	 .cfi_endproc
 1150              	.LFE144:
 1152              	 .section .text.XMC_VADC_GROUP_DisableChannelSyncRequest,"ax",%progbits
 1153              	 .align 2
 1154              	 .global XMC_VADC_GROUP_DisableChannelSyncRequest
 1155              	 .code 16
 1156              	 .thumb_func
 1158              	XMC_VADC_GROUP_DisableChannelSyncRequest:
 1159              	.LFB145:
 651:../Libraries/XMCLib/src/xmc_vadc.c **** 
 652:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable synchronous conversion feature */
 653:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
 654:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1160              	 .loc 1 654 0
 1161              	 .cfi_startproc
 1162              	.LVL144:
 655:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    synctr;
 656:../Libraries/XMCLib/src/xmc_vadc.c **** 
 657:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
 658:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Channel Number",
 659:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 660:../Libraries/XMCLib/src/xmc_vadc.c **** 
 661:../Libraries/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 1163              	 .loc 1 661 0
 1164 0000 C023     	 mov r3,#192
 1165 0002 C358     	 ldr r3,[r0,r3]
 1166              	.LVL145:
 662:../Libraries/XMCLib/src/xmc_vadc.c **** 
 663:../Libraries/XMCLib/src/xmc_vadc.c ****   if (synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk)
 1167              	 .loc 1 663 0
 1168 0004 9B07     	 lsl r3,r3,#30
 1169 0006 07D0     	 beq .L73
 1170              	.LVL146:
 664:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 665:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_SYNC_Msk);
 1171              	 .loc 1 665 0
 1172 0008 8022     	 mov r2,#128
 1173 000a 8900     	 lsl r1,r1,#2
 1174              	.LVL147:
 1175 000c 4118     	 add r1,r0,r1
 1176 000e 9200     	 lsl r2,r2,#2
 1177 0010 8858     	 ldr r0,[r1,r2]
 1178              	.LVL148:
 1179 0012 024B     	 ldr r3,.L78
 1180 0014 0340     	 and r3,r0
 1181 0016 8B50     	 str r3,[r1,r2]
 1182              	.L73:
 666:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 667:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1183              	 .loc 1 667 0
 1184              	 
 1185 0018 7047     	 bx lr
 1186              	.L79:
 1187 001a C046     	 .align 2
 1188              	.L78:
 1189 001c FFFBFFFF 	 .word -1025
 1190              	 .cfi_endproc
 1191              	.LFE145:
 1193              	 .section .text.XMC_VADC_GROUP_IsConverterBusy,"ax",%progbits
 1194              	 .align 2
 1195              	 .global XMC_VADC_GROUP_IsConverterBusy
 1196              	 .code 16
 1197              	 .thumb_func
 1199              	XMC_VADC_GROUP_IsConverterBusy:
 1200              	.LFB146:
 668:../Libraries/XMCLib/src/xmc_vadc.c **** 
 669:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the converter state - Idle vs Busy */ 
 670:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr)
 671:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1201              	 .loc 1 671 0
 1202              	 .cfi_startproc
 1203              	.LVL149:
 672:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      arbcfg;
 673:../Libraries/XMCLib/src/xmc_vadc.c **** 
 674:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsConverterBusy:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
 675:../Libraries/XMCLib/src/xmc_vadc.c **** 
 676:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg  = group_ptr->ARBCFG;
 1204              	 .loc 1 676 0
 1205 0000 8023     	 mov r3,#128
 1206 0002 C058     	 ldr r0,[r0,r3]
 1207              	.LVL150:
 677:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= (uint32_t)VADC_G_ARBCFG_BUSY_Msk;
 678:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg = arbcfg >> VADC_G_ARBCFG_BUSY_Pos;
 679:../Libraries/XMCLib/src/xmc_vadc.c **** 
 680:../Libraries/XMCLib/src/xmc_vadc.c ****   return( (XMC_VADC_GROUP_STATE_t)arbcfg);
 681:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1208              	 .loc 1 681 0
 1209              	 
 677:../Libraries/XMCLib/src/xmc_vadc.c ****   arbcfg &= (uint32_t)VADC_G_ARBCFG_BUSY_Msk;
 1210              	 .loc 1 677 0
 1211 0004 4000     	 lsl r0,r0,#1
 1212              	.LVL151:
 680:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1213              	 .loc 1 680 0
 1214 0006 C00F     	 lsr r0,r0,#31
 1215              	 .loc 1 681 0
 1216 0008 7047     	 bx lr
 1217              	 .cfi_endproc
 1218              	.LFE146:
 1220 000a C046     	 .section .text.XMC_VADC_GROUP_SetBoundaries,"ax",%progbits
 1221              	 .align 2
 1222              	 .global XMC_VADC_GROUP_SetBoundaries
 1223              	 .code 16
 1224              	 .thumb_func
 1226              	XMC_VADC_GROUP_SetBoundaries:
 1227              	.LFB147:
 682:../Libraries/XMCLib/src/xmc_vadc.c **** 
 683:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set boundaries for conversion results */
 684:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, const uint32_t boundary0, cons
 685:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1228              	 .loc 1 685 0
 1229              	 .cfi_startproc
 1230              	.LVL152:
 1231 0000 30B5     	 push {r4,r5,lr}
 1232              	.LCFI10:
 1233              	 .cfi_def_cfa_offset 12
 1234              	 .cfi_offset 4,-12
 1235              	 .cfi_offset 5,-8
 1236              	 .cfi_offset 14,-4
 686:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 687:../Libraries/XMCLib/src/xmc_vadc.c **** 
 688:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaries:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 689:../Libraries/XMCLib/src/xmc_vadc.c **** 
 690:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 691:../Libraries/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 1237              	 .loc 1 691 0
 1238 0002 B824     	 mov r4,#184
 692:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 693:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 1239              	 .loc 1 693 0
 1240 0004 034B     	 ldr r3,.L82
 691:../Libraries/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 1241              	 .loc 1 691 0
 1242 0006 0559     	 ldr r5,[r0,r4]
 1243              	.LVL153:
 694:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary0 << VADC_G_BOUND_BOUNDARY0_Pos);
 695:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary1 << VADC_G_BOUND_BOUNDARY1_Pos);
 1244              	 .loc 1 695 0
 1245 0008 1204     	 lsl r2,r2,#16
 1246              	.LVL154:
 693:../Libraries/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary0 << VADC_G_BOUND_BOUNDARY0_Pos);
 1247              	 .loc 1 693 0
 1248 000a 2B40     	 and r3,r5
 1249              	.LVL155:
 1250 000c 1143     	 orr r1,r2
 1251              	.LVL156:
 1252              	 .loc 1 695 0
 1253 000e 1943     	 orr r1,r3
 1254              	.LVL157:
 696:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 1255              	 .loc 1 696 0
 1256 0010 0151     	 str r1,[r0,r4]
 697:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1257              	 .loc 1 697 0
 1258              	 
 1259 0012 30BD     	 pop {r4,r5,pc}
 1260              	.L83:
 1261              	 .align 2
 1262              	.L82:
 1263 0014 00F000F0 	 .word -268374016
 1264              	 .cfi_endproc
 1265              	.LFE147:
 1267              	 .section .text.XMC_VADC_GROUP_SetIndividualBoundary,"ax",%progbits
 1268              	 .align 2
 1269              	 .global XMC_VADC_GROUP_SetIndividualBoundary
 1270              	 .code 16
 1271              	 .thumb_func
 1273              	XMC_VADC_GROUP_SetIndividualBoundary:
 1274              	.LFB148:
 698:../Libraries/XMCLib/src/xmc_vadc.c **** 
 699:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 700:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
 701:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 702:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const uint16_t boundary_value)
 703:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1275              	 .loc 1 703 0
 1276              	 .cfi_startproc
 1277              	.LVL158:
 704:../Libraries/XMCLib/src/xmc_vadc.c **** 
 705:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 706:../Libraries/XMCLib/src/xmc_vadc.c **** 
 707:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 708:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Boundary Selection",
 709:../Libraries/XMCLib/src/xmc_vadc.c ****                ((XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection) ||
 710:../Libraries/XMCLib/src/xmc_vadc.c ****                 (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)))
 711:../Libraries/XMCLib/src/xmc_vadc.c **** 
 712:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 713:../Libraries/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 1278              	 .loc 1 713 0
 1279 0000 B823     	 mov r3,#184
 1280 0002 C358     	 ldr r3,[r0,r3]
 1281              	.LVL159:
 714:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection)
 1282              	 .loc 1 714 0
 1283 0004 0029     	 cmp r1,#0
 1284 0006 09D0     	 beq .L87
 715:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 716:../Libraries/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 717:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY0_Pos);
 718:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 719:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)
 1285              	 .loc 1 719 0
 1286 0008 0129     	 cmp r1,#1
 1287 000a 02D0     	 beq .L88
 1288              	.LVL160:
 1289              	.L86:
 720:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 721:../Libraries/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 722:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY1_Pos);
 723:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 724:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 725:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 726:../Libraries/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 727:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 728:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 1290              	 .loc 1 728 0
 1291 000c B822     	 mov r2,#184
 729:../Libraries/XMCLib/src/xmc_vadc.c **** 
 730:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1292              	 .loc 1 730 0
 1293              	 
 728:../Libraries/XMCLib/src/xmc_vadc.c **** 
 1294              	 .loc 1 728 0
 1295 000e 8350     	 str r3,[r0,r2]
 1296              	 .loc 1 730 0
 1297 0010 7047     	 bx lr
 1298              	.LVL161:
 1299              	.L88:
 721:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY1_Pos);
 1300              	 .loc 1 721 0
 1301 0012 0449     	 ldr r1,.L89
 1302              	.LVL162:
 722:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1303              	 .loc 1 722 0
 1304 0014 1204     	 lsl r2,r2,#16
 1305              	.LVL163:
 721:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY1_Pos);
 1306              	 .loc 1 721 0
 1307 0016 0B40     	 and r3,r1
 1308              	.LVL164:
 722:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1309              	 .loc 1 722 0
 1310 0018 1343     	 orr r3,r2
 1311              	.LVL165:
 1312 001a F7E7     	 b .L86
 1313              	.LVL166:
 1314              	.L87:
 716:../Libraries/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY0_Pos);
 1315              	 .loc 1 716 0
 1316 001c 1B0B     	 lsr r3,r3,#12
 1317              	.LVL167:
 1318 001e 1B03     	 lsl r3,r3,#12
 1319              	.LVL168:
 717:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1320              	 .loc 1 717 0
 1321 0020 1343     	 orr r3,r2
 1322              	.LVL169:
 1323 0022 F3E7     	 b .L86
 1324              	.L90:
 1325              	 .align 2
 1326              	.L89:
 1327 0024 FFFF00F0 	 .word -268369921
 1328              	 .cfi_endproc
 1329              	.LFE148:
 1331              	 .section .text.XMC_VADC_GROUP_TriggerServiceRequest,"ax",%progbits
 1332              	 .align 2
 1333              	 .global XMC_VADC_GROUP_TriggerServiceRequest
 1334              	 .code 16
 1335              	 .thumb_func
 1337              	XMC_VADC_GROUP_TriggerServiceRequest:
 1338              	.LFB149:
 731:../Libraries/XMCLib/src/xmc_vadc.c **** 
 732:../Libraries/XMCLib/src/xmc_vadc.c **** /* Manually assert service request (Interrupt) to NVIC */
 733:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr,
 734:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const uint32_t sr_num,
 735:../Libraries/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_IRQ_t type)
 736:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1339              	 .loc 1 736 0
 1340              	 .cfi_startproc
 1341              	.LVL170:
 737:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sract;
 738:../Libraries/XMCLib/src/xmc_vadc.c **** 
 739:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 740:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR number", (sr_num <= XMC_VADC_SR_SHARED_
 741:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR type", ((type)<= XMC_VADC_GROUP_IRQ_SHA
 742:../Libraries/XMCLib/src/xmc_vadc.c **** 
 743:../Libraries/XMCLib/src/xmc_vadc.c ****   sract = group_ptr->SRACT;
 1342              	 .loc 1 743 0
 1343 0000 E423     	 mov r3,#228
 1344 0002 5B00     	 lsl r3,r3,#1
 1345 0004 C358     	 ldr r3,[r0,r3]
 1346              	.LVL171:
 744:../Libraries/XMCLib/src/xmc_vadc.c **** 
 745:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_IRQ_KERNEL == type)
 1347              	 .loc 1 745 0
 1348 0006 002A     	 cmp r2,#0
 1349 0008 00D0     	 beq .L94
 746:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 747:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << sr_num);
 748:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 749:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 750:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 751:../Libraries/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << (sr_num + (uint32_t)8));
 1350              	 .loc 1 751 0
 1351 000a 0831     	 add r1,r1,#8
 1352              	.LVL172:
 1353              	.L94:
 1354 000c 0122     	 mov r2,#1
 1355              	.LVL173:
 1356 000e 8A40     	 lsl r2,r2,r1
 1357 0010 111C     	 mov r1,r2
 1358 0012 1943     	 orr r1,r3
 1359              	.LVL174:
 752:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 753:../Libraries/XMCLib/src/xmc_vadc.c **** 
 754:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SRACT = sract;
 1360              	 .loc 1 754 0
 1361 0014 E423     	 mov r3,#228
 1362 0016 5B00     	 lsl r3,r3,#1
 1363 0018 C150     	 str r1,[r0,r3]
 755:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1364              	 .loc 1 755 0
 1365              	 
 1366 001a 7047     	 bx lr
 1367              	 .cfi_endproc
 1368              	.LFE149:
 1370              	 .section .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode,"ax",%progbits
 1371              	 .align 2
 1372              	 .global XMC_VADC_GROUP_SetBoundaryEventInterruptNode
 1373              	 .code 16
 1374              	 .thumb_func
 1376              	XMC_VADC_GROUP_SetBoundaryEventInterruptNode:
 1377              	.LFB150:
 756:../Libraries/XMCLib/src/xmc_vadc.c **** 
 757:../Libraries/XMCLib/src/xmc_vadc.c **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
 758:../Libraries/XMCLib/src/xmc_vadc.c **** 
 759:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the SR line for the Boundary flag node pointer*/
 760:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
 761:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                   const uint8_t boundary_flag_num,
 762:../Libraries/XMCLib/src/xmc_vadc.c ****                                                                   const XMC_VADC_BOUNDARY_NODE_t sr
 763:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1378              	 .loc 1 763 0
 1379              	 .cfi_startproc
 1380              	.LVL175:
 1381 0000 30B5     	 push {r4,r5,lr}
 1382              	.LCFI11:
 1383              	 .cfi_def_cfa_offset 12
 1384              	 .cfi_offset 4,-12
 1385              	 .cfi_offset 5,-8
 1386              	 .cfi_offset 14,-4
 764:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t flag_pos;
 765:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaryEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GRO
 766:../Libraries/XMCLib/src/xmc_vadc.c **** 
 767:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the GxBFLNP */
 768:../Libraries/XMCLib/src/xmc_vadc.c ****   flag_pos = (uint32_t)boundary_flag_num << (uint32_t)2;
 769:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP &= ~((uint32_t)VADC_G_BFLNP_BFL0NP_Msk << flag_pos);
 1387              	 .loc 1 769 0
 1388 0002 0F25     	 mov r5,#15
 768:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP &= ~((uint32_t)VADC_G_BFLNP_BFL0NP_Msk << flag_pos);
 1389              	 .loc 1 768 0
 1390 0004 8900     	 lsl r1,r1,#2
 1391              	.LVL176:
 770:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 1392              	 .loc 1 770 0
 1393 0006 8A40     	 lsl r2,r2,r1
 1394              	.LVL177:
 769:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 1395              	 .loc 1 769 0
 1396 0008 D423     	 mov r3,#212
 1397 000a 8D40     	 lsl r5,r5,r1
 1398              	 .loc 1 770 0
 1399 000c 111C     	 mov r1,r2
 769:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 1400              	 .loc 1 769 0
 1401 000e C458     	 ldr r4,[r0,r3]
 771:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1402              	 .loc 1 771 0
 1403              	 
 769:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 1404              	 .loc 1 769 0
 1405 0010 AC43     	 bic r4,r5
 1406 0012 C450     	 str r4,[r0,r3]
 770:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 1407              	 .loc 1 770 0
 1408 0014 C458     	 ldr r4,[r0,r3]
 1409 0016 2143     	 orr r1,r4
 1410 0018 C150     	 str r1,[r0,r3]
 1411              	 .loc 1 771 0
 1412 001a 30BD     	 pop {r4,r5,pc}
 1413              	 .cfi_endproc
 1414              	.LFE150:
 1416              	 .section .text.XMC_VADC_GLOBAL_SHS_Init,"ax",%progbits
 1417              	 .align 2
 1418              	 .global XMC_VADC_GLOBAL_SHS_Init
 1419              	 .code 16
 1420              	 .thumb_func
 1422              	XMC_VADC_GLOBAL_SHS_Init:
 1423              	.LFB151:
 772:../Libraries/XMCLib/src/xmc_vadc.c **** 
 773:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_BOUNDARY_FLAG_SELECT */
 774:../Libraries/XMCLib/src/xmc_vadc.c **** 
 775:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_GROUP_AVAILABLE */
 776:../Libraries/XMCLib/src/xmc_vadc.c **** 
 777:../Libraries/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 778:../Libraries/XMCLib/src/xmc_vadc.c **** 
 779:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to Initialize the Sample and hold features*/
 780:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONFI
 781:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1424              	 .loc 1 781 0
 1425              	 .cfi_startproc
 1426              	.LVL178:
 782:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(voi
 783:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong Index number",(config == (XMC_VADC_GLOBAL_SHS_CONFIG_t
 784:../Libraries/XMCLib/src/xmc_vadc.c **** 
 785:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Initialize the SHS Configuration register*/
 786:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->SHSCFG = (uint32_t)((uint32_t)config->shscfg | (uint32_t)SHS_SHSCFG_SCWC_Msk);
 1427              	 .loc 1 786 0
 1428 0000 8023     	 mov r3,#128
 781:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(voi
 1429              	 .loc 1 781 0
 1430 0002 10B5     	 push {r4,lr}
 1431              	.LCFI12:
 1432              	 .cfi_def_cfa_offset 8
 1433              	 .cfi_offset 4,-8
 1434              	 .cfi_offset 14,-4
 1435              	 .loc 1 786 0
 1436 0004 0A68     	 ldr r2,[r1]
 1437 0006 1B02     	 lsl r3,r3,#8
 1438 0008 1343     	 orr r3,r2
 1439 000a 0364     	 str r3,[r0,#64]
 787:../Libraries/XMCLib/src/xmc_vadc.c **** 
 788:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Select the Calibration order*/
 789:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALORD_Msk);
 1440              	 .loc 1 789 0
 1441 000c BC23     	 mov r3,#188
 1442 000e 0124     	 mov r4,#1
 1443 0010 C258     	 ldr r2,[r0,r3]
 790:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR |=  (uint32_t) ((uint32_t)config->calibration_order << SHS_CALCTR_CALORD_Pos);
 791:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1444              	 .loc 1 791 0
 1445              	 
 789:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR |=  (uint32_t) ((uint32_t)config->calibration_order << SHS_CALCTR_CALORD_Pos);
 1446              	 .loc 1 789 0
 1447 0012 A243     	 bic r2,r4
 1448 0014 C250     	 str r2,[r0,r3]
 790:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR |=  (uint32_t) ((uint32_t)config->calibration_order << SHS_CALCTR_CALORD_Pos);
 1449              	 .loc 1 790 0
 1450 0016 C258     	 ldr r2,[r0,r3]
 1451 0018 0979     	 ldrb r1,[r1,#4]
 1452              	.LVL179:
 1453 001a 0A43     	 orr r2,r1
 1454 001c C250     	 str r2,[r0,r3]
 1455              	 .loc 1 791 0
 1456 001e 10BD     	 pop {r4,pc}
 1457              	 .cfi_endproc
 1458              	.LFE151:
 1460              	 .section .text.XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode,"ax",%progbits
 1461              	 .align 2
 1462              	 .global XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode
 1463              	 .code 16
 1464              	 .thumb_func
 1466              	XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:
 1467              	.LFB152:
 792:../Libraries/XMCLib/src/xmc_vadc.c **** 
 793:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the accelerated mode of conversion */
 794:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROUP
 795:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1468              	 .loc 1 795 0
 1469              	 .cfi_startproc
 1470              	.LVL180:
 796:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong SHS Pointer",
 797:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 798:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC_
 799:../Libraries/XMCLib/src/xmc_vadc.c **** 
 800:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 801:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 1471              	 .loc 1 801 0
 1472 0000 0029     	 cmp r1,#0
 1473 0002 07D0     	 beq .L100
 802:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 803:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)SHS_TIMCFG0_AT_Msk;
 804:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 805:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 1474              	 .loc 1 805 0
 1475 0004 0129     	 cmp r1,#1
 1476 0006 00D0     	 beq .L101
 1477              	.LVL181:
 1478              	.L97:
 806:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 807:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)SHS_TIMCFG1_AT_Msk;
 808:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 809:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 810:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 811:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 812:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 813:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1479              	 .loc 1 813 0
 1480              	 
 1481 0008 7047     	 bx lr
 1482              	.LVL182:
 1483              	.L101:
 807:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1484              	 .loc 1 807 0
 1485 000a 8423     	 mov r3,#132
 1486 000c C258     	 ldr r2,[r0,r3]
 1487 000e 1143     	 orr r1,r2
 1488              	.LVL183:
 1489 0010 C150     	 str r1,[r0,r3]
 1490 0012 F9E7     	 b .L97
 1491              	.LVL184:
 1492              	.L100:
 803:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1493              	 .loc 1 803 0
 1494 0014 8022     	 mov r2,#128
 1495 0016 0123     	 mov r3,#1
 1496 0018 8158     	 ldr r1,[r0,r2]
 1497              	.LVL185:
 1498 001a 0B43     	 orr r3,r1
 1499 001c 8350     	 str r3,[r0,r2]
 1500 001e F3E7     	 b .L97
 1501              	 .cfi_endproc
 1502              	.LFE152:
 1504              	 .section .text.XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode,"ax",%progbits
 1505              	 .align 2
 1506              	 .global XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode
 1507              	 .code 16
 1508              	 .thumb_func
 1510              	XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:
 1511              	.LFB153:
 814:../Libraries/XMCLib/src/xmc_vadc.c **** 
 815:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to disable the accelerated mode of conversion */
 816:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROU
 817:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1512              	 .loc 1 817 0
 1513              	 .cfi_startproc
 1514              	.LVL186:
 818:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong SHS Pointer",
 819:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 820:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC
 821:../Libraries/XMCLib/src/xmc_vadc.c **** 
 822:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 823:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 1515              	 .loc 1 823 0
 1516 0000 0029     	 cmp r1,#0
 1517 0002 07D0     	 beq .L105
 824:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 825:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~(uint32_t)SHS_TIMCFG0_AT_Msk;
 826:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 827:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 1518              	 .loc 1 827 0
 1519 0004 0129     	 cmp r1,#1
 1520 0006 00D0     	 beq .L106
 1521              	.LVL187:
 1522              	.L102:
 828:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 829:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~(uint32_t)SHS_TIMCFG1_AT_Msk;
 830:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 831:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 832:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 833:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 834:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 835:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1523              	 .loc 1 835 0
 1524              	 
 1525 0008 7047     	 bx lr
 1526              	.LVL188:
 1527              	.L106:
 829:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1528              	 .loc 1 829 0
 1529 000a 8422     	 mov r2,#132
 1530 000c 8358     	 ldr r3,[r0,r2]
 1531 000e 8B43     	 bic r3,r1
 1532 0010 8350     	 str r3,[r0,r2]
 1533 0012 F9E7     	 b .L102
 1534              	.L105:
 825:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1535              	 .loc 1 825 0
 1536 0014 8022     	 mov r2,#128
 1537 0016 8358     	 ldr r3,[r0,r2]
 1538 0018 0131     	 add r1,r1,#1
 1539              	.LVL189:
 1540 001a 8B43     	 bic r3,r1
 1541 001c 8350     	 str r3,[r0,r2]
 1542 001e F3E7     	 b .L102
 1543              	 .cfi_endproc
 1544              	.LFE153:
 1546              	 .section .text.XMC_VADC_GLOBAL_SHS_SetShortSampleTime,"ax",%progbits
 1547              	 .align 2
 1548              	 .global XMC_VADC_GLOBAL_SHS_SetShortSampleTime
 1549              	 .code 16
 1550              	 .thumb_func
 1552              	XMC_VADC_GLOBAL_SHS_SetShortSampleTime:
 1553              	.LFB154:
 836:../Libraries/XMCLib/src/xmc_vadc.c **** 
 837:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the Short sample time of the Sample and hold module*/
 838:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 839:../Libraries/XMCLib/src/xmc_vadc.c ****                                             XMC_VADC_GROUP_INDEX_t group_num,
 840:../Libraries/XMCLib/src/xmc_vadc.c ****                                             uint8_t sst_value)
 841:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1554              	 .loc 1 841 0
 1555              	 .cfi_startproc
 1556              	.LVL190:
 1557 0000 10B5     	 push {r4,lr}
 1558              	.LCFI13:
 1559              	 .cfi_def_cfa_offset 8
 1560              	 .cfi_offset 4,-8
 1561              	 .cfi_offset 14,-4
 842:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SHS Pointer",
 843:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 844:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong Index number",(group_num <= XMC_VADC_GRO
 845:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SST value",(sst_value < 64U))
 846:../Libraries/XMCLib/src/xmc_vadc.c **** 
 847:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set the short sample time for the Accelerated mode of operation*/
 848:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 849:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 850:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~((uint32_t)SHS_TIMCFG0_SST_Msk);
 1562              	 .loc 1 850 0
 1563 0002 8023     	 mov r3,#128
 848:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1564              	 .loc 1 848 0
 1565 0004 0029     	 cmp r1,#0
 1566 0006 03D0     	 beq .L110
 851:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG0_SST_Pos );
 852:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 853:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 1567              	 .loc 1 853 0
 1568 0008 0129     	 cmp r1,#1
 1569 000a 00D0     	 beq .L111
 1570              	.LVL191:
 1571              	.L107:
 854:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 855:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~((uint32_t)SHS_TIMCFG1_SST_Msk);
 856:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG1_SST_Pos );
 857:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 858:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 859:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 860:../Libraries/XMCLib/src/xmc_vadc.c ****   /* for MISRA*/
 861:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 862:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1572              	 .loc 1 862 0
 1573              	 
 1574 000c 10BD     	 pop {r4,pc}
 1575              	.LVL192:
 1576              	.L111:
 855:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG1_SST_Pos );
 1577              	 .loc 1 855 0
 1578 000e 8423     	 mov r3,#132
 1579              	.L110:
 1580 0010 C458     	 ldr r4,[r0,r3]
 1581 0012 0449     	 ldr r1,.L112
 1582              	.LVL193:
 856:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1583              	 .loc 1 856 0
 1584 0014 1202     	 lsl r2,r2,#8
 1585              	.LVL194:
 855:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG1_SST_Pos );
 1586              	 .loc 1 855 0
 1587 0016 2140     	 and r1,r4
 1588 0018 C150     	 str r1,[r0,r3]
 856:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1589              	 .loc 1 856 0
 1590 001a C158     	 ldr r1,[r0,r3]
 1591 001c 0A43     	 orr r2,r1
 1592 001e C250     	 str r2,[r0,r3]
 1593 0020 F4E7     	 b .L107
 1594              	.L113:
 1595 0022 C046     	 .align 2
 1596              	.L112:
 1597 0024 FFC0FFFF 	 .word -16129
 1598              	 .cfi_endproc
 1599              	.LFE154:
 1601              	 .section .text.XMC_VADC_GLOBAL_SHS_SetGainFactor,"ax",%progbits
 1602              	 .align 2
 1603              	 .global XMC_VADC_GLOBAL_SHS_SetGainFactor
 1604              	 .code 16
 1605              	 .thumb_func
 1607              	XMC_VADC_GLOBAL_SHS_SetGainFactor:
 1608              	.LFB155:
 863:../Libraries/XMCLib/src/xmc_vadc.c **** 
 864:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the gain factor of the Sample and hold module*/
 865:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 866:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t gain_value,
 867:../Libraries/XMCLib/src/xmc_vadc.c ****                                        XMC_VADC_GROUP_INDEX_t group_num,
 868:../Libraries/XMCLib/src/xmc_vadc.c ****                                        uint8_t ch_num)
 869:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1609              	 .loc 1 869 0
 1610              	 .cfi_startproc
 1611              	.LVL195:
 1612 0000 30B5     	 push {r4,r5,lr}
 1613              	.LCFI14:
 1614              	 .cfi_def_cfa_offset 12
 1615              	 .cfi_offset 4,-12
 1616              	 .cfi_offset 5,-8
 1617              	 .cfi_offset 14,-4
 870:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_mask;
 871:../Libraries/XMCLib/src/xmc_vadc.c **** 
 872:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SH
 873:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong Index number",(group_num <= XMC_VADC_GROUP_IN
 874:../Libraries/XMCLib/src/xmc_vadc.c **** 
 875:../Libraries/XMCLib/src/xmc_vadc.c ****   /*Calculate location of channel bit-field*/
 876:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_mask = ((uint32_t)ch_num << (uint32_t)2);
 1618              	 .loc 1 876 0
 1619 0002 9B00     	 lsl r3,r3,#2
 1620              	.LVL196:
 877:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 1621              	 .loc 1 877 0
 1622 0004 002A     	 cmp r2,#0
 1623 0006 0FD0     	 beq .L118
 878:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 879:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 &= ~((uint32_t)SHS_GNCTR00_GAIN0_Msk << ch_mask) ;
 880:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 |=  ((uint32_t)gain_value << ch_mask);
 881:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 882:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 1624              	 .loc 1 882 0
 1625 0008 012A     	 cmp r2,#1
 1626 000a 00D0     	 beq .L119
 1627              	.LVL197:
 1628              	.L114:
 883:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 884:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 &= ~((uint32_t)SHS_GNCTR10_GAIN0_Msk << ch_mask);
 885:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 886:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 887:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 888:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 889:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 890:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 891:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1629              	 .loc 1 891 0
 1630              	 
 1631 000c 30BD     	 pop {r4,r5,pc}
 1632              	.LVL198:
 1633              	.L119:
 884:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 1634              	 .loc 1 884 0
 1635 000e 9032     	 add r2,r2,#144
 1636              	.LVL199:
 1637              	.L117:
 1638 0010 0F25     	 mov r5,#15
 885:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1639              	 .loc 1 885 0
 1640 0012 9940     	 lsl r1,r1,r3
 1641              	.LVL200:
 884:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 1642              	 .loc 1 884 0
 1643 0014 9D40     	 lsl r5,r5,r3
 885:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1644              	 .loc 1 885 0
 1645 0016 0B1C     	 mov r3,r1
 1646              	.LVL201:
 884:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 1647              	 .loc 1 884 0
 1648 0018 FF32     	 add r2,r2,#255
 1649 001a 8458     	 ldr r4,[r0,r2]
 1650 001c AC43     	 bic r4,r5
 1651 001e 8450     	 str r4,[r0,r2]
 885:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1652              	 .loc 1 885 0
 1653 0020 8458     	 ldr r4,[r0,r2]
 1654 0022 2343     	 orr r3,r4
 1655 0024 8350     	 str r3,[r0,r2]
 1656 0026 F1E7     	 b .L114
 1657              	.LVL202:
 1658              	.L118:
 879:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 |=  ((uint32_t)gain_value << ch_mask);
 1659              	 .loc 1 879 0
 1660 0028 8132     	 add r2,r2,#129
 1661              	.LVL203:
 1662 002a F1E7     	 b .L117
 1663              	 .cfi_endproc
 1664              	.LFE155:
 1666              	 .section .text.XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations,"ax",%progbits
 1667              	 .align 2
 1668              	 .global XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations
 1669              	 .code 16
 1670              	 .thumb_func
 1672              	XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:
 1673              	.LFB156:
 892:../Libraries/XMCLib/src/xmc_vadc.c **** 
 893:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 894:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 895:../Libraries/XMCLib/src/xmc_vadc.c ****                                                          XMC_VADC_GROUP_INDEX_t group_num)
 896:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1674              	 .loc 1 896 0
 1675              	 .cfi_startproc
 1676              	.LVL204:
 897:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong SHS Pointer",
 898:../Libraries/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 899:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong group selected",
 900:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 901:../Libraries/XMCLib/src/xmc_vadc.c **** 
 902:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable gain and offset calibration*/
 903:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 1677              	 .loc 1 903 0
 1678 0000 0029     	 cmp r1,#0
 1679 0002 08D0     	 beq .L123
 904:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 905:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 &= ~((uint32_t)SHS_CALOC0_DISCAL_Msk);
 906:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 907:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 1680              	 .loc 1 907 0
 1681 0004 0129     	 cmp r1,#1
 1682 0006 00D0     	 beq .L124
 1683              	.L120:
 908:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 909:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 &= ~((uint32_t)SHS_CALOC1_DISCAL_Msk);
 910:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 911:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 912:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 913:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 914:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 915:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1684              	 .loc 1 915 0
 1685              	 
 1686 0008 7047     	 bx lr
 1687              	.L124:
 909:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1688              	 .loc 1 909 0
 1689 000a E422     	 mov r2,#228
 1690 000c 8358     	 ldr r3,[r0,r2]
 1691 000e 5B00     	 lsl r3,r3,#1
 1692 0010 5B08     	 lsr r3,r3,#1
 1693 0012 8350     	 str r3,[r0,r2]
 1694 0014 F8E7     	 b .L120
 1695              	.L123:
 905:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1696              	 .loc 1 905 0
 1697 0016 E022     	 mov r2,#224
 1698 0018 8358     	 ldr r3,[r0,r2]
 1699 001a 5B00     	 lsl r3,r3,#1
 1700 001c 5B08     	 lsr r3,r3,#1
 1701 001e 8350     	 str r3,[r0,r2]
 1702 0020 F2E7     	 b .L120
 1703              	 .cfi_endproc
 1704              	.LFE156:
 1706 0022 C046     	 .section .text.XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations,"ax",%progbits
 1707              	 .align 2
 1708              	 .global XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations
 1709              	 .code 16
 1710              	 .thumb_func
 1712              	XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:
 1713              	.LFB157:
 916:../Libraries/XMCLib/src/xmc_vadc.c **** 
 917:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 918:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 919:../Libraries/XMCLib/src/xmc_vadc.c ****                                                           XMC_VADC_GROUP_INDEX_t group_num)
 920:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1714              	 .loc 1 920 0
 1715              	 .cfi_startproc
 1716              	.LVL205:
 921:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong SHS Pointer",
 922:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 923:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong group selected",
 924:../Libraries/XMCLib/src/xmc_vadc.c ****             (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 925:../Libraries/XMCLib/src/xmc_vadc.c **** 
 926:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 927:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 928:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |= (uint32_t)SHS_CALOC0_DISCAL_Msk;
 1717              	 .loc 1 928 0
 1718 0000 E022     	 mov r2,#224
 926:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1719              	 .loc 1 926 0
 1720 0002 0029     	 cmp r1,#0
 1721 0004 03D0     	 beq .L128
 929:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 930:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 1722              	 .loc 1 930 0
 1723 0006 0129     	 cmp r1,#1
 1724 0008 00D0     	 beq .L129
 1725              	.LVL206:
 1726              	.L125:
 931:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 932:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |= (uint32_t)SHS_CALOC1_DISCAL_Msk;
 933:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 934:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 935:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 936:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 937:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 938:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1727              	 .loc 1 938 0
 1728              	 
 1729 000a 7047     	 bx lr
 1730              	.LVL207:
 1731              	.L129:
 932:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1732              	 .loc 1 932 0
 1733 000c E422     	 mov r2,#228
 1734              	.L128:
 1735 000e 8021     	 mov r1,#128
 1736              	.LVL208:
 1737 0010 8358     	 ldr r3,[r0,r2]
 1738 0012 0906     	 lsl r1,r1,#24
 1739 0014 0B43     	 orr r3,r1
 1740 0016 8350     	 str r3,[r0,r2]
 1741 0018 F7E7     	 b .L125
 1742              	 .cfi_endproc
 1743              	.LFE157:
 1745 001a C046     	 .section .text.XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue,"ax",%progbits
 1746              	 .align 2
 1747              	 .global XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue
 1748              	 .code 16
 1749              	 .thumb_func
 1751              	XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:
 1752              	.LFB158:
 939:../Libraries/XMCLib/src/xmc_vadc.c **** 
 940:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to get the offset calibration value of the Sample and hold module*/
 941:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 942:../Libraries/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
 943:../Libraries/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level)
 944:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1753              	 .loc 1 944 0
 1754              	 .cfi_startproc
 1755              	.LVL209:
 945:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t calibration_value;
 946:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong SHS Pointer",
 947:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 948:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong Group number selected",
 949:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 950:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong gain level selected",
 951:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
 952:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
 953:../Libraries/XMCLib/src/xmc_vadc.c **** 
 954:../Libraries/XMCLib/src/xmc_vadc.c ****   calibration_value = 0U;
 955:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 1756              	 .loc 1 955 0
 1757 0000 0029     	 cmp r1,#0
 1758 0002 0AD0     	 beq .L134
 1759 0004 0023     	 mov r3,#0
 956:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 957:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC0 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC0_CALOFFVAL0
 958:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 959:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 1760              	 .loc 1 959 0
 1761 0006 0129     	 cmp r1,#1
 1762 0008 01D0     	 beq .L135
 1763              	.LVL210:
 1764              	.L132:
 960:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 961:../Libraries/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC1 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC1_CALOFFVAL0
 962:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 963:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 964:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 965:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 966:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 967:../Libraries/XMCLib/src/xmc_vadc.c ****   return ((uint8_t)calibration_value);
 968:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1765              	 .loc 1 968 0
 1766 000a 181C     	 mov r0,r3
 1767              	.LVL211:
 1768              	 
 1769 000c 7047     	 bx lr
 1770              	.LVL212:
 1771              	.L135:
 961:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1772              	 .loc 1 961 0
 1773 000e E433     	 add r3,r3,#228
 1774 0010 C158     	 ldr r1,[r0,r3]
 1775              	.LVL213:
 1776 0012 653B     	 sub r3,r3,#101
 1777 0014 D140     	 lsr r1,r1,r2
 1778              	.LVL214:
 1779 0016 0B40     	 and r3,r1
 1780 0018 F7E7     	 b .L132
 1781              	.LVL215:
 1782              	.L134:
 957:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1783              	 .loc 1 957 0
 1784 001a E023     	 mov r3,#224
 1785 001c C158     	 ldr r1,[r0,r3]
 1786              	.LVL216:
 1787 001e 613B     	 sub r3,r3,#97
 1788 0020 D140     	 lsr r1,r1,r2
 1789              	.LVL217:
 1790 0022 0B40     	 and r3,r1
 1791 0024 F1E7     	 b .L132
 1792              	 .cfi_endproc
 1793              	.LFE158:
 1795 0026 C046     	 .section .text.XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue,"ax",%progbits
 1796              	 .align 2
 1797              	 .global XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue
 1798              	 .code 16
 1799              	 .thumb_func
 1801              	XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:
 1802              	.LFB159:
 969:../Libraries/XMCLib/src/xmc_vadc.c **** 
 970:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the offset calibration value of the Sample and hold module*/
 971:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 972:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
 973:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
 974:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    uint8_t offset_calibration_value)
 975:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1803              	 .loc 1 975 0
 1804              	 .cfi_startproc
 1805              	.LVL218:
 1806 0000 30B5     	 push {r4,r5,lr}
 1807              	.LCFI15:
 1808              	 .cfi_def_cfa_offset 12
 1809              	 .cfi_offset 4,-12
 1810              	 .cfi_offset 5,-8
 1811              	 .cfi_offset 14,-4
 976:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong SHS Pointer",
 977:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 978:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong Group number selected",
 979:../Libraries/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 980:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong gain level selected",
 981:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
 982:../Libraries/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
 983:../Libraries/XMCLib/src/xmc_vadc.c **** 
 984:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 985:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 986:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 = (shs_ptr->CALOC0  & ~((uint32_t)SHS_CALOC0_CALOFFVAL0_Msk << (uint32_t)gain_l
 1812              	 .loc 1 986 0
 1813 0002 E024     	 mov r4,#224
 984:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 1814              	 .loc 1 984 0
 1815 0004 0029     	 cmp r1,#0
 1816 0006 03D0     	 beq .L139
 987:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC0_OFFWC_Msk;
 988:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
 989:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 990:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 1817              	 .loc 1 990 0
 1818 0008 0129     	 cmp r1,#1
 1819 000a 00D0     	 beq .L140
 1820              	.LVL219:
 1821              	.L136:
 991:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 992:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 = (shs_ptr->CALOC1 & ~((uint32_t)SHS_CALOC1_CALOFFVAL0_Msk << (uint32_t)gain_le
 993:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC1_OFFWC_Msk;
 994:../Libraries/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
 995:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 996:../Libraries/XMCLib/src/xmc_vadc.c ****   else
 997:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 998:../Libraries/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 999:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1000:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1822              	 .loc 1 1000 0
 1823              	 
 1824 000c 30BD     	 pop {r4,r5,pc}
 1825              	.LVL220:
 1826              	.L140:
 992:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC1_OFFWC_Msk;
 1827              	 .loc 1 992 0
 1828 000e E424     	 mov r4,#228
 1829              	.L139:
 1830 0010 7F25     	 mov r5,#127
 1831 0012 9540     	 lsl r5,r5,r2
 1832 0014 0159     	 ldr r1,[r0,r4]
 1833              	.LVL221:
 994:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1834              	 .loc 1 994 0
 1835 0016 9340     	 lsl r3,r3,r2
 1836              	.LVL222:
 992:../Libraries/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC1_OFFWC_Msk;
 1837              	 .loc 1 992 0
 1838 0018 A943     	 bic r1,r5
 1839 001a 8025     	 mov r5,#128
 1840 001c 2D02     	 lsl r5,r5,#8
 1841 001e 2943     	 orr r1,r5
 1842 0020 0151     	 str r1,[r0,r4]
 994:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 1843              	 .loc 1 994 0
 1844 0022 0159     	 ldr r1,[r0,r4]
 1845 0024 1A1C     	 mov r2,r3
 1846              	.LVL223:
 1847 0026 2943     	 orr r1,r5
 1848 0028 0B1C     	 mov r3,r1
 1849 002a 1343     	 orr r3,r2
 1850 002c 0351     	 str r3,[r0,r4]
 1851 002e EDE7     	 b .L136
 1852              	 .cfi_endproc
 1853              	.LFE159:
 1855              	 .section .text.XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop,"ax",%progbits
 1856              	 .align 2
 1857              	 .global XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop
 1858              	 .code 16
 1859              	 .thumb_func
 1861              	XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:
 1862              	.LFB160:
1001:../Libraries/XMCLib/src/xmc_vadc.c **** 
1002:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set the values of sigma delta loop of the Sample and hold module*/
1003:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1004:../Libraries/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_GROUP_INDEX_t group_num,
1005:../Libraries/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
1006:../Libraries/XMCLib/src/xmc_vadc.c ****                                            uint8_t ch_num)
1007:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1863              	 .loc 1 1007 0
 1864              	 .cfi_startproc
 1865              	.LVL224:
 1866 0000 30B5     	 push {r4,r5,lr}
 1867              	.LCFI16:
 1868              	 .cfi_def_cfa_offset 12
 1869              	 .cfi_offset 4,-12
 1870              	 .cfi_offset 5,-8
 1871              	 .cfi_offset 14,-4
1008:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong SHS Pointer",
1009:../Libraries/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1010:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Group number selected",
1011:../Libraries/XMCLib/src/xmc_vadc.c ****                (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
1012:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Delta sigma loop selected",
1013:../Libraries/XMCLib/src/xmc_vadc.c ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
1014:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Channel Number",
1015:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1016:../Libraries/XMCLib/src/xmc_vadc.c **** 
1017:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP &= ~(((uint32_t)SHS_LOOP_LPCH0_Msk | (uint32_t)SHS_LOOP_LPSH0_Msk | (uint32_t)SHS_L
1018:../Libraries/XMCLib/src/xmc_vadc.c ****                      << (uint32_t)loop_select);
 1872              	 .loc 1 1018 0
 1873 0002 064D     	 ldr r5,.L142
1019:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP |= ((uint32_t)ch_num | ((uint32_t)group_num << (uint32_t)SHS_LOOP_LPSH0_Pos)) << (u
 1874              	 .loc 1 1019 0
 1875 0004 0902     	 lsl r1,r1,#8
 1876              	.LVL225:
1018:../Libraries/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP |= ((uint32_t)ch_num | ((uint32_t)group_num << (uint32_t)SHS_LOOP_LPSH0_Pos)) << (u
 1877              	 .loc 1 1018 0
 1878 0006 9540     	 lsl r5,r5,r2
 1879              	 .loc 1 1019 0
 1880 0008 0B43     	 orr r3,r1
 1881              	.LVL226:
 1882 000a 9340     	 lsl r3,r3,r2
1017:../Libraries/XMCLib/src/xmc_vadc.c ****                      << (uint32_t)loop_select);
 1883              	 .loc 1 1017 0
 1884 000c 046D     	 ldr r4,[r0,#80]
1020:../Libraries/XMCLib/src/xmc_vadc.c **** 
1021:../Libraries/XMCLib/src/xmc_vadc.c **** }
 1885              	 .loc 1 1021 0
 1886              	 
1017:../Libraries/XMCLib/src/xmc_vadc.c ****                      << (uint32_t)loop_select);
 1887              	 .loc 1 1017 0
 1888 000e AC43     	 bic r4,r5
 1889 0010 0465     	 str r4,[r0,#80]
1019:../Libraries/XMCLib/src/xmc_vadc.c **** 
 1890              	 .loc 1 1019 0
 1891 0012 046D     	 ldr r4,[r0,#80]
 1892 0014 2343     	 orr r3,r4
 1893 0016 0365     	 str r3,[r0,#80]
 1894              	 .loc 1 1021 0
 1895 0018 30BD     	 pop {r4,r5,pc}
 1896              	.L143:
 1897 001a C046     	 .align 2
 1898              	.L142:
 1899 001c 1F810000 	 .word 33055
 1900              	 .cfi_endproc
 1901              	.LFE160:
 1903              	 .section .text.XMC_VADC_GROUP_ScanInit,"ax",%progbits
 1904              	 .align 2
 1905              	 .global XMC_VADC_GROUP_ScanInit
 1906              	 .code 16
 1907              	 .thumb_func
 1909              	XMC_VADC_GROUP_ScanInit:
 1910              	.LFB161:
1022:../Libraries/XMCLib/src/xmc_vadc.c **** 
1023:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_SHS_AVAILABLE */
1024:../Libraries/XMCLib/src/xmc_vadc.c **** 
1025:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)   
1026:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize the group scan hardware of a kernel */
1027:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
1028:../Libraries/XMCLib/src/xmc_vadc.c **** {
 1911              	 .loc 1 1028 0
 1912              	 .cfi_startproc
 1913              	.LVL227:
 1914 0000 30B5     	 push {r4,r5,lr}
 1915              	.LCFI17:
 1916              	 .cfi_def_cfa_offset 12
 1917              	 .cfi_offset 4,-12
 1918              	 .cfi_offset 5,-8
 1919              	 .cfi_offset 14,-4
 1920              	.LBB70:
 1921              	.LBB71:
2443:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2444:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2445:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
2446:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2447:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2448:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2449:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param boundary_flag_num The Boundary flag for which the interrupt node needs to be configured.
2450:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                          Range: [0x0 to 0x3]
2451:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param node    Service Request node Id
2452:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2453:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2454:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2455:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2456:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the boundary event to the SR line of VADC or to a common boundary flag.<BR>\n
2457:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a boundary event. Hence to get a interrupt o
2458:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2459:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxBFLNP.BFLxNP.
2460:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2461:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2462:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2463:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2464:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
2465:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                   const uint8_t boundary_flag_num,
2466:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                   const XMC_VADC_BOUNDARY_NODE_t node);
2467:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif /* XMC_VADC_BOUNDARY_FLAG_SELECT */
2468:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2469:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2470:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2471:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2472:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t The complete GxALIAS register
2473:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2474:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2475:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the ALIAS values.\n The ALIAS value that is configured for Channel-0 and channel-1 are r
2476:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2477:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2478:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2479:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2480:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetAlias(XMC_VADC_GROUP_t *const group_ptr)
2481:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2482:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetAliasWrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2483:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return (group_ptr->ALIAS);
2484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2485:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2486:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2487:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2488:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_class  conversion property to be extracted
2489:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2490:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_GROUP_CLASS_t The complete GxICLASSy register
2491:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2492:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2493:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the input class configuration values.\n
2494:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This returns the sampling time configuration and resolution configured in the appropriate group 
2495:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \b conv_class. A call to this API would return the register GxICLASSy.
2496:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2497:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2498:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2499:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2500:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_GROUP_CLASS_t XMC_VADC_GROUP_GetInputClass(XMC_VADC_GROUP_t *const group_p
2501:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const XMC_VADC_CHANNEL_CONV_t c
2502:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2503:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t input_value;
2504:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
2505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong conv_class selected", 
2506:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              (XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLA
2507:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2508:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   input_value.g_iclass0 = (uint32_t) 0xFFFFFFFF;
2509:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   if ((XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLASS1 == 
2510:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   {
2511:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****     input_value.g_iclass0 = group_ptr->ICLASS[(uint32_t)conv_class];
2512:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   }
2513:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2514:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return (input_value);
2515:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2516:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif /* XMC_VADC_GROUP_AVAILABLE */
2517:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2518:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
2519:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2520:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
2521:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to Scan configuration
2522:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
2523:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2524:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2525:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC SCAN functional block.<BR>\n
2526:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The GROUP SCAN request source functional block converts channels sequentially starting with the 
2527:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * channel to the lowest. Channels must register themselves as being part of the the scan sequence.
2528:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_ScanEnableA
2529:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
2530:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_ScanDisableArbi
2531:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxASCTRL, GxASMR needed scan request s
2532:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2533:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2534:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR> XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2535:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanSelectGating()<BR>
2536:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2537:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
2538:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2539:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2540:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2541:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2542:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2543:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2544:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2545:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the scan request source.<BR>\n
2546:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2547:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2548:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. Thus this must be enabled if any conversion need to take place.
2549:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2550:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2551:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2552:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2553:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2554:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2555:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2556:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2557:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN1_Msk;
2558:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2559:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2560:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2561:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2562:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2563:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2564:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2565:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2566:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the scan request source.<BR>\n
2567:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2568:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2569:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot.A call to this API will lead to all conversions request by scan to be blocked.
2570:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2571:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2572:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2573:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR>
2574:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2575:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2576:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2577:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2578:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN1_Msk);
 1922              	 .loc 2 2578 0
 1923 0002 8425     	 mov r5,#132
 1924 0004 1E4B     	 ldr r3,.L148
 1925 0006 4259     	 ldr r2,[r0,r5]
 1926              	.LBE71:
 1927              	.LBE70:
1029:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t      reg;
1030:../Libraries/XMCLib/src/xmc_vadc.c **** 
1031:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1032:../Libraries/XMCLib/src/xmc_vadc.c **** 
1033:../Libraries/XMCLib/src/xmc_vadc.c ****   /* All configurations have to be performed with the arbitration slot disabled */
1034:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
1035:../Libraries/XMCLib/src/xmc_vadc.c ****   
1036:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Read in the existing contents of arbitration priority register */
1037:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
1038:../Libraries/XMCLib/src/xmc_vadc.c **** 
1039:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the priority of the request source */
1040:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~(uint32_t)VADC_G_ARBPR_PRIO1_Msk;
1041:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO1_Pos);
 1928              	 .loc 1 1041 0
 1929 0008 0C78     	 ldrb r4,[r1]
 1930              	.LBB74:
 1931              	.LBB72:
 1932              	 .loc 2 2578 0
 1933 000a 1340     	 and r3,r2
 1934              	.LBE72:
 1935              	.LBE74:
1040:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO1_Pos);
 1936              	 .loc 1 1040 0
 1937 000c 3022     	 mov r2,#48
 1938              	.LBB75:
 1939              	.LBB73:
 1940              	 .loc 2 2578 0
 1941 000e 4351     	 str r3,[r0,r5]
 1942              	.LBE73:
 1943              	.LBE75:
1037:../Libraries/XMCLib/src/xmc_vadc.c **** 
 1944              	 .loc 1 1037 0
 1945 0010 4359     	 ldr r3,[r0,r5]
 1946              	.LVL228:
1040:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO1_Pos);
 1947              	 .loc 1 1040 0
 1948 0012 9343     	 bic r3,r2
 1949              	.LVL229:
 1950 0014 1A1C     	 mov r2,r3
 1951              	.LVL230:
 1952              	 .loc 1 1041 0
 1953 0016 2307     	 lsl r3,r4,#28
 1954 0018 9B0F     	 lsr r3,r3,#30
 1955 001a 1B01     	 lsl r3,r3,#4
 1956 001c 1343     	 orr r3,r2
 1957              	.LVL231:
1042:../Libraries/XMCLib/src/xmc_vadc.c ****   
1043:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the start mode */
1044:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 1958              	 .loc 1 1044 0
 1959 001e 0322     	 mov r2,#3
 1960 0020 1440     	 and r4,r2
 1961 0022 1DD0     	 beq .L145
1045:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1046:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM1_Msk);
 1962              	 .loc 1 1046 0
 1963 0024 7D32     	 add r2,r2,#125
 1964 0026 1343     	 orr r3,r2
 1965              	.LVL232:
1047:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1048:../Libraries/XMCLib/src/xmc_vadc.c **** 
1049:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 1966              	 .loc 1 1049 0
 1967 0028 4351     	 str r3,[r0,r5]
1050:../Libraries/XMCLib/src/xmc_vadc.c **** 
1051:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL = (uint32_t)(config->asctrl |(VADC_G_ASCTRL_XTWC_Msk) |(VADC_G_ASCTRL_GTWC_Msk)
 1968              	 .loc 1 1051 0
 1969 002a 4A68     	 ldr r2,[r1,#4]
 1970 002c 154B     	 ldr r3,.L148+4
 1971              	.LVL233:
 1972 002e 1343     	 orr r3,r2
 1973 0030 9022     	 mov r2,#144
 1974 0032 5200     	 lsl r2,r2,#1
 1975 0034 8350     	 str r3,[r0,r2]
 1976              	.LVL234:
1052:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  (VADC_G_ASCTRL_TMWC_Msk));
1053:../Libraries/XMCLib/src/xmc_vadc.c **** 
1054:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR  = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 1977              	 .loc 1 1054 0
 1978 0036 8B68     	 ldr r3,[r1,#8]
 1979 0038 203A     	 sub r2,r2,#32
 1980 003a FF3A     	 sub r2,r2,#255
 1981 003c 1343     	 orr r3,r2
 1982 003e 2432     	 add r2,r2,#36
 1983 0040 FF32     	 add r2,r2,#255
 1984 0042 8350     	 str r3,[r0,r2]
1055:../Libraries/XMCLib/src/xmc_vadc.c ****   
1056:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 1985              	 .loc 1 1056 0
 1986 0044 022C     	 cmp r4,#2
 1987 0046 04D1     	 bne .L146
1057:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1058:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_RPTDIS_Msk;
 1988              	 .loc 1 1058 0
 1989 0048 8021     	 mov r1,#128
 1990              	.LVL235:
 1991 004a 8358     	 ldr r3,[r0,r2]
 1992 004c 4902     	 lsl r1,r1,#9
 1993 004e 0B43     	 orr r3,r1
 1994 0050 8350     	 str r3,[r0,r2]
 1995              	.L146:
 1996              	.LVL236:
 1997              	.LBB76:
 1998              	.LBB77:
2557:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 1999              	 .loc 2 2557 0
 2000 0052 8422     	 mov r2,#132
 2001 0054 8021     	 mov r1,#128
 2002 0056 8358     	 ldr r3,[r0,r2]
 2003 0058 8904     	 lsl r1,r1,#18
 2004 005a 0B43     	 orr r3,r1
 2005 005c 8350     	 str r3,[r0,r2]
 2006              	.LBE77:
 2007              	.LBE76:
1059:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1060:../Libraries/XMCLib/src/xmc_vadc.c ****   
1061:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot now */
1062:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanEnableArbitrationSlot(group_ptr);
1063:../Libraries/XMCLib/src/xmc_vadc.c ****   
1064:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2008              	 .loc 1 1064 0
 2009              	 
 2010 005e 30BD     	 pop {r4,r5,pc}
 2011              	.LVL237:
 2012              	.L145:
1049:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2013              	 .loc 1 1049 0
 2014 0060 4351     	 str r3,[r0,r5]
1051:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  (VADC_G_ASCTRL_TMWC_Msk));
 2015              	 .loc 1 1051 0
 2016 0062 4A68     	 ldr r2,[r1,#4]
 2017 0064 074B     	 ldr r3,.L148+4
 2018              	.LVL238:
 2019 0066 1343     	 orr r3,r2
 2020 0068 9022     	 mov r2,#144
 2021 006a 5200     	 lsl r2,r2,#1
 2022 006c 8350     	 str r3,[r0,r2]
 2023              	.LVL239:
1054:../Libraries/XMCLib/src/xmc_vadc.c ****   
 2024              	 .loc 1 1054 0
 2025 006e 8B68     	 ldr r3,[r1,#8]
 2026 0070 203A     	 sub r2,r2,#32
 2027 0072 FF3A     	 sub r2,r2,#255
 2028 0074 1343     	 orr r3,r2
 2029 0076 2432     	 add r2,r2,#36
 2030 0078 FF32     	 add r2,r2,#255
 2031 007a 8350     	 str r3,[r0,r2]
 2032 007c E9E7     	 b .L146
 2033              	.L149:
 2034 007e C046     	 .align 2
 2035              	.L148:
 2036 0080 FFFFFFFD 	 .word -33554433
 2037 0084 00808080 	 .word -2139062272
 2038              	 .cfi_endproc
 2039              	.LFE161:
 2041              	 .section .text.XMC_VADC_GROUP_ScanSelectTrigger,"ax",%progbits
 2042              	 .align 2
 2043              	 .global XMC_VADC_GROUP_ScanSelectTrigger
 2044              	 .code 16
 2045              	 .thumb_func
 2047              	XMC_VADC_GROUP_ScanSelectTrigger:
 2048              	.LFB162:
1065:../Libraries/XMCLib/src/xmc_vadc.c **** 
1066:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger input for Group Scan request source */
1067:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
1068:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2049              	 .loc 1 1068 0
 2050              	 .cfi_startproc
 2051              	.LVL240:
1069:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1070:../Libraries/XMCLib/src/xmc_vadc.c **** 
1071:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1072:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Trigger Port", ((trigger_input)< XMC_VADC_NUM_
1073:../Libraries/XMCLib/src/xmc_vadc.c **** 
1074:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2052              	 .loc 1 1074 0
 2053 0000 9022     	 mov r2,#144
 2054 0002 5200     	 lsl r2,r2,#1
1068:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
 2055              	 .loc 1 1068 0
 2056 0004 10B5     	 push {r4,lr}
 2057              	.LCFI18:
 2058              	 .cfi_def_cfa_offset 8
 2059              	 .cfi_offset 4,-8
 2060              	 .cfi_offset 14,-4
1075:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
1076:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTSEL_Msk);
 2061              	 .loc 1 1076 0
 2062 0006 054B     	 ldr r3,.L151
1074:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2063              	 .loc 1 1074 0
 2064 0008 8458     	 ldr r4,[r0,r2]
 2065              	.LVL241:
1077:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_input << VADC_G_ASCTRL_XTSEL_Pos);
 2066              	 .loc 1 1077 0
 2067 000a 0902     	 lsl r1,r1,#8
 2068              	.LVL242:
1076:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_input << VADC_G_ASCTRL_XTSEL_Pos);
 2069              	 .loc 1 1076 0
 2070 000c 2340     	 and r3,r4
 2071 000e 8024     	 mov r4,#128
 2072              	.LVL243:
 2073 0010 2402     	 lsl r4,r4,#8
 2074 0012 2343     	 orr r3,r4
 2075              	.LVL244:
 2076              	 .loc 1 1077 0
 2077 0014 1943     	 orr r1,r3
 2078              	.LVL245:
1078:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2079              	 .loc 1 1078 0
 2080 0016 8150     	 str r1,[r0,r2]
1079:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2081              	 .loc 1 1079 0
 2082              	 
 2083 0018 10BD     	 pop {r4,pc}
 2084              	.L152:
 2085 001a C046     	 .align 2
 2086              	.L151:
 2087 001c FFF0FFFF 	 .word -3841
 2088              	 .cfi_endproc
 2089              	.LFE162:
 2091              	 .section .text.XMC_VADC_GROUP_ScanSelectTriggerEdge,"ax",%progbits
 2092              	 .align 2
 2093              	 .global XMC_VADC_GROUP_ScanSelectTriggerEdge
 2094              	 .code 16
 2095              	 .thumb_func
 2097              	XMC_VADC_GROUP_ScanSelectTriggerEdge:
 2098              	.LFB163:
1080:../Libraries/XMCLib/src/xmc_vadc.c **** 
1081:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1082:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
1083:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2099              	 .loc 1 1083 0
 2100              	 .cfi_startproc
 2101              	.LVL246:
1084:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1085:../Libraries/XMCLib/src/xmc_vadc.c **** 
1086:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
1087:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Trigger Port", ((trigger_edge)<= XMC_VADC_
1088:../Libraries/XMCLib/src/xmc_vadc.c **** 
1089:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2102              	 .loc 1 1089 0
 2103 0000 9022     	 mov r2,#144
 2104 0002 5200     	 lsl r2,r2,#1
1083:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
 2105              	 .loc 1 1083 0
 2106 0004 10B5     	 push {r4,lr}
 2107              	.LCFI19:
 2108              	 .cfi_def_cfa_offset 8
 2109              	 .cfi_offset 4,-8
 2110              	 .cfi_offset 14,-4
1090:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
1091:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTMODE_Msk);
 2111              	 .loc 1 1091 0
 2112 0006 054B     	 ldr r3,.L154
1089:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2113              	 .loc 1 1089 0
 2114 0008 8458     	 ldr r4,[r0,r2]
 2115              	.LVL247:
1092:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_G_ASCTRL_XTMODE_Pos);
 2116              	 .loc 1 1092 0
 2117 000a 4903     	 lsl r1,r1,#13
 2118              	.LVL248:
1091:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_G_ASCTRL_XTMODE_Pos);
 2119              	 .loc 1 1091 0
 2120 000c 2340     	 and r3,r4
 2121 000e 8024     	 mov r4,#128
 2122              	.LVL249:
 2123 0010 2402     	 lsl r4,r4,#8
 2124 0012 2343     	 orr r3,r4
 2125              	.LVL250:
 2126              	 .loc 1 1092 0
 2127 0014 1943     	 orr r1,r3
 2128              	.LVL251:
1093:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2129              	 .loc 1 1093 0
 2130 0016 8150     	 str r1,[r0,r2]
1094:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2131              	 .loc 1 1094 0
 2132              	 
 2133 0018 10BD     	 pop {r4,pc}
 2134              	.L155:
 2135 001a C046     	 .align 2
 2136              	.L154:
 2137 001c FF9FFFFF 	 .word -24577
 2138              	 .cfi_endproc
 2139              	.LFE163:
 2141              	 .section .text.XMC_VADC_GROUP_ScanSelectGating,"ax",%progbits
 2142              	 .align 2
 2143              	 .global XMC_VADC_GROUP_ScanSelectGating
 2144              	 .code 16
 2145              	 .thumb_func
 2147              	XMC_VADC_GROUP_ScanSelectGating:
 2148              	.LFB164:
1095:../Libraries/XMCLib/src/xmc_vadc.c **** 
1096:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gating input for Group Scan request source */
1097:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
1098:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2149              	 .loc 1 1098 0
 2150              	 .cfi_startproc
 2151              	.LVL252:
1099:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1100:../Libraries/XMCLib/src/xmc_vadc.c **** 
1101:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1102:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Gating Port", ((gating_input)< XMC_VADC_NUM_POR
1103:../Libraries/XMCLib/src/xmc_vadc.c **** 
1104:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2152              	 .loc 1 1104 0
 2153 0000 9022     	 mov r2,#144
 2154 0002 5200     	 lsl r2,r2,#1
1098:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
 2155              	 .loc 1 1098 0
 2156 0004 10B5     	 push {r4,lr}
 2157              	.LCFI20:
 2158              	 .cfi_def_cfa_offset 8
 2159              	 .cfi_offset 4,-8
 2160              	 .cfi_offset 14,-4
1105:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)VADC_G_ASCTRL_GTWC_Msk;
1106:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_GTSEL_Msk);
 2161              	 .loc 1 1106 0
 2162 0006 054B     	 ldr r3,.L157
1104:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)VADC_G_ASCTRL_GTWC_Msk;
 2163              	 .loc 1 1104 0
 2164 0008 8458     	 ldr r4,[r0,r2]
 2165              	.LVL253:
1107:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)gating_input << VADC_G_ASCTRL_GTSEL_Pos);
 2166              	 .loc 1 1107 0
 2167 000a 0904     	 lsl r1,r1,#16
 2168              	.LVL254:
1106:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)gating_input << VADC_G_ASCTRL_GTSEL_Pos);
 2169              	 .loc 1 1106 0
 2170 000c 2340     	 and r3,r4
 2171 000e 8024     	 mov r4,#128
 2172              	.LVL255:
 2173 0010 2404     	 lsl r4,r4,#16
 2174 0012 2343     	 orr r3,r4
 2175              	.LVL256:
 2176              	 .loc 1 1107 0
 2177 0014 1943     	 orr r1,r3
 2178              	.LVL257:
1108:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2179              	 .loc 1 1108 0
 2180 0016 8150     	 str r1,[r0,r2]
1109:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2181              	 .loc 1 1109 0
 2182              	 
 2183 0018 10BD     	 pop {r4,pc}
 2184              	.L158:
 2185 001a C046     	 .align 2
 2186              	.L157:
 2187 001c FFFFF0FF 	 .word -983041
 2188              	 .cfi_endproc
 2189              	.LFE164:
 2191              	 .section .text.XMC_VADC_GROUP_ScanSequenceAbort,"ax",%progbits
 2192              	 .align 2
 2193              	 .global XMC_VADC_GROUP_ScanSequenceAbort
 2194              	 .code 16
 2195              	 .thumb_func
 2197              	XMC_VADC_GROUP_ScanSequenceAbort:
 2198              	.LFB165:
1110:../Libraries/XMCLib/src/xmc_vadc.c **** 
1111:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to stop an ongoing conversion of a sequence */
1112:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr)
1113:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2199              	 .loc 1 1113 0
 2200              	 .cfi_startproc
 2201              	.LVL258:
 2202 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2203              	.LCFI21:
 2204              	 .cfi_def_cfa_offset 20
 2205              	 .cfi_offset 4,-20
 2206              	 .cfi_offset 5,-16
 2207              	 .cfi_offset 6,-12
 2208              	 .cfi_offset 7,-8
 2209              	 .cfi_offset 14,-4
 2210 0002 4746     	 mov r7,r8
1114:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t asctrl;
1115:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1116:../Libraries/XMCLib/src/xmc_vadc.c **** 
1117:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSequenceAbort:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1118:../Libraries/XMCLib/src/xmc_vadc.c **** 
1119:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1120:../Libraries/XMCLib/src/xmc_vadc.c ****   asctrl = group_ptr->ASCTRL;
 2211              	 .loc 1 1120 0
 2212 0004 9024     	 mov r4,#144
1121:../Libraries/XMCLib/src/xmc_vadc.c **** 
1122:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(0U | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
1123:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
1124:../Libraries/XMCLib/src/xmc_vadc.c **** 
1125:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable Arbitration before abort*/
1126:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN1_Pos) & 1U);
 2213              	 .loc 1 1126 0
 2214 0006 8422     	 mov r2,#132
1113:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t asctrl;
 2215              	 .loc 1 1113 0
 2216 0008 80B4     	 push {r7}
 2217              	.LCFI22:
 2218              	 .cfi_def_cfa_offset 24
 2219              	 .cfi_offset 8,-24
1122:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2220              	 .loc 1 1122 0
 2221 000a 104F     	 ldr r7,.L160
1120:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2222              	 .loc 1 1120 0
 2223 000c 6400     	 lsl r4,r4,#1
 2224 000e 0559     	 ldr r5,[r0,r4]
 2225              	.LVL259:
1122:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2226              	 .loc 1 1122 0
 2227 0010 0751     	 str r7,[r0,r4]
 2228              	 .loc 1 1126 0
 2229 0012 8358     	 ldr r3,[r0,r2]
 2230              	.LBB78:
 2231              	.LBB79:
 2232              	 .loc 2 2578 0
 2233 0014 0E49     	 ldr r1,.L160+4
 2234 0016 8658     	 ldr r6,[r0,r2]
 2235              	.LBE79:
 2236              	.LBE78:
 2237              	 .loc 1 1126 0
 2238 0018 9846     	 mov r8,r3
 2239              	.LVL260:
 2240              	.LBB81:
 2241              	.LBB80:
 2242              	 .loc 2 2578 0
 2243 001a 3140     	 and r1,r6
 2244 001c 8150     	 str r1,[r0,r2]
 2245              	.LBE80:
 2246              	.LBE81:
1127:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
1128:../Libraries/XMCLib/src/xmc_vadc.c **** 
1129:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENGT_Msk);
 2247              	 .loc 1 1129 0
 2248 001e 9221     	 mov r1,#146
 2249 0020 0323     	 mov r3,#3
 2250              	.LVL261:
 2251 0022 4900     	 lsl r1,r1,#1
 2252 0024 4658     	 ldr r6,[r0,r1]
1130:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
1131:../Libraries/XMCLib/src/xmc_vadc.c **** 
1132:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Enable the arbitration slot 1*/
1133:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN1_Pos);
1134:../Libraries/XMCLib/src/xmc_vadc.c **** 
1135:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1136:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(asctrl | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
1137:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
1138:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2253              	 .loc 1 1138 0
 2254              	 
1129:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
 2255              	 .loc 1 1129 0
 2256 0026 9E43     	 bic r6,r3
 2257 0028 4650     	 str r6,[r0,r1]
1130:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
 2258              	 .loc 1 1130 0
 2259 002a 4658     	 ldr r6,[r0,r1]
 2260 002c FD33     	 add r3,r3,#253
 2261 002e 1E43     	 orr r6,r3
1126:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2262              	 .loc 1 1126 0
 2263 0030 4346     	 mov r3,r8
1130:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
 2264              	 .loc 1 1130 0
 2265 0032 4650     	 str r6,[r0,r1]
1126:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2266              	 .loc 1 1126 0
 2267 0034 9B01     	 lsl r3,r3,#6
1133:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2268              	 .loc 1 1133 0
 2269 0036 8158     	 ldr r1,[r0,r2]
1126:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2270              	 .loc 1 1126 0
 2271 0038 DB0F     	 lsr r3,r3,#31
1133:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2272              	 .loc 1 1133 0
 2273 003a 5B06     	 lsl r3,r3,#25
 2274 003c 0B43     	 orr r3,r1
 2275 003e 8350     	 str r3,[r0,r2]
1137:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2276              	 .loc 1 1137 0
 2277 0040 3B1C     	 mov r3,r7
 2278 0042 2B43     	 orr r3,r5
1136:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2279              	 .loc 1 1136 0
 2280 0044 0351     	 str r3,[r0,r4]
 2281              	.LVL262:
 2282              	.LVL263:
 2283              	 .loc 1 1138 0
 2284 0046 04BC     	 pop {r2}
 2285 0048 9046     	 mov r8,r2
 2286 004a F0BD     	 pop {r4,r5,r6,r7,pc}
 2287              	.L161:
 2288              	 .align 2
 2289              	.L160:
 2290 004c 00808080 	 .word -2139062272
 2291 0050 FFFFFFFD 	 .word -33554433
 2292              	 .cfi_endproc
 2293              	.LFE165:
 2295              	 .section .text.XMC_VADC_GROUP_ScanGetNumChannelsPending,"ax",%progbits
 2296              	 .align 2
 2297              	 .global XMC_VADC_GROUP_ScanGetNumChannelsPending
 2298              	 .code 16
 2299              	 .thumb_func
 2301              	XMC_VADC_GROUP_ScanGetNumChannelsPending:
 2302              	.LFB166:
1139:../Libraries/XMCLib/src/xmc_vadc.c **** 
1140:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to find out number of channels awaiting conversion */
1141:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr)
1142:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2303              	 .loc 1 1142 0
 2304              	 .cfi_startproc
 2305              	.LVL264:
1143:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1144:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1145:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1146:../Libraries/XMCLib/src/xmc_vadc.c **** 
1147:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanGetNumChannelsPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1148:../Libraries/XMCLib/src/xmc_vadc.c **** 
1149:../Libraries/XMCLib/src/xmc_vadc.c **** 
1150:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
1151:../Libraries/XMCLib/src/xmc_vadc.c **** 
1152:../Libraries/XMCLib/src/xmc_vadc.c ****   if (group_ptr->ASPND)
 2306              	 .loc 1 1152 0
 2307 0000 9623     	 mov r3,#150
 2308 0002 5B00     	 lsl r3,r3,#1
 2309 0004 C258     	 ldr r2,[r0,r3]
1142:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
 2310              	 .loc 1 1142 0
 2311 0006 10B5     	 push {r4,lr}
 2312              	.LCFI23:
 2313              	 .cfi_def_cfa_offset 8
 2314              	 .cfi_offset 4,-8
 2315              	 .cfi_offset 14,-4
1150:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2316              	 .loc 1 1150 0
 2317 0008 0021     	 mov r1,#0
 2318              	 .loc 1 1152 0
 2319 000a 002A     	 cmp r2,#0
 2320 000c 0AD0     	 beq .L163
1153:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1154:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = group_ptr->ASPND;
1155:../Libraries/XMCLib/src/xmc_vadc.c **** 
1156:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i=0U;i<XMC_VADC_NUM_CHANNELS_PER_GROUP;i++)
1157:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1158:../Libraries/XMCLib/src/xmc_vadc.c ****       if (reg & 1U)
 2321              	 .loc 1 1158 0
 2322 000e 0124     	 mov r4,#1
1154:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2323              	 .loc 1 1154 0
 2324 0010 C258     	 ldr r2,[r0,r3]
 2325              	.LVL265:
 2326 0012 253B     	 sub r3,r3,#37
 2327 0014 FF3B     	 sub r3,r3,#255
 2328              	.LVL266:
 2329              	.L165:
1159:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1160:../Libraries/XMCLib/src/xmc_vadc.c ****         count++;
 2330              	 .loc 1 1160 0
 2331 0016 201C     	 mov r0,r4
 2332 0018 013B     	 sub r3,r3,#1
 2333              	.LVL267:
 2334 001a 1040     	 and r0,r2
 2335 001c 0918     	 add r1,r1,r0
 2336              	.LVL268:
1161:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1162:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = (uint32_t)(reg >> (uint32_t)1);
 2337              	 .loc 1 1162 0
 2338 001e 5208     	 lsr r2,r2,#1
 2339              	.LVL269:
1156:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2340              	 .loc 1 1156 0
 2341 0020 002B     	 cmp r3,#0
 2342 0022 F8D1     	 bne .L165
 2343              	.LVL270:
 2344              	.L163:
1163:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1164:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1165:../Libraries/XMCLib/src/xmc_vadc.c **** 
1166:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
1167:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2345              	 .loc 1 1167 0
 2346 0024 081C     	 mov r0,r1
 2347              	 
 2348 0026 10BD     	 pop {r4,pc}
 2349              	 .cfi_endproc
 2350              	.LFE166:
 2352              	 .section .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode,"ax",%progbits
 2353              	 .align 2
 2354              	 .global XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
 2355              	 .code 16
 2356              	 .thumb_func
 2358              	XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:
 2359              	.LFB167:
1168:../Libraries/XMCLib/src/xmc_vadc.c **** 
1169:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for request source event */
1170:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
1171:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2360              	 .loc 1 1171 0
 2361              	 .cfi_startproc
 2362              	.LVL271:
1172:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1173:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 2363              	 .loc 1 1173 0
 2364 0000 E022     	 mov r2,#224
1171:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
 2365              	 .loc 1 1171 0
 2366 0002 10B5     	 push {r4,lr}
 2367              	.LCFI24:
 2368              	 .cfi_def_cfa_offset 8
 2369              	 .cfi_offset 4,-8
 2370              	 .cfi_offset 14,-4
1174:../Libraries/XMCLib/src/xmc_vadc.c **** 
1175:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_G
1176:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_
1177:../Libraries/XMCLib/src/xmc_vadc.c **** 
1178:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV1NP_Msk);
 2371              	 .loc 1 1178 0
 2372 0004 F024     	 mov r4,#240
1173:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2373              	 .loc 1 1173 0
 2374 0006 5200     	 lsl r2,r2,#1
 2375 0008 8358     	 ldr r3,[r0,r2]
 2376              	.LVL272:
1179:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV1NP_Pos);
 2377              	 .loc 1 1179 0
 2378 000a 0901     	 lsl r1,r1,#4
 2379              	.LVL273:
1178:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV1NP_Pos);
 2380              	 .loc 1 1178 0
 2381 000c A343     	 bic r3,r4
 2382              	.LVL274:
 2383              	 .loc 1 1179 0
 2384 000e 1943     	 orr r1,r3
 2385              	.LVL275:
1180:../Libraries/XMCLib/src/xmc_vadc.c **** 
1181:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 2386              	 .loc 1 1181 0
 2387 0010 8150     	 str r1,[r0,r2]
1182:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2388              	 .loc 1 1182 0
 2389              	 
 2390 0012 10BD     	 pop {r4,pc}
 2391              	 .cfi_endproc
 2392              	.LFE167:
 2394              	 .section .text.XMC_VADC_GROUP_ScanRemoveChannel,"ax",%progbits
 2395              	 .align 2
 2396              	 .global XMC_VADC_GROUP_ScanRemoveChannel
 2397              	 .code 16
 2398              	 .thumb_func
 2400              	XMC_VADC_GROUP_ScanRemoveChannel:
 2401              	.LFB168:
1183:../Libraries/XMCLib/src/xmc_vadc.c **** 
1184:../Libraries/XMCLib/src/xmc_vadc.c **** /* Removes the selected channel from conversion*/
1185:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
1186:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2402              	 .loc 1 1186 0
 2403              	 .cfi_startproc
 2404              	.LVL276:
1187:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t assel;
1188:../Libraries/XMCLib/src/xmc_vadc.c **** 
1189:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1190:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong channel number", ((channel_num)< XMC_VADC_NUM_
1191:../Libraries/XMCLib/src/xmc_vadc.c **** 
1192:../Libraries/XMCLib/src/xmc_vadc.c ****   assel = group_ptr->ASSEL; 
1193:../Libraries/XMCLib/src/xmc_vadc.c ****   assel &= (~( 1 << channel_num));
 2405              	 .loc 1 1193 0
 2406 0000 0122     	 mov r2,#1
1186:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t assel;
 2407              	 .loc 1 1186 0
 2408 0002 10B5     	 push {r4,lr}
 2409              	.LCFI25:
 2410              	 .cfi_def_cfa_offset 8
 2411              	 .cfi_offset 4,-8
 2412              	 .cfi_offset 14,-4
1192:../Libraries/XMCLib/src/xmc_vadc.c ****   assel &= (~( 1 << channel_num));
 2413              	 .loc 1 1192 0
 2414 0004 9424     	 mov r4,#148
 2415              	 .loc 1 1193 0
 2416 0006 8A40     	 lsl r2,r2,r1
1192:../Libraries/XMCLib/src/xmc_vadc.c ****   assel &= (~( 1 << channel_num));
 2417              	 .loc 1 1192 0
 2418 0008 6400     	 lsl r4,r4,#1
 2419 000a 0359     	 ldr r3,[r0,r4]
 2420              	.LVL277:
1194:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASSEL  = assel;
1195:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2421              	 .loc 1 1195 0
 2422              	 
1193:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASSEL  = assel;
 2423              	 .loc 1 1193 0
 2424 000c 9343     	 bic r3,r2
 2425              	.LVL278:
1194:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ASSEL  = assel;
 2426              	 .loc 1 1194 0
 2427 000e 0351     	 str r3,[r0,r4]
 2428              	 .loc 1 1195 0
 2429 0010 10BD     	 pop {r4,pc}
 2430              	 .cfi_endproc
 2431              	.LFE168:
 2433 0012 C046     	 .section .text.XMC_VADC_GLOBAL_BackgroundInit,"ax",%progbits
 2434              	 .align 2
 2435              	 .global XMC_VADC_GLOBAL_BackgroundInit
 2436              	 .code 16
 2437              	 .thumb_func
 2439              	XMC_VADC_GLOBAL_BackgroundInit:
 2440              	.LFB169:
1196:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_GSCAN_AVAILABLE */
1197:../Libraries/XMCLib/src/xmc_vadc.c **** 
1198:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize background scan request source hardware */
1199:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
1200:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2441              	 .loc 1 1200 0
 2442              	 .cfi_startproc
 2443              	.LVL279:
 2444              	.LBB82:
 2445              	.LBB83:
2579:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2580:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2581:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2582:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2583:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2584:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
2585:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2586:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2587:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the scan request source.<BR>\n
2588:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2589:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2590:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. A call to this API would return the status of the arbitration slot of scan.
2591:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
2592:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2593:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2594:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR
2595:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2596:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr)
2597:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2598:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GROU
2599:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2600:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN1_Msk) >> VADC_G_ARBPR_ASEN1_Pos);
2601:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2602:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2603:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2604:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2605:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_input  Choice of the input earmarked as a trigger line
2606:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2607:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2608:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2609:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2610:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for scan request source.<BR>\n
2611:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2612:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2613:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2614:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2615:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTSEL.
2616:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2617:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2618:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectGating()<BR> XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2619:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2620:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
2621:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2622:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2623:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2624:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2625:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Trigger edge selection
2626:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2627:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2628:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2629:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2630:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the trigger edge for scan request source.<BR>\n
2631:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2632:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible trigger edges. This is
2633:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2634:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTMODE.
2635:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2636:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2637:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2638:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2639:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
2640:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2641:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2642:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2643:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param gating_input  Module input signal meant to be selected as gating input
2644:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2645:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2646:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2647:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2648:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for scan request source.<BR>\n
2649:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2650:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the scan request source o
2651:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxASMR.ENGT has to be config
2652:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxAS
2653:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2654:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2655:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2656:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2657:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
2658:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2659:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2660:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2661:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the scan request source
2662:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2663:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2664:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2665:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2666:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of scan request source.<BR>\n
2667:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2668:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2669:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2670:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2671:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2672:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectGating();
2673:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2674:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_G
2675:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2676:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2677:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMODE
2678:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2679:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2680:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= (uint32_t) (~((uint32_t)VADC_G_ASMR_ENGT_Msk));
2681:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
2682:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)((uint32_t)mode_sel << VADC_G_ASMR_ENGT_Pos);
2683:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2684:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2685:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2686:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2687:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2688:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2689:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2690:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2691:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2692:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2693:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2694:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2695:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2696:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. Every request source event will cause a load event to occur. A call to this API would 
2697:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2698:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2699:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2700:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableContinuousMode()<BR>
2701:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2702:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2703:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2704:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2705:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_SCAN_Msk;
2706:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2707:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2708:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2709:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2710:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2711:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2712:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2713:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2714:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
2715:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2716:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2717:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2718:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2719:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this feature the Autoscan mode of operations is disabled. A call to this A
2720:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2721:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2722:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2723:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableContinuousMode()<BR>
2724:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2725:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2726:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2727:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2728:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_SCAN_Msk);
2729:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2730:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2731:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2732:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2733:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2734:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2735:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2736:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2737:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
2738:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
2739:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the s
2740:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxASMR.LD
2741:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2742:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2743:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2744:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2745:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
2746:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2747:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
2748:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_LDEV_Msk;
2749:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2750:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2751:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2752:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2753:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2754:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2755:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2756:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2757:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing scan sequence conversion.<BR>\n
2758:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
2759:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
2760:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
2761:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxASMR, GxASCTRL, GxARBPR to achieve the sequen
2762:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2763:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2764:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2765:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2766:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr);
2767:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2768:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2769:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2770:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel meant to be added to scan sequence
2771:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2772:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2773:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2774:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2775:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2776:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the scan sequence.<BR>\n
2777:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the scan request source. This will be added to
2778:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
2779:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2780:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2781:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2782:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddMultipleChannels()<BR>
2783:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2784:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddChannelToSequence(XMC_VADC_GROUP_t *const group_ptr, con
2785:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2786:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("VADC_GSCAN_AddSingleChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
2787:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddChannelToSequence:Wrong Channel Number", 
2788:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
2789:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL |= (uint32_t)((uint32_t)1 << ch_num);
2790:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2791:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2792:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2793:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2794:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
2795:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
2796:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
2797:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the selected channels
2798:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
2799:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2800:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2801:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2802:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2803:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
2804:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
2805:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
2806:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2807:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2808:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2809:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddChannelToSequence()<BR>
2810:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2811:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddMultipleChannels(XMC_VADC_GROUP_t *const group_ptr, cons
2812:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2813:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddMultipleChannels:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
2814:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL = ch_mask;
2815:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2816:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2817:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2818:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2819:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
2820:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2821:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2822:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
2823:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2824:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2825:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending for conversion.<BR>\n
2826:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
2827:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
2828:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
2829:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (GxASPND).
2830:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2831:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2832:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanGetNumChannelsPending()<BR>
2833:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2834:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsChannelPending(XMC_VADC_GROUP_t *const group_ptr, const u
2835:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2836:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2837:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
2838:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_C
2839:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2840:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)((uint32_t)(group_ptr->ASPND >> ch_num) & 1U));
2841:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2842:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2843:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2844:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param  group_ptr     Constant pointer to the VADC group
2845:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return  <BR>
2846:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
2847:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to 0x8]
2848:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2849:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2850:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the total number of pending channels.<BR>\n
2851:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
2852:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
2853:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
2854:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (GxASPND).
2855:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2856:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2857:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanIsChannelPending()<BR>
2858:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2859:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr);
2860:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2861:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2862:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2863:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2864:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2865:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2866:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2867:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
2868:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for scan. This will trigger a interrupt if the
2869:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
2870:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
2871:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2872:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2873:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
2874:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2875:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
2876:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2877:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2878:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFLAG    |= (uint32_t)VADC_G_SEFLAG_SEV1_Msk;
2879:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2880:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2881:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2882:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2883:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2884:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2885:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2886:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2887:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the scan conversion complete request source event.<BR>\n
2888:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
2889:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
2890:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2891:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2892:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanTriggerReqSrcEvent()<BR>
2893:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2894:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
2895:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2896:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
2897:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV1_Msk;
2898:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2899:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2900:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2901:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2902:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2903:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
2904:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
2905:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2906:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2907:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
2908:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the scan request source event. Will return a true
2909:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for scan. A call to this API would access the register bit field GxSEF
2910:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2911:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2912:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2913:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2914:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
2915:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2916:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GSCAN_GetRSEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2917:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV1_Msk));
2918:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2919:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2920:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2921:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2922:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param sr    Service Request Id
2923:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2924:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2925:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2926:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2927:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Connects the scan request source event to the SR line of VADC.<BR>\n
2928:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a scan request source event. Hence to get a 
2929:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2930:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * field GxSEVNP.SEV1NP .
2931:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2932:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2933:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2934:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2935:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
2936:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2937:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2938:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2939:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2940:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2941:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2942:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2943:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for scan request source.<BR>\n
2944:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API, the trigger signal will be activated for the scan request source. The trigger
2945:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the ASCTRL register. The Selection of a input will be done by
2946:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectTrigger(). A call to this API would configure the register bit field Gx
2947:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2948:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2949:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanDisableExternalTrigger()<BR>
2950:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2951:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
2952:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2953:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2954:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2955:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_ENTR_Msk;
2956:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2957:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2958:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2959:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2960:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2961:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2962:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2963:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2964:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for scan request source.<BR>
2965:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the scan request source.
2966:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the scan request source. If any configuration were
2967:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in GxASCTRL, it will be not be effected by this API.
2968:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENTR.
2969:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2970:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2971:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2972:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2973:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
2974:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
2975:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2976:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2977:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENTR_Msk);
2978:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
2979:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2980:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2981:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2982:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param channel_num   channel number to be removed from the scan sequence.
2983:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
2984:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
2985:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2986:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2987:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Removes a channel from the scan sequence.<BR>
2988:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the it is possible to remove a single channel from the conversion sequence.
2989:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The remaining channels will continue however they are.
2990:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register GxASSEL.
2991:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
2992:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2993:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
2994:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
2995:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
2996:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
2997:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
2998:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
2999:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Pointer to the VADC module
3000:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3001:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3002:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3003:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the Background scan functional block.<BR>\n
3004:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The BACKGROUND SCAN request source functional block converts channels of all VADC groups that ha
3005:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * been assigned as a priority channel (priority channels can be converted only by queue and scan).
3006:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source converts the unprioritized channels. Unprioritized channels however can also be u
3007:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * and scan. But a channel which is prioritized can not be used with background request source.
3008:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3009:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3010:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR> XMC_VADC_GROUP_BackgroundDisableArbitratio
3011:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundSelectGating()<BR>
3012:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3013:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
3014:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3015:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
3016:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3017:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group which may receive a
3018:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                  conversion request from background request source
3019:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3020:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3021:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3022:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3023:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3024:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the Background request source.<BR>\n
3025:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3026:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3027:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot. Thus this must be enabled if any conversion need to take place.
3028:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2.
3029:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3030:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3031:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableArbitrationSlot()<BR>
3032:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3033:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_p
3034:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3035:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK_
3036:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN2_Msk;
3037:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3038:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3039:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3040:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group which may receive a conversion request
3041:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                     from background request source
3042:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3043:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3044:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3045:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3046:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the Background request source.<BR>\n
3047:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3048:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3049:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot.A call to this API will lead to all conversions request by Backgrou
3050:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2
3051:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3052:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3053:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR>
3054:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3055:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_
3056:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3057:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK
3058:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN2_Msk);
 2446              	 .loc 2 3058 0
 2447 0000 274B     	 ldr r3,.L178
 2448              	.LBE83:
 2449              	.LBE82:
 2450              	 .loc 1 1200 0
 2451 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 2452              	.LCFI26:
 2453              	 .cfi_def_cfa_offset 20
 2454              	 .cfi_offset 4,-20
 2455              	 .cfi_offset 5,-16
 2456              	 .cfi_offset 6,-12
 2457              	 .cfi_offset 7,-8
 2458              	 .cfi_offset 14,-4
 2459 0004 4646     	 mov r6,r8
 2460              	.LBB90:
 2461              	.LBB84:
 2462              	 .loc 2 3058 0
 2463 0006 9846     	 mov r8,r3
 2464 0008 8422     	 mov r2,#132
 2465              	.LBE84:
 2466              	.LBE90:
 2467              	 .loc 1 1200 0
 2468 000a 4F46     	 mov r7,r9
 2469              	.LBB91:
 2470              	.LBB85:
 2471              	 .loc 2 3058 0
 2472 000c 4446     	 mov r4,r8
 2473              	.LBE85:
 2474              	.LBE91:
 2475              	 .loc 1 1200 0
 2476 000e 8C46     	 mov ip,r1
 2477              	.LBB92:
 2478              	.LBB86:
 2479              	 .loc 2 3058 0
 2480 0010 9958     	 ldr r1,[r3,r2]
 2481              	.LVL280:
 2482 0012 244B     	 ldr r3,.L178+4
 2483              	.LBE86:
 2484              	.LBE92:
 2485              	 .loc 1 1200 0
 2486 0014 C0B4     	 push {r6,r7}
 2487              	.LCFI27:
 2488              	 .cfi_def_cfa_offset 28
 2489              	 .cfi_offset 8,-28
 2490              	 .cfi_offset 9,-24
 2491              	.LBB93:
 2492              	.LBB87:
 2493              	 .loc 2 3058 0
 2494 0016 1940     	 and r1,r3
 2495 0018 A150     	 str r1,[r4,r2]
 2496              	.LVL281:
 2497 001a 2349     	 ldr r1,.L178+8
 2498              	.LBE87:
 2499              	.LBE93:
1201:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1202:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t i;
1203:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1204:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t conv_start_mask;
1205:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1206:../Libraries/XMCLib/src/xmc_vadc.c ****   
1207:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundInit:Wrong Module Pointer", (global_ptr == VADC))
1208:../Libraries/XMCLib/src/xmc_vadc.c **** 
1209:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1210:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
1211:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1212:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
1213:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1214:../Libraries/XMCLib/src/xmc_vadc.c ****   
1215:../Libraries/XMCLib/src/xmc_vadc.c ****   conv_start_mask = (uint32_t) 0;
1216:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 2500              	 .loc 1 1216 0
 2501 001c 0327     	 mov r7,#3
 2502              	.LBB94:
 2503              	.LBB88:
 2504              	 .loc 2 3058 0
 2505 001e 8C58     	 ldr r4,[r1,r2]
 2506              	.LBE88:
 2507              	.LBE94:
1217:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1218:../Libraries/XMCLib/src/xmc_vadc.c ****     conv_start_mask = (uint32_t)VADC_G_ARBPR_CSM2_Msk;
1219:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1220:../Libraries/XMCLib/src/xmc_vadc.c ****   
1221:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
1222:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1223:../Libraries/XMCLib/src/xmc_vadc.c ****     reg = g_xmc_vadc_group_array[i]->ARBPR;
1224:../Libraries/XMCLib/src/xmc_vadc.c **** 
1225:../Libraries/XMCLib/src/xmc_vadc.c ****     reg &= ~(uint32_t)(VADC_G_ARBPR_PRIO2_Msk);
 2508              	 .loc 1 1225 0
 2509 0020 224E     	 ldr r6,.L178+12
 2510              	.LBB95:
 2511              	.LBB89:
 2512              	 .loc 2 3058 0
 2513 0022 2340     	 and r3,r4
 2514 0024 8B50     	 str r3,[r1,r2]
 2515              	.LVL282:
 2516              	.LBE89:
 2517              	.LBE95:
1216:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2518              	 .loc 1 1216 0
 2519 0026 6346     	 mov r3,ip
 2520 0028 1B78     	 ldrb r3,[r3]
 2521              	 .loc 1 1225 0
 2522 002a B146     	 mov r9,r6
1216:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2523              	 .loc 1 1216 0
 2524 002c 1F40     	 and r7,r3
1218:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 2525              	 .loc 1 1218 0
 2526 002e 3D1C     	 mov r5,r7
 2527 0030 6C1E     	 sub r4,r5,#1
 2528 0032 A541     	 sbc r5,r5,r4
1223:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2529              	 .loc 1 1223 0
 2530 0034 4446     	 mov r4,r8
 2531 0036 A458     	 ldr r4,[r4,r2]
1226:../Libraries/XMCLib/src/xmc_vadc.c **** 
1227:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the priority of the request source */
1228:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO2_Pos);
 2532              	 .loc 1 1228 0
 2533 0038 1B07     	 lsl r3,r3,#28
1225:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2534              	 .loc 1 1225 0
 2535 003a 3440     	 and r4,r6
1229:../Libraries/XMCLib/src/xmc_vadc.c ****   
1230:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Program the start mode */
1231:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= conv_start_mask;
1232:../Libraries/XMCLib/src/xmc_vadc.c **** 
1233:../Libraries/XMCLib/src/xmc_vadc.c ****     g_xmc_vadc_group_array[i]->ARBPR = reg;
 2536              	 .loc 1 1233 0
 2537 003c 4646     	 mov r6,r8
1228:../Libraries/XMCLib/src/xmc_vadc.c ****   
 2538              	 .loc 1 1228 0
 2539 003e 9B0F     	 lsr r3,r3,#30
 2540 0040 1B02     	 lsl r3,r3,#8
1218:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 2541              	 .loc 1 1218 0
 2542 0042 ED02     	 lsl r5,r5,#11
 2543              	.LVL283:
1228:../Libraries/XMCLib/src/xmc_vadc.c ****   
 2544              	 .loc 1 1228 0
 2545 0044 1C43     	 orr r4,r3
 2546              	.LVL284:
1231:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2547              	 .loc 1 1231 0
 2548 0046 2C43     	 orr r4,r5
 2549              	.LVL285:
 2550              	 .loc 1 1233 0
 2551 0048 B450     	 str r4,[r6,r2]
 2552              	.LVL286:
1225:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2553              	 .loc 1 1225 0
 2554 004a 4E46     	 mov r6,r9
1223:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2555              	 .loc 1 1223 0
 2556 004c 8C58     	 ldr r4,[r1,r2]
 2557              	.LVL287:
1225:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2558              	 .loc 1 1225 0
 2559 004e 2640     	 and r6,r4
 2560              	.LVL288:
1228:../Libraries/XMCLib/src/xmc_vadc.c ****   
 2561              	 .loc 1 1228 0
 2562 0050 3343     	 orr r3,r6
 2563              	.LVL289:
1231:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2564              	 .loc 1 1231 0
 2565 0052 2B43     	 orr r3,r5
 2566              	.LVL290:
 2567              	 .loc 1 1233 0
 2568 0054 8B50     	 str r3,[r1,r2]
 2569              	.LVL291:
1234:../Libraries/XMCLib/src/xmc_vadc.c ****   
1235:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1236:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1237:../Libraries/XMCLib/src/xmc_vadc.c **** 
1238:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSCTRL register */
1239:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL = (uint32_t)(config->asctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VAD
 2570              	 .loc 1 1239 0
 2571 0056 6246     	 mov r2,ip
 2572 0058 154B     	 ldr r3,.L178+16
 2573              	.LVL292:
 2574 005a 5268     	 ldr r2,[r2,#4]
 2575 005c 1343     	 orr r3,r2
 2576 005e 8022     	 mov r2,#128
 2577 0060 9200     	 lsl r2,r2,#2
 2578 0062 8350     	 str r3,[r0,r2]
 2579              	.LVL293:
1240:../Libraries/XMCLib/src/xmc_vadc.c **** 
1241:../Libraries/XMCLib/src/xmc_vadc.c ****   /* program BRSMR register */
1242:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << V
 2580              	 .loc 1 1242 0
 2581 0064 6346     	 mov r3,ip
 2582 0066 0122     	 mov r2,#1
 2583 0068 9B68     	 ldr r3,[r3,#8]
 2584 006a 1343     	 orr r3,r2
 2585 006c 8122     	 mov r2,#129
 2586 006e 9200     	 lsl r2,r2,#2
 2587 0070 8350     	 str r3,[r0,r2]
1243:../Libraries/XMCLib/src/xmc_vadc.c ****   
1244:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1245:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2588              	 .loc 1 1245 0
 2589 0072 022F     	 cmp r7,#2
 2590 0074 0ED0     	 beq .L177
 2591              	.L175:
 2592              	.LVL294:
 2593              	.LBB96:
 2594              	.LBB97:
3036:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 2595              	 .loc 2 3036 0 discriminator 1
 2596 0076 8423     	 mov r3,#132
 2597 0078 8020     	 mov r0,#128
 2598              	.LVL295:
 2599 007a 094A     	 ldr r2,.L178
 2600 007c C004     	 lsl r0,r0,#19
 2601 007e D158     	 ldr r1,[r2,r3]
 2602              	.LBE97:
 2603              	.LBE96:
1246:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1247:../Libraries/XMCLib/src/xmc_vadc.c ****     global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_RPTDIS_Msk;
1248:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1249:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1250:../Libraries/XMCLib/src/xmc_vadc.c ****   
1251:../Libraries/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1252:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
1253:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1254:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
1255:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1256:../Libraries/XMCLib/src/xmc_vadc.c ****   #endif
1257:../Libraries/XMCLib/src/xmc_vadc.c ****   
1258:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2604              	 .loc 1 1258 0 discriminator 1
 2605              	 
 2606              	.LBB99:
 2607              	.LBB98:
3036:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 2608              	 .loc 2 3036 0 discriminator 1
 2609 0080 0143     	 orr r1,r0
 2610 0082 D150     	 str r1,[r2,r3]
 2611              	.LVL296:
 2612 0084 0849     	 ldr r1,.L178+8
 2613 0086 CA58     	 ldr r2,[r1,r3]
 2614 0088 0243     	 orr r2,r0
 2615 008a CA50     	 str r2,[r1,r3]
 2616              	.LVL297:
 2617              	.LVL298:
 2618              	.LVL299:
 2619              	.LBE98:
 2620              	.LBE99:
 2621              	 .loc 1 1258 0 discriminator 1
 2622 008c 0CBC     	 pop {r2,r3}
 2623 008e 9046     	 mov r8,r2
 2624 0090 9946     	 mov r9,r3
 2625 0092 F0BD     	 pop {r4,r5,r6,r7,pc}
 2626              	.LVL300:
 2627              	.L177:
1247:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 2628              	 .loc 1 1247 0
 2629 0094 8021     	 mov r1,#128
 2630 0096 8358     	 ldr r3,[r0,r2]
 2631 0098 4902     	 lsl r1,r1,#9
 2632 009a 0B43     	 orr r3,r1
 2633 009c 8350     	 str r3,[r0,r2]
 2634 009e EAE7     	 b .L175
 2635              	.L179:
 2636              	 .align 2
 2637              	.L178:
 2638 00a0 00040348 	 .word 1208157184
 2639 00a4 FFFFFFFB 	 .word -67108865
 2640 00a8 00080348 	 .word 1208158208
 2641 00ac FFFCFFFF 	 .word -769
 2642 00b0 00808000 	 .word 8421376
 2643              	 .cfi_endproc
 2644              	.LFE169:
 2646              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger,"ax",%progbits
 2647              	 .align 2
 2648              	 .global XMC_VADC_GLOBAL_BackgroundSelectTrigger
 2649              	 .code 16
 2650              	 .thumb_func
 2652              	XMC_VADC_GLOBAL_BackgroundSelectTrigger:
 2653              	.LFB170:
1259:../Libraries/XMCLib/src/xmc_vadc.c **** 
1260:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger for background scan request source */
1261:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
1262:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2654              	 .loc 1 1262 0
 2655              	 .cfi_startproc
 2656              	.LVL301:
1263:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1264:../Libraries/XMCLib/src/xmc_vadc.c **** 
1265:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("VADC_BCKGND_SelectTriggerInput:Wrong Module Pointer", (global_ptr == VADC))
1266:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_N
1267:../Libraries/XMCLib/src/xmc_vadc.c **** 
1268:../Libraries/XMCLib/src/xmc_vadc.c ****   
1269:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2657              	 .loc 1 1269 0
 2658 0000 8022     	 mov r2,#128
 2659 0002 9200     	 lsl r2,r2,#2
1262:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
 2660              	 .loc 1 1262 0
 2661 0004 10B5     	 push {r4,lr}
 2662              	.LCFI28:
 2663              	 .cfi_def_cfa_offset 8
 2664              	 .cfi_offset 4,-8
 2665              	 .cfi_offset 14,-4
1270:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_XTWC_Msk;
1271:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_XTSEL_Msk);
 2666              	 .loc 1 1271 0
 2667 0006 054B     	 ldr r3,.L181
1269:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_XTWC_Msk;
 2668              	 .loc 1 1269 0
 2669 0008 8458     	 ldr r4,[r0,r2]
 2670              	.LVL302:
1272:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_XTSEL_Pos);
 2671              	 .loc 1 1272 0
 2672 000a 0902     	 lsl r1,r1,#8
 2673              	.LVL303:
1271:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_XTSEL_Pos);
 2674              	 .loc 1 1271 0
 2675 000c 2340     	 and r3,r4
 2676 000e 8024     	 mov r4,#128
 2677              	.LVL304:
 2678 0010 2402     	 lsl r4,r4,#8
 2679 0012 2343     	 orr r3,r4
 2680              	.LVL305:
 2681              	 .loc 1 1272 0
 2682 0014 1943     	 orr r1,r3
 2683              	.LVL306:
1273:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2684              	 .loc 1 1273 0
 2685 0016 8150     	 str r1,[r0,r2]
1274:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2686              	 .loc 1 1274 0
 2687              	 
 2688 0018 10BD     	 pop {r4,pc}
 2689              	.L182:
 2690 001a C046     	 .align 2
 2691              	.L181:
 2692 001c FFF0FFFF 	 .word -3841
 2693              	 .cfi_endproc
 2694              	.LFE170:
 2696              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge,"ax",%progbits
 2697              	 .align 2
 2698              	 .global XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
 2699              	 .code 16
 2700              	 .thumb_func
 2702              	XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:
 2703              	.LFB171:
1275:../Libraries/XMCLib/src/xmc_vadc.c **** 
1276:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1277:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr,
1278:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_TRIGGER_EDGE_t trigger_edge)
1279:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2704              	 .loc 1 1279 0
 2705              	 .cfi_startproc
 2706              	.LVL307:
1280:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1281:../Libraries/XMCLib/src/xmc_vadc.c **** 
1282:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Global Pointer", (global_ptr == VAD
1283:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Trigger Port",
1284:../Libraries/XMCLib/src/xmc_vadc.c ****             ((trigger_edge)<= XMC_VADC_TRIGGER_EDGE_ANY))
1285:../Libraries/XMCLib/src/xmc_vadc.c **** 
1286:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      = global_ptr->BRSCTRL;
 2707              	 .loc 1 1286 0
 2708 0000 8022     	 mov r2,#128
 2709 0002 9200     	 lsl r2,r2,#2
1279:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
 2710              	 .loc 1 1279 0
 2711 0004 10B5     	 push {r4,lr}
 2712              	.LCFI29:
 2713              	 .cfi_def_cfa_offset 8
 2714              	 .cfi_offset 4,-8
 2715              	 .cfi_offset 14,-4
1287:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_BRSCTRL_XTWC_Msk;
1288:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_BRSCTRL_XTMODE_Msk);
 2716              	 .loc 1 1288 0
 2717 0006 054B     	 ldr r3,.L184
1286:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_BRSCTRL_XTWC_Msk;
 2718              	 .loc 1 1286 0
 2719 0008 8458     	 ldr r4,[r0,r2]
 2720              	.LVL308:
1289:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_BRSCTRL_XTMODE_Pos);
 2721              	 .loc 1 1289 0
 2722 000a 4903     	 lsl r1,r1,#13
 2723              	.LVL309:
1288:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_BRSCTRL_XTMODE_Pos);
 2724              	 .loc 1 1288 0
 2725 000c 2340     	 and r3,r4
 2726 000e 8024     	 mov r4,#128
 2727              	.LVL310:
 2728 0010 2402     	 lsl r4,r4,#8
 2729 0012 2343     	 orr r3,r4
 2730              	.LVL311:
 2731              	 .loc 1 1289 0
 2732 0014 1943     	 orr r1,r3
 2733              	.LVL312:
1290:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2734              	 .loc 1 1290 0
 2735 0016 8150     	 str r1,[r0,r2]
1291:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2736              	 .loc 1 1291 0
 2737              	 
 2738 0018 10BD     	 pop {r4,pc}
 2739              	.L185:
 2740 001a C046     	 .align 2
 2741              	.L184:
 2742 001c FF9FFFFF 	 .word -24577
 2743              	 .cfi_endproc
 2744              	.LFE171:
 2746              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectGating,"ax",%progbits
 2747              	 .align 2
 2748              	 .global XMC_VADC_GLOBAL_BackgroundSelectGating
 2749              	 .code 16
 2750              	 .thumb_func
 2752              	XMC_VADC_GLOBAL_BackgroundSelectGating:
 2753              	.LFB172:
1292:../Libraries/XMCLib/src/xmc_vadc.c **** 
1293:../Libraries/XMCLib/src/xmc_vadc.c **** 
1294:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gate for background scan request source */
1295:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
1296:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2754              	 .loc 1 1296 0
 2755              	 .cfi_startproc
 2756              	.LVL313:
1297:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1298:../Libraries/XMCLib/src/xmc_vadc.c **** 
1299:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Module Pointer", (global_ptr == VADC))
1300:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM
1301:../Libraries/XMCLib/src/xmc_vadc.c **** 
1302:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 2757              	 .loc 1 1302 0
 2758 0000 8022     	 mov r2,#128
 2759 0002 9200     	 lsl r2,r2,#2
1296:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
 2760              	 .loc 1 1296 0
 2761 0004 10B5     	 push {r4,lr}
 2762              	.LCFI30:
 2763              	 .cfi_def_cfa_offset 8
 2764              	 .cfi_offset 4,-8
 2765              	 .cfi_offset 14,-4
1303:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_GTWC_Msk;
1304:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_GTSEL_Msk);
 2766              	 .loc 1 1304 0
 2767 0006 054B     	 ldr r3,.L187
1302:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_GTWC_Msk;
 2768              	 .loc 1 1302 0
 2769 0008 8458     	 ldr r4,[r0,r2]
 2770              	.LVL314:
1305:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_GTSEL_Pos);
 2771              	 .loc 1 1305 0
 2772 000a 0904     	 lsl r1,r1,#16
 2773              	.LVL315:
1304:../Libraries/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_GTSEL_Pos);
 2774              	 .loc 1 1304 0
 2775 000c 2340     	 and r3,r4
 2776 000e 8024     	 mov r4,#128
 2777              	.LVL316:
 2778 0010 2404     	 lsl r4,r4,#16
 2779 0012 2343     	 orr r3,r4
 2780              	.LVL317:
 2781              	 .loc 1 1305 0
 2782 0014 1943     	 orr r1,r3
 2783              	.LVL318:
1306:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 2784              	 .loc 1 1306 0
 2785 0016 8150     	 str r1,[r0,r2]
1307:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2786              	 .loc 1 1307 0
 2787              	 
 2788 0018 10BD     	 pop {r4,pc}
 2789              	.L188:
 2790 001a C046     	 .align 2
 2791              	.L187:
 2792 001c FFFFF0FF 	 .word -983041
 2793              	 .cfi_endproc
 2794              	.LFE172:
 2796              	 .section .text.XMC_VADC_GLOBAL_BackgroundAbortSequence,"ax",%progbits
 2797              	 .align 2
 2798              	 .global XMC_VADC_GLOBAL_BackgroundAbortSequence
 2799              	 .code 16
 2800              	 .thumb_func
 2802              	XMC_VADC_GLOBAL_BackgroundAbortSequence:
 2803              	.LFB173:
1308:../Libraries/XMCLib/src/xmc_vadc.c **** 
1309:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a sequence */
1310:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr)
1311:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2804              	 .loc 1 1311 0
 2805              	 .cfi_startproc
 2806              	.LVL319:
1312:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t brsctrl;
1313:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1314:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1315:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t grp_asen2_flag[XMC_VADC_MAXIMUM_NUM_GROUPS];
1316:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1317:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAbortSequence:Wrong Module Pointer", (global_ptr == VADC))
1318:../Libraries/XMCLib/src/xmc_vadc.c **** 
1319:../Libraries/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1320:../Libraries/XMCLib/src/xmc_vadc.c ****   brsctrl = global_ptr->BRSCTRL;
 2807              	 .loc 1 1320 0
 2808 0000 8023     	 mov r3,#128
1311:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t brsctrl;
 2809              	 .loc 1 1311 0
 2810 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 2811              	.LCFI31:
 2812              	 .cfi_def_cfa_offset 20
 2813              	 .cfi_offset 4,-20
 2814              	 .cfi_offset 5,-16
 2815              	 .cfi_offset 6,-12
 2816              	 .cfi_offset 7,-8
 2817              	 .cfi_offset 14,-4
 2818 0004 4746     	 mov r7,r8
 2819              	 .loc 1 1320 0
 2820 0006 9B00     	 lsl r3,r3,#2
 2821 0008 C258     	 ldr r2,[r0,r3]
1321:../Libraries/XMCLib/src/xmc_vadc.c **** 
1322:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(0U | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk);
1323:../Libraries/XMCLib/src/xmc_vadc.c **** 
1324:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable Background Request source */
1325:../Libraries/XMCLib/src/xmc_vadc.c **** 
1326:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1327:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
1328:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1329:../Libraries/XMCLib/src/xmc_vadc.c ****     grp_asen2_flag[i] = (uint8_t)(g_xmc_vadc_group_array[i]->ARBPR >> VADC_G_ARBPR_ASEN2_Pos);
 2822              	 .loc 1 1329 0
 2823 000a 1B49     	 ldr r1,.L194
1320:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2824              	 .loc 1 1320 0
 2825 000c 9046     	 mov r8,r2
 2826              	.LVL320:
1322:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2827              	 .loc 1 1322 0
 2828 000e 1B4A     	 ldr r2,.L194+4
 2829              	.LVL321:
1311:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t brsctrl;
 2830              	 .loc 1 1311 0
 2831 0010 80B4     	 push {r7}
 2832              	.LCFI32:
 2833              	 .cfi_def_cfa_offset 24
 2834              	 .cfi_offset 8,-24
1322:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2835              	 .loc 1 1322 0
 2836 0012 C250     	 str r2,[r0,r3]
 2837              	.LVL322:
 2838              	 .loc 1 1329 0
 2839 0014 7D3B     	 sub r3,r3,#125
 2840 0016 FF3B     	 sub r3,r3,#255
 2841 0018 CE58     	 ldr r6,[r1,r3]
 2842              	.LVL323:
 2843              	.LBB100:
 2844              	.LBB101:
 2845              	 .loc 2 3058 0
 2846 001a 194A     	 ldr r2,.L194+8
 2847 001c CD58     	 ldr r5,[r1,r3]
 2848              	.LBE101:
 2849              	.LBE100:
 2850              	 .loc 1 1329 0
 2851 001e 194F     	 ldr r7,.L194+12
 2852              	.LBB105:
 2853              	.LBB102:
 2854              	 .loc 2 3058 0
 2855 0020 1540     	 and r5,r2
 2856 0022 CD50     	 str r5,[r1,r3]
 2857              	.LVL324:
 2858              	.LBE102:
 2859              	.LBE105:
 2860              	 .loc 1 1329 0
 2861 0024 FD58     	 ldr r5,[r7,r3]
 2862              	.LBB106:
 2863              	.LBB103:
 2864              	 .loc 2 3058 0
 2865 0026 FC58     	 ldr r4,[r7,r3]
 2866              	.LBE103:
 2867              	.LBE106:
 2868              	 .loc 1 1329 0
 2869 0028 AD0E     	 lsr r5,r5,#26
 2870              	.LVL325:
 2871              	.LBB107:
 2872              	.LBB104:
 2873              	 .loc 2 3058 0
 2874 002a 2240     	 and r2,r4
 2875 002c FA50     	 str r2,[r7,r3]
 2876              	.LVL326:
 2877              	.LBE104:
 2878              	.LBE107:
1330:../Libraries/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
1331:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1332:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1333:../Libraries/XMCLib/src/xmc_vadc.c **** 
1334:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Abort the ongoing sequence */
1335:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_CLRPND_Msk;
 2879              	 .loc 1 1335 0
 2880 002e 8127     	 mov r7,#129
 2881 0030 8024     	 mov r4,#128
 2882 0032 BF00     	 lsl r7,r7,#2
 2883 0034 C259     	 ldr r2,[r0,r7]
 2884 0036 6400     	 lsl r4,r4,#1
 2885 0038 2243     	 orr r2,r4
 2886 003a C251     	 str r2,[r0,r7]
 2887              	.LVL327:
1336:../Libraries/XMCLib/src/xmc_vadc.c **** 
1337:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1338:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable Background Request source */
1339:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
1340:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1341:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint8_t)1 == grp_asen2_flag[i])
 2888              	 .loc 1 1341 0
 2889 003c B20E     	 lsr r2,r6,#26
 2890 003e 012A     	 cmp r2,#1
 2891 0040 0AD0     	 beq .L192
 2892              	.LVL328:
 2893 0042 012D     	 cmp r5,#1
 2894 0044 0FD0     	 beq .L193
 2895              	.L191:
 2896              	.LVL329:
1342:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1343:../Libraries/XMCLib/src/xmc_vadc.c ****       XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t*)g_xmc_vadc_group_array[i]);
1344:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1345:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1346:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1347:../Libraries/XMCLib/src/xmc_vadc.c **** 
1348:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Re-enable any disabled trigger and gating*/
1349:../Libraries/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(brsctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk
 2897              	 .loc 1 1349 0
 2898 0046 4246     	 mov r2,r8
 2899 0048 0C4B     	 ldr r3,.L194+4
1350:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2900              	 .loc 1 1350 0
 2901              	 
1349:../Libraries/XMCLib/src/xmc_vadc.c **** }
 2902              	 .loc 1 1349 0
 2903 004a 1343     	 orr r3,r2
 2904 004c 8022     	 mov r2,#128
 2905 004e 9200     	 lsl r2,r2,#2
 2906 0050 8350     	 str r3,[r0,r2]
 2907              	.LVL330:
 2908              	 .loc 1 1350 0
 2909 0052 04BC     	 pop {r2}
 2910 0054 9046     	 mov r8,r2
 2911 0056 F0BD     	 pop {r4,r5,r6,r7,pc}
 2912              	.LVL331:
 2913              	.L192:
 2914              	.LBB108:
 2915              	.LBB109:
3036:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 2916              	 .loc 2 3036 0
 2917 0058 8026     	 mov r6,#128
 2918 005a CA58     	 ldr r2,[r1,r3]
 2919 005c F604     	 lsl r6,r6,#19
 2920 005e 3243     	 orr r2,r6
 2921 0060 CA50     	 str r2,[r1,r3]
 2922              	.LVL332:
 2923              	.LBE109:
 2924              	.LBE108:
1341:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2925              	 .loc 1 1341 0
 2926 0062 012D     	 cmp r5,#1
 2927 0064 EFD1     	 bne .L191
 2928              	.LVL333:
 2929              	.L193:
 2930              	.LBB111:
 2931              	.LBB110:
3036:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 2932              	 .loc 2 3036 0
 2933 0066 8422     	 mov r2,#132
 2934 0068 8025     	 mov r5,#128
 2935 006a 0649     	 ldr r1,.L194+12
 2936 006c ED04     	 lsl r5,r5,#19
 2937 006e 8B58     	 ldr r3,[r1,r2]
 2938 0070 2B43     	 orr r3,r5
 2939 0072 8B50     	 str r3,[r1,r2]
 2940 0074 E7E7     	 b .L191
 2941              	.L195:
 2942 0076 C046     	 .align 2
 2943              	.L194:
 2944 0078 00040348 	 .word 1208157184
 2945 007c 00808000 	 .word 8421376
 2946 0080 FFFFFFFB 	 .word -67108865
 2947 0084 00080348 	 .word 1208158208
 2948              	.LBE110:
 2949              	.LBE111:
 2950              	 .cfi_endproc
 2951              	.LFE173:
 2953              	 .section .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending,"ax",%progbits
 2954              	 .align 2
 2955              	 .global XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
 2956              	 .code 16
 2957              	 .thumb_func
 2959              	XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:
 2960              	.LFB174:
1351:../Libraries/XMCLib/src/xmc_vadc.c **** 
1352:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine how many channels are awaiting conversion */
1353:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr)
1354:../Libraries/XMCLib/src/xmc_vadc.c **** {
 2961              	 .loc 1 1354 0
 2962              	 .cfi_startproc
 2963              	.LVL334:
1355:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1356:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1357:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t j;
1358:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1359:../Libraries/XMCLib/src/xmc_vadc.c **** 
1360:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:Wrong Module Pointer", (global_ptr ==
1361:../Libraries/XMCLib/src/xmc_vadc.c **** 
1362:../Libraries/XMCLib/src/xmc_vadc.c ****   count = 0U;
1363:../Libraries/XMCLib/src/xmc_vadc.c ****   
1364:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Loop through all groups and find out who is awaiting conversion */
1365:../Libraries/XMCLib/src/xmc_vadc.c ****   for(i = 0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
1366:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1367:../Libraries/XMCLib/src/xmc_vadc.c ****     if (global_ptr->BRSSEL[i])
1368:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1369:../Libraries/XMCLib/src/xmc_vadc.c ****       reg = global_ptr->BRSPND[i];
 2964              	 .loc 1 1369 0
 2965 0000 E023     	 mov r3,#224
1354:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
 2966              	 .loc 1 1354 0
 2967 0002 F0B5     	 push {r4,r5,r6,r7,lr}
 2968              	.LCFI33:
 2969              	 .cfi_def_cfa_offset 20
 2970              	 .cfi_offset 4,-20
 2971              	 .cfi_offset 5,-16
 2972              	 .cfi_offset 6,-12
 2973              	 .cfi_offset 7,-8
 2974              	 .cfi_offset 14,-4
 2975              	 .loc 1 1369 0
 2976 0004 5B00     	 lsl r3,r3,#1
1367:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2977              	 .loc 1 1367 0
 2978 0006 C027     	 mov r7,#192
1362:../Libraries/XMCLib/src/xmc_vadc.c ****   
 2979              	 .loc 1 1362 0
 2980 0008 0021     	 mov r1,#0
1365:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 2981              	 .loc 1 1365 0
 2982 000a 0026     	 mov r6,#0
 2983              	 .loc 1 1369 0
 2984 000c 9C46     	 mov ip,r3
1370:../Libraries/XMCLib/src/xmc_vadc.c **** 
1371:../Libraries/XMCLib/src/xmc_vadc.c ****       for(j=0U;j<XMC_VADC_NUM_CHANNELS_PER_GROUP;j++)
1372:../Libraries/XMCLib/src/xmc_vadc.c ****       {
1373:../Libraries/XMCLib/src/xmc_vadc.c ****         if (reg & 1U)
 2985              	 .loc 1 1373 0
 2986 000e 0125     	 mov r5,#1
1367:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 2987              	 .loc 1 1367 0
 2988 0010 7F00     	 lsl r7,r7,#1
 2989              	.LVL335:
 2990              	.L200:
 2991 0012 B300     	 lsl r3,r6,#2
 2992 0014 C318     	 add r3,r0,r3
 2993 0016 DA59     	 ldr r2,[r3,r7]
 2994 0018 002A     	 cmp r2,#0
 2995 001a 09D0     	 beq .L197
1369:../Libraries/XMCLib/src/xmc_vadc.c **** 
 2996              	 .loc 1 1369 0
 2997 001c 6246     	 mov r2,ip
 2998 001e 9A58     	 ldr r2,[r3,r2]
 2999              	.LVL336:
 3000 0020 0823     	 mov r3,#8
 3001              	.LVL337:
 3002              	.L199:
1374:../Libraries/XMCLib/src/xmc_vadc.c ****         {
1375:../Libraries/XMCLib/src/xmc_vadc.c ****           count++;
 3003              	 .loc 1 1375 0
 3004 0022 2C1C     	 mov r4,r5
 3005 0024 013B     	 sub r3,r3,#1
 3006              	.LVL338:
 3007 0026 1440     	 and r4,r2
 3008 0028 0919     	 add r1,r1,r4
 3009              	.LVL339:
1376:../Libraries/XMCLib/src/xmc_vadc.c ****         }
1377:../Libraries/XMCLib/src/xmc_vadc.c **** 
1378:../Libraries/XMCLib/src/xmc_vadc.c ****         reg = reg >> 1U;
 3010              	 .loc 1 1378 0
 3011 002a 5208     	 lsr r2,r2,#1
 3012              	.LVL340:
1371:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 3013              	 .loc 1 1371 0
 3014 002c 002B     	 cmp r3,#0
 3015 002e F8D1     	 bne .L199
 3016              	.LVL341:
 3017              	.L197:
1365:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3018              	 .loc 1 1365 0 discriminator 2
 3019 0030 012E     	 cmp r6,#1
 3020 0032 01D1     	 bne .L201
1379:../Libraries/XMCLib/src/xmc_vadc.c ****       }
1380:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1381:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1382:../Libraries/XMCLib/src/xmc_vadc.c **** 
1383:../Libraries/XMCLib/src/xmc_vadc.c ****   return count;
1384:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3021              	 .loc 1 1384 0
 3022 0034 081C     	 mov r0,r1
 3023              	.LVL342:
 3024              	 
 3025              	.LVL343:
 3026 0036 F0BD     	 pop {r4,r5,r6,r7,pc}
 3027              	.LVL344:
 3028              	.L201:
 3029 0038 0126     	 mov r6,#1
 3030              	.LVL345:
 3031 003a EAE7     	 b .L200
 3032              	 .cfi_endproc
 3033              	.LFE174:
 3035              	 .section .text.XMC_VADC_GROUP_QueueInit,"ax",%progbits
 3036              	 .align 2
 3037              	 .global XMC_VADC_GROUP_QueueInit
 3038              	 .code 16
 3039              	 .thumb_func
 3041              	XMC_VADC_GROUP_QueueInit:
 3042              	.LFB175:
1385:../Libraries/XMCLib/src/xmc_vadc.c **** 
1386:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)  
1387:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize queue request source */
1388:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
1389:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3043              	 .loc 1 1389 0
 3044              	 .cfi_startproc
 3045              	.LVL346:
 3046 0000 70B5     	 push {r4,r5,r6,lr}
 3047              	.LCFI34:
 3048              	 .cfi_def_cfa_offset 16
 3049              	 .cfi_offset 4,-16
 3050              	 .cfi_offset 5,-12
 3051              	 .cfi_offset 6,-8
 3052              	 .cfi_offset 14,-4
 3053              	.LBB112:
 3054              	.LBB113:
3059:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3060:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
3061:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3062:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3063:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3064:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3065:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_TRIGGER_INPUT_SELECT_t
3066:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3067:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3068:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3069:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3070:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for Background request source.<BR>\n
3071:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3072:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3073:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3074:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3075:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTSEL.
3076:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3077:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3078:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3079:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3080:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
3081:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3082:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3083:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3084:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3085:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Select the trigger edge
3086:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3087:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3088:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3089:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3090:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger edge for Background request source.<BR>\n
3091:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3092:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible values for the trigger 
3093:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3094:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTMODE.
3095:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3096:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3097:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3098:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3099:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
3100:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3101:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3102:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3103:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Module input signal meant to be selected as gating input
3104:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_GATE_INPUT_SELECT_t
3105:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3106:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3107:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3108:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3109:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for Background request source.<BR>\n
3110:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3111:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the Background request so
3112:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxBRSMR.ENGT has to be confi
3113:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field BRSC
3114:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3115:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3116:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR>
3117:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3118:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
3119:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3120:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3121:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3122:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the background scan request source
3123:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3124:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3125:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3126:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3127:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of background request source.<BR>\n
3128:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3129:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3130:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3131:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENGT.
3132:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3133:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3134:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectGating();
3135:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3136:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundSetGatingMode(XMC_VADC_GLOBAL_t *const global_ptr,
3137:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                             XMC_VADC_GATEMODE_t mode_sel)
3138:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3139:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong Module Pointer", (global_ptr == VADC))
3140:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_G
3141:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3142:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3143:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= (uint32_t)(~((uint32_t)VADC_BRSMR_ENGT_Msk));
3144:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure the new gating mode*/
3145:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)((uint32_t)mode_sel << VADC_BRSMR_ENGT_Pos);
3146:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3147:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3148:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3149:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3150:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3151:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3152:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3153:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3154:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3155:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
3156:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3157:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is needed. Using autoscan (continuous conversion)feature it is possible to start the con
3158:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * once and allow the sequence to repeat without any further triggers. Once all channels belonging 
3159:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request source have been converted, a request source completion event is generated. Generation o
3160:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * can restart the Background configure sequence. Every request source event will cause a load even
3161:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would access the register bit field BRSMR.SCAN.
3162:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3163:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3164:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableContinuousMode()<BR>
3165:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3166:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableContinuousMode(XMC_VADC_GLOBAL_t *const global
3167:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3168:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableContinuousMode:Wrong Module Pointer", (global_ptr == 
3169:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_SCAN_Msk;
3170:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3171:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3172:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3173:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3174:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3175:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3176:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3177:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3178:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
3179:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3180:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
3181:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a Background req
3182:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
3183:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this API the Autoscan mode of operations is disabled. A call to this API w
3184:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * register bit field BRSMR.SCAN.
3185:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3186:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3187:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableContinuousMode()<BR>
3188:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3189:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableContinuousMode(XMC_VADC_GLOBAL_t *const globa
3190:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3191:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableContinuousMode:Wrong Module Pointer", (global_ptr ==
3192:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_SCAN_Msk);
3193:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3194:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3195:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3196:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3197:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3198:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3199:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3200:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3201:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
3202:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3203:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the b
3204:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * has already been filled up with entries. A call to this API would set the register bit field BRS
3205:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3206:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3207:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3208:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3209:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_pt
3210:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3211:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VAD
3212:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
3213:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3214:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3215:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3216:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3217:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3218:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3219:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3220:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3221:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing background scan conversion(sequence).<BR>\n
3222:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
3223:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
3224:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
3225:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers BRSMR, BRSCTRL, GxARBPR(if group is available) 
3226:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * current scan sequence.
3227:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3228:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3229:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3230:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3231:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr);
3232:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3233:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3234:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3235:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3236:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3237:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3238:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3239:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3240:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3241:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3242:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3243:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the background scan sequence.<BR>\n
3244:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3245:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3246:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3247:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3248:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3249:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
3250:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3251:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global
3252:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t grp_num,
3253:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t ch_num)
3254:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3255:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3256:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3257:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3258:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3259:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3260:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
3261:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3262:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3263:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3264:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3265:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3266:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3267:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3268:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3269:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3270:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3271:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3272:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3273:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3274:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3275:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3276:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3277:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3278:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3279:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3280:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3281:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3282:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3283:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndAddMultipleChannels(XMC_VADC_GLOBAL_t *const global_ptr
3284:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3285:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_mask)
3286:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3287:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3288:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3289:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= ch_mask;
3290:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3291:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3292:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3293:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3294:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3295:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3296:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3297:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3298:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3299:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3300:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3301:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending.<BR>\n
3302:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3303:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3304:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3305:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (BRSPND[\b grp_num]).
3306:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3307:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3308:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending()<BR>
3309:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3310:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundIsChannelPending(XMC_VADC_GLOBAL_t *const global_ptr
3311:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3312:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_num)
3313:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3314:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Module Pointer", (global_ptr == VADC
3315:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Group Number",   ((grp_num) < XMC_VA
3316:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Channel Number",
3317:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3318:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3319:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return( (bool)(global_ptr->BRSPND[grp_num] & (uint32_t)((uint32_t)1 << ch_num)));
3320:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3321:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3322:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3323:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3324:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * @return  <BR>
3325:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3326:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to (0x8*number of groups)]
3327:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3328:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3329:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of pending channels.<BR>\n
3330:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3331:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3332:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3333:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (BRSPND[\b grp_num]).
3334:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3335:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3336:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundIsChannelPending()<BR>
3337:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3338:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr);
3339:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3340:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3341:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3342:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3343:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3344:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3345:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3346:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3347:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for background scan. This will trigger a interrupt if
3348:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3349:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB.
3350:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3351:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3352:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * None.
3353:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3354:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent(XMC_VADC_GLOBAL_t *const global_p
3355:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3356:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent:Wrong Module Pointer", (global_ptr == VA
3357:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk;
3358:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3359:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3360:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3361:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3362:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3363:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3364:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3365:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3366:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the background scan conversion complete request source event.<BR>\n
3367:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3368:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB
3369:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3370:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3371:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent()<BR>
3372:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3373:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent(XMC_VADC_GLOBAL_t *const global_ptr
3374:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3375:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent:Wrong Module Pointer", (global_ptr == VADC
3376:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLBCLR_Msk;
3377:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3378:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3379:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3380:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3381:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3382:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3383:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3384:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3385:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3386:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3387:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the background scan request source event. Will return a true
3388:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for background scan. A call to this API would configure the register
3389:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field GLOBEFLAG.SEVGLB.
3390:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3391:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3392:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  None.
3393:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3394:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus(XMC_VADC_GLOBAL_t *const global
3395:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3396:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus:Wrong Module Pointer", (global_ptr == 
3397:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return((bool)(global_ptr->GLOBEFLAG & (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk));
3398:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3399:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3400:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3401:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3402:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3403:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3404:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3405:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3406:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for background scan request source.<BR>\n
3407:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the scan request source. The trigger signal 
3408:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the BRSCTRL register. The Selection of a input will be done by
3409:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectTrigger(). A call to this API would configure the register bit f
3410:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3411:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3412:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(
3413:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3414:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger(XMC_VADC_GLOBAL_t *const globa
3415:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3416:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger:Wrong Group Pointer", (global_ptr == 
3417:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3418:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_ENTR_Msk;
3419:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3420:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3421:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3422:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3423:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3424:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3425:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3426:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3427:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for background scan request source.<BR>
3428:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the background scan request source.
3429:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the background scan request source. If any configu
3430:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in BRSCTRL will be not be effected. A call to this API would configu
3431:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * bit field BRSMR.ENTR.
3432:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3433:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><br>
3434:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<BR>
3435:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3436:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(XMC_VADC_GLOBAL_t *const glob
3437:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3438:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger:Wrong Group Pointer", (global_ptr ==
3439:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3440:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENTR_Msk);
3441:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3442:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3443:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
3444:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3445:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
3446:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3447:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3448:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3449:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3450:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3451:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes VADC QUEUE functional block.<BR>\n
3452:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The QUEUE request source functional block converts channels stored in a queue. The first channel
3453:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * queue is converted first. A channel once converted, can be placed back into the queue if desired
3454:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_QueueEnable
3455:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
3456:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_QueueDisableArb
3457:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxQCTRL0, GxQMR0 to configure the queu
3458:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * source.
3459:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3460:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3461:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR> XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR
3462:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueSelectGating()<BR>
3463:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3464:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
3465:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3466:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3467:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3468:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3469:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3470:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3471:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3472:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the queue request source.<BR>\n
3473:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3474:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3475:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. Thus this must be enabled if any conversion need to take place.
3476:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3477:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3478:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3479:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR>
3480:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3481:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3482:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3483:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)1 << VADC_G_ARBPR_ASEN0_Pos);
3485:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3486:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3487:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3488:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3489:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3490:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3491:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3492:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3493:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the queue request source.<BR>\n
3494:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3495:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3496:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot.A call to this API will lead to all conversions request by queue to be blocked
3497:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3498:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3499:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3500:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR>
3501:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3502:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3503:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3504:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN0_Msk);
 3055              	 .loc 2 3505 0
 3056 0002 8425     	 mov r5,#132
 3057              	.LBE113:
 3058              	.LBE112:
1390:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t          reg;
1391:../Libraries/XMCLib/src/xmc_vadc.c **** 
1392:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1393:../Libraries/XMCLib/src/xmc_vadc.c **** 
1394:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable arbitration slot of the queue request source */
1395:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
1396:../Libraries/XMCLib/src/xmc_vadc.c ****   
1397:../Libraries/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
1398:../Libraries/XMCLib/src/xmc_vadc.c **** 
1399:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Request Source priority */
1400:../Libraries/XMCLib/src/xmc_vadc.c ****   reg &= ~((uint32_t)VADC_G_ARBPR_PRIO0_Msk);
 3059              	 .loc 1 1400 0
 3060 0004 0326     	 mov r6,#3
 3061              	.LBB116:
 3062              	.LBB114:
 3063              	 .loc 2 3505 0
 3064 0006 4259     	 ldr r2,[r0,r5]
 3065 0008 1B4B     	 ldr r3,.L212
 3066              	.LBE114:
 3067              	.LBE116:
1401:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t) ((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO0_Pos);
 3068              	 .loc 1 1401 0
 3069 000a 0C78     	 ldrb r4,[r1]
 3070              	.LBB117:
 3071              	.LBB115:
 3072              	 .loc 2 3505 0
 3073 000c 1340     	 and r3,r2
 3074 000e 4351     	 str r3,[r0,r5]
 3075              	.LBE115:
 3076              	.LBE117:
1397:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3077              	 .loc 1 1397 0
 3078 0010 4359     	 ldr r3,[r0,r5]
 3079              	.LVL347:
1400:../Libraries/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t) ((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO0_Pos);
 3080              	 .loc 1 1400 0
 3081 0012 B343     	 bic r3,r6
 3082              	.LVL348:
 3083 0014 1A1C     	 mov r2,r3
 3084              	.LVL349:
 3085              	 .loc 1 1401 0
 3086 0016 2307     	 lsl r3,r4,#28
 3087 0018 9B0F     	 lsr r3,r3,#30
 3088 001a 1343     	 orr r3,r2
 3089              	.LVL350:
1402:../Libraries/XMCLib/src/xmc_vadc.c **** 
1403:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Conversion Start mode */
1404:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 3090              	 .loc 1 1404 0
 3091 001c 3440     	 and r4,r6
 3092 001e 1CD0     	 beq .L209
1405:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1406:../Libraries/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM0_Msk);
 3093              	 .loc 1 1406 0
 3094 0020 0822     	 mov r2,#8
 3095 0022 1343     	 orr r3,r2
 3096              	.LVL351:
1407:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1408:../Libraries/XMCLib/src/xmc_vadc.c **** 
1409:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 3097              	 .loc 1 1409 0
 3098 0024 4351     	 str r3,[r0,r5]
1410:../Libraries/XMCLib/src/xmc_vadc.c **** 
1411:../Libraries/XMCLib/src/xmc_vadc.c **** 
1412:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (uint32_t)((config->qctrl0)|(uint32_t)(VADC_G_QCTRL0_XTWC_Msk)|
 3099              	 .loc 1 1412 0
 3100 0026 4A68     	 ldr r2,[r1,#4]
 3101 0028 144B     	 ldr r3,.L212+4
 3102              	.LVL352:
 3103 002a 1343     	 orr r3,r2
 3104 002c 8022     	 mov r2,#128
 3105 002e 5200     	 lsl r2,r2,#1
 3106 0030 8350     	 str r3,[r0,r2]
 3107              	.LVL353:
1413:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_TMWC_Msk)|
1414:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_GTWC_Msk));
1415:../Libraries/XMCLib/src/xmc_vadc.c **** 
1416:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Gating mode */
1417:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QMR0 = ((uint32_t)(config->qmr0) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 3108              	 .loc 1 1417 0
 3109 0032 8B68     	 ldr r3,[r1,#8]
 3110 0034 FF3A     	 sub r2,r2,#255
 3111 0036 1343     	 orr r3,r2
 3112 0038 0432     	 add r2,r2,#4
 3113 003a FF32     	 add r2,r2,#255
 3114 003c 8350     	 str r3,[r0,r2]
1418:../Libraries/XMCLib/src/xmc_vadc.c **** 
1419:../Libraries/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode) )
 3115              	 .loc 1 1419 0
 3116 003e 022C     	 cmp r4,#2
 3117 0040 04D1     	 bne .L210
1420:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1421:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_RPTDIS_Pos);
 3118              	 .loc 1 1421 0
 3119 0042 8021     	 mov r1,#128
 3120              	.LVL354:
 3121 0044 8358     	 ldr r3,[r0,r2]
 3122 0046 4902     	 lsl r1,r1,#9
 3123 0048 0B43     	 orr r3,r1
 3124 004a 8350     	 str r3,[r0,r2]
 3125              	.L210:
 3126              	.LVL355:
 3127              	.LBB118:
 3128              	.LBB119:
3484:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 3129              	 .loc 2 3484 0
 3130 004c 8422     	 mov r2,#132
 3131 004e 8021     	 mov r1,#128
 3132 0050 8358     	 ldr r3,[r0,r2]
 3133 0052 4904     	 lsl r1,r1,#17
 3134 0054 0B43     	 orr r3,r1
 3135 0056 8350     	 str r3,[r0,r2]
 3136              	.LBE119:
 3137              	.LBE118:
1422:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1423:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot for the queue request source */
1424:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueEnableArbitrationSlot(group_ptr);
1425:../Libraries/XMCLib/src/xmc_vadc.c **** 
1426:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3138              	 .loc 1 1426 0
 3139              	 
 3140 0058 70BD     	 pop {r4,r5,r6,pc}
 3141              	.LVL356:
 3142              	.L209:
1409:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3143              	 .loc 1 1409 0
 3144 005a 4351     	 str r3,[r0,r5]
1412:../Libraries/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_TMWC_Msk)|
 3145              	 .loc 1 1412 0
 3146 005c 4A68     	 ldr r2,[r1,#4]
 3147 005e 074B     	 ldr r3,.L212+4
 3148              	.LVL357:
 3149 0060 1343     	 orr r3,r2
 3150 0062 8022     	 mov r2,#128
 3151 0064 5200     	 lsl r2,r2,#1
 3152 0066 8350     	 str r3,[r0,r2]
 3153              	.LVL358:
1417:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3154              	 .loc 1 1417 0
 3155 0068 8B68     	 ldr r3,[r1,#8]
 3156 006a FF3A     	 sub r2,r2,#255
 3157 006c 1343     	 orr r3,r2
 3158 006e 0432     	 add r2,r2,#4
 3159 0070 FF32     	 add r2,r2,#255
 3160 0072 8350     	 str r3,[r0,r2]
 3161 0074 EAE7     	 b .L210
 3162              	.L213:
 3163 0076 C046     	 .align 2
 3164              	.L212:
 3165 0078 FFFFFFFE 	 .word -16777217
 3166 007c 00808080 	 .word -2139062272
 3167              	 .cfi_endproc
 3168              	.LFE175:
 3170              	 .section .text.XMC_VADC_GROUP_QueueSelectTrigger,"ax",%progbits
 3171              	 .align 2
 3172              	 .global XMC_VADC_GROUP_QueueSelectTrigger
 3173              	 .code 16
 3174              	 .thumb_func
 3176              	XMC_VADC_GROUP_QueueSelectTrigger:
 3177              	.LFB176:
1427:../Libraries/XMCLib/src/xmc_vadc.c **** 
1428:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible triggers as a conversion trigger for queue request source *
1429:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr,
1430:../Libraries/XMCLib/src/xmc_vadc.c ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num)
1431:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3178              	 .loc 1 1431 0
 3179              	 .cfi_startproc
 3180              	.LVL359:
1432:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    qctrl;
1433:../Libraries/XMCLib/src/xmc_vadc.c ****   
1434:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1435:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_NUM_POR
1436:../Libraries/XMCLib/src/xmc_vadc.c **** 
1437:../Libraries/XMCLib/src/xmc_vadc.c ****   
1438:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the conversion trigger */
1439:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3181              	 .loc 1 1439 0
 3182 0000 8022     	 mov r2,#128
 3183 0002 5200     	 lsl r2,r2,#1
1431:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    qctrl;
 3184              	 .loc 1 1431 0
 3185 0004 10B5     	 push {r4,lr}
 3186              	.LCFI35:
 3187              	 .cfi_def_cfa_offset 8
 3188              	 .cfi_offset 4,-8
 3189              	 .cfi_offset 14,-4
1440:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
1441:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTSEL_Msk);
 3190              	 .loc 1 1441 0
 3191 0006 054B     	 ldr r3,.L215
1439:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3192              	 .loc 1 1439 0
 3193 0008 8458     	 ldr r4,[r0,r2]
 3194              	.LVL360:
1442:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_XTSEL_Pos);
 3195              	 .loc 1 1442 0
 3196 000a 0902     	 lsl r1,r1,#8
 3197              	.LVL361:
1441:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_XTSEL_Pos);
 3198              	 .loc 1 1441 0
 3199 000c 2340     	 and r3,r4
 3200 000e 8024     	 mov r4,#128
 3201              	.LVL362:
 3202 0010 2402     	 lsl r4,r4,#8
 3203 0012 2343     	 orr r3,r4
 3204              	.LVL363:
 3205              	 .loc 1 1442 0
 3206 0014 1943     	 orr r1,r3
 3207              	.LVL364:
1443:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3208              	 .loc 1 1443 0
 3209 0016 8150     	 str r1,[r0,r2]
1444:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3210              	 .loc 1 1444 0
 3211              	 
 3212 0018 10BD     	 pop {r4,pc}
 3213              	.L216:
 3214 001a C046     	 .align 2
 3215              	.L215:
 3216 001c FFF0FFFF 	 .word -3841
 3217              	 .cfi_endproc
 3218              	.LFE176:
 3220              	 .section .text.XMC_VADC_GROUP_QueueSelectTriggerEdge,"ax",%progbits
 3221              	 .align 2
 3222              	 .global XMC_VADC_GROUP_QueueSelectTriggerEdge
 3223              	 .code 16
 3224              	 .thumb_func
 3226              	XMC_VADC_GROUP_QueueSelectTriggerEdge:
 3227              	.LFB177:
1445:../Libraries/XMCLib/src/xmc_vadc.c **** 
1446:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1447:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
1448:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3228              	 .loc 1 1448 0
 3229              	 .cfi_startproc
 3230              	.LVL365:
1449:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1450:../Libraries/XMCLib/src/xmc_vadc.c **** 
1451:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1452:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Gating Port", ((trigger_edge)<= XMC_VADC_
1453:../Libraries/XMCLib/src/xmc_vadc.c **** 
1454:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1455:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3231              	 .loc 1 1455 0
 3232 0000 8022     	 mov r2,#128
 3233 0002 5200     	 lsl r2,r2,#1
1448:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
 3234              	 .loc 1 1448 0
 3235 0004 10B5     	 push {r4,lr}
 3236              	.LCFI36:
 3237              	 .cfi_def_cfa_offset 8
 3238              	 .cfi_offset 4,-8
 3239              	 .cfi_offset 14,-4
1456:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
1457:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTMODE_Msk);
 3240              	 .loc 1 1457 0
 3241 0006 054B     	 ldr r3,.L218
1455:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3242              	 .loc 1 1455 0
 3243 0008 8458     	 ldr r4,[r0,r2]
 3244              	.LVL366:
1458:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)trigger_edge << VADC_G_QCTRL0_XTMODE_Pos);
 3245              	 .loc 1 1458 0
 3246 000a 4903     	 lsl r1,r1,#13
 3247              	.LVL367:
1457:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)trigger_edge << VADC_G_QCTRL0_XTMODE_Pos);
 3248              	 .loc 1 1457 0
 3249 000c 2340     	 and r3,r4
 3250 000e 8024     	 mov r4,#128
 3251              	.LVL368:
 3252 0010 2402     	 lsl r4,r4,#8
 3253 0012 2343     	 orr r3,r4
 3254              	.LVL369:
 3255              	 .loc 1 1458 0
 3256 0014 1943     	 orr r1,r3
 3257              	.LVL370:
1459:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3258              	 .loc 1 1459 0
 3259 0016 8150     	 str r1,[r0,r2]
1460:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3260              	 .loc 1 1460 0
 3261              	 
 3262 0018 10BD     	 pop {r4,pc}
 3263              	.L219:
 3264 001a C046     	 .align 2
 3265              	.L218:
 3266 001c FF9FFFFF 	 .word -24577
 3267              	 .cfi_endproc
 3268              	.LFE177:
 3270              	 .section .text.XMC_VADC_GROUP_QueueSelectGating,"ax",%progbits
 3271              	 .align 2
 3272              	 .global XMC_VADC_GROUP_QueueSelectGating
 3273              	 .code 16
 3274              	 .thumb_func
 3276              	XMC_VADC_GROUP_QueueSelectGating:
 3277              	.LFB178:
1461:../Libraries/XMCLib/src/xmc_vadc.c **** 
1462:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible trigger gates as a trigger gating signal for queue request 
1463:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
1464:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3278              	 .loc 1 1464 0
 3279              	 .cfi_startproc
 3280              	.LVL371:
1465:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1466:../Libraries/XMCLib/src/xmc_vadc.c **** 
1467:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1468:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM_PORTS
1469:../Libraries/XMCLib/src/xmc_vadc.c ****   
1470:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1471:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3281              	 .loc 1 1471 0
 3282 0000 8022     	 mov r2,#128
 3283 0002 5200     	 lsl r2,r2,#1
1464:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
 3284              	 .loc 1 1464 0
 3285 0004 10B5     	 push {r4,lr}
 3286              	.LCFI37:
 3287              	 .cfi_def_cfa_offset 8
 3288              	 .cfi_offset 4,-8
 3289              	 .cfi_offset 14,-4
1472:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_GTWC_Msk;
1473:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_GTSEL_Msk);
 3290              	 .loc 1 1473 0
 3291 0006 054B     	 ldr r3,.L221
1471:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_GTWC_Msk;
 3292              	 .loc 1 1471 0
 3293 0008 8458     	 ldr r4,[r0,r2]
 3294              	.LVL372:
1474:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_GTSEL_Pos);
 3295              	 .loc 1 1474 0
 3296 000a 0904     	 lsl r1,r1,#16
 3297              	.LVL373:
1473:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_GTSEL_Pos);
 3298              	 .loc 1 1473 0
 3299 000c 2340     	 and r3,r4
 3300 000e 8024     	 mov r4,#128
 3301              	.LVL374:
 3302 0010 2404     	 lsl r4,r4,#16
 3303 0012 2343     	 orr r3,r4
 3304              	.LVL375:
 3305              	 .loc 1 1474 0
 3306 0014 1943     	 orr r1,r3
 3307              	.LVL376:
1475:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3308              	 .loc 1 1475 0
 3309 0016 8150     	 str r1,[r0,r2]
1476:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3310              	 .loc 1 1476 0
 3311              	 
 3312 0018 10BD     	 pop {r4,pc}
 3313              	.L222:
 3314 001a C046     	 .align 2
 3315              	.L221:
 3316 001c FFFFF0FF 	 .word -983041
 3317              	 .cfi_endproc
 3318              	.LFE178:
 3320              	 .section .text.XMC_VADC_GROUP_QueueGetLength,"ax",%progbits
 3321              	 .align 2
 3322              	 .global XMC_VADC_GROUP_QueueGetLength
 3323              	 .code 16
 3324              	 .thumb_func
 3326              	XMC_VADC_GROUP_QueueGetLength:
 3327              	.LFB179:
1477:../Libraries/XMCLib/src/xmc_vadc.c **** 
1478:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine the number of channels in the queue (length includes the valid channel in the B
1479:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr)
1480:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3328              	 .loc 1 1480 0
 3329              	 .cfi_startproc
 3330              	.LVL377:
1481:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qsr;
1482:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        qbur0;
1483:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t        length;
1484:../Libraries/XMCLib/src/xmc_vadc.c **** 
1485:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetLength:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
1486:../Libraries/XMCLib/src/xmc_vadc.c **** 
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   qsr = group_ptr->QSR0;
 3331              	 .loc 1 1487 0
 3332 0000 8423     	 mov r3,#132
 3333 0002 5B00     	 lsl r3,r3,#1
 3334 0004 C258     	 ldr r2,[r0,r3]
 3335              	.LVL378:
1488:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3336              	 .loc 1 1488 0
 3337 0006 0833     	 add r3,r3,#8
 3338 0008 C358     	 ldr r3,[r0,r3]
 3339              	.LVL379:
1489:../Libraries/XMCLib/src/xmc_vadc.c **** 
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qsr & (uint32_t)VADC_G_QSR0_EMPTY_Msk)
1491:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1492:../Libraries/XMCLib/src/xmc_vadc.c ****     length = 0U;
 3340              	 .loc 1 1492 0
 3341 000a 0020     	 mov r0,#0
 3342              	.LVL380:
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3343              	 .loc 1 1490 0
 3344 000c 9106     	 lsl r1,r2,#26
 3345 000e 02D4     	 bmi .L224
1493:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1494:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1495:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1496:../Libraries/XMCLib/src/xmc_vadc.c ****     length = (qsr & (uint32_t)VADC_G_QSR0_FILL_Msk) + 1U;
 3346              	 .loc 1 1496 0
 3347 0010 0F30     	 add r0,r0,#15
 3348 0012 1040     	 and r0,r2
 3349 0014 0130     	 add r0,r0,#1
 3350              	.LVL381:
 3351              	.L224:
1497:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1498:../Libraries/XMCLib/src/xmc_vadc.c ****   
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   if (qbur0 & (uint32_t)VADC_G_QBUR0_V_Msk )
 3352              	 .loc 1 1499 0
 3353 0016 DB05     	 lsl r3,r3,#23
 3354              	.LVL382:
1500:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1501:../Libraries/XMCLib/src/xmc_vadc.c ****     length++;
 3355              	 .loc 1 1501 0
 3356 0018 DB0F     	 lsr r3,r3,#31
 3357 001a C018     	 add r0,r0,r3
 3358              	.LVL383:
1502:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1503:../Libraries/XMCLib/src/xmc_vadc.c **** 
1504:../Libraries/XMCLib/src/xmc_vadc.c ****   return length;
1505:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3359              	 .loc 1 1505 0
 3360              	 
 3361 001c 7047     	 bx lr
 3362              	 .cfi_endproc
 3363              	.LFE179:
 3365 001e C046     	 .section .text.XMC_VADC_GROUP_QueueAbortSequence,"ax",%progbits
 3366              	 .align 2
 3367              	 .global XMC_VADC_GROUP_QueueAbortSequence
 3368              	 .code 16
 3369              	 .thumb_func
 3371              	XMC_VADC_GROUP_QueueAbortSequence:
 3372              	.LFB180:
1506:../Libraries/XMCLib/src/xmc_vadc.c **** 
1507:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a channel sequence */
1508:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr)
1509:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3373              	 .loc 1 1509 0
 3374              	 .cfi_startproc
 3375              	.LVL384:
1510:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1511:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1512:../Libraries/XMCLib/src/xmc_vadc.c **** 
1513:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueAbortSequence:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1514:../Libraries/XMCLib/src/xmc_vadc.c **** 
1515:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1516:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0 = group_ptr->QCTRL0;
 3376              	 .loc 1 1516 0
 3377 0000 8023     	 mov r3,#128
1517:../Libraries/XMCLib/src/xmc_vadc.c **** 
1518:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3378              	 .loc 1 1518 0
 3379 0002 124A     	 ldr r2,.L233
1516:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3380              	 .loc 1 1516 0
 3381 0004 5B00     	 lsl r3,r3,#1
1509:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
 3382              	 .loc 1 1509 0
 3383 0006 30B5     	 push {r4,r5,lr}
 3384              	.LCFI38:
 3385              	 .cfi_def_cfa_offset 12
 3386              	 .cfi_offset 4,-12
 3387              	 .cfi_offset 5,-8
 3388              	 .cfi_offset 14,-4
1516:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3389              	 .loc 1 1516 0
 3390 0008 C558     	 ldr r5,[r0,r3]
 3391              	.LVL385:
 3392              	 .loc 1 1518 0
 3393 000a C250     	 str r2,[r0,r3]
1519:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1520:../Libraries/XMCLib/src/xmc_vadc.c ****   
1521:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1522:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3394              	 .loc 1 1522 0
 3395 000c 7C3B     	 sub r3,r3,#124
 3396 000e C258     	 ldr r2,[r0,r3]
 3397              	.LBB120:
 3398              	.LBB121:
 3399              	 .loc 2 3505 0
 3400 0010 C158     	 ldr r1,[r0,r3]
 3401              	.LBE121:
 3402              	.LBE120:
 3403              	 .loc 1 1522 0
 3404 0012 D201     	 lsl r2,r2,#7
 3405 0014 D40F     	 lsr r4,r2,#31
 3406              	.LVL386:
 3407              	.LBB123:
 3408              	.LBB122:
 3409              	 .loc 2 3505 0
 3410 0016 0E4A     	 ldr r2,.L233+4
 3411 0018 0A40     	 and r2,r1
 3412 001a C250     	 str r2,[r0,r3]
 3413              	.LVL387:
 3414              	.LBE122:
 3415              	.LBE123:
 3416              	.LBB124:
 3417              	.LBB125:
3506:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3507:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3508:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3509:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3510:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3511:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3512:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
3513:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3514:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3515:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the queue request source.<BR>\n
3516:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If the queue request source must have its conversion request considered by the arbiter, it must 
3517:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3518:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. A call to this API would return the status of the arbitration slot of queue.
3519:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
3520:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3521:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3522:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<
3523:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3524:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr
3525:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3526:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GRO
3527:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3528:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN0_Msk) >> VADC_G_ARBPR_ASEN0_Pos);
3529:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3530:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3531:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3532:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3533:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3534:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3535:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3536:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3537:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3538:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for queue request source.<BR>\n
3539:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3540:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3541:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3542:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3543:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTSEL.
3544:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3545:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3546:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3547:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3548:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, 
3549:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num);
3550:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3551:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3552:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3553:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Choice of the trigger edge
3554:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3555:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3556:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3557:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3558:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal edge for queue request source.<BR>\n
3559:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3560:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 trigger edges. This is
3561:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3562:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3563:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTMODE.
3564:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3565:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3566:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3567:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3568:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
3569:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3570:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3571:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3572:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as the gating line
3573:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3574:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3575:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3576:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3577:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for queue request source.<BR>\n
3578:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3579:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the queue request source 
3580:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxQMR0.ENGT has to be config
3581:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxQC
3582:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3583:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3584:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR>
3585:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3586:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
3587:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3588:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3589:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3590:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the queue request source
3591:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3592:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3593:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3594:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3595:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of queue request source.<BR>\n
3596:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3597:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3598:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3599:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQMR0.ENGT.
3600:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3601:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3602:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectGating();
3603:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3604:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_
3605:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3606:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3607:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMOD
3608:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3609:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3610:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 &= (uint32_t)(~((uint32_t) VADC_G_QMR0_ENGT_Msk));
3611:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
3612:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)mode_sel << VADC_G_QMR0_ENGT_Pos);
3613:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3614:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3615:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3616:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3617:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3618:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3619:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3620:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3621:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3622:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>
3623:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3624:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue unit to generate a conversion request to the analog converter. It is assumed that the 
3625:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxQMR0.TR
3626:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3627:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3628:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * The conversion of queue entry will start immediately after the entry has been loaded into GxQINR
3629:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This happens only if the queue entry has been loaded into the register without the need for the 
3630:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * If a H/W Trigger is selected while loading the entry, the conversion will occur in one of the 2 
3631:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <ul>
3632:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The H/W generates a trigger needed for the queue request source.
3633:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * <li> The Conversion is triggered manually by calling this API.
3634:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * </ul>
3635:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3636:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3637:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3638:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3639:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
3640:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3641:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3642:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_TREV_Pos);
3643:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
3644:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3645:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3646:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3647:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3648:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    uint32_t returns the total number of channels.
3649:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3650:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3651:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3652:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Returns the number of channels present in the queue.<BR>\n
3653:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will return the queue buffer size. This buffer will be consisting of valid queue entrie
3654:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * will be converted when a trigger event occurs. All the entries that are loaded onto the GxQINR0 
3655:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * be added to the queue buffer. Hence if an application needs to get the number of valid queue ent
3656:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * this API would provide the interface. A call to this API would access the registers GxQBUR0, GxQ
3657:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * to determine the queue length.
3658:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3659:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3660:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3661:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3662:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr);
3663:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3664:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3665:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3666:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3667:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3668:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3669:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3670:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing conversion by flushing the queue.<BR>\n
3671:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush the queue buffer. Ongoing conversion of the Queue request source will
3672:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3673:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to abort
3674:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * the queue sequence.
3675:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3676:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3677:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueFlushEntries() <BR>
3678:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3679:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr);
3680:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3681:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** /**
3682:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3683:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return
3684:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *    None
3685:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3686:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3687:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * Flushing the queue Entry.<BR>\n
3688:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API will flush one entry in the queue buffer. Ongoing conversion of the Queue request sourc
3689:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
3690:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers  GxQMR0. This is a Blocking API, i.e will only 
3691:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * all the entries are removed from the queue.
3692:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *
3693:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3694:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueAbortSequence(0<BR>
3695:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****  */
3696:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueFlushEntries(XMC_VADC_GROUP_t *const group_ptr)
3697:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** {
3698:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Initiate flushing of the queue */
3699:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_FLUSH_Msk;
 3418              	 .loc 2 3699 0
 3419 001c 8222     	 mov r2,#130
 3420 001e 8021     	 mov r1,#128
 3421 0020 5200     	 lsl r2,r2,#1
 3422 0022 8358     	 ldr r3,[r0,r2]
 3423 0024 C900     	 lsl r1,r1,#3
 3424 0026 0B43     	 orr r3,r1
3700:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
3701:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h ****   while( !((group_ptr->QSR0)& (uint32_t)VADC_G_QSR0_EMPTY_Msk))
 3425              	 .loc 2 3701 0
 3426 0028 8421     	 mov r1,#132
3699:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** 
 3427              	 .loc 2 3699 0
 3428 002a 8350     	 str r3,[r0,r2]
 3429              	 .loc 2 3701 0
 3430 002c 4900     	 lsl r1,r1,#1
 3431 002e E43A     	 sub r2,r2,#228
 3432              	.L230:
 3433 0030 4358     	 ldr r3,[r0,r1]
 3434 0032 1A42     	 tst r2,r3
 3435 0034 FCD0     	 beq .L230
 3436              	.LBE125:
 3437              	.LBE124:
1523:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
1524:../Libraries/XMCLib/src/xmc_vadc.c ****    
1525:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Flush the Entries from queue*/
1526:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueFlushEntries(group_ptr);
1527:../Libraries/XMCLib/src/xmc_vadc.c ****   
1528:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1529:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3438              	 .loc 1 1529 0
 3439 0036 8423     	 mov r3,#132
 3440 0038 C158     	 ldr r1,[r0,r3]
 3441 003a 2206     	 lsl r2,r4,#24
 3442 003c 0A43     	 orr r2,r1
 3443 003e C250     	 str r2,[r0,r3]
1530:../Libraries/XMCLib/src/xmc_vadc.c ****   
1531:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1532:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3444              	 .loc 1 1532 0
 3445 0040 8022     	 mov r2,#128
1533:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3446              	 .loc 1 1533 0
 3447 0042 024B     	 ldr r3,.L233
1532:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3448              	 .loc 1 1532 0
 3449 0044 5200     	 lsl r2,r2,#1
 3450              	 .loc 1 1533 0
 3451 0046 2B43     	 orr r3,r5
1532:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3452              	 .loc 1 1532 0
 3453 0048 8350     	 str r3,[r0,r2]
1534:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3454              	 .loc 1 1534 0
 3455              	 
 3456              	.LVL388:
 3457              	.LVL389:
 3458 004a 30BD     	 pop {r4,r5,pc}
 3459              	.L234:
 3460              	 .align 2
 3461              	.L233:
 3462 004c 00808080 	 .word -2139062272
 3463 0050 FFFFFFFE 	 .word -16777217
 3464              	 .cfi_endproc
 3465              	.LFE180:
 3467              	 .section .text.XMC_VADC_GROUP_QueueRemoveChannel,"ax",%progbits
 3468              	 .align 2
 3469              	 .global XMC_VADC_GROUP_QueueRemoveChannel
 3470              	 .code 16
 3471              	 .thumb_func
 3473              	XMC_VADC_GROUP_QueueRemoveChannel:
 3474              	.LFB181:
1535:../Libraries/XMCLib/src/xmc_vadc.c **** 
1536:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to abort conversion of the channel queued up next */
1537:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueRemoveChannel(XMC_VADC_GROUP_t *const group_ptr)
1538:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3475              	 .loc 1 1538 0
 3476              	 .cfi_startproc
 3477              	.LVL390:
 3478 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3479              	.LCFI39:
 3480              	 .cfi_def_cfa_offset 20
 3481              	 .cfi_offset 4,-20
 3482              	 .cfi_offset 5,-16
 3483              	 .cfi_offset 6,-12
 3484              	 .cfi_offset 7,-8
 3485              	 .cfi_offset 14,-4
 3486 0002 4546     	 mov r5,r8
 3487 0004 4E46     	 mov r6,r9
 3488 0006 5746     	 mov r7,r10
 3489 0008 E0B4     	 push {r5,r6,r7}
 3490              	.LCFI40:
 3491              	 .cfi_def_cfa_offset 32
 3492              	 .cfi_offset 8,-32
 3493              	 .cfi_offset 9,-28
 3494              	 .cfi_offset 10,-24
1539:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_before_abort;
1540:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t length_after_abort;
1541:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1542:../Libraries/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1543:../Libraries/XMCLib/src/xmc_vadc.c **** 
1544:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1545:../Libraries/XMCLib/src/xmc_vadc.c ****   
1546:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1547:../Libraries/XMCLib/src/xmc_vadc.c ****   qctrl0= group_ptr->QCTRL0;
 3495              	 .loc 1 1547 0
 3496 000a 8025     	 mov r5,#128
 3497 000c 6D00     	 lsl r5,r5,#1
 3498 000e 4359     	 ldr r3,[r0,r5]
 3499 0010 9846     	 mov r8,r3
 3500              	.LVL391:
1548:../Libraries/XMCLib/src/xmc_vadc.c **** 
1549:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 3501              	 .loc 1 1549 0
 3502 0012 304B     	 ldr r3,.L259
 3503              	.LVL392:
 3504 0014 4351     	 str r3,[r0,r5]
1550:../Libraries/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1551:../Libraries/XMCLib/src/xmc_vadc.c ****   
1552:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1553:../Libraries/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 3505              	 .loc 1 1553 0
 3506 0016 8423     	 mov r3,#132
 3507 0018 C458     	 ldr r4,[r0,r3]
 3508              	.LBB126:
 3509              	.LBB127:
3505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 3510              	 .loc 2 3505 0
 3511 001a C158     	 ldr r1,[r0,r3]
 3512              	.LBE127:
 3513              	.LBE126:
 3514              	 .loc 1 1553 0
 3515 001c E401     	 lsl r4,r4,#7
 3516 001e E20F     	 lsr r2,r4,#31
 3517 0020 9146     	 mov r9,r2
 3518              	.LVL393:
 3519              	.LBB129:
 3520              	.LBB128:
3505:C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc\xmc_vadc.h **** }
 3521              	 .loc 2 3505 0
 3522 0022 2D4A     	 ldr r2,.L259+4
 3523 0024 0A40     	 and r2,r1
 3524 0026 C250     	 str r2,[r0,r3]
 3525              	.LVL394:
 3526              	.LBE128:
 3527              	.LBE129:
 3528              	.LBB130:
 3529              	.LBB131:
1488:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3530              	 .loc 1 1488 0
 3531 0028 8822     	 mov r2,#136
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3532              	 .loc 1 1487 0
 3533 002a 8433     	 add r3,r3,#132
 3534 002c C358     	 ldr r3,[r0,r3]
 3535              	.LVL395:
1488:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3536              	 .loc 1 1488 0
 3537 002e 5200     	 lsl r2,r2,#1
 3538 0030 8258     	 ldr r2,[r0,r2]
 3539              	.LVL396:
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3540              	 .loc 1 1490 0
 3541 0032 9906     	 lsl r1,r3,#26
 3542 0034 45D4     	 bmi .L236
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3543              	 .loc 1 1496 0
 3544 0036 0F21     	 mov r1,#15
 3545 0038 0B40     	 and r3,r1
 3546              	.LVL397:
 3547 003a 591C     	 add r1,r3,#1
 3548              	.LVL398:
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3549              	 .loc 1 1499 0
 3550 003c 2A42     	 tst r2,r5
 3551 003e 00D0     	 beq .L237
 3552 0040 991C     	 add r1,r3,#2
 3553              	.LVL399:
 3554              	.L237:
 3555              	.LBE131:
 3556              	.LBE130:
1554:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
1555:../Libraries/XMCLib/src/xmc_vadc.c **** 
1556:../Libraries/XMCLib/src/xmc_vadc.c ****   length_before_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
1557:../Libraries/XMCLib/src/xmc_vadc.c **** 
1558:../Libraries/XMCLib/src/xmc_vadc.c ****   if (length_before_abort)
1559:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1560:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Remove the first entry of the queue */
1561:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_CLRV_Msk;
 3557              	 .loc 1 1561 0
 3558 0042 8222     	 mov r2,#130
 3559              	.LVL400:
 3560 0044 8025     	 mov r5,#128
 3561 0046 5200     	 lsl r2,r2,#1
 3562 0048 8358     	 ldr r3,[r0,r2]
 3563 004a 6D00     	 lsl r5,r5,#1
 3564 004c 2B43     	 orr r3,r5
 3565 004e 8350     	 str r3,[r0,r2]
 3566              	.LVL401:
 3567              	.LBB133:
 3568              	.LBB134:
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3569              	 .loc 1 1487 0
 3570 0050 8423     	 mov r3,#132
 3571 0052 5B00     	 lsl r3,r3,#1
 3572 0054 C258     	 ldr r2,[r0,r3]
 3573              	.LVL402:
1488:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3574              	 .loc 1 1488 0
 3575 0056 0833     	 add r3,r3,#8
 3576 0058 C558     	 ldr r5,[r0,r3]
 3577              	.LVL403:
1492:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3578              	 .loc 1 1492 0
 3579 005a 0023     	 mov r3,#0
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3580              	 .loc 1 1490 0
 3581 005c 9406     	 lsl r4,r2,#26
 3582 005e 34D5     	 bpl .L258
 3583              	.L238:
 3584              	.LVL404:
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3585              	 .loc 1 1499 0
 3586 0060 8022     	 mov r2,#128
 3587              	.LVL405:
 3588 0062 5200     	 lsl r2,r2,#1
 3589 0064 1540     	 and r5,r2
 3590              	.LVL406:
1501:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3591              	 .loc 1 1501 0
 3592 0066 6E1E     	 sub r6,r5,#1
 3593 0068 B541     	 sbc r5,r5,r6
 3594              	.LBE134:
 3595              	.LBE133:
 3596              	.LBB137:
 3597              	.LBB138:
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3598              	 .loc 1 1496 0
 3599 006a 0F24     	 mov r4,#15
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3600              	 .loc 1 1487 0
 3601 006c 8427     	 mov r7,#132
1488:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3602              	 .loc 1 1488 0
 3603 006e 8826     	 mov r6,#136
 3604              	.LBE138:
 3605              	.LBE137:
 3606              	.LBB141:
 3607              	.LBB135:
1501:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3608              	 .loc 1 1501 0
 3609 0070 5B19     	 add r3,r3,r5
 3610              	.LVL407:
 3611              	.LBE135:
 3612              	.LBE141:
 3613              	.LBB142:
 3614              	.LBB139:
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3615              	 .loc 1 1496 0
 3616 0072 A446     	 mov ip,r4
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3617              	 .loc 1 1490 0
 3618 0074 2025     	 mov r5,#32
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3619              	 .loc 1 1499 0
 3620 0076 9246     	 mov r10,r2
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3621              	 .loc 1 1487 0
 3622 0078 7F00     	 lsl r7,r7,#1
1488:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3623              	 .loc 1 1488 0
 3624 007a 7600     	 lsl r6,r6,#1
 3625              	.L242:
 3626              	.LVL408:
 3627              	.LBE139:
 3628              	.LBE142:
1562:../Libraries/XMCLib/src/xmc_vadc.c **** 
1563:../Libraries/XMCLib/src/xmc_vadc.c ****     length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
1564:../Libraries/XMCLib/src/xmc_vadc.c **** 
1565:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Loop until a reduction in queue length is assessed */
1566:../Libraries/XMCLib/src/xmc_vadc.c ****     while(length_after_abort == length_before_abort)
 3629              	 .loc 1 1566 0
 3630 007c 8B42     	 cmp r3,r1
 3631 007e 0FD1     	 bne .L244
 3632              	.LVL409:
 3633              	.LBB143:
 3634              	.LBB140:
1487:../Libraries/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 3635              	 .loc 1 1487 0
 3636 0080 C359     	 ldr r3,[r0,r7]
 3637              	.LVL410:
1488:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3638              	 .loc 1 1488 0
 3639 0082 8459     	 ldr r4,[r0,r6]
 3640              	.LVL411:
1490:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3641              	 .loc 1 1490 0
 3642 0084 1D42     	 tst r5,r3
 3643 0086 07D1     	 bne .L241
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3644              	 .loc 1 1496 0
 3645 0088 6246     	 mov r2,ip
 3646 008a 1340     	 and r3,r2
 3647              	.LVL412:
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3648              	 .loc 1 1499 0
 3649 008c 5246     	 mov r2,r10
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3650              	 .loc 1 1496 0
 3651 008e 0133     	 add r3,r3,#1
 3652              	.LVL413:
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3653              	 .loc 1 1499 0
 3654 0090 1442     	 tst r4,r2
 3655 0092 F3D0     	 beq .L242
 3656              	.LVL414:
 3657              	.L249:
1501:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3658              	 .loc 1 1501 0
 3659 0094 0133     	 add r3,r3,#1
 3660              	.LVL415:
 3661 0096 F1E7     	 b .L242
 3662              	.LVL416:
 3663              	.L241:
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3664              	 .loc 1 1499 0
 3665 0098 5246     	 mov r2,r10
1492:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3666              	 .loc 1 1492 0
 3667 009a 0023     	 mov r3,#0
 3668              	.LVL417:
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3669              	 .loc 1 1499 0
 3670 009c 1442     	 tst r4,r2
 3671 009e F9D1     	 bne .L249
 3672              	.LVL418:
 3673              	.L244:
 3674              	.LBE140:
 3675              	.LBE143:
1567:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1568:../Libraries/XMCLib/src/xmc_vadc.c ****       length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
1569:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1570:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1571:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1572:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 3676              	 .loc 1 1572 0
 3677 00a0 8422     	 mov r2,#132
 3678 00a2 4946     	 mov r1,r9
 3679 00a4 8358     	 ldr r3,[r0,r2]
 3680 00a6 0C06     	 lsl r4,r1,#24
 3681 00a8 1C43     	 orr r4,r3
 3682 00aa 8450     	 str r4,[r0,r2]
1573:../Libraries/XMCLib/src/xmc_vadc.c ****   
1574:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1575:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1576:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3683              	 .loc 1 1576 0
 3684 00ac 4246     	 mov r2,r8
 3685 00ae 094B     	 ldr r3,.L259
1577:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3686              	 .loc 1 1577 0
 3687              	 
1576:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3688              	 .loc 1 1576 0
 3689 00b0 1343     	 orr r3,r2
1575:../Libraries/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 3690              	 .loc 1 1575 0
 3691 00b2 8022     	 mov r2,#128
 3692 00b4 5200     	 lsl r2,r2,#1
 3693 00b6 8350     	 str r3,[r0,r2]
 3694              	.LVL419:
 3695              	.LVL420:
 3696              	 .loc 1 1577 0
 3697 00b8 1CBC     	 pop {r2,r3,r4}
 3698 00ba 9046     	 mov r8,r2
 3699 00bc 9946     	 mov r9,r3
 3700 00be A246     	 mov r10,r4
 3701 00c0 F0BD     	 pop {r4,r5,r6,r7,pc}
 3702              	.LVL421:
 3703              	.L236:
 3704              	.LBB144:
 3705              	.LBB132:
1499:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 3706              	 .loc 1 1499 0
 3707 00c2 2A42     	 tst r2,r5
 3708 00c4 ECD0     	 beq .L244
 3709 00c6 0121     	 mov r1,#1
 3710              	.LVL422:
 3711 00c8 BBE7     	 b .L237
 3712              	.LVL423:
 3713              	.L258:
 3714              	.LBE132:
 3715              	.LBE144:
 3716              	.LBB145:
 3717              	.LBB136:
1496:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3718              	 .loc 1 1496 0
 3719 00ca 0F33     	 add r3,r3,#15
 3720 00cc 1340     	 and r3,r2
 3721 00ce 0133     	 add r3,r3,#1
 3722              	.LVL424:
 3723 00d0 C6E7     	 b .L238
 3724              	.L260:
 3725 00d2 C046     	 .align 2
 3726              	.L259:
 3727 00d4 00808080 	 .word -2139062272
 3728 00d8 FFFFFFFE 	 .word -16777217
 3729              	.LBE136:
 3730              	.LBE145:
 3731              	 .cfi_endproc
 3732              	.LFE181:
 3734              	 .section .text.XMC_VADC_GROUP_QueueGetNextChannel,"ax",%progbits
 3735              	 .align 2
 3736              	 .global XMC_VADC_GROUP_QueueGetNextChannel
 3737              	 .code 16
 3738              	 .thumb_func
 3740              	XMC_VADC_GROUP_QueueGetNextChannel:
 3741              	.LFB182:
1578:../Libraries/XMCLib/src/xmc_vadc.c **** 
1579:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get details of channel meant to be converted right after the ongoing conversion */
1580:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetNextChannel(XMC_VADC_GROUP_t *const group_ptr)
1581:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3742              	 .loc 1 1581 0
 3743              	 .cfi_startproc
 3744              	.LVL425:
1582:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1583:../Libraries/XMCLib/src/xmc_vadc.c **** 
1584:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetNextChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1585:../Libraries/XMCLib/src/xmc_vadc.c ****   
1586:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1587:../Libraries/XMCLib/src/xmc_vadc.c ****    * Check if there is something in the backup stage. If not, read queue-0
1588:../Libraries/XMCLib/src/xmc_vadc.c ****    * entry.
1589:../Libraries/XMCLib/src/xmc_vadc.c ****    */
1590:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3745              	 .loc 1 1590 0
 3746 0000 8822     	 mov r2,#136
 3747 0002 8023     	 mov r3,#128
 3748 0004 5200     	 lsl r2,r2,#1
 3749 0006 8158     	 ldr r1,[r0,r2]
 3750 0008 5B00     	 lsl r3,r3,#1
 3751 000a 1942     	 tst r1,r3
 3752 000c 04D1     	 bne .L265
1591:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1592:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
1593:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1594:../Libraries/XMCLib/src/xmc_vadc.c ****   else if ( (group_ptr->Q0R0) & (uint32_t)VADC_G_Q0R0_V_Msk)
 3753              	 .loc 1 1594 0
 3754 000e 8622     	 mov r2,#134
 3755 0010 5200     	 lsl r2,r2,#1
 3756 0012 8158     	 ldr r1,[r0,r2]
 3757 0014 1942     	 tst r1,r3
 3758 0016 03D0     	 beq .L264
 3759              	.L265:
1595:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1596:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->Q0R0 & (uint32_t)VADC_G_Q0R0_REQCHNR_Msk);
 3760              	 .loc 1 1596 0
 3761 0018 8358     	 ldr r3,[r0,r2]
 3762 001a 1F20     	 mov r0,#31
 3763              	.LVL426:
 3764 001c 1840     	 and r0,r3
 3765              	.LVL427:
 3766              	.L263:
1597:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1598:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1599:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1600:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Nothing is pending */
1601:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
1602:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1603:../Libraries/XMCLib/src/xmc_vadc.c **** 
1604:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
1605:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3767              	 .loc 1 1605 0
 3768              	 
 3769 001e 7047     	 bx lr
 3770              	.LVL428:
 3771              	.L264:
1601:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3772              	 .loc 1 1601 0
 3773 0020 0120     	 mov r0,#1
 3774              	.LVL429:
 3775 0022 4042     	 neg r0,r0
 3776 0024 FBE7     	 b .L263
 3777              	 .cfi_endproc
 3778              	.LFE182:
 3780 0026 C046     	 .section .text.XMC_VADC_GROUP_QueueGetInterruptedChannel,"ax",%progbits
 3781              	 .align 2
 3782              	 .global XMC_VADC_GROUP_QueueGetInterruptedChannel
 3783              	 .code 16
 3784              	 .thumb_func
 3786              	XMC_VADC_GROUP_QueueGetInterruptedChannel:
 3787              	.LFB183:
1606:../Libraries/XMCLib/src/xmc_vadc.c **** 
1607:../Libraries/XMCLib/src/xmc_vadc.c **** /* Get the channel number of the channel whose conversion had been interrupted */
1608:../Libraries/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetInterruptedChannel(XMC_VADC_GROUP_t *const group_ptr)
1609:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3788              	 .loc 1 1609 0
 3789              	 .cfi_startproc
 3790              	.LVL430:
1610:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1611:../Libraries/XMCLib/src/xmc_vadc.c **** 
1612:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetInterruptedChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1613:../Libraries/XMCLib/src/xmc_vadc.c ****   
1614:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 3791              	 .loc 1 1614 0
 3792 0000 8823     	 mov r3,#136
 3793 0002 5B00     	 lsl r3,r3,#1
 3794 0004 C258     	 ldr r2,[r0,r3]
 3795 0006 D205     	 lsl r2,r2,#23
 3796 0008 03D5     	 bpl .L268
1615:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1616:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 3797              	 .loc 1 1616 0
 3798 000a C358     	 ldr r3,[r0,r3]
 3799 000c 1F20     	 mov r0,#31
 3800              	.LVL431:
 3801 000e 1840     	 and r0,r3
 3802              	.LVL432:
 3803              	.L267:
1617:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1618:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1619:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1620:../Libraries/XMCLib/src/xmc_vadc.c ****     /* No such channel */
1621:../Libraries/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
1622:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1623:../Libraries/XMCLib/src/xmc_vadc.c **** 
1624:../Libraries/XMCLib/src/xmc_vadc.c ****   return ch_num;
1625:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3804              	 .loc 1 1625 0
 3805              	 
 3806 0010 7047     	 bx lr
 3807              	.LVL433:
 3808              	.L268:
1621:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 3809              	 .loc 1 1621 0
 3810 0012 0120     	 mov r0,#1
 3811              	.LVL434:
 3812 0014 4042     	 neg r0,r0
 3813 0016 FBE7     	 b .L267
 3814              	 .cfi_endproc
 3815              	.LFE183:
 3817              	 .section .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode,"ax",%progbits
 3818              	 .align 2
 3819              	 .global XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
 3820              	 .code 16
 3821              	 .thumb_func
 3823              	XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:
 3824              	.LFB184:
1626:../Libraries/XMCLib/src/xmc_vadc.c **** 
1627:../Libraries/XMCLib/src/xmc_vadc.c **** /* Select a Service Request line for the request source event */
1628:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_V
1629:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3825              	 .loc 1 1629 0
 3826              	 .cfi_startproc
 3827              	.LVL435:
1630:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1631:../Libraries/XMCLib/src/xmc_vadc.c **** 
1632:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_
1633:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC
1634:../Libraries/XMCLib/src/xmc_vadc.c **** 
1635:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 3828              	 .loc 1 1635 0
 3829 0000 E022     	 mov r2,#224
1629:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
 3830              	 .loc 1 1629 0
 3831 0002 10B5     	 push {r4,lr}
 3832              	.LCFI41:
 3833              	 .cfi_def_cfa_offset 8
 3834              	 .cfi_offset 4,-8
 3835              	 .cfi_offset 14,-4
1636:../Libraries/XMCLib/src/xmc_vadc.c **** 
1637:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV0NP_Msk);
 3836              	 .loc 1 1637 0
 3837 0004 0F24     	 mov r4,#15
1635:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3838              	 .loc 1 1635 0
 3839 0006 5200     	 lsl r2,r2,#1
 3840 0008 8358     	 ldr r3,[r0,r2]
 3841              	.LVL436:
1638:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV0NP_Pos);
1639:../Libraries/XMCLib/src/xmc_vadc.c **** 
1640:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
1641:../Libraries/XMCLib/src/xmc_vadc.c **** 
1642:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3842              	 .loc 1 1642 0
 3843              	 
1637:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV0NP_Pos);
 3844              	 .loc 1 1637 0
 3845 000a A343     	 bic r3,r4
 3846              	.LVL437:
1638:../Libraries/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV0NP_Pos);
 3847              	 .loc 1 1638 0
 3848 000c 1943     	 orr r1,r3
 3849              	.LVL438:
1640:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3850              	 .loc 1 1640 0
 3851 000e 8150     	 str r1,[r0,r2]
 3852              	 .loc 1 1642 0
 3853 0010 10BD     	 pop {r4,pc}
 3854              	 .cfi_endproc
 3855              	.LFE184:
 3857 0012 C046     	 .section .text.XMC_VADC_GROUP_ChannelInit,"ax",%progbits
 3858              	 .align 2
 3859              	 .global XMC_VADC_GROUP_ChannelInit
 3860              	 .code 16
 3861              	 .thumb_func
 3863              	XMC_VADC_GROUP_ChannelInit:
 3864              	.LFB185:
1643:../Libraries/XMCLib/src/xmc_vadc.c **** #endif /* XMC_VADC_QUEUE_AVAILABLE*/
1644:../Libraries/XMCLib/src/xmc_vadc.c **** 
1645:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1646:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to initialize a channel unit */
1647:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelInit(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num,
1648:../Libraries/XMCLib/src/xmc_vadc.c ****                                         const XMC_VADC_CHANNEL_CONFIG_t *config)
1649:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3865              	 .loc 1 1649 0
 3866              	 .cfi_startproc
 3867              	.LVL439:
 3868 0000 70B5     	 push {r4,r5,r6,lr}
 3869              	.LCFI42:
 3870              	 .cfi_def_cfa_offset 16
 3871              	 .cfi_offset 4,-16
 3872              	 .cfi_offset 5,-12
 3873              	 .cfi_offset 6,-8
 3874              	 .cfi_offset 14,-4
1650:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t prio;
1651:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ch_assign;
1652:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1653:../Libraries/XMCLib/src/xmc_vadc.c **** 
1654:../Libraries/XMCLib/src/xmc_vadc.c **** 
1655:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1656:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CHANNELS_P
1657:../Libraries/XMCLib/src/xmc_vadc.c ****   
1658:../Libraries/XMCLib/src/xmc_vadc.c ****   prio  = (uint32_t)config->channel_priority;
1659:../Libraries/XMCLib/src/xmc_vadc.c **** 
1660:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Priority channel */
1661:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign  = group_ptr->CHASS;
1662:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign &= ~((uint32_t)((uint32_t)1 << ch_num));
 3875              	 .loc 1 1662 0
 3876 0002 0124     	 mov r4,#1
1661:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign &= ~((uint32_t)((uint32_t)1 << ch_num));
 3877              	 .loc 1 1661 0
 3878 0004 8825     	 mov r5,#136
 3879              	 .loc 1 1662 0
 3880 0006 8C40     	 lsl r4,r4,r1
1661:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign &= ~((uint32_t)((uint32_t)1 << ch_num));
 3881              	 .loc 1 1661 0
 3882 0008 4359     	 ldr r3,[r0,r5]
 3883              	.LVL440:
 3884              	 .loc 1 1662 0
 3885 000a A343     	 bic r3,r4
 3886              	.LVL441:
1658:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3887              	 .loc 1 1658 0
 3888 000c 147B     	 ldrb r4,[r2,#12]
1663:../Libraries/XMCLib/src/xmc_vadc.c ****   ch_assign |= (uint32_t)(prio << ch_num);
 3889              	 .loc 1 1663 0
 3890 000e 8C40     	 lsl r4,r4,r1
 3891 0010 2343     	 orr r3,r4
 3892              	.LVL442:
1664:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHASS = ch_assign;
 3893              	 .loc 1 1664 0
 3894 0012 4351     	 str r3,[r0,r5]
 3895              	.LVL443:
1665:../Libraries/XMCLib/src/xmc_vadc.c **** 
1666:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Alias channel */
1667:../Libraries/XMCLib/src/xmc_vadc.c ****   if (config->alias_channel >= (int32_t)0)
 3896              	 .loc 1 1667 0
 3897 0014 537B     	 ldrb r3,[r2,#13]
 3898              	.LVL444:
 3899 0016 5CB2     	 sxtb r4,r3
 3900 0018 002C     	 cmp r4,#0
 3901 001a 0CDB     	 blt .L271
 3902              	.LVL445:
1668:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1669:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)0;
1670:../Libraries/XMCLib/src/xmc_vadc.c ****     if ((uint32_t)1 == ch_num)
 3903              	 .loc 1 1670 0
 3904 001c 0129     	 cmp r1,#1
 3905 001e 21D0     	 beq .L275
1671:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1672:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS1_Pos;
1673:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS1_Msk);
1674:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1675:../Libraries/XMCLib/src/xmc_vadc.c ****     else if ((uint32_t)0 == ch_num)
 3906              	 .loc 1 1675 0
 3907 0020 0029     	 cmp r1,#0
 3908 0022 17D0     	 beq .L276
 3909 0024 1C1C     	 mov r4,r3
 3910 0026 0023     	 mov r3,#0
 3911              	.LVL446:
 3912              	.L273:
1676:../Libraries/XMCLib/src/xmc_vadc.c ****     {
1677:../Libraries/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS0_Pos;
1678:../Libraries/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS0_Msk);
1679:../Libraries/XMCLib/src/xmc_vadc.c ****     }
1680:../Libraries/XMCLib/src/xmc_vadc.c **** 
1681:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->ALIAS |= (uint32_t)(config->alias_channel << mask);
 3913              	 .loc 1 1681 0
 3914 0028 64B2     	 sxtb r4,r4
 3915 002a 9C40     	 lsl r4,r4,r3
 3916 002c B026     	 mov r6,#176
 3917 002e 231C     	 mov r3,r4
 3918 0030 8559     	 ldr r5,[r0,r6]
 3919 0032 2B43     	 orr r3,r5
 3920 0034 8351     	 str r3,[r0,r6]
 3921              	.L271:
1682:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1683:../Libraries/XMCLib/src/xmc_vadc.c **** 
1684:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFL |= config->bfl;
 3922              	 .loc 1 1684 0
 3923 0036 C824     	 mov r4,#200
 3924 0038 5568     	 ldr r5,[r2,#4]
 3925 003a 0359     	 ldr r3,[r0,r4]
1685:../Libraries/XMCLib/src/xmc_vadc.c **** 
1686:../Libraries/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
1687:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLC |= config->bflc;
1688:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
1689:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Program the CHCTR register */
1690:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = config->chctr;
 3926              	 .loc 1 1690 0
 3927 003c 8031     	 add r1,r1,#128
 3928              	.LVL447:
1684:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3929              	 .loc 1 1684 0
 3930 003e 2B43     	 orr r3,r5
 3931 0040 0351     	 str r3,[r0,r4]
1687:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 3932              	 .loc 1 1687 0
 3933 0042 0834     	 add r4,r4,#8
 3934 0044 9568     	 ldr r5,[r2,#8]
 3935 0046 0359     	 ldr r3,[r0,r4]
 3936              	 .loc 1 1690 0
 3937 0048 8900     	 lsl r1,r1,#2
 3938              	.LVL448:
1687:../Libraries/XMCLib/src/xmc_vadc.c **** #endif
 3939              	 .loc 1 1687 0
 3940 004a 2B43     	 orr r3,r5
 3941 004c 0351     	 str r3,[r0,r4]
 3942              	 .loc 1 1690 0
 3943 004e 1368     	 ldr r3,[r2]
1691:../Libraries/XMCLib/src/xmc_vadc.c **** 
1692:../Libraries/XMCLib/src/xmc_vadc.c **** }
 3944              	 .loc 1 1692 0
 3945              	 
1690:../Libraries/XMCLib/src/xmc_vadc.c **** 
 3946              	 .loc 1 1690 0
 3947 0050 0B50     	 str r3,[r1,r0]
 3948              	 .loc 1 1692 0
 3949 0052 70BD     	 pop {r4,r5,r6,pc}
 3950              	.LVL449:
 3951              	.L276:
1678:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 3952              	 .loc 1 1678 0
 3953 0054 B024     	 mov r4,#176
 3954 0056 1F25     	 mov r5,#31
 3955              	.LVL450:
 3956 0058 0359     	 ldr r3,[r0,r4]
 3957 005a AB43     	 bic r3,r5
 3958 005c 0351     	 str r3,[r0,r4]
 3959              	.LVL451:
 3960 005e 547B     	 ldrb r4,[r2,#13]
 3961 0060 0023     	 mov r3,#0
 3962 0062 E1E7     	 b .L273
 3963              	.LVL452:
 3964              	.L275:
1673:../Libraries/XMCLib/src/xmc_vadc.c ****     }
 3965              	 .loc 1 1673 0
 3966 0064 B024     	 mov r4,#176
 3967 0066 034B     	 ldr r3,.L277
 3968 0068 0559     	 ldr r5,[r0,r4]
 3969              	.LVL453:
 3970 006a 2B40     	 and r3,r5
 3971 006c 0351     	 str r3,[r0,r4]
 3972              	.LVL454:
 3973 006e 547B     	 ldrb r4,[r2,#13]
 3974 0070 0823     	 mov r3,#8
 3975 0072 D9E7     	 b .L273
 3976              	.L278:
 3977              	 .align 2
 3978              	.L277:
 3979 0074 FFE0FFFF 	 .word -7937
 3980              	 .cfi_endproc
 3981              	.LFE185:
 3983              	 .section .text.XMC_VADC_GROUP_SetChannelAlias,"ax",%progbits
 3984              	 .align 2
 3985              	 .global XMC_VADC_GROUP_SetChannelAlias
 3986              	 .code 16
 3987              	 .thumb_func
 3989              	XMC_VADC_GROUP_SetChannelAlias:
 3990              	.LFB186:
1693:../Libraries/XMCLib/src/xmc_vadc.c **** 
1694:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to set an alias channel for channels numbered 2 through 7 */
1695:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetChannelAlias(XMC_VADC_GROUP_t *const group_ptr,
1696:../Libraries/XMCLib/src/xmc_vadc.c ****                                     const uint32_t src_ch_num,
1697:../Libraries/XMCLib/src/xmc_vadc.c ****                                     const uint32_t alias_ch_num)
1698:../Libraries/XMCLib/src/xmc_vadc.c **** {
 3991              	 .loc 1 1698 0
 3992              	 .cfi_startproc
 3993              	.LVL455:
1699:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t alias;
1700:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1701:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
1702:../Libraries/XMCLib/src/xmc_vadc.c **** 
1703:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1704:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Alias Channel", ((alias_ch_num == 0)|| (alias_ch
1705:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Aliased Channel", ((src_ch_num < 8U)))
1706:../Libraries/XMCLib/src/xmc_vadc.c **** 
1707:../Libraries/XMCLib/src/xmc_vadc.c ****   alias = group_ptr->ALIAS;
 3994              	 .loc 1 1707 0
 3995 0000 B023     	 mov r3,#176
1698:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t alias;
 3996              	 .loc 1 1698 0
 3997 0002 10B5     	 push {r4,lr}
 3998              	.LCFI43:
 3999              	 .cfi_def_cfa_offset 8
 4000              	 .cfi_offset 4,-8
 4001              	 .cfi_offset 14,-4
 4002              	 .loc 1 1707 0
 4003 0004 C458     	 ldr r4,[r0,r3]
 4004              	.LVL456:
1708:../Libraries/XMCLib/src/xmc_vadc.c **** 
1709:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == alias_ch_num)
 4005              	 .loc 1 1709 0
 4006 0006 002A     	 cmp r2,#0
 4007 0008 07D0     	 beq .L281
 4008 000a 0822     	 mov r2,#8
 4009              	.LVL457:
 4010 000c 054B     	 ldr r3,.L282
 4011              	.L280:
1710:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1711:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t) VADC_G_ALIAS_ALIAS0_Msk;
1712:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t) VADC_G_ALIAS_ALIAS0_Pos;
1713:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1714:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1715:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1716:../Libraries/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t) VADC_G_ALIAS_ALIAS1_Msk;
1717:../Libraries/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t) VADC_G_ALIAS_ALIAS1_Pos;
1718:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1719:../Libraries/XMCLib/src/xmc_vadc.c ****   alias &= ~mask;
1720:../Libraries/XMCLib/src/xmc_vadc.c ****   alias |= (uint32_t)(src_ch_num << pos);
 4012              	 .loc 1 1720 0
 4013 000e 9140     	 lsl r1,r1,r2
 4014              	.LVL458:
1719:../Libraries/XMCLib/src/xmc_vadc.c ****   alias |= (uint32_t)(src_ch_num << pos);
 4015              	 .loc 1 1719 0
 4016 0010 2340     	 and r3,r4
 4017              	.LVL459:
 4018              	 .loc 1 1720 0
 4019 0012 1943     	 orr r1,r3
 4020              	.LVL460:
1721:../Libraries/XMCLib/src/xmc_vadc.c **** 
1722:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->ALIAS = alias;
 4021              	 .loc 1 1722 0
 4022 0014 B023     	 mov r3,#176
1723:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4023              	 .loc 1 1723 0
 4024              	 
1722:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4025              	 .loc 1 1722 0
 4026 0016 C150     	 str r1,[r0,r3]
 4027              	 .loc 1 1723 0
 4028 0018 10BD     	 pop {r4,pc}
 4029              	.LVL461:
 4030              	.L281:
 4031 001a 2023     	 mov r3,#32
 4032 001c 0022     	 mov r2,#0
 4033              	.LVL462:
 4034 001e 5B42     	 neg r3,r3
 4035 0020 F5E7     	 b .L280
 4036              	.L283:
 4037 0022 C046     	 .align 2
 4038              	.L282:
 4039 0024 FFE0FFFF 	 .word -7937
 4040              	 .cfi_endproc
 4041              	.LFE186:
 4043              	 .section .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds,"ax",%progbits
 4044              	 .align 2
 4045              	 .global XMC_VADC_GROUP_ChannelIsResultOutOfBounds
 4046              	 .code 16
 4047              	 .thumb_func
 4049              	XMC_VADC_GROUP_ChannelIsResultOutOfBounds:
 4050              	.LFB187:
1724:../Libraries/XMCLib/src/xmc_vadc.c **** 
1725:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine whether input to a channel has violated boundary conditions */
1726:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_ChannelIsResultOutOfBounds(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch
1727:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4051              	 .loc 1 1727 0
 4052              	 .cfi_startproc
 4053              	.LVL463:
1728:../Libraries/XMCLib/src/xmc_vadc.c ****   bool retval;
1729:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    chctr;
1730:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t    ceflag;
1731:../Libraries/XMCLib/src/xmc_vadc.c **** 
1732:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1733:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Channel Number",
1734:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1735:../Libraries/XMCLib/src/xmc_vadc.c **** 
1736:../Libraries/XMCLib/src/xmc_vadc.c ****   retval = (bool)false;
1737:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
1738:../Libraries/XMCLib/src/xmc_vadc.c ****     Check if the Channel event is configured to be generated in the event of
1739:../Libraries/XMCLib/src/xmc_vadc.c ****     boundary violation and if affirmative, check if the channel event is set.
1740:../Libraries/XMCLib/src/xmc_vadc.c ****   */
1741:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CHEVMODE for requested channel */
1742:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4054              	 .loc 1 1742 0
 4055 0000 0B1C     	 mov r3,r1
1743:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = (uint32_t)(chctr >> (uint32_t)VADC_G_CHCTR_CHEVMODE_Pos)& (uint32_t)0x3;
1744:../Libraries/XMCLib/src/xmc_vadc.c **** 
1745:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract CEFLAG for the requested channel */
1746:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = group_ptr->CEFLAG;
 4056              	 .loc 1 1746 0
 4057 0002 C022     	 mov r2,#192
1742:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = (uint32_t)(chctr >> (uint32_t)VADC_G_CHCTR_CHEVMODE_Pos)& (uint32_t)0x3;
 4058              	 .loc 1 1742 0
 4059 0004 8033     	 add r3,r3,#128
 4060 0006 9B00     	 lsl r3,r3,#2
 4061 0008 1B58     	 ldr r3,[r3,r0]
 4062              	.LVL464:
 4063              	 .loc 1 1746 0
 4064 000a 5200     	 lsl r2,r2,#1
1743:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = (uint32_t)(chctr >> (uint32_t)VADC_G_CHCTR_CHEVMODE_Pos)& (uint32_t)0x3;
 4065              	 .loc 1 1743 0
 4066 000c 9B05     	 lsl r3,r3,#22
 4067              	.LVL465:
 4068 000e 9B0F     	 lsr r3,r3,#30
1747:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = ceflag & ((uint32_t)((uint32_t)1 << ch_num) );
1748:../Libraries/XMCLib/src/xmc_vadc.c **** 
1749:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Check what was the channel event generation criteria */
1750:../Libraries/XMCLib/src/xmc_vadc.c ****   if ( (( (uint32_t)XMC_VADC_CHANNEL_EVGEN_INBOUND == chctr) \
1751:../Libraries/XMCLib/src/xmc_vadc.c ****       || ((uint32_t) XMC_VADC_CHANNEL_EVGEN_OUTBOUND == chctr)) && (ceflag) )
 4069              	 .loc 1 1751 0
 4070 0010 013B     	 sub r3,r3,#1
1746:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag = ceflag & ((uint32_t)((uint32_t)1 << ch_num) );
 4071              	 .loc 1 1746 0
 4072 0012 8258     	 ldr r2,[r0,r2]
 4073              	.LVL466:
1736:../Libraries/XMCLib/src/xmc_vadc.c ****   /*
 4074              	 .loc 1 1736 0
 4075 0014 0020     	 mov r0,#0
 4076              	.LVL467:
1750:../Libraries/XMCLib/src/xmc_vadc.c ****       || ((uint32_t) XMC_VADC_CHANNEL_EVGEN_OUTBOUND == chctr)) && (ceflag) )
 4077              	 .loc 1 1750 0
 4078 0016 012B     	 cmp r3,#1
 4079 0018 06D8     	 bhi .L285
1747:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4080              	 .loc 1 1747 0
 4081 001a 0123     	 mov r3,#1
 4082 001c 8B40     	 lsl r3,r3,r1
 4083 001e 1A40     	 and r2,r3
 4084              	.LVL468:
 4085 0020 101C     	 mov r0,r2
 4086              	 .loc 1 1751 0
 4087 0022 411E     	 sub r1,r0,#1
 4088 0024 8841     	 sbc r0,r0,r1
 4089              	.LVL469:
 4090 0026 C0B2     	 uxtb r0,r0
 4091              	.L285:
 4092              	.LVL470:
1752:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1753:../Libraries/XMCLib/src/xmc_vadc.c ****     retval = (bool)true;
1754:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1755:../Libraries/XMCLib/src/xmc_vadc.c **** 
1756:../Libraries/XMCLib/src/xmc_vadc.c ****   return retval;
1757:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4093              	 .loc 1 1757 0
 4094              	 
 4095 0028 7047     	 bx lr
 4096              	 .cfi_endproc
 4097              	.LFE187:
 4099 002a C046     	 .section .text.XMC_VADC_GROUP_ChannelSetInputReference,"ax",%progbits
 4100              	 .align 2
 4101              	 .global XMC_VADC_GROUP_ChannelSetInputReference
 4102              	 .code 16
 4103              	 .thumb_func
 4105              	XMC_VADC_GROUP_ChannelSetInputReference:
 4106              	.LFB188:
1758:../Libraries/XMCLib/src/xmc_vadc.c **** 
1759:../Libraries/XMCLib/src/xmc_vadc.c **** /* Set a reference voltage for conversion */
1760:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetInputReference(XMC_VADC_GROUP_t *const group_ptr,
1761:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1762:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const XMC_VADC_CHANNEL_REF_t ref)
1763:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4107              	 .loc 1 1763 0
 4108              	 .cfi_startproc
 4109              	.LVL471:
 4110 0000 8900     	 lsl r1,r1,#2
 4111              	.LVL472:
 4112 0002 4118     	 add r1,r0,r1
1764:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1765:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1766:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Channel Number", ((ch_num) < XMC_VADC_N
1767:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Voltage Reference", ((ref)<= XMC_VADC_C
1768:../Libraries/XMCLib/src/xmc_vadc.c **** 
1769:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4113              	 .loc 1 1769 0
 4114 0004 8020     	 mov r0,#128
 4115              	.LVL473:
1763:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
 4116              	 .loc 1 1763 0
 4117 0006 10B5     	 push {r4,lr}
 4118              	.LCFI44:
 4119              	 .cfi_def_cfa_offset 8
 4120              	 .cfi_offset 4,-8
 4121              	 .cfi_offset 14,-4
 4122              	 .loc 1 1769 0
 4123 0008 8000     	 lsl r0,r0,#2
 4124 000a 0C58     	 ldr r4,[r1,r0]
 4125              	.LVL474:
1770:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_REFSEL_Msk);
 4126              	 .loc 1 1770 0
 4127 000c 024B     	 ldr r3,.L288
1771:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)ref <<  VADC_G_CHCTR_REFSEL_Pos);
 4128              	 .loc 1 1771 0
 4129 000e D202     	 lsl r2,r2,#11
 4130              	.LVL475:
1770:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_REFSEL_Msk);
 4131              	 .loc 1 1770 0
 4132 0010 2340     	 and r3,r4
 4133              	.LVL476:
 4134              	 .loc 1 1771 0
 4135 0012 1A43     	 orr r2,r3
 4136              	.LVL477:
1772:../Libraries/XMCLib/src/xmc_vadc.c **** 
1773:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4137              	 .loc 1 1773 0
 4138 0014 0A50     	 str r2,[r1,r0]
1774:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4139              	 .loc 1 1774 0
 4140              	 
 4141 0016 10BD     	 pop {r4,pc}
 4142              	.L289:
 4143              	 .align 2
 4144              	.L288:
 4145 0018 FFF7FFFF 	 .word -2049
 4146              	 .cfi_endproc
 4147              	.LFE188:
 4149              	 .section .text.XMC_VADC_GROUP_ChannelSetResultRegister,"ax",%progbits
 4150              	 .align 2
 4151              	 .global XMC_VADC_GROUP_ChannelSetResultRegister
 4152              	 .code 16
 4153              	 .thumb_func
 4155              	XMC_VADC_GROUP_ChannelSetResultRegister:
 4156              	.LFB189:
1775:../Libraries/XMCLib/src/xmc_vadc.c **** 
1776:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 16 registers for storing the channel result */
1777:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetResultRegister(XMC_VADC_GROUP_t *const group_ptr,
1778:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1779:../Libraries/XMCLib/src/xmc_vadc.c ****                                              const uint32_t result_reg_num)
1780:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4157              	 .loc 1 1780 0
 4158              	 .cfi_startproc
 4159              	.LVL478:
 4160 0000 8900     	 lsl r1,r1,#2
 4161              	.LVL479:
 4162 0002 4118     	 add r1,r0,r1
1781:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1782:../Libraries/XMCLib/src/xmc_vadc.c **** 
1783:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1784:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Channel Number",
1785:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1786:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Result Register",
1787:../Libraries/XMCLib/src/xmc_vadc.c ****              ((result_reg_num) < XMC_VADC_NUM_RESULT_REGISTERS))
1788:../Libraries/XMCLib/src/xmc_vadc.c **** 
1789:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4163              	 .loc 1 1789 0
 4164 0004 8020     	 mov r0,#128
 4165              	.LVL480:
1780:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
 4166              	 .loc 1 1780 0
 4167 0006 10B5     	 push {r4,lr}
 4168              	.LCFI45:
 4169              	 .cfi_def_cfa_offset 8
 4170              	 .cfi_offset 4,-8
 4171              	 .cfi_offset 14,-4
 4172              	 .loc 1 1789 0
 4173 0008 8000     	 lsl r0,r0,#2
 4174 000a 0C58     	 ldr r4,[r1,r0]
 4175              	.LVL481:
1790:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_RESREG_Msk);
 4176              	 .loc 1 1790 0
 4177 000c 024B     	 ldr r3,.L291
1791:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)(result_reg_num <<  VADC_G_CHCTR_RESREG_Pos);
 4178              	 .loc 1 1791 0
 4179 000e 1204     	 lsl r2,r2,#16
 4180              	.LVL482:
1790:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_RESREG_Msk);
 4181              	 .loc 1 1790 0
 4182 0010 2340     	 and r3,r4
 4183              	.LVL483:
 4184              	 .loc 1 1791 0
 4185 0012 1A43     	 orr r2,r3
 4186              	.LVL484:
1792:../Libraries/XMCLib/src/xmc_vadc.c **** 
1793:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4187              	 .loc 1 1793 0
 4188 0014 0A50     	 str r2,[r1,r0]
1794:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4189              	 .loc 1 1794 0
 4190              	 
 4191 0016 10BD     	 pop {r4,pc}
 4192              	.L292:
 4193              	 .align 2
 4194              	.L291:
 4195 0018 FFFFF0FF 	 .word -983041
 4196              	 .cfi_endproc
 4197              	.LFE189:
 4199              	 .section .text.XMC_VADC_GROUP_ChannelSetIclass,"ax",%progbits
 4200              	 .align 2
 4201              	 .global XMC_VADC_GROUP_ChannelSetIclass
 4202              	 .code 16
 4203              	 .thumb_func
 4205              	XMC_VADC_GROUP_ChannelSetIclass:
 4206              	.LFB190:
1795:../Libraries/XMCLib/src/xmc_vadc.c **** 
1796:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 4 class conversion */
1797:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetIclass(XMC_VADC_GROUP_t *const group_ptr,
1798:../Libraries/XMCLib/src/xmc_vadc.c ****                                      const uint32_t ch_num,
1799:../Libraries/XMCLib/src/xmc_vadc.c ****                                      const XMC_VADC_CHANNEL_CONV_t conversion_class)
1800:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4207              	 .loc 1 1800 0
 4208              	 .cfi_startproc
 4209              	.LVL485:
 4210 0000 8900     	 lsl r1,r1,#2
 4211              	.LVL486:
 4212 0002 4118     	 add r1,r0,r1
1801:../Libraries/XMCLib/src/xmc_vadc.c **** 
1802:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1803:../Libraries/XMCLib/src/xmc_vadc.c **** 
1804:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1805:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Channel Number",
1806:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1807:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong input class ",
1808:../Libraries/XMCLib/src/xmc_vadc.c ****              (XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1 >= conversion_class))
1809:../Libraries/XMCLib/src/xmc_vadc.c **** 
1810:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4213              	 .loc 1 1810 0
 4214 0004 8020     	 mov r0,#128
 4215              	.LVL487:
1800:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4216              	 .loc 1 1800 0
 4217 0006 10B5     	 push {r4,lr}
 4218              	.LCFI46:
 4219              	 .cfi_def_cfa_offset 8
 4220              	 .cfi_offset 4,-8
 4221              	 .cfi_offset 14,-4
1811:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_ICLSEL_Msk);
 4222              	 .loc 1 1811 0
 4223 0008 0324     	 mov r4,#3
1810:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_ICLSEL_Msk);
 4224              	 .loc 1 1810 0
 4225 000a 8000     	 lsl r0,r0,#2
 4226 000c 0B58     	 ldr r3,[r1,r0]
 4227              	.LVL488:
1812:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)conversion_class <<  (uint32_t)VADC_G_CHCTR_ICLSEL_Pos);
1813:../Libraries/XMCLib/src/xmc_vadc.c **** 
1814:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
1815:../Libraries/XMCLib/src/xmc_vadc.c **** 
1816:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4228              	 .loc 1 1816 0
 4229              	 
1811:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)conversion_class <<  (uint32_t)VADC_G_CHCTR_ICLSEL_Pos);
 4230              	 .loc 1 1811 0
 4231 000e A343     	 bic r3,r4
 4232              	.LVL489:
1812:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)conversion_class <<  (uint32_t)VADC_G_CHCTR_ICLSEL_Pos);
 4233              	 .loc 1 1812 0
 4234 0010 1A43     	 orr r2,r3
 4235              	.LVL490:
1814:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4236              	 .loc 1 1814 0
 4237 0012 0A50     	 str r2,[r1,r0]
 4238              	 .loc 1 1816 0
 4239 0014 10BD     	 pop {r4,pc}
 4240              	 .cfi_endproc
 4241              	.LFE190:
 4243 0016 C046     	 .section .text.XMC_VADC_GROUP_ChannelGetResultRegister,"ax",%progbits
 4244              	 .align 2
 4245              	 .global XMC_VADC_GROUP_ChannelGetResultRegister
 4246              	 .code 16
 4247              	 .thumb_func
 4249              	XMC_VADC_GROUP_ChannelGetResultRegister:
 4250              	.LFB191:
1817:../Libraries/XMCLib/src/xmc_vadc.c **** 
1818:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result register bound with specified channel */
1819:../Libraries/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GROUP_ChannelGetResultRegister(XMC_VADC_GROUP_t *const group_ptr, const uint32_t c
1820:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4251              	 .loc 1 1820 0
 4252              	 .cfi_startproc
 4253              	.LVL491:
1821:../Libraries/XMCLib/src/xmc_vadc.c ****   uint8_t resreg;
1822:../Libraries/XMCLib/src/xmc_vadc.c **** 
1823:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1824:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Channel Number",
1825:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1826:../Libraries/XMCLib/src/xmc_vadc.c **** 
1827:../Libraries/XMCLib/src/xmc_vadc.c ****   resreg = (uint8_t)((group_ptr->CHCTR[ch_num] & (uint32_t)VADC_G_CHCTR_RESREG_Msk) >> VADC_G_CHCTR
 4254              	 .loc 1 1827 0
 4255 0000 8031     	 add r1,r1,#128
 4256              	.LVL492:
 4257 0002 8900     	 lsl r1,r1,#2
 4258              	.LVL493:
 4259 0004 0858     	 ldr r0,[r1,r0]
 4260              	.LVL494:
1828:../Libraries/XMCLib/src/xmc_vadc.c **** 
1829:../Libraries/XMCLib/src/xmc_vadc.c ****   return resreg;
1830:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4261              	 .loc 1 1830 0
 4262              	 
1827:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4263              	 .loc 1 1827 0
 4264 0006 0003     	 lsl r0,r0,#12
 4265              	.LVL495:
1829:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4266              	 .loc 1 1829 0
 4267 0008 000F     	 lsr r0,r0,#28
 4268              	 .loc 1 1830 0
 4269 000a 7047     	 bx lr
 4270              	 .cfi_endproc
 4271              	.LFE191:
 4273              	 .section .text.XMC_VADC_GROUP_ChannelTriggerEvent,"ax",%progbits
 4274              	 .align 2
 4275              	 .global XMC_VADC_GROUP_ChannelTriggerEvent
 4276              	 .code 16
 4277              	 .thumb_func
 4279              	XMC_VADC_GROUP_ChannelTriggerEvent:
 4280              	.LFB192:
1831:../Libraries/XMCLib/src/xmc_vadc.c **** 
1832:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to manually assert channel event */
1833:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEvent(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num)
1834:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4281              	 .loc 1 1834 0
 4282              	 .cfi_startproc
 4283              	.LVL496:
1835:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ceflag;
1836:../Libraries/XMCLib/src/xmc_vadc.c **** 
1837:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1838:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CH
1839:../Libraries/XMCLib/src/xmc_vadc.c **** 
1840:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag  = group_ptr->CEFLAG;
1841:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag |= (uint32_t)((uint32_t)1 << ch_num);
 4284              	 .loc 1 1841 0
 4285 0000 0122     	 mov r2,#1
 4286 0002 8A40     	 lsl r2,r2,r1
1834:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t ceflag;
 4287              	 .loc 1 1834 0
 4288 0004 10B5     	 push {r4,lr}
 4289              	.LCFI47:
 4290              	 .cfi_def_cfa_offset 8
 4291              	 .cfi_offset 4,-8
 4292              	 .cfi_offset 14,-4
1840:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag |= (uint32_t)((uint32_t)1 << ch_num);
 4293              	 .loc 1 1840 0
 4294 0006 C024     	 mov r4,#192
 4295              	 .loc 1 1841 0
 4296 0008 111C     	 mov r1,r2
 4297              	.LVL497:
1840:../Libraries/XMCLib/src/xmc_vadc.c ****   ceflag |= (uint32_t)((uint32_t)1 << ch_num);
 4298              	 .loc 1 1840 0
 4299 000a 6400     	 lsl r4,r4,#1
 4300 000c 0359     	 ldr r3,[r0,r4]
 4301              	.LVL498:
1842:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEFLAG = ceflag;
1843:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4302              	 .loc 1 1843 0
 4303              	 
1841:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEFLAG = ceflag;
 4304              	 .loc 1 1841 0
 4305 000e 1943     	 orr r1,r3
 4306              	.LVL499:
1842:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEFLAG = ceflag;
 4307              	 .loc 1 1842 0
 4308 0010 0151     	 str r1,[r0,r4]
 4309              	 .loc 1 1843 0
 4310 0012 10BD     	 pop {r4,pc}
 4311              	 .cfi_endproc
 4312              	.LFE192:
 4314              	 .section .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode,"ax",%progbits
 4315              	 .align 2
 4316              	 .global XMC_VADC_GROUP_ChannelSetEventInterruptNode
 4317              	 .code 16
 4318              	 .thumb_func
 4320              	XMC_VADC_GROUP_ChannelSetEventInterruptNode:
 4321              	.LFB193:
1844:../Libraries/XMCLib/src/xmc_vadc.c **** 
1845:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to bind channel event with a service request (NVIC Node) */
1846:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1847:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1848:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_SR_t sr)
1849:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4322              	 .loc 1 1849 0
 4323              	 .cfi_startproc
 4324              	.LVL500:
 4325 0000 30B5     	 push {r4,r5,lr}
 4326              	.LCFI48:
 4327              	 .cfi_def_cfa_offset 12
 4328              	 .cfi_offset 4,-12
 4329              	 .cfi_offset 5,-8
 4330              	 .cfi_offset 14,-4
1850:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1851:../Libraries/XMCLib/src/xmc_vadc.c **** 
1852:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROU
1853:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Channel Number",
1854:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1855:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_VAD
1856:../Libraries/XMCLib/src/xmc_vadc.c **** 
1857:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask  = group_ptr->CEVNP0;
1858:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask &= ~((uint32_t)15 << (ch_num * (uint32_t)4));
 4331              	 .loc 1 1858 0
 4332 0002 0F24     	 mov r4,#15
1857:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask &= ~((uint32_t)15 << (ch_num * (uint32_t)4));
 4333              	 .loc 1 1857 0
 4334 0004 D025     	 mov r5,#208
 4335              	 .loc 1 1858 0
 4336 0006 8900     	 lsl r1,r1,#2
 4337              	.LVL501:
 4338 0008 8C40     	 lsl r4,r4,r1
1859:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask |= (uint32_t)( (uint32_t)sr << (ch_num * (uint32_t)4));
 4339              	 .loc 1 1859 0
 4340 000a 8A40     	 lsl r2,r2,r1
 4341              	.LVL502:
1857:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask &= ~((uint32_t)15 << (ch_num * (uint32_t)4));
 4342              	 .loc 1 1857 0
 4343 000c 6D00     	 lsl r5,r5,#1
 4344 000e 4359     	 ldr r3,[r0,r5]
 4345              	.LVL503:
1860:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEVNP0 = route_mask;
1861:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4346              	 .loc 1 1861 0
 4347              	 
1858:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask |= (uint32_t)( (uint32_t)sr << (ch_num * (uint32_t)4));
 4348              	 .loc 1 1858 0
 4349 0010 A343     	 bic r3,r4
 4350              	.LVL504:
1859:../Libraries/XMCLib/src/xmc_vadc.c ****   route_mask |= (uint32_t)( (uint32_t)sr << (ch_num * (uint32_t)4));
 4351              	 .loc 1 1859 0
 4352 0012 1343     	 orr r3,r2
 4353              	.LVL505:
1860:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CEVNP0 = route_mask;
 4354              	 .loc 1 1860 0
 4355 0014 4351     	 str r3,[r0,r5]
 4356              	 .loc 1 1861 0
 4357 0016 30BD     	 pop {r4,r5,pc}
 4358              	 .cfi_endproc
 4359              	.LFE193:
 4361              	 .section .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria,"ax",%progbits
 4362              	 .align 2
 4363              	 .global XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
 4364              	 .code 16
 4365              	 .thumb_func
 4367              	XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:
 4368              	.LFB194:
1862:../Libraries/XMCLib/src/xmc_vadc.c **** 
1863:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure conditions for generation of channel event */
1864:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEventGenCriteria( XMC_VADC_GROUP_t *const group_ptr,
1865:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    const uint32_t ch_num,
1866:../Libraries/XMCLib/src/xmc_vadc.c ****                                                    const XMC_VADC_CHANNEL_EVGEN_t criteria)
1867:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4369              	 .loc 1 1867 0
 4370              	 .cfi_startproc
 4371              	.LVL506:
 4372 0000 8900     	 lsl r1,r1,#2
 4373              	.LVL507:
 4374 0002 4118     	 add r1,r0,r1
1868:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1869:../Libraries/XMCLib/src/xmc_vadc.c **** 
1870:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Group Pointer", XMC_VADC_CHECK_GR
1871:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Channel Number",
1872:../Libraries/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1873:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Event Generation Criteria",
1874:../Libraries/XMCLib/src/xmc_vadc.c ****              ((criteria) <= XMC_VADC_CHANNEL_EVGEN_ALWAYS))
1875:../Libraries/XMCLib/src/xmc_vadc.c **** 
1876:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4375              	 .loc 1 1876 0
 4376 0004 8020     	 mov r0,#128
 4377              	.LVL508:
1867:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
 4378              	 .loc 1 1867 0
 4379 0006 10B5     	 push {r4,lr}
 4380              	.LCFI49:
 4381              	 .cfi_def_cfa_offset 8
 4382              	 .cfi_offset 4,-8
 4383              	 .cfi_offset 14,-4
 4384              	 .loc 1 1876 0
 4385 0008 8000     	 lsl r0,r0,#2
 4386 000a 0C58     	 ldr r4,[r1,r0]
 4387              	.LVL509:
1877:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_CHEVMODE_Msk);
 4388              	 .loc 1 1877 0
 4389 000c 024B     	 ldr r3,.L298
1878:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)criteria << VADC_G_CHCTR_CHEVMODE_Pos);
 4390              	 .loc 1 1878 0
 4391 000e 1202     	 lsl r2,r2,#8
 4392              	.LVL510:
1877:../Libraries/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_CHEVMODE_Msk);
 4393              	 .loc 1 1877 0
 4394 0010 2340     	 and r3,r4
 4395              	.LVL511:
 4396              	 .loc 1 1878 0
 4397 0012 1A43     	 orr r2,r3
 4398              	.LVL512:
1879:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4399              	 .loc 1 1879 0
 4400 0014 0A50     	 str r2,[r1,r0]
1880:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4401              	 .loc 1 1880 0
 4402              	 
 4403 0016 10BD     	 pop {r4,pc}
 4404              	.L299:
 4405              	 .align 2
 4406              	.L298:
 4407 0018 FFFCFFFF 	 .word -769
 4408              	 .cfi_endproc
 4409              	.LFE194:
 4411              	 .section .text.XMC_VADC_GROUP_ChannelSetBoundarySelection,"ax",%progbits
 4412              	 .align 2
 4413              	 .global XMC_VADC_GROUP_ChannelSetBoundarySelection
 4414              	 .code 16
 4415              	 .thumb_func
 4417              	XMC_VADC_GROUP_ChannelSetBoundarySelection:
 4418              	.LFB195:
1881:../Libraries/XMCLib/src/xmc_vadc.c **** 
1882:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to configure the boundary selection */
1883:../Libraries/XMCLib/src/xmc_vadc.c **** void  XMC_VADC_GROUP_ChannelSetBoundarySelection(XMC_VADC_GROUP_t *const group_ptr,
1884:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1885:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_BOUNDARY_SELECT_t boundary_sel,
1886:../Libraries/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_CHANNEL_BOUNDARY_t selection)
1887:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4419              	 .loc 1 1887 0
 4420              	 .cfi_startproc
 4421              	.LVL513:
 4422 0000 30B5     	 push {r4,r5,lr}
 4423              	.LCFI50:
 4424              	 .cfi_def_cfa_offset 12
 4425              	 .cfi_offset 4,-12
 4426              	 .cfi_offset 5,-8
 4427              	 .cfi_offset 14,-4
1888:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
1889:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Channel Number",
1890:../Libraries/XMCLib/src/xmc_vadc.c ****               ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1891:../Libraries/XMCLib/src/xmc_vadc.c **** 
1892:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_BNDSELL_Msk << boundary_sel);
 4428              	 .loc 1 1892 0
 4429 0002 3025     	 mov r5,#48
 4430 0004 9540     	 lsl r5,r5,r2
1893:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundary
 4431              	 .loc 1 1893 0
 4432 0006 0432     	 add r2,r2,#4
 4433              	.LVL514:
 4434 0008 9340     	 lsl r3,r3,r2
 4435              	.LVL515:
 4436 000a 8900     	 lsl r1,r1,#2
 4437              	.LVL516:
 4438 000c 4118     	 add r1,r0,r1
1892:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundary
 4439              	 .loc 1 1892 0
 4440 000e 8020     	 mov r0,#128
 4441              	.LVL517:
 4442              	 .loc 1 1893 0
 4443 0010 1A1C     	 mov r2,r3
1892:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundary
 4444              	 .loc 1 1892 0
 4445 0012 8000     	 lsl r0,r0,#2
 4446 0014 0C58     	 ldr r4,[r1,r0]
1894:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4447              	 .loc 1 1894 0
 4448              	 
1892:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundary
 4449              	 .loc 1 1892 0
 4450 0016 AC43     	 bic r4,r5
 4451 0018 0C50     	 str r4,[r1,r0]
1893:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundary
 4452              	 .loc 1 1893 0
 4453 001a 0C58     	 ldr r4,[r1,r0]
 4454 001c 2243     	 orr r2,r4
 4455 001e 0A50     	 str r2,[r1,r0]
 4456              	 .loc 1 1894 0
 4457 0020 30BD     	 pop {r4,r5,pc}
 4458              	 .cfi_endproc
 4459              	.LFE195:
 4461 0022 C046     	 .section .text.XMC_VADC_GROUP_AddResultToFifo,"ax",%progbits
 4462              	 .align 2
 4463              	 .global XMC_VADC_GROUP_AddResultToFifo
 4464              	 .code 16
 4465              	 .thumb_func
 4467              	XMC_VADC_GROUP_AddResultToFifo:
 4468              	.LFB196:
1895:../Libraries/XMCLib/src/xmc_vadc.c **** 
1896:../Libraries/XMCLib/src/xmc_vadc.c **** /* Make the specified result register part of Result FIFO */ 
1897:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_AddResultToFifo(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg)
1898:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4469              	 .loc 1 1898 0
 4470              	 .cfi_startproc
 4471              	.LVL518:
1899:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t fen;
1900:../Libraries/XMCLib/src/xmc_vadc.c **** 
1901:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1902:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RESU
1903:../Libraries/XMCLib/src/xmc_vadc.c **** 
1904:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Extract and clear the FIFO enable field */
1905:../Libraries/XMCLib/src/xmc_vadc.c ****   fen = group_ptr->RCR[res_reg];
 4472              	 .loc 1 1905 0
 4473 0000 A022     	 mov r2,#160
 4474 0002 8900     	 lsl r1,r1,#2
 4475              	.LVL519:
 4476 0004 4118     	 add r1,r0,r1
 4477 0006 9200     	 lsl r2,r2,#2
 4478 0008 8858     	 ldr r0,[r1,r2]
 4479              	.LVL520:
1906:../Libraries/XMCLib/src/xmc_vadc.c ****   fen &= ~((uint32_t)VADC_G_RCR_FEN_Msk);
 4480              	 .loc 1 1906 0
 4481 000a 034B     	 ldr r3,.L302
1907:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Set this register up as a FIFO member */
1908:../Libraries/XMCLib/src/xmc_vadc.c ****   fen |= (uint32_t)((uint32_t)1 << VADC_G_RCR_FEN_Pos);
1909:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RCR[res_reg] = fen;
1910:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4482              	 .loc 1 1910 0
 4483              	 
1906:../Libraries/XMCLib/src/xmc_vadc.c ****   fen &= ~((uint32_t)VADC_G_RCR_FEN_Msk);
 4484              	 .loc 1 1906 0
 4485 000c 0340     	 and r3,r0
 4486              	.LVL521:
1908:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RCR[res_reg] = fen;
 4487              	 .loc 1 1908 0
 4488 000e 8020     	 mov r0,#128
 4489 0010 8004     	 lsl r0,r0,#18
 4490 0012 0343     	 orr r3,r0
 4491              	.LVL522:
1909:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4492              	 .loc 1 1909 0
 4493 0014 8B50     	 str r3,[r1,r2]
 4494              	 .loc 1 1910 0
 4495 0016 7047     	 bx lr
 4496              	.L303:
 4497              	 .align 2
 4498              	.L302:
 4499 0018 FFFFFFF9 	 .word -100663297
 4500              	 .cfi_endproc
 4501              	.LFE196:
 4503              	 .section .text.XMC_VADC_GROUP_SetResultFastCompareValue,"ax",%progbits
 4504              	 .align 2
 4505              	 .global XMC_VADC_GROUP_SetResultFastCompareValue
 4506              	 .code 16
 4507              	 .thumb_func
 4509              	XMC_VADC_GROUP_SetResultFastCompareValue:
 4510              	.LFB197:
1911:../Libraries/XMCLib/src/xmc_vadc.c **** 
1912:../Libraries/XMCLib/src/xmc_vadc.c **** 
1913:../Libraries/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1914:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultFastCompareValue(XMC_VADC_GROUP_t *const group_ptr,
1915:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const uint32_t res_reg,
1916:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const XMC_VADC_RESULT_SIZE_t compare_val)
1917:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4511              	 .loc 1 1917 0
 4512              	 .cfi_startproc
 4513              	.LVL523:
 4514 0000 8900     	 lsl r1,r1,#2
 4515              	.LVL524:
 4516 0002 4118     	 add r1,r0,r1
1918:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res = group_ptr->RES[res_reg];
 4517              	 .loc 1 1918 0
 4518 0004 C020     	 mov r0,#192
 4519              	.LVL525:
 4520 0006 8000     	 lsl r0,r0,#2
 4521 0008 0B58     	 ldr r3,[r1,r0]
 4522              	.LVL526:
1919:../Libraries/XMCLib/src/xmc_vadc.c **** 
1920:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1921:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Result Register",
1922:../Libraries/XMCLib/src/xmc_vadc.c ****             ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
1923:../Libraries/XMCLib/src/xmc_vadc.c **** 
1924:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
1925:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 4523              	 .loc 1 1925 0
 4524 000a 9200     	 lsl r2,r2,#2
 4525              	.LVL527:
1924:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 4526              	 .loc 1 1924 0
 4527 000c 1B0C     	 lsr r3,r3,#16
 4528              	.LVL528:
 4529 000e 1B04     	 lsl r3,r3,#16
 4530              	.LVL529:
 4531              	 .loc 1 1925 0
 4532 0010 1A43     	 orr r2,r3
 4533              	.LVL530:
1926:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[res_reg] = res;
 4534              	 .loc 1 1926 0
 4535 0012 0A50     	 str r2,[r1,r0]
1927:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4536              	 .loc 1 1927 0
 4537              	 
 4538 0014 7047     	 bx lr
 4539              	 .cfi_endproc
 4540              	.LFE197:
 4542 0016 C046     	 .section .text.XMC_VADC_GROUP_GetFastCompareResult,"ax",%progbits
 4543              	 .align 2
 4544              	 .global XMC_VADC_GROUP_GetFastCompareResult
 4545              	 .code 16
 4546              	 .thumb_func
 4548              	XMC_VADC_GROUP_GetFastCompareResult:
 4549              	.LFB198:
1928:../Libraries/XMCLib/src/xmc_vadc.c **** 
1929:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of fast mode comparison */
1930:../Libraries/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GROUP_GetFastCompareResult(XMC_VADC_GROUP_t *const group_ptr, cons
1931:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4550              	 .loc 1 1931 0
 4551              	 .cfi_startproc
 4552              	.LVL531:
1932:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
1933:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1934:../Libraries/XMCLib/src/xmc_vadc.c **** 
1935:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
1936:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Result Register", ((res_reg) < XMC_VADC_NUM
1937:../Libraries/XMCLib/src/xmc_vadc.c **** 
1938:../Libraries/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[res_reg];
 4553              	 .loc 1 1938 0
 4554 0000 C031     	 add r1,r1,#192
 4555              	.LVL532:
 4556 0002 8900     	 lsl r1,r1,#2
 4557              	.LVL533:
 4558 0004 0B58     	 ldr r3,[r1,r0]
 4559              	.LVL534:
1939:../Libraries/XMCLib/src/xmc_vadc.c **** 
1940:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_G_RES_VF_Msk)
1941:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1942:../Libraries/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_G_RES_FCR_Pos) & (uint32_t)
1943:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1944:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1945:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1946:../Libraries/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 4560              	 .loc 1 1946 0
 4561 0006 0220     	 mov r0,#2
 4562              	.LVL535:
1940:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 4563              	 .loc 1 1940 0
 4564 0008 002B     	 cmp r3,#0
 4565 000a 00DB     	 blt .L308
 4566              	.LVL536:
 4567              	.L306:
1947:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1948:../Libraries/XMCLib/src/xmc_vadc.c **** 
1949:../Libraries/XMCLib/src/xmc_vadc.c ****   return result;
1950:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4568              	 .loc 1 1950 0
 4569              	 
 4570 000c 7047     	 bx lr
 4571              	.LVL537:
 4572              	.L308:
1942:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 4573              	 .loc 1 1942 0
 4574 000e 5B00     	 lsl r3,r3,#1
 4575              	.LVL538:
 4576 0010 D80F     	 lsr r0,r3,#31
 4577              	.LVL539:
 4578 0012 FBE7     	 b .L306
 4579              	 .cfi_endproc
 4580              	.LFE198:
 4582              	 .section .text.XMC_VADC_GROUP_SetResultSubtractionValue,"ax",%progbits
 4583              	 .align 2
 4584              	 .global XMC_VADC_GROUP_SetResultSubtractionValue
 4585              	 .code 16
 4586              	 .thumb_func
 4588              	XMC_VADC_GROUP_SetResultSubtractionValue:
 4589              	.LFB199:
1951:../Libraries/XMCLib/src/xmc_vadc.c **** 
1952:../Libraries/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1953:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultSubtractionValue(XMC_VADC_GROUP_t *const group_ptr,
1954:../Libraries/XMCLib/src/xmc_vadc.c ****                                               const uint16_t subtraction_val)
1955:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4590              	 .loc 1 1955 0
 4591              	 .cfi_startproc
 4592              	.LVL540:
1956:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1957:../Libraries/XMCLib/src/xmc_vadc.c **** 
1958:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultSubtractionValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1959:../Libraries/XMCLib/src/xmc_vadc.c **** 
1960:../Libraries/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[0];
 4593              	 .loc 1 1960 0
 4594 0000 C022     	 mov r2,#192
 4595 0002 9200     	 lsl r2,r2,#2
 4596 0004 8358     	 ldr r3,[r0,r2]
 4597              	.LVL541:
1961:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
1962:../Libraries/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)subtraction_val;
1963:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[0] = res;
1964:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4598              	 .loc 1 1964 0
 4599              	 
1961:../Libraries/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 4600              	 .loc 1 1961 0
 4601 0006 1B0C     	 lsr r3,r3,#16
 4602              	.LVL542:
 4603 0008 1B04     	 lsl r3,r3,#16
 4604              	.LVL543:
1962:../Libraries/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[0] = res;
 4605              	 .loc 1 1962 0
 4606 000a 1943     	 orr r1,r3
 4607              	.LVL544:
1963:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4608              	 .loc 1 1963 0
 4609 000c 8150     	 str r1,[r0,r2]
 4610              	 .loc 1 1964 0
 4611 000e 7047     	 bx lr
 4612              	 .cfi_endproc
 4613              	.LFE199:
 4615              	 .section .text.XMC_VADC_GROUP_SetResultInterruptNode,"ax",%progbits
 4616              	 .align 2
 4617              	 .global XMC_VADC_GROUP_SetResultInterruptNode
 4618              	 .code 16
 4619              	 .thumb_func
 4621              	XMC_VADC_GROUP_SetResultInterruptNode:
 4622              	.LFB200:
1965:../Libraries/XMCLib/src/xmc_vadc.c **** 
1966:../Libraries/XMCLib/src/xmc_vadc.c **** 
1967:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for result event of specified unit of result ha
1968:../Libraries/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1969:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const uint32_t res_reg,
1970:../Libraries/XMCLib/src/xmc_vadc.c ****                                            const XMC_VADC_SR_t sr)
1971:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4623              	 .loc 1 1971 0
 4624              	 .cfi_startproc
 4625              	.LVL545:
 4626 0000 30B5     	 push {r4,r5,lr}
 4627              	.LCFI51:
 4628              	 .cfi_def_cfa_offset 12
 4629              	 .cfi_offset 4,-12
 4630              	 .cfi_offset 5,-8
 4631              	 .cfi_offset 14,-4
1972:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1973:../Libraries/XMCLib/src/xmc_vadc.c **** 
1974:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1975:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Result Register", ((res_reg) < XMC_VADC_N
1976:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Service Request", ((sr)  <= XMC_VADC_SR_S
1977:../Libraries/XMCLib/src/xmc_vadc.c **** 
1978:../Libraries/XMCLib/src/xmc_vadc.c ****   if (res_reg <= 7U)
 4632              	 .loc 1 1978 0
 4633 0002 0729     	 cmp r1,#7
 4634 0004 0ED9     	 bls .L314
1979:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1980:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask  = group_ptr->REVNP0;
1981:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (res_reg * (uint32_t)4) ));
1982:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << (res_reg * (uint32_t)4));
1983:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP0 = route_mask;
1984:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1985:../Libraries/XMCLib/src/xmc_vadc.c ****   else
1986:../Libraries/XMCLib/src/xmc_vadc.c ****   {
1987:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask = group_ptr->REVNP1;
 4635              	 .loc 1 1987 0
 4636 0006 DA25     	 mov r5,#218
1988:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4637              	 .loc 1 1988 0
 4638 0008 084C     	 ldr r4,.L315
1987:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4639              	 .loc 1 1987 0
 4640 000a 6D00     	 lsl r5,r5,#1
 4641              	 .loc 1 1988 0
 4642 000c A446     	 mov ip,r4
1987:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4643              	 .loc 1 1987 0
 4644 000e 4359     	 ldr r3,[r0,r5]
 4645              	.LVL546:
 4646              	 .loc 1 1988 0
 4647 0010 6144     	 add r1,r1,ip
 4648              	.LVL547:
 4649              	.L313:
 4650 0012 8900     	 lsl r1,r1,#2
 4651 0014 0F24     	 mov r4,#15
1989:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << ((res_reg - (uint32_t)8) * (uint32_t)4));
 4652              	 .loc 1 1989 0
 4653 0016 8A40     	 lsl r2,r2,r1
 4654              	.LVL548:
1988:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4655              	 .loc 1 1988 0
 4656 0018 8C40     	 lsl r4,r4,r1
 4657              	 .loc 1 1989 0
 4658 001a 111C     	 mov r1,r2
1988:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 4659              	 .loc 1 1988 0
 4660 001c A343     	 bic r3,r4
 4661              	.LVL549:
 4662              	 .loc 1 1989 0
 4663 001e 1943     	 orr r1,r3
 4664              	.LVL550:
1990:../Libraries/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP1 = route_mask;
 4665              	 .loc 1 1990 0
 4666 0020 4151     	 str r1,[r0,r5]
1991:../Libraries/XMCLib/src/xmc_vadc.c ****   }
1992:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4667              	 .loc 1 1992 0
 4668              	 
 4669 0022 30BD     	 pop {r4,r5,pc}
 4670              	.LVL551:
 4671              	.L314:
1980:../Libraries/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (res_reg * (uint32_t)4) ));
 4672              	 .loc 1 1980 0
 4673 0024 D825     	 mov r5,#216
 4674 0026 6D00     	 lsl r5,r5,#1
 4675 0028 4359     	 ldr r3,[r0,r5]
 4676              	.LVL552:
 4677 002a F2E7     	 b .L313
 4678              	.L316:
 4679              	 .align 2
 4680              	.L315:
 4681 002c F8FFFF3F 	 .word 1073741816
 4682              	 .cfi_endproc
 4683              	.LFE200:
 4685              	 .section .text.XMC_VADC_GROUP_GetResultFifoTail,"ax",%progbits
 4686              	 .align 2
 4687              	 .global XMC_VADC_GROUP_GetResultFifoTail
 4688              	 .code 16
 4689              	 .thumb_func
 4691              	XMC_VADC_GROUP_GetResultFifoTail:
 4692              	.LFB201:
1993:../Libraries/XMCLib/src/xmc_vadc.c **** 
1994:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the tail of the fifo which the specified result register is a part of */
1995:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoTail(XMC_VADC_GROUP_t *const group_ptr, uint32_t res_reg)
1996:../Libraries/XMCLib/src/xmc_vadc.c **** {
 4693              	 .loc 1 1996 0
 4694              	 .cfi_startproc
 4695              	.LVL553:
 4696 0000 8B00     	 lsl r3,r1,#2
 4697 0002 C318     	 add r3,r0,r3
 4698 0004 30B5     	 push {r4,r5,lr}
 4699              	.LCFI52:
 4700              	 .cfi_def_cfa_offset 12
 4701              	 .cfi_offset 4,-12
 4702              	 .cfi_offset 5,-8
 4703              	 .cfi_offset 14,-4
 4704              	 .loc 1 1996 0
 4705 0006 021C     	 mov r2,r0
 4706              	.LBB146:
 4707              	.LBB147:
1997:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t tail;
1998:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
1999:../Libraries/XMCLib/src/xmc_vadc.c ****   int32_t i;
2000:../Libraries/XMCLib/src/xmc_vadc.c ****   bool exit_flag;
2001:../Libraries/XMCLib/src/xmc_vadc.c **** 
2002:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2003:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
2004:../Libraries/XMCLib/src/xmc_vadc.c **** 
2005:../Libraries/XMCLib/src/xmc_vadc.c ****   tail = 0U;
2006:../Libraries/XMCLib/src/xmc_vadc.c ****   exit_flag= (bool)false;
2007:../Libraries/XMCLib/src/xmc_vadc.c **** 
2008:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
2009:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2010:../Libraries/XMCLib/src/xmc_vadc.c ****     res_reg = res_reg - 1U;
2011:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2012:../Libraries/XMCLib/src/xmc_vadc.c **** 
2013:../Libraries/XMCLib/src/xmc_vadc.c ****   /* Border condition */
2014:../Libraries/XMCLib/src/xmc_vadc.c ****   if (0U == res_reg)
2015:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2016:../Libraries/XMCLib/src/xmc_vadc.c ****     tail = 0U;
2017:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2018:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2019:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2020:../Libraries/XMCLib/src/xmc_vadc.c ****     /* Stop either at a node that does not have FEN set or at Node-0 */
2021:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i = (int32_t)res_reg; i >= (int32_t)0; i--)
2022:../Libraries/XMCLib/src/xmc_vadc.c ****     {
2023:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr = group_ptr->RCR[i];
2024:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
2025:../Libraries/XMCLib/src/xmc_vadc.c **** 
2026:../Libraries/XMCLib/src/xmc_vadc.c ****        if (rcr)
2027:../Libraries/XMCLib/src/xmc_vadc.c ****        {
2028:../Libraries/XMCLib/src/xmc_vadc.c ****          if ((int32_t)0 == i)
2029:../Libraries/XMCLib/src/xmc_vadc.c ****          {
2030:../Libraries/XMCLib/src/xmc_vadc.c ****           /* No more nodes. Stop here */
2031:../Libraries/XMCLib/src/xmc_vadc.c ****           tail = (uint32_t)0;
2032:../Libraries/XMCLib/src/xmc_vadc.c ****           exit_flag = (bool)true;
2033:../Libraries/XMCLib/src/xmc_vadc.c ****          }
2034:../Libraries/XMCLib/src/xmc_vadc.c ****        }
2035:../Libraries/XMCLib/src/xmc_vadc.c ****        else
2036:../Libraries/XMCLib/src/xmc_vadc.c ****        {
2037:../Libraries/XMCLib/src/xmc_vadc.c ****          /* The preceding register forms the tail of the FIFO */
2038:../Libraries/XMCLib/src/xmc_vadc.c ****          tail = (uint32_t)i + (uint32_t)1;
2039:../Libraries/XMCLib/src/xmc_vadc.c ****          exit_flag = (bool)true;
2040:../Libraries/XMCLib/src/xmc_vadc.c ****        }
2041:../Libraries/XMCLib/src/xmc_vadc.c ****        if (exit_flag)
2042:../Libraries/XMCLib/src/xmc_vadc.c ****        {
2043:../Libraries/XMCLib/src/xmc_vadc.c ****          break;
2044:../Libraries/XMCLib/src/xmc_vadc.c ****        }
2045:../Libraries/XMCLib/src/xmc_vadc.c ****     }
2046:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2047:../Libraries/XMCLib/src/xmc_vadc.c ****   return tail;
2048:../Libraries/XMCLib/src/xmc_vadc.c **** }
2049:../Libraries/XMCLib/src/xmc_vadc.c **** 
2050:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to retrieve the head of the fifo which the specified result register is a part of */
2051:../Libraries/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg
2052:../Libraries/XMCLib/src/xmc_vadc.c **** {
2053:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t head;
2054:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
2055:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t i;
2056:../Libraries/XMCLib/src/xmc_vadc.c **** 
2057:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2058:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
2059:../Libraries/XMCLib/src/xmc_vadc.c **** 
2060:../Libraries/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
2061:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2062:../Libraries/XMCLib/src/xmc_vadc.c ****       head = res_reg;
2063:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2064:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2065:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2066:../Libraries/XMCLib/src/xmc_vadc.c ****     head = XMC_VADC_NUM_RESULT_REGISTERS - (uint32_t)1;
2067:../Libraries/XMCLib/src/xmc_vadc.c **** 
2068:../Libraries/XMCLib/src/xmc_vadc.c ****     for(i = res_reg; i < XMC_VADC_NUM_RESULT_REGISTERS ; i++)
2069:../Libraries/XMCLib/src/xmc_vadc.c ****     {
2070:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr = group_ptr->RCR[i];
2071:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
2072:../Libraries/XMCLib/src/xmc_vadc.c **** 
2073:../Libraries/XMCLib/src/xmc_vadc.c ****       if (!rcr)
2074:../Libraries/XMCLib/src/xmc_vadc.c ****       {
2075:../Libraries/XMCLib/src/xmc_vadc.c ****         /* This node forms the head of the FIFO */
2076:../Libraries/XMCLib/src/xmc_vadc.c ****         head = i ;
2077:../Libraries/XMCLib/src/xmc_vadc.c ****         break;
2078:../Libraries/XMCLib/src/xmc_vadc.c ****       }
2079:../Libraries/XMCLib/src/xmc_vadc.c ****     }
2080:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2081:../Libraries/XMCLib/src/xmc_vadc.c ****   return head;
2082:../Libraries/XMCLib/src/xmc_vadc.c **** }
2083:../Libraries/XMCLib/src/xmc_vadc.c **** 
2084:../Libraries/XMCLib/src/xmc_vadc.c **** /* API to determine if the specified result register is the head of a result fifo */
2085:../Libraries/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_IsResultRegisterFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_
2086:../Libraries/XMCLib/src/xmc_vadc.c **** {
2087:../Libraries/XMCLib/src/xmc_vadc.c ****   bool ret_val;
2088:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_head;
2089:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_next;
2090:../Libraries/XMCLib/src/xmc_vadc.c **** 
2091:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2092:../Libraries/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Result Register",
2093:../Libraries/XMCLib/src/xmc_vadc.c ****              ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
2094:../Libraries/XMCLib/src/xmc_vadc.c **** 
2095:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head = group_ptr->RCR[res_reg];
2096:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
2097:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 4708              	 .loc 1 2097 0
 4709 0008 9F24     	 mov r4,#159
2095:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4710              	 .loc 1 2095 0
 4711 000a A020     	 mov r0,#160
 4712              	.LVL554:
 4713              	 .loc 1 2097 0
 4714 000c A400     	 lsl r4,r4,#2
2095:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4715              	 .loc 1 2095 0
 4716 000e 8000     	 lsl r0,r0,#2
 4717 0010 1858     	 ldr r0,[r3,r0]
 4718              	.LVL555:
 4719              	 .loc 1 2097 0
 4720 0012 1C59     	 ldr r4,[r3,r4]
 4721              	.LVL556:
2096:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 4722              	 .loc 1 2096 0
 4723 0014 C023     	 mov r3,#192
 4724 0016 DB04     	 lsl r3,r3,#19
 4725              	 .loc 1 2097 0
 4726 0018 4D1E     	 sub r5,r1,#1
2098:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
2099:../Libraries/XMCLib/src/xmc_vadc.c **** 
2100:../Libraries/XMCLib/src/xmc_vadc.c ****   if (rcr_head)
 4727              	 .loc 1 2100 0
 4728 001a 1842     	 tst r0,r3
 4729 001c 01D1     	 bne .L318
2101:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2102:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
2103:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2104:../Libraries/XMCLib/src/xmc_vadc.c ****   else if (rcr_next)
 4730              	 .loc 1 2104 0
 4731 001e 1C42     	 tst r4,r3
 4732 0020 18D1     	 bne .L336
 4733              	.LVL557:
 4734              	.L318:
 4735              	.LBE147:
 4736              	.LBE146:
2016:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 4737              	 .loc 1 2016 0
 4738 0022 0020     	 mov r0,#0
 4739              	.LVL558:
2014:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 4740              	 .loc 1 2014 0
 4741 0024 0029     	 cmp r1,#0
 4742 0026 09D0     	 beq .L332
 4743              	.LVL559:
2021:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 4744              	 .loc 1 2021 0
 4745 0028 08DB     	 blt .L332
2023:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4746              	 .loc 1 2023 0
 4747 002a 0B1C     	 mov r3,r1
2024:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4748              	 .loc 1 2024 0
 4749 002c C020     	 mov r0,#192
2023:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4750              	 .loc 1 2023 0
 4751 002e A033     	 add r3,r3,#160
 4752 0030 9B00     	 lsl r3,r3,#2
 4753 0032 9B58     	 ldr r3,[r3,r2]
 4754              	.LVL560:
2024:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4755              	 .loc 1 2024 0
 4756 0034 C004     	 lsl r0,r0,#19
2026:../Libraries/XMCLib/src/xmc_vadc.c ****        {
 4757              	 .loc 1 2026 0
 4758 0036 0342     	 tst r3,r0
 4759 0038 03D1     	 bne .L323
 4760              	.LVL561:
 4761              	.L321:
2038:../Libraries/XMCLib/src/xmc_vadc.c ****          exit_flag = (bool)true;
 4762              	 .loc 1 2038 0
 4763 003a 481C     	 add r0,r1,#1
 4764              	.LVL562:
 4765              	.L332:
2048:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4766              	 .loc 1 2048 0
 4767              	 
 4768              	.LVL563:
 4769              	.LVL564:
 4770 003c 30BD     	 pop {r4,r5,pc}
 4771              	.LVL565:
 4772              	.L337:
2028:../Libraries/XMCLib/src/xmc_vadc.c ****          {
 4773              	 .loc 1 2028 0
 4774 003e 0029     	 cmp r1,#0
 4775 0040 0AD0     	 beq .L327
 4776              	.LVL566:
 4777              	.L323:
2021:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 4778              	 .loc 1 2021 0
 4779 0042 0139     	 sub r1,r1,#1
 4780 0044 08D3     	 bcc .L327
 4781              	.LVL567:
2023:../Libraries/XMCLib/src/xmc_vadc.c ****        rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4782              	 .loc 1 2023 0
 4783 0046 0B1C     	 mov r3,r1
 4784 0048 A033     	 add r3,r3,#160
 4785 004a 9B00     	 lsl r3,r3,#2
 4786 004c 9B58     	 ldr r3,[r3,r2]
 4787              	.LVL568:
2026:../Libraries/XMCLib/src/xmc_vadc.c ****        {
 4788              	 .loc 1 2026 0
 4789 004e 0342     	 tst r3,r0
 4790 0050 F3D0     	 beq .L321
 4791 0052 F4E7     	 b .L337
 4792              	.LVL569:
 4793              	.L336:
2010:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 4794              	 .loc 1 2010 0
 4795 0054 291C     	 mov r1,r5
 4796              	.LVL570:
 4797 0056 E4E7     	 b .L318
 4798              	.LVL571:
 4799              	.L327:
2031:../Libraries/XMCLib/src/xmc_vadc.c ****           exit_flag = (bool)true;
 4800              	 .loc 1 2031 0
 4801 0058 0020     	 mov r0,#0
 4802              	.LVL572:
 4803 005a EFE7     	 b .L332
 4804              	 .cfi_endproc
 4805              	.LFE201:
 4807              	 .section .text.XMC_VADC_GROUP_GetResultFifoHead,"ax",%progbits
 4808              	 .align 2
 4809              	 .global XMC_VADC_GROUP_GetResultFifoHead
 4810              	 .code 16
 4811              	 .thumb_func
 4813              	XMC_VADC_GROUP_GetResultFifoHead:
 4814              	.LFB202:
2052:../Libraries/XMCLib/src/xmc_vadc.c ****   uint32_t head;
 4815              	 .loc 1 2052 0
 4816              	 .cfi_startproc
 4817              	.LVL573:
 4818 0000 30B5     	 push {r4,r5,lr}
 4819              	.LCFI53:
 4820              	 .cfi_def_cfa_offset 12
 4821              	 .cfi_offset 4,-12
 4822              	 .cfi_offset 5,-8
 4823              	 .cfi_offset 14,-4
 4824              	.LBB148:
 4825              	.LBB149:
2095:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4826              	 .loc 1 2095 0
 4827 0002 A023     	 mov r3,#160
2097:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4828              	 .loc 1 2097 0
 4829 0004 9F24     	 mov r4,#159
 4830 0006 8A00     	 lsl r2,r1,#2
 4831 0008 8218     	 add r2,r0,r2
 4832 000a A400     	 lsl r4,r4,#2
2095:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4833              	 .loc 1 2095 0
 4834 000c 9B00     	 lsl r3,r3,#2
 4835 000e D358     	 ldr r3,[r2,r3]
 4836              	.LVL574:
2097:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4837              	 .loc 1 2097 0
 4838 0010 1559     	 ldr r5,[r2,r4]
 4839              	.LVL575:
2096:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 4840              	 .loc 1 2096 0
 4841 0012 C024     	 mov r4,#192
 4842 0014 E404     	 lsl r4,r4,#19
2100:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 4843              	 .loc 1 2100 0
 4844 0016 2342     	 tst r3,r4
 4845 0018 02D1     	 bne .L343
 4846              	 .loc 1 2104 0
 4847 001a 0B1C     	 mov r3,r1
 4848              	.LVL576:
 4849 001c 2542     	 tst r5,r4
 4850 001e 15D1     	 bne .L340
 4851              	.L343:
 4852              	.LVL577:
 4853              	.LBE149:
 4854              	.LBE148:
2068:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 4855              	 .loc 1 2068 0 discriminator 1
 4856 0020 0F29     	 cmp r1,#15
 4857 0022 15D8     	 bhi .L346
2070:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4858              	 .loc 1 2070 0
 4859 0024 A023     	 mov r3,#160
 4860 0026 9B00     	 lsl r3,r3,#2
 4861 0028 D358     	 ldr r3,[r2,r3]
 4862              	.LVL578:
2071:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4863              	 .loc 1 2071 0
 4864 002a C022     	 mov r2,#192
 4865 002c D204     	 lsl r2,r2,#19
2073:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 4866              	 .loc 1 2073 0
 4867 002e 1342     	 tst r3,r2
 4868 0030 10D0     	 beq .L347
 4869 0032 0B1C     	 mov r3,r1
 4870              	.LVL579:
2071:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4871              	 .loc 1 2071 0
 4872 0034 111C     	 mov r1,r2
 4873              	.LVL580:
 4874 0036 05E0     	 b .L344
 4875              	.LVL581:
 4876              	.L345:
2070:../Libraries/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4877              	 .loc 1 2070 0
 4878 0038 1A1C     	 mov r2,r3
 4879 003a A032     	 add r2,r2,#160
 4880 003c 9200     	 lsl r2,r2,#2
 4881 003e 1258     	 ldr r2,[r2,r0]
 4882              	.LVL582:
2073:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 4883              	 .loc 1 2073 0
 4884 0040 0A42     	 tst r2,r1
 4885 0042 03D0     	 beq .L340
 4886              	.LVL583:
 4887              	.L344:
2068:../Libraries/XMCLib/src/xmc_vadc.c ****     {
 4888              	 .loc 1 2068 0 discriminator 2
 4889 0044 0133     	 add r3,r3,#1
 4890              	.LVL584:
 4891 0046 102B     	 cmp r3,#16
 4892 0048 F6D1     	 bne .L345
2066:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4893              	 .loc 1 2066 0
 4894 004a 013B     	 sub r3,r3,#1
 4895              	.LVL585:
 4896              	.L340:
2082:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4897              	 .loc 1 2082 0
 4898 004c 181C     	 mov r0,r3
 4899              	.LVL586:
 4900              	 
 4901              	.LVL587:
 4902 004e 30BD     	 pop {r4,r5,pc}
 4903              	.LVL588:
 4904              	.L346:
2066:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4905              	 .loc 1 2066 0
 4906 0050 0F23     	 mov r3,#15
 4907 0052 FBE7     	 b .L340
 4908              	.LVL589:
 4909              	.L347:
2073:../Libraries/XMCLib/src/xmc_vadc.c ****       {
 4910              	 .loc 1 2073 0
 4911 0054 0B1C     	 mov r3,r1
 4912              	.LVL590:
2077:../Libraries/XMCLib/src/xmc_vadc.c ****       }
 4913              	 .loc 1 2077 0
 4914 0056 F9E7     	 b .L340
 4915              	 .cfi_endproc
 4916              	.LFE202:
 4918              	 .section .text.XMC_VADC_GROUP_IsResultRegisterFifoHead,"ax",%progbits
 4919              	 .align 2
 4920              	 .global XMC_VADC_GROUP_IsResultRegisterFifoHead
 4921              	 .code 16
 4922              	 .thumb_func
 4924              	XMC_VADC_GROUP_IsResultRegisterFifoHead:
 4925              	.LFB203:
2086:../Libraries/XMCLib/src/xmc_vadc.c ****   bool ret_val;
 4926              	 .loc 1 2086 0
 4927              	 .cfi_startproc
 4928              	.LVL591:
2095:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4929              	 .loc 1 2095 0
 4930 0000 A023     	 mov r3,#160
 4931 0002 8900     	 lsl r1,r1,#2
 4932              	.LVL592:
 4933 0004 4118     	 add r1,r0,r1
 4934 0006 9B00     	 lsl r3,r3,#2
 4935 0008 CA58     	 ldr r2,[r1,r3]
 4936              	.LVL593:
2097:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
 4937              	 .loc 1 2097 0
 4938 000a 043B     	 sub r3,r3,#4
 4939 000c C958     	 ldr r1,[r1,r3]
 4940              	.LVL594:
2096:../Libraries/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 4941              	 .loc 1 2096 0
 4942 000e C023     	 mov r3,#192
 4943 0010 DB04     	 lsl r3,r3,#19
2102:../Libraries/XMCLib/src/xmc_vadc.c ****   }
 4944              	 .loc 1 2102 0
 4945 0012 0020     	 mov r0,#0
 4946              	.LVL595:
2100:../Libraries/XMCLib/src/xmc_vadc.c ****   {
 4947              	 .loc 1 2100 0
 4948 0014 1A42     	 tst r2,r3
 4949 0016 03D1     	 bne .L351
2098:../Libraries/XMCLib/src/xmc_vadc.c **** 
 4950              	 .loc 1 2098 0
 4951 0018 0B40     	 and r3,r1
 4952              	 .loc 1 2104 0
 4953 001a 581E     	 sub r0,r3,#1
 4954 001c 8341     	 sbc r3,r3,r0
 4955 001e D8B2     	 uxtb r0,r3
 4956              	.L351:
 4957              	.LVL596:
2105:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2106:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)true;
2107:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2108:../Libraries/XMCLib/src/xmc_vadc.c ****   else
2109:../Libraries/XMCLib/src/xmc_vadc.c ****   {
2110:../Libraries/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
2111:../Libraries/XMCLib/src/xmc_vadc.c ****   }
2112:../Libraries/XMCLib/src/xmc_vadc.c **** 
2113:../Libraries/XMCLib/src/xmc_vadc.c ****   return ret_val;
2114:../Libraries/XMCLib/src/xmc_vadc.c **** }
 4958              	 .loc 1 2114 0
 4959              	 
 4960 0020 7047     	 bx lr
 4961              	 .cfi_endproc
 4962              	.LFE203:
 4964 0022 C046     	 .text
 4965              	.Letext0:
 4966              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4967              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4968              	 .file 5 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 4969              	 .file 6 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc/xmc1_scu.h"
 4970              	 .file 7 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/XMCLib/inc/xmc_scu.h"
 4971              	 .file 8 "C:/Workspaces/DAVE-4.3-64Bit/WS_2016_09_02/Radar_sense2Go_exe/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_vadc.c
    {standard input}:18     .text.XMC_VADC_GLOBAL_EnableModule:00000000 $t
    {standard input}:23     .text.XMC_VADC_GLOBAL_EnableModule:00000000 XMC_VADC_GLOBAL_EnableModule
    {standard input}:51     .text.XMC_VADC_GLOBAL_EnableModule:00000010 $d
    {standard input}:56     .text.XMC_VADC_GLOBAL_DisableModule:00000000 $t
    {standard input}:61     .text.XMC_VADC_GLOBAL_DisableModule:00000000 XMC_VADC_GLOBAL_DisableModule
    {standard input}:81     .text.XMC_VADC_GLOBAL_Init:00000000 $t
    {standard input}:86     .text.XMC_VADC_GLOBAL_Init:00000000 XMC_VADC_GLOBAL_Init
    {standard input}:160    .text.XMC_VADC_GLOBAL_Init:00000040 $d
    {standard input}:165    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 $t
    {standard input}:170    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 XMC_VADC_GLOBAL_InputClassInit
    {standard input}:208    .text.XMC_VADC_GLOBAL_InputClassInit:0000001c $d
    {standard input}:214    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 $t
    {standard input}:219    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 XMC_VADC_GLOBAL_StartupCalibration
    {standard input}:273    .text.XMC_VADC_GLOBAL_StartupCalibration:00000040 $d
    {standard input}:279    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 $t
    {standard input}:284    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 XMC_VADC_GLOBAL_SetBoundaries
    {standard input}:305    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 $t
    {standard input}:310    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 XMC_VADC_GLOBAL_SetIndividualBoundary
    {standard input}:364    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000024 $d
    {standard input}:369    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 $t
    {standard input}:374    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 XMC_VADC_GLOBAL_SetCompareValue
    {standard input}:403    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 $t
    {standard input}:408    .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 XMC_VADC_GLOBAL_GetCompareResult
    {standard input}:441    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 $t
    {standard input}:446    .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 XMC_VADC_GLOBAL_BindGroupToEMux
    {standard input}:495    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 $t
    {standard input}:500    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 XMC_VADC_GLOBAL_SetResultEventInterruptNode
    {standard input}:540    .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000020 $d
    {standard input}:545    .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:550    .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
    {standard input}:588    .text.XMC_VADC_GROUP_Init:00000000 $t
    {standard input}:593    .text.XMC_VADC_GROUP_Init:00000000 XMC_VADC_GROUP_Init
    {standard input}:832    .text.XMC_VADC_GROUP_Init:000000c8 $d
    {standard input}:839    .text.XMC_VADC_GROUP_InputClassInit:00000000 $t
    {standard input}:844    .text.XMC_VADC_GROUP_InputClassInit:00000000 XMC_VADC_GROUP_InputClassInit
    {standard input}:941    .text.XMC_VADC_GROUP_InputClassInit:0000004c $d
    {standard input}:948    .text.XMC_VADC_GROUP_SetPowerMode:00000000 $t
    {standard input}:953    .text.XMC_VADC_GROUP_SetPowerMode:00000000 XMC_VADC_GROUP_SetPowerMode
    {standard input}:987    .text.XMC_VADC_GROUP_SetSyncSlave:00000000 $t
    {standard input}:992    .text.XMC_VADC_GROUP_SetSyncSlave:00000000 XMC_VADC_GROUP_SetSyncSlave
    {standard input}:1033   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 $t
    {standard input}:1038   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 XMC_VADC_GROUP_SetSyncMaster
    {standard input}:1063   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 $t
    {standard input}:1068   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 XMC_VADC_GROUP_CheckSlaveReadiness
    {standard input}:1089   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 $t
    {standard input}:1094   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 XMC_VADC_GROUP_IgnoreSlaveReadiness
    {standard input}:1115   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 $t
    {standard input}:1120   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 XMC_VADC_GROUP_EnableChannelSyncRequest
    {standard input}:1153   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 $t
    {standard input}:1158   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 XMC_VADC_GROUP_DisableChannelSyncRequest
    {standard input}:1189   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:0000001c $d
    {standard input}:1194   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 $t
    {standard input}:1199   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 XMC_VADC_GROUP_IsConverterBusy
    {standard input}:1221   .text.XMC_VADC_GROUP_SetBoundaries:00000000 $t
    {standard input}:1226   .text.XMC_VADC_GROUP_SetBoundaries:00000000 XMC_VADC_GROUP_SetBoundaries
    {standard input}:1263   .text.XMC_VADC_GROUP_SetBoundaries:00000014 $d
    {standard input}:1268   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 $t
    {standard input}:1273   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 XMC_VADC_GROUP_SetIndividualBoundary
    {standard input}:1327   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000024 $d
    {standard input}:1332   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 $t
    {standard input}:1337   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 XMC_VADC_GROUP_TriggerServiceRequest
    {standard input}:1371   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 $t
    {standard input}:1376   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 XMC_VADC_GROUP_SetBoundaryEventInterruptNode
    {standard input}:1417   .text.XMC_VADC_GLOBAL_SHS_Init:00000000 $t
    {standard input}:1422   .text.XMC_VADC_GLOBAL_SHS_Init:00000000 XMC_VADC_GLOBAL_SHS_Init
    {standard input}:1461   .text.XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:00000000 $t
    {standard input}:1466   .text.XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:00000000 XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode
    {standard input}:1505   .text.XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:00000000 $t
    {standard input}:1510   .text.XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:00000000 XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode
    {standard input}:1547   .text.XMC_VADC_GLOBAL_SHS_SetShortSampleTime:00000000 $t
    {standard input}:1552   .text.XMC_VADC_GLOBAL_SHS_SetShortSampleTime:00000000 XMC_VADC_GLOBAL_SHS_SetShortSampleTime
    {standard input}:1597   .text.XMC_VADC_GLOBAL_SHS_SetShortSampleTime:00000024 $d
    {standard input}:1602   .text.XMC_VADC_GLOBAL_SHS_SetGainFactor:00000000 $t
    {standard input}:1607   .text.XMC_VADC_GLOBAL_SHS_SetGainFactor:00000000 XMC_VADC_GLOBAL_SHS_SetGainFactor
    {standard input}:1667   .text.XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:00000000 $t
    {standard input}:1672   .text.XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:00000000 XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations
    {standard input}:1707   .text.XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:00000000 $t
    {standard input}:1712   .text.XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:00000000 XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations
    {standard input}:1746   .text.XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:00000000 $t
    {standard input}:1751   .text.XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:00000000 XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue
    {standard input}:1796   .text.XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:00000000 $t
    {standard input}:1801   .text.XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:00000000 XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue
    {standard input}:1856   .text.XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:00000000 $t
    {standard input}:1861   .text.XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:00000000 XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop
    {standard input}:1899   .text.XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:0000001c $d
    {standard input}:1904   .text.XMC_VADC_GROUP_ScanInit:00000000 $t
    {standard input}:1909   .text.XMC_VADC_GROUP_ScanInit:00000000 XMC_VADC_GROUP_ScanInit
    {standard input}:2036   .text.XMC_VADC_GROUP_ScanInit:00000080 $d
    {standard input}:2042   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 $t
    {standard input}:2047   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 XMC_VADC_GROUP_ScanSelectTrigger
    {standard input}:2087   .text.XMC_VADC_GROUP_ScanSelectTrigger:0000001c $d
    {standard input}:2092   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 $t
    {standard input}:2097   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 XMC_VADC_GROUP_ScanSelectTriggerEdge
    {standard input}:2137   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:0000001c $d
    {standard input}:2142   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 $t
    {standard input}:2147   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 XMC_VADC_GROUP_ScanSelectGating
    {standard input}:2187   .text.XMC_VADC_GROUP_ScanSelectGating:0000001c $d
    {standard input}:2192   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 $t
    {standard input}:2197   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 XMC_VADC_GROUP_ScanSequenceAbort
    {standard input}:2290   .text.XMC_VADC_GROUP_ScanSequenceAbort:0000004c $d
    {standard input}:2296   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 $t
    {standard input}:2301   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 XMC_VADC_GROUP_ScanGetNumChannelsPending
    {standard input}:2353   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:2358   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
    {standard input}:2395   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 $t
    {standard input}:2400   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 XMC_VADC_GROUP_ScanRemoveChannel
    {standard input}:2434   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 $t
    {standard input}:2439   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 XMC_VADC_GLOBAL_BackgroundInit
    {standard input}:2638   .text.XMC_VADC_GLOBAL_BackgroundInit:000000a0 $d
    {standard input}:2647   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 $t
    {standard input}:2652   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 XMC_VADC_GLOBAL_BackgroundSelectTrigger
    {standard input}:2692   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:0000001c $d
    {standard input}:2697   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 $t
    {standard input}:2702   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
    {standard input}:2742   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:0000001c $d
    {standard input}:2747   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 $t
    {standard input}:2752   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 XMC_VADC_GLOBAL_BackgroundSelectGating
    {standard input}:2792   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:0000001c $d
    {standard input}:2797   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 $t
    {standard input}:2802   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 XMC_VADC_GLOBAL_BackgroundAbortSequence
    {standard input}:2944   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000078 $d
    {standard input}:2954   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 $t
    {standard input}:2959   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
    {standard input}:3036   .text.XMC_VADC_GROUP_QueueInit:00000000 $t
    {standard input}:3041   .text.XMC_VADC_GROUP_QueueInit:00000000 XMC_VADC_GROUP_QueueInit
    {standard input}:3165   .text.XMC_VADC_GROUP_QueueInit:00000078 $d
    {standard input}:3171   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 $t
    {standard input}:3176   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 XMC_VADC_GROUP_QueueSelectTrigger
    {standard input}:3216   .text.XMC_VADC_GROUP_QueueSelectTrigger:0000001c $d
    {standard input}:3221   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 $t
    {standard input}:3226   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 XMC_VADC_GROUP_QueueSelectTriggerEdge
    {standard input}:3266   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:0000001c $d
    {standard input}:3271   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 $t
    {standard input}:3276   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 XMC_VADC_GROUP_QueueSelectGating
    {standard input}:3316   .text.XMC_VADC_GROUP_QueueSelectGating:0000001c $d
    {standard input}:3321   .text.XMC_VADC_GROUP_QueueGetLength:00000000 $t
    {standard input}:3326   .text.XMC_VADC_GROUP_QueueGetLength:00000000 XMC_VADC_GROUP_QueueGetLength
    {standard input}:3366   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 $t
    {standard input}:3371   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 XMC_VADC_GROUP_QueueAbortSequence
    {standard input}:3462   .text.XMC_VADC_GROUP_QueueAbortSequence:0000004c $d
    {standard input}:3468   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 $t
    {standard input}:3473   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 XMC_VADC_GROUP_QueueRemoveChannel
    {standard input}:3727   .text.XMC_VADC_GROUP_QueueRemoveChannel:000000d4 $d
    {standard input}:3735   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 $t
    {standard input}:3740   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 XMC_VADC_GROUP_QueueGetNextChannel
    {standard input}:3781   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 $t
    {standard input}:3786   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 XMC_VADC_GROUP_QueueGetInterruptedChannel
    {standard input}:3818   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:3823   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
    {standard input}:3858   .text.XMC_VADC_GROUP_ChannelInit:00000000 $t
    {standard input}:3863   .text.XMC_VADC_GROUP_ChannelInit:00000000 XMC_VADC_GROUP_ChannelInit
    {standard input}:3979   .text.XMC_VADC_GROUP_ChannelInit:00000074 $d
    {standard input}:3984   .text.XMC_VADC_GROUP_SetChannelAlias:00000000 $t
    {standard input}:3989   .text.XMC_VADC_GROUP_SetChannelAlias:00000000 XMC_VADC_GROUP_SetChannelAlias
    {standard input}:4039   .text.XMC_VADC_GROUP_SetChannelAlias:00000024 $d
    {standard input}:4044   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 $t
    {standard input}:4049   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 XMC_VADC_GROUP_ChannelIsResultOutOfBounds
    {standard input}:4100   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 $t
    {standard input}:4105   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 XMC_VADC_GROUP_ChannelSetInputReference
    {standard input}:4145   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000018 $d
    {standard input}:4150   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 $t
    {standard input}:4155   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 XMC_VADC_GROUP_ChannelSetResultRegister
    {standard input}:4195   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000018 $d
    {standard input}:4200   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 $t
    {standard input}:4205   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 XMC_VADC_GROUP_ChannelSetIclass
    {standard input}:4244   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 $t
    {standard input}:4249   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 XMC_VADC_GROUP_ChannelGetResultRegister
    {standard input}:4274   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 $t
    {standard input}:4279   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 XMC_VADC_GROUP_ChannelTriggerEvent
    {standard input}:4315   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 $t
    {standard input}:4320   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 XMC_VADC_GROUP_ChannelSetEventInterruptNode
    {standard input}:4362   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 $t
    {standard input}:4367   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
    {standard input}:4407   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000018 $d
    {standard input}:4412   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 $t
    {standard input}:4417   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 XMC_VADC_GROUP_ChannelSetBoundarySelection
    {standard input}:4462   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 $t
    {standard input}:4467   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 XMC_VADC_GROUP_AddResultToFifo
    {standard input}:4499   .text.XMC_VADC_GROUP_AddResultToFifo:00000018 $d
    {standard input}:4504   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 $t
    {standard input}:4509   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 XMC_VADC_GROUP_SetResultFastCompareValue
    {standard input}:4543   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 $t
    {standard input}:4548   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 XMC_VADC_GROUP_GetFastCompareResult
    {standard input}:4583   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 $t
    {standard input}:4588   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 XMC_VADC_GROUP_SetResultSubtractionValue
    {standard input}:4616   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 $t
    {standard input}:4621   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 XMC_VADC_GROUP_SetResultInterruptNode
    {standard input}:4681   .text.XMC_VADC_GROUP_SetResultInterruptNode:0000002c $d
    {standard input}:4686   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 $t
    {standard input}:4691   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 XMC_VADC_GROUP_GetResultFifoTail
    {standard input}:4808   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 $t
    {standard input}:4813   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 XMC_VADC_GROUP_GetResultFifoHead
    {standard input}:4919   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 $t
    {standard input}:4924   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 XMC_VADC_GROUP_IsResultRegisterFifoHead
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GatePeripheralClock
